{"version":3,"sources":["webpack://fengari/webpack/universalModuleDefinition","webpack://fengari/webpack/bootstrap","webpack://fengari/./node_modules/fengari/src/fengari.js","webpack://fengari/./node_modules/fengari/src/defs.js","webpack://fengari/./node_modules/fengari/src/lua.js","webpack://fengari/./node_modules/fengari/src/luaconf.js","webpack://fengari/./node_modules/fengari/src/llimits.js","webpack://fengari/./node_modules/fengari/src/fengaricore.js","webpack://fengari/./node_modules/fengari/src/lobject.js","webpack://fengari/./node_modules/fengari/src/lauxlib.js","webpack://fengari/./node_modules/fengari/src/ldo.js","webpack://fengari/./node_modules/fengari/src/ltable.js","webpack://fengari/./node_modules/fengari/src/lstring.js","webpack://fengari/./node_modules/fengari/src/ldebug.js","webpack://fengari/./node_modules/fengari/src/lstate.js","webpack://fengari/./node_modules/fengari/src/lfunc.js","webpack://fengari/./node_modules/fengari/src/ltm.js","webpack://fengari/./node_modules/fengari/src/lvm.js","webpack://fengari/./node_modules/fengari/src/lopcodes.js","webpack://fengari/./node_modules/fengari/src/lualib.js","webpack://fengari/./node_modules/fengari-interop/src/js.js","webpack://fengari/./node_modules/fengari/src/lapi.js","webpack://fengari/./node_modules/fengari/src/lzio.js","webpack://fengari/./node_modules/fengari/src/llex.js","webpack://fengari/./node_modules/fengari/src/ljstype.js","webpack://fengari/./node_modules/fengari/src/lparser.js","webpack://fengari/./node_modules/fengari/src/lbaselib.js","webpack://fengari/./node_modules/fengari/src/lcorolib.js","webpack://fengari/./node_modules/fengari/src/ltablib.js","webpack://fengari/./node_modules/fengari/src/loslib.js","webpack://fengari/./node_modules/fengari/src/lstrlib.js","webpack://fengari/./node_modules/fengari/src/lutf8lib.js","webpack://fengari/./node_modules/fengari/src/lmathlib.js","webpack://fengari/./node_modules/fengari/src/ldblib.js","webpack://fengari/./node_modules/fengari/src/loadlib.js","webpack://fengari/./node_modules/fengari/src/fengarilib.js","webpack://fengari/./src/fengari-web.js","webpack://fengari/./node_modules/fengari/src/lcode.js","webpack://fengari/./node_modules/fengari/src/lundump.js","webpack://fengari/./node_modules/fengari/src/ldump.js","webpack://fengari/./node_modules/sprintf-js/src/sprintf.js","webpack://fengari/./node_modules/fengari/src/linit.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","core","require","FENGARI_AUTHORS","FENGARI_COPYRIGHT","FENGARI_RELEASE","FENGARI_VERSION","FENGARI_VERSION_MAJOR","FENGARI_VERSION_MINOR","FENGARI_VERSION_NUM","FENGARI_VERSION_RELEASE","luastring_eq","luastring_indexOf","luastring_of","to_jsstring","to_luastring","to_uristring","luaconf","lua","lauxlib","lualib","luastring_from","Uint8Array","from","a","len","length","indexOf","v","array_indexOf","Error","of","arguments","is_luastring","unicode_error_message","uri_allowed","split","reduce","charCodeAt","to_luastring_cache","str","cache","TypeError","cached","outU8Array","Array","outIdx","u","b","to","replacement_char","Math","min","u0","String","fromCharCode","RangeError","u1","u2","s1","s2","u3","toString","from_userstring","LUA_SIGNATURE","LUA_VERSION_MAJOR","LUA_VERSION_MINOR","LUA_VERSION_NUM","LUA_VERSION_RELEASE","LUA_VERSION","LUA_RELEASE","LUA_COPYRIGHT","LUA_AUTHORS","constant_types","LUA_TNONE","LUA_TNIL","LUA_TBOOLEAN","LUA_TLIGHTUSERDATA","LUA_TNUMBER","LUA_TSTRING","LUA_TTABLE","LUA_TFUNCTION","LUA_TUSERDATA","LUA_TTHREAD","LUA_NUMTAGS","LUA_TSHRSTR","LUA_TLNGSTR","LUA_TNUMFLT","LUA_TNUMINT","LUA_TLCL","LUA_TLCF","LUA_TCCL","LUA_REGISTRYINDEX","LUAI_MAXSTACK","LUA_HOOKCALL","LUA_HOOKCOUNT","LUA_HOOKLINE","LUA_HOOKRET","LUA_HOOKTAILCALL","LUA_MASKCALL","LUA_MASKCOUNT","LUA_MASKLINE","LUA_MASKRET","LUA_MINSTACK","LUA_MULTRET","LUA_OPADD","LUA_OPBAND","LUA_OPBNOT","LUA_OPBOR","LUA_OPBXOR","LUA_OPDIV","LUA_OPEQ","LUA_OPIDIV","LUA_OPLE","LUA_OPLT","LUA_OPMOD","LUA_OPMUL","LUA_OPPOW","LUA_OPSHL","LUA_OPSHR","LUA_OPSUB","LUA_OPUNM","LUA_RIDX_GLOBALS","LUA_RIDX_LAST","LUA_RIDX_MAINTHREAD","lua_Debug","_classCallCheck","this","event","NaN","namewhat","what","source","currentline","linedefined","lastlinedefined","nups","nparams","isvararg","istailcall","short_src","i_ci","lua_upvalueindex","thread_status","LUA_OK","LUA_YIELD","LUA_ERRRUN","LUA_ERRSYNTAX","LUA_ERRMEM","LUA_ERRGCMM","LUA_ERRERR","defs","lapi","ldebug","ldo","lstate","lua_absindex","lua_arith","lua_atpanic","lua_atnativeerror","lua_call","lua_callk","lua_checkstack","lua_close","lua_compare","lua_concat","lua_copy","lua_createtable","lua_dump","lua_error","lua_gc","lua_getallocf","lua_getextraspace","lua_getfield","lua_getglobal","lua_gethook","lua_gethookcount","lua_gethookmask","lua_geti","lua_getinfo","lua_getlocal","lua_getmetatable","lua_getstack","lua_gettable","lua_gettop","lua_getupvalue","lua_getuservalue","lua_insert","lua_isboolean","lua_iscfunction","lua_isfunction","lua_isinteger","lua_islightuserdata","lua_isnil","lua_isnone","lua_isnoneornil","lua_isnumber","lua_isproxy","lua_isstring","lua_istable","lua_isthread","lua_isuserdata","lua_isyieldable","lua_len","lua_load","lua_newstate","lua_newtable","lua_newthread","lua_newuserdata","lua_next","lua_pcall","lua_pcallk","lua_pop","lua_pushboolean","lua_pushcclosure","lua_pushcfunction","lua_pushfstring","lua_pushglobaltable","lua_pushinteger","lua_pushjsclosure","lua_pushjsfunction","lua_pushlightuserdata","lua_pushliteral","lua_pushlstring","lua_pushnil","lua_pushnumber","lua_pushstring","lua_pushthread","lua_pushvalue","lua_pushvfstring","lua_rawequal","lua_rawget","lua_rawgeti","lua_rawgetp","lua_rawlen","lua_rawset","lua_rawseti","lua_rawsetp","lua_register","lua_remove","lua_replace","lua_resume","lua_rotate","lua_setallof","lua_setfield","lua_setglobal","lua_sethook","lua_seti","lua_setlocal","lua_setmetatable","lua_settable","lua_settop","lua_setupvalue","lua_setuservalue","lua_status","lua_stringtonumber","lua_toboolean","lua_todataview","lua_tointeger","lua_tointegerx","lua_tojsstring","lua_tolstring","lua_tonumber","lua_tonumberx","lua_topointer","lua_toproxy","lua_tostring","lua_tothread","lua_touserdata","lua_type","lua_typename","lua_upvalueid","lua_upvaluejoin","lua_version","lua_xmove","lua_yield","lua_yieldk","lua_tocfunction","conf","LUA_PATH_SEP","LUA_PATH_MARK","LUA_EXEC_DIR","LUA_VDIR","LUA_DIRSEP","LUA_LDIR","LUA_JSDIR","LUA_PATH_DEFAULT","LUA_JSPATH_DEFAULT","LUA_COMPAT_FLOATSTRING","LUA_IDSIZE","LUA_INTEGER_FMT","concat","LUAL_BUFFERSIZE","ldexp","mantissa","exponent","steps","ceil","abs","result","pow","floor","LUA_INTEGER_FRMLEN","LUA_MAXINTEGER","LUA_MININTEGER","LUA_NUMBER_FMT","LUA_NUMBER_FRMLEN","frexp","data","DataView","ArrayBuffer","setFloat64","bits","getUint32","lua_getlocaledecpoint","lua_integer2str","lua_number2str","Number","toPrecision","lua_numbertointeger","luai_apicheck","e","lua_assert","api_check","msg","LUAI_MAXCCALLS","LUA_MINBUFFER","luai_nummod","L","MAX_INT","MIN_INT","lisdigit","lisprint","lisspace","lisxdigit","luaS_bless","luaS_new","ltable","lvm","ltm","LUA_TPROTO","LUA_TDEADKEY","TValue","type","ttnov","checktype","checktag","ttisnil","ttisboolean","x","tv","ttisstring","tsvalue","getstr","tsslen","svalue","setsvalue2s","newidx","ts","stack","setsvalue","luaO_nilobject","freeze","LClosure","id","l_G","id_counter","nupvalues","upvals","CClosure","f","upvalue","Udata","size","metatable","uservalue","RETS","PRE","POS","luaO_hexavalue","luaO_utf8esc","buff","UTF8BUFFSZ","mfb","l_str2dloc","neg","sigdig","nosigdig","hasdot","neg1","exp1","lua_strx2number","exec","flt","parseFloat","isNaN","lua_str2number","SIGILS","modes","_defineProperty","_modes","MAXBY10","MAXLASTD","luaO_tostring","obj","ttisinteger","test","pushstr","luaD_inctop","top","luaO_pushvfstring","fmt","argp","subarray","luaO_pushfstring","setivalue","setfltvalue","lua_State","Table","_typeof","JSON","stringify","ids","set","luaG_runerror","luaD_checkstack","luaV_concat","_len","_key","intarith","op","v1","v2","luaV_imul","luaV_mod","luaV_div","luaV_shiftl","numarith","LocVar","varname","startpc","endpc","luaO_arith","p1","p2","p3","res","i1","i2","tointeger","n1","n2","tonumber","luaT_trybinTM","TMS","TM_ADD","luaO_chunkid","bufflen","out","nli","out_i","luaO_int2fb","luaO_str2num","s2i","empty","l_str2int","pmode","l_str2d","pushobj2s","pushsvalue2s","setobjs2s","oldidx","setfrom","setobj2s","oldtv","getc","luaL_loadfilex","LUA_ERRFILE","LUA_LOADED_TABLE","LUA_PRELOAD_TABLE","LUA_FILEHANDLE","__name","__tostring","luaL_Buffer","pushglobalfuncname","ar","findfield","objidx","level","pushfuncname","panic","luaL_argerror","arg","extramsg","luaL_error","typeerror","tname","typearg","luaL_getmetafield","luaL_typename","luaL_where","luaL_fileresult","stat","fname","message","errno","luaL_getmetatable","luaL_testudata","ud","tag_error","tag","luaL_checklstring","luaL_checkstring","luaL_optlstring","def","luaL_optstring","luaL_checknumber","luaL_checkinteger","interror","luaL_prepbuffsize","B","sz","newend","newsize","max","newbuff","luaL_buffinit","luaL_addlstring","luaL_addsize","luaL_addstring","luaL_pushresult","luaL_opt","getS","string","luaL_loadbufferx","luaL_loadbuffer","luaL_loadstring","tt","luaL_callmeta","p_I","p_f","find_subarray","arr","subarr","from_index","sl","loop","j","luaL_getsubtable","idx","luaL_setfuncs","nup","lib","luaL_checkstack","space","errfile","fnameindex","error","serr","filename","utf8_bom","skipcomment","lf","skipBOM","skipped","LoadF","pos","err","getF","bytes","path","xhr","XMLHttpRequest","open","responseType","send","status","statusText","response","com","readstatus","luaL_loadfile","luaL_checkversion_","ver","LUA_NOREF","LUA_REFNIL","luaL_addchar","luaL_addvalue","luaL_argcheck","cond","luaL_buffinitsize","luaL_checkany","luaL_checkoption","lst","luaL_checktype","luaL_checkudata","luaL_checkversion","luaL_dofile","luaL_dostring","luaL_execresult","signal","luaL_gsub","wild","luaL_len","luaL_newlib","luaL_newlibtable","luaL_newmetatable","luaL_newstate","luaL_optinteger","luaL_optnumber","luaL_prepbuffer","luaL_pushresultsize","luaL_ref","ref","luaL_requiref","modname","openf","glb","luaL_setmetatable","luaL_tolstring","kind","luaL_traceback","L1","last","li","le","lastlevel","LEVELS1","luaL_unref","lua_writestringerror","console","lfunc","lobject","lopcodes","lparser","luaS_newliteral","lundump","MBuffer","adjust_top","newtop","seterrorobj","errcode","oldtop","current_top","ERRORSTACKSIZE","luaD_reallocstack","stack_last","EXTRA_STACK","luaD_growstack","luaD_throw","needed","luaD_shrinkstack","inuse","lim","ci","previous","stackinuse","goodsize","luaE_freeCI","luaD_precall","off","nresults","func","luaE_extendCI","funcOff","callstatus","hookmask","luaD_hook","api_checknelems","luaD_poscall","base","fsize","maxstacksize","is_vararg","adjust_varargs","numparams","l_base","l_code","code","l_savedpc","CIST_LUA","callhook","tryfuncTM","firstResult","nres","wanted","oldpc","next","moveresults","setnilvalue","line","hook","allowhook","ci_top","CIST_HOOKED","opcode","OpCodesI","OP_TAILCALL","CIST_TAIL","actual","nfixargs","fixed","tm","luaT_gettmbyobj","TM_CALL","ttisfunction","luaG_typeerror","luaD_call","nResults","nCcalls","stackerror","luaV_execute","errorJmp","g","mainthread","luaD_rawrunprotected","oldnCcalls","lj","atnativeerror","luaD_callnoyield","errfunc","e2","finishCcall","c_k","nny","CIST_YPCALL","c_old_errfunc","c_ctx","unroll","base_ci","luaV_finishOp","recover","findpcall","extra","luaF_close","CIST_OAH","resume_error","narg","resume","firstArg","ctx","k","luaD_pcall","old_top","ef","old_ci","old_allowhooks","old_nny","old_errfunc","SParser","z","dyd","Dyndata","checkmode","f_parser","cl","zgetc","luaU_undump","luaY_parser","upvalues","luaF_initupvals","luaD_protectedparser","nargs","oldnny","luaS_hashlongstr","TString","lightuserdata_hashes","WeakMap","get_lightuserdata_hash","hash","table_hash","strong","Map","dead_strong","dead_weak","flags","add","clear","prev","entry","mark_dead","setdeadvalue","delete","getgeneric","luaH_getint","invalidateTMcache","luaH_get","ttisfloat","luaH_getn","luaH_getstr","luaH_setfrom","kv","luaH_setint","luaH_new","luaH_next","table","keyI","keyO","ttisdeadkey","realstring","luaS_hash","luaS_eqlngstr","llex","currentpc","lineinfo","swapextra","temp","upvalname","uv","findlocal","findvararg","luaF_getlocalname","funcinfo","getfuncname","funcname","CIST_FIN","funcnamefromcode","kname","pc","ISK","kvalue","INDEXK","getobjname","filterpc","jmptarget","lastpc","reg","setreg","OCi","A","OP_LOADNIL","OP_TFORCALL","OP_CALL","OP_JMP","dest","sBx","testAMode","findsetreg","OP_MOVE","OP_GETTABUP","OP_GETTABLE","C","vn","LUA_ENV","OP_GETUPVAL","OP_LOADK","OP_LOADKX","Bx","Ax","OP_SELF","TM_INDEX","OP_SETTABUP","OP_SETTABLE","TM_NEWINDEX","OP_ADD","OP_SUB","TM_SUB","OP_MUL","TM_MUL","OP_MOD","TM_MOD","OP_POW","TM_POW","OP_DIV","TM_DIV","OP_IDIV","TM_IDIV","OP_BAND","TM_BAND","OP_BOR","TM_BOR","OP_BXOR","TM_BXOR","OP_SHL","TM_SHL","OP_SHR","TM_SHR","OP_UNM","TM_UNM","OP_BNOT","TM_BNOT","OP_LEN","TM_LEN","OP_CONCAT","TM_CONCAT","OP_EQ","TM_EQ","OP_LT","TM_LT","OP_LE","TM_LE","tmname","varinfo","getupvalname","stkid","isinstack","luaT_objtypename","luaG_addinfo","src","luaG_errormsg","luaG_concaterror","cvt2str","luaG_opinterror","luaG_ordererror","t1","t2","luaG_tointerror","luaG_traceexec","mask","counthook","hookcount","basehookcount","CIST_HOOKYIELD","npc","newline","auxgetinfo","ttisclosure","api_incr_top","collectvalidlines","ttisLclosure","local","count","BASIC_STACK_SIZE","CallInfo","global_State","l_registry","version","TM_N","mt","stack_init","freestack","f_luaopen","registry","sethvalue","init_registry","luaT_init","CIST_FRESH","CIST_LEQ","close_state","luaE_freethread","MAXUPVAL","Proto","locvars","luaF_findupval","old","local_number","luaF_newLclosure","luaT_typenames_","map","ttypename","TM_GC","TM_MODE","luaT_callTM","hasres","luaT_callbinTM","luaT_gettm","events","ename","fasttm","et","luaT_callorderTM","l_isfalse","ttistable","ttisfulluserdata","LFIELDS_PER_FLUSH","OP_CLOSURE","OP_EXTRAARG","OP_FORLOOP","OP_FORPREP","OP_LOADBOOL","OP_NEWTABLE","OP_NOT","OP_RETURN","OP_SETLIST","OP_SETUPVAL","OP_TEST","OP_TESTSET","OP_TFORLOOP","OP_VARARG","RA","RB","RKB","RKC","dojump","donextjump","luaV_lessthan","ttisnumber","LTnum","l_strcmp","luaV_lessequal","LEnum","luaV_equalobj","ttype","forlimit","step","stopnow","ilimit","luaV_tointeger","cvt2num","vslen","ls","rs","luaV_objlen","ra","rb","h","imul","aLo","bLo","y","getcached","encup","instack","pushclosure","ncl","setclLvalue","tostring","isemptystr","copy2buff","tl","total","luaV_gettable","slot","settable","val","newframe","konst","setbvalue","upval","rc","op1","op2","numberop1","numberop2","numberop","rbIdx","nci","oci","nfunc","nfuncOff","ofuncOff","aux","limit","chgivalue","chgfltvalue","init","plimit","pstep","forlim","initv","nlimit","nstep","ninit","cb","inst","luaV_rawequalobj","luaP_opmodes","MASK1","MASK0","setarg","fullins","SETARG_Bx","POS_A","SIZE_C","ins","POS_OP","POS_C","MAXARG_Bx","BITRK","CREATE_ABC","CREATE_ABx","bc","CREATE_Ax","GET_OPCODE","GETARG_A","GETARG_B","GETARG_C","GETARG_Bx","GETARG_Ax","GETARG_sBx","MAXARG_A","MAXARG_Ax","MAXARG_B","MAXARG_C","MAXARG_sBx","MAXINDEXRK","NO_REG","OpArgK","OpArgN","OpArgR","OpArgU","OpCodes","POS_Ax","POS_B","POS_Bx","RKASK","SETARG_A","SETARG_Ax","SETARG_B","SETARG_C","SETARG_sBx","SET_OPCODE","SIZE_A","SIZE_Ax","SIZE_B","SIZE_Bx","SIZE_OP","getBMode","getCMode","getOpMode","iABC","iABx","iAsBx","iAx","testTMode","LUA_VERSUFFIX","luaopen_base","LUA_COLIBNAME","luaopen_coroutine","LUA_TABLIBNAME","luaopen_table","LUA_OSLIBNAME","luaopen_os","LUA_STRLIBNAME","luaopen_string","LUA_UTF8LIBNAME","luaopen_utf8","LUA_BITLIBNAME","LUA_MATHLIBNAME","luaopen_math","LUA_DBLIBNAME","luaopen_debug","LUA_LOADLIBNAME","luaopen_package","LUA_FENGARILIBNAME","luaopen_fengari","linit","luaL_openlibs","apply","construct","Reflect_deleteProperty","global_env","WorkerGlobalScope","self","eval","Reflect","deleteProperty","fApply","Function","target","thisArgument","argumentsList","args","push","isobject","js_tname","testjs","checkjs","pushjs","getmainthread","mainL","states","objects_seen","tojs","wrap","jscall","invoke","thisarg","n_results","gettable","prop","has","iter_next","iter","state","done","js_proxy","iterator","jsiterator","toPrimitive","hint","jslib","new","instanceof","typeof","getiter","get_iterator","Proxy","L_symbol","p_symbol","proxy_handlers","arg_length","desc","getOwnPropertyDescriptor","getPrototypeOf","ownKeys","setPrototypeOf","make_arrow_function","createproxy","raw_arrow_function","valid_types","valid_types_as_luastring","fengariProxy","jsmt","__index","__newindex","__call","__pairs","first","for","index","keys","isArray","__len","FENGARI_INTEROP_VERSION","FENGARI_INTEROP_VERSION_MAJOR","FENGARI_INTEROP_VERSION_NUM","FENGARI_INTEROP_RELEASE","luaopen_js","luaU_dump","ZIO","fengari_argcheck","fengari_argcheckinteger","isvalid","index2addr","ttislcf","index2addr_","reverse","fromtv","pIdx","fromidx","toidx","fn","setclCvalue","auxsetstr","auxgetstr","narray","nrec","aux_upvalue","fi","seen","f_call","default_chunkname","checkresults","na","nr","getupvalref","fidx","panicf","errorf","index1","index2","o1","o2","writer","strip","warn","objindex","funcindex","up","ttisCclosure","G","ttislightuserdata","reader","chunkname","gt","luaS_newudata","lua_setallocf","u8","buffer","byteOffset","byteLength","jsstring","proxy","ttisthread","fidx1","fidx2","ref1","ref2","up2","luaZ_fill","EOZ","luaZ_buffer","luaZ_buffremove","luaZ_read","b_offset","luaZ_resetbuffer","luaZ_resizebuffer","lislalnum","lislalpha","RESERVED","TK_AND","TK_BREAK","FIRST_RESERVED","TK_DO","TK_ELSE","TK_ELSEIF","TK_END","TK_FALSE","TK_FOR","TK_FUNCTION","TK_GOTO","TK_IF","TK_IN","TK_LOCAL","TK_NIL","TK_NOT","TK_OR","TK_REPEAT","TK_RETURN","TK_THEN","TK_TRUE","TK_UNTIL","TK_WHILE","TK_IDIV","TK_CONCAT","TK_DOTS","TK_EQ","TK_GE","TK_LE","TK_NE","TK_SHL","TK_SHR","TK_DBCOLON","TK_EOS","TK_FLT","TK_INT","TK_NAME","TK_STRING","luaX_tokens","SemInfo","Token","token","seminfo","save","lexerror","luaX_token2str","currIsNewline","current","save_and_next","TVtrue","luaX_newstring","tpair","inclinenumber","linenumber","check_next1","check_next2","read_numeral","expo","txtToken","skip_sep","read_long_string","sep","skip","esccheck","gethexa","readhexaesc","utf8esc","readutf8desc","readdecesc","read_string","del","will","token_to_index","forEach","kidx","LexState","lastline","lookahead","fs","envn","isreserved","w","luaX_lookahead","luaX_next","luaX_setinput","firstchar","luaX_syntaxerror","luai_ctype_","BinOpr","OPR_ADD","OPR_AND","OPR_BAND","OPR_BOR","OPR_BXOR","OPR_CONCAT","OPR_DIV","OPR_EQ","OPR_GE","OPR_GT","OPR_IDIV","OPR_LE","OPR_LT","OPR_MOD","OPR_MUL","OPR_NE","OPR_NOBINOPR","OPR_OR","OPR_POW","OPR_SHL","OPR_SHR","OPR_SUB","UnOpr","OPR_BNOT","OPR_LEN","OPR_MINUS","OPR_NOT","OPR_NOUNOPR","NO_JUMP","getinstruction","luaK_checkstack","luaK_codeABC","luaK_codeABx","luaK_codeAsBx","luaK_codek","luaK_concat","luaK_dischargevars","luaK_exp2RK","luaK_exp2anyreg","luaK_exp2anyregup","luaK_exp2nextreg","luaK_exp2val","luaK_fixline","luaK_getlabel","luaK_goiffalse","luaK_goiftrue","luaK_indexed","luaK_infix","luaK_intK","luaK_jump","luaK_jumpto","luaK_nil","luaK_patchclose","luaK_patchlist","luaK_patchtohere","luaK_posfix","luaK_prefix","luaK_reserveregs","luaK_ret","luaK_self","luaK_setlist","luaK_setmultret","luaK_setoneret","luaK_setreturns","luaK_storevar","luaK_stringK","R","hasmultret","expkind","VCALL","VVARARG","eqstr","BlockCnt","firstlabel","firstgoto","nactvar","isloop","VVOID","VNIL","VTRUE","VFALSE","VK","VKFLT","VKINT","VNONRELOC","VLOCAL","VUPVAL","VINDEXED","VJMP","VRELOCABLE","expdesc","ival","nval","info","ind","vt","FuncState","bl","lasttarget","jpc","nk","np","firstlocal","nlocvars","freereg","Vardesc","Labeldesc","Labellist","semerror","error_expected","checklimit","where","errorlimit","testnext","check","checknext","check_condition","check_match","who","str_checkname","init_exp","codestring","checkname","new_localvar","registerlocalvar","actvar","new_localvarliteral","getlocvar","adjustlocalvars","nvars","newupvalue","singlevaraux","vr","searchvar","markupval","searchupvalue","singlevar","adjust_assign","nexps","enterlevel","leavelevel","closegoto","label","gl","vname","findlabel","lb","newlabelentry","findgotos","enterblock","open_func","leaveblock","breaklabel","tolevel","removevars","movegotosout","undefgoto","close_func","block_follow","withuntil","statlist","statement","fieldsel","yindex","expr","ConsControl","nh","tostore","recfield","cc","rkkey","closelistfield","listfield","field","constructor","lastlistfield","body","ismethod","new_fs","clp","addprototype","parlist","codeclosure","explist","funcargs","suffixedexp","primaryexp","priority","left","right","subexpr","uop","getunopr","simpleexp","getbinopr","nextop","block","LHS_assign","assignment","lh","nv","conflict","check_conflict","gotostat","labelstat","ll","checkrepeated","skipnoopstat","forbody","isnum","endfor","prep","forstat","fornum","indexname","forlist","test_then_block","escapelist","jf","funcstat","ifstat","whileinit","condexit","whilestat","repeat_init","bl1","bl2","repeatstat","localfunc","localstat","nret","retstat","exprstat","lexstate","funcstate","vkisinreg","lua_writestring","lua_writeline","TextDecoder","decoder","decode","stream","log","copy","opts","luaB_next","ipairsaux","luaB_error","finishpcall","load_aux","envidx","generic_reader","dofilecont","d1","d2","base_funcs","assert","collectgarbage","dofile","getmetatable","ipairs","load","env","loadfile","pairs","method","iszero","pairsmeta","pcall","print","rawequal","rawget","rawlen","rawset","select","setmetatable","parseInt","b_str2int","xpcall","getco","co","auxresume","luaB_auxwrap","luaB_cocreate","NL","co_funcs","isyieldable","running","yield","checkfield","checktab","aux_getn","addfield","set2","sort_comp","partition","lo","choosePivot","rnd","r4","tab_funcs","lsep","insert","TAB_R","move","pack","remove","sort","auxsort","random","unpack","MAX_SAFE_INTEGER","LUA_STRFTIMEOPTIONS","setfield","setallfields","time","utc","getUTCSeconds","getSeconds","getUTCMinutes","getMinutes","getUTCHours","getHours","getUTCDate","getDate","getUTCMonth","getMonth","getUTCFullYear","getFullYear","getUTCDay","getDay","Date","L_MAXDATEFIELD","getfield","delta","locale","days","shortDays","months","shortMonths","AM","PM","am","pm","formats","D","F","T","X","week_number","date","start_of_week","weekday","yday","push_pad_2","pad","checkoption","conv","option","oplen","l_checktime","syslib","stm","strftime","tzString","match","day","getTimezoneOffset","difftime","clock","performance","now","sprintf","L_ESC","strlen","posrelat","SIZELENMOD","lua_number2strx","is","Infinity","zero","fe","num2straux","FLAGS","isalpha","isdigit","iscntrl","isgraph","islower","isupper","isalnum","ispunct","isspace","isxdigit","addliteral","repeat","addquoted","point","ppoint","checkdp","scanformat","strfrmt","form","addlenmod","lenmod","lm","spec","Header","islittle","maxalign","digit","getnum","df","getnumlimit","getoption","opt","getdetails","totalsize","ntoalign","align","packint","unpackint","issigned","unpacknum","dv","setUint8","getFloat32","getFloat64","SPECIALS","MatchState","src_init","src_end","p_end","matchdepth","capture","classend","ms","match_class","matchbracketclass","ec","sig","singlematch","ep","matchbalance","cont","max_expand","min_expand","start_capture","end_capture","capture_to_close","match_capture","check_capture","ai","bi","array_cmp","gotodefault","gotoinit","push_onecapture","push_captures","nlevels","prepstate","lp","reprepstate","str_find_aux","find","nospecials","anchor","GMatchState","lastmatch","gmatch_aux","gm","add_value","tr","news","add_s","strlib","byte","posi","pose","char","dump","format","gmatch","gsub","srcl","max_s","lower","details","setFloat32","packsize","rep","totallen","pi","sub","start","end","ld","upper","createmetatable","iscont","u_posrelat","limits","utf8_decode","p_U","pushutfchar","iter_aux","dec","funcs","codepoint","codes","posj","offset","UTF8PATT","rand_state","l_rand","pushnumint","mathlib","acos","asin","atan","atan2","cos","deg","PI","exp","fmod","log2","log10","imax","imin","modf","ip","rad","low","randomseed","sin","sqrt","tan","ult","getinput","checkstack","getthread","thread","settabss","settabsi","settabsb","treatstackoption","auxupvalue","checkupval","argf","argnup","HOOKKEY","hooknames","hookf","dblib","gethook","smask","unmakemask","getinfo","options","getlocal","nvar","getregistry","getupvalue","getuservalue","sethook","hooktable","makemask","setlocal","setupvalue","setuservalue","traceback","upvalueid","upvaluejoin","input","prompt","debug","lsys_load","fengari","JSLIBS","LUA_CSUBSEP","LUA_LSUBSEP","LUA_POF","LUA_OFSEP","AUXMARK","seeglb","readable","lookforfunc","sym","checkjslib","addtojslib","lsys_sym","setpath","fieldname","envname","dft","nver","undefined","noenv","plib","pushnexttemplate","searchpath","dirsep","findfile","pname","checkload","searcher_Lua","loadfunc","openfunc","mark","searcher_C","searcher_Croot","searcher_preload","findloader_cont","ll_require_cont","ll_require_cont2","pk_funcs","loadlib","ll_funcs","findloader","createjslibstable","searchers","createsearcherstable","__webpack_exports__","fengari__WEBPACK_IMPORTED_MODULE_0__","fengari_interop__WEBPACK_IMPORTED_MODULE_1__","interop","ok","SyntaxError","document","HTMLDocument","crossorigin_to_credentials","crossorigin","msghandler","ErrorEvent","bubbles","cancelable","lineno","run_lua_script","location","syntaxerror","configurable","currentScript","dispatchEvent","process_xhr_response","Event","contentTypeRegexp","luaVersionRegex","try_tag","tagName","contentTypeMatch","mimetype","hasAttribute","getAttribute","readyState","async","fetch","credentials","redirect","integrity","then","resp","arrayBuffer","catch","reason","onreadystatechange","innerHTML","run_lua_script_tag","MutationObserver","records","observer","record","addedNodes","observe","childList","subtree","querySelectorAll","hasjumps","tonumeral","make_tvalue","ek","pfrom","pl","getjump","fixjump","jmp","l1","l2","list","condjump","getjumpcontroloffset","getjumpcontrol","patchtestreg","node","removevalues","patchlistaux","vtarget","dtarget","luaK_code","dischargejpc","codeextraarg","newstack","freeexp","freeexps","e1","r1","r2","addk","luaK_numberK","boolK","code_loadbool","jump","discharge2reg","discharge2anyreg","need_value","exp2reg","final","p_t","fj","vk","nilK","negatecondition","jumponcond","ie","constfolding","validop","codebinexpval","rk2","rk1","opr","codecomp","codeunexpval","codenot","ereg","nelems","ex","LUAC_DATA","BytecodeParser","Z","intSize","size_tSize","instructionSize","integerSize","numberSize","arraybuffer","getInt32","LoadInteger","LoadByte","LoadSize_t","read","LoadInt","LoadNumber","LoadString","LoadFunction","psource","LoadCode","LoadConstants","LoadUpvalues","LoadProtos","LoadDebug","checkliteral","checksize","why","S","checkHeader","LUAC_VERSION","DumpState","write","DumpBlock","DumpByte","DumpInt","ab","setInt32","DumpInteger","DumpNumber","DumpString","DumpProtos","DumpFunction","DumpCode","DumpConstants","DumpUpvalues","DumpDebug","DumpHeader","re","not_string","not_bool","not_type","not_primitive","number","numeric_arg","json","not_json","text","modulo","placeholder","key_access","index_access","sign","parse_tree","argv","ph","pad_character","pad_length","is_positive","cursor","tree_length","output","param_no","width","precision","toExponential","toFixed","substring","slice","toLowerCase","valueOf","toUpperCase","replace","pad_char","charAt","sprintf_format","sprintf_cache","_fmt","arg_names","field_list","replacement_field","field_match","sprintf_parse","vsprintf","__WEBPACK_AMD_DEFINE_RESULT__","loadedlibs"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,OAAA,GAAAH,GACA,iBAAAC,QACAA,QAAA,QAAAD,IAEAD,EAAA,QAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAT,QAAA,IAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA;;;;;;;ECxEA,IAAMC,EAAOC,EAAQ,GAErBxC,EAAOD,QAAQ0C,gBAA0BF,EAAKE,gBAC9CzC,EAAOD,QAAQ2C,kBAA0BH,EAAKG,kBAC9C1C,EAAOD,QAAQ4C,gBAA0BJ,EAAKI,gBAC9C3C,EAAOD,QAAQ6C,gBAA0BL,EAAKK,gBAC9C5C,EAAOD,QAAQ8C,sBAA0BN,EAAKM,sBAC9C7C,EAAOD,QAAQ+C,sBAA0BP,EAAKO,sBAC9C9C,EAAOD,QAAQgD,oBAA0BR,EAAKQ,oBAC9C/C,EAAOD,QAAQiD,wBAA0BT,EAAKS,wBAE9ChD,EAAOD,QAAQkD,aAAoBV,EAAKU,aACxCjD,EAAOD,QAAQmD,kBAAoBX,EAAKW,kBACxClD,EAAOD,QAAQoD,aAAoBZ,EAAKY,aACxCnD,EAAOD,QAAQqD,YAAoBb,EAAKa,YACxCpD,EAAOD,QAAQsD,aAAoBd,EAAKc,aACxCrD,EAAOD,QAAQuD,aAAoBf,EAAKe,aAExC,IAAMC,EAAUf,EAAQ,GAClBgB,EAAUhB,EAAQ,GAClBiB,EAAUjB,EAAQ,GAClBkB,EAAUlB,EAAQ,IAExBxC,EAAOD,QAAQwD,QAAUA,EACzBvD,EAAOD,QAAQyD,IAAUA,EACzBxD,EAAOD,QAAQ0D,QAAUA,EACzBzD,EAAOD,QAAQ2D,OAAUA,gCC9BzB,IAAIC,EAaAT,EAcAC,EAbJ,GAZIQ,EAD2B,mBAApBC,WAAWC,KACDD,WAAWC,KAAK9B,KAAK6B,YAErB,SAASE,GAItB,IAHA,IAAIvD,EAAI,EACJwD,EAAMD,EAAEE,OACR3C,EAAI,IAAIuC,WAAWG,GAChBA,EAAMxD,GAAGc,EAAEd,GAAKuD,EAAEvD,KACzB,OAAOc,GAK2B,mBAA9B,IAAIuC,YAAaK,QACzBf,EAAoB,SAASZ,EAAG4B,EAAG3D,GAC/B,OAAO+B,EAAE2B,QAAQC,EAAG3D,QAErB,CAEH,IAAI4D,EAAgB,GAAGF,QACvB,GAAiD,IAA7CE,EAAczD,KAAK,IAAIkD,WAAW,GAAI,GAAU,MAAMQ,MAAM,oBAChElB,EAAoB,SAASZ,EAAG4B,EAAG3D,GAC/B,OAAO4D,EAAczD,KAAK4B,EAAG4B,EAAG3D,IAMpC4C,EADyB,mBAAlBS,WAAWS,GACHT,WAAWS,GAAGtC,KAAK6B,YAEnB,WACX,OAAOD,EAAeW,YAI9B,IAAMC,EAAe,SAASjC,GAC1B,OAAOA,aAAasB,YAelBY,EAAwB,mDAkGxBC,EAAe,sFAAuFC,MAAM,IAAIC,OAAO,SAASF,EAAa7D,GAE/I,OADA6D,EAAY7D,EAAEgE,WAAW,KAAM,EACxBH,GACR,IAiBGI,EAAqB,GAErBxB,EAAe,SAASyB,EAAKC,GAC/B,GAAmB,iBAARD,EAAkB,MAAM,IAAIE,UAAU,4CAEjD,GAAID,EAAO,CACP,IAAIE,EAASJ,EAAmBC,GAChC,GAAIP,EAAaU,GAAS,OAAOA,EAMrC,IAHA,IAAIlB,EAAMe,EAAId,OACVkB,EAAaC,MAAMpB,GACnBqB,EAAS,EACJ7E,EAAI,EAAGA,EAAIwD,IAAOxD,EAAG,CAC1B,IAAI8E,EAAIP,EAAIF,WAAWrE,GACvB,GAAI8E,GAAK,IACLH,EAAWE,KAAYC,OACpB,GAAIA,GAAK,KACZH,EAAWE,KAAY,IAAQC,GAAK,EACpCH,EAAWE,KAAY,IAAY,GAAJC,MAC5B,CAEH,GAAIA,GAAK,OAAUA,GAAK,OAAW9E,EAAE,EAAKwD,EAAK,CAE3C,IAAIG,EAAIY,EAAIF,WAAWrE,EAAE,GACrB2D,GAAK,OAAUA,GAAK,QAEpB3D,IACA8E,EAAmB,MAAdA,EAAI,OAAkBnB,EAAI,MAGnCmB,GAAK,OACLH,EAAWE,KAAY,IAAQC,GAAK,GACpCH,EAAWE,KAAY,IAASC,GAAK,EAAK,GAC1CH,EAAWE,KAAY,IAAY,GAAJC,IAE/BH,EAAWE,KAAY,IAAQC,GAAK,GACpCH,EAAWE,KAAY,IAASC,GAAK,GAAM,GAC3CH,EAAWE,KAAY,IAASC,GAAK,EAAK,GAC1CH,EAAWE,KAAY,IAAY,GAAJC,IAQ3C,OAJAH,EAAavB,EAAeuB,GAExBH,IAAOF,EAAmBC,GAAOI,GAE9BA,GAcXlF,EAAOD,QAAQ4D,eAAoBA,EACnC3D,EAAOD,QAAQmD,kBAAoBA,EACnClD,EAAOD,QAAQoD,aAAoBA,EACnCnD,EAAOD,QAAQwE,aAAoBA,EACnCvE,EAAOD,QAAQkD,aAlMM,SAASa,EAAGwB,GAC7B,GAAIxB,IAAMwB,EAAG,CACT,IAAIvB,EAAMD,EAAEE,OACZ,GAAID,IAAQuB,EAAEtB,OAAQ,OAAO,EAE7B,IAAK,IAAIzD,EAAE,EAAGA,EAAEwD,EAAKxD,IACjB,GAAIuD,EAAEvD,KAAO+E,EAAE/E,GAAI,OAAO,EAElC,OAAO,GA2LXP,EAAOD,QAAQqD,YAvLK,SAAS5B,EAAOqC,EAAM0B,EAAIC,GAC1C,IAAKjB,EAAa/C,GAAQ,MAAM,IAAIwD,UAAU,oCAG1CO,OADO,IAAPA,EACK/D,EAAMwC,OAENyB,KAAKC,IAAIlE,EAAMwC,OAAQuB,GAIhC,IADA,IAAIT,EAAM,GACDvE,OAAY,IAAPsD,EAAcA,EAAK,EAAItD,EAAIgF,GAAK,CAC1C,IAAII,EAAKnE,EAAMjB,KACf,GAAIoF,EAAK,IAELb,GAAOc,OAAOC,aAAaF,QACxB,GAAIA,EAAK,KAAQA,EAAK,IAAM,CAC/B,IAAKH,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,SACJ,GAAIa,GAAM,IAAM,CAEnB,GAAIpF,GAAKgF,EAAI,CACT,IAAKC,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAEJ,IAAIiB,EAAKvE,EAAMjB,KACf,GAAkB,MAAV,IAAHwF,GAAmB,CACpB,IAAKP,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAEJA,GAAOc,OAAOC,eAAoB,GAALF,IAAc,IAAW,GAALI,SAC9C,GAAIJ,GAAM,IAAM,CAEnB,GAAIpF,EAAE,GAAKgF,EAAI,CACX,IAAKC,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAEJ,IAAIiB,EAAKvE,EAAMjB,KACf,GAAkB,MAAV,IAAHwF,GAAmB,CACpB,IAAKP,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAEJ,IAAIkB,EAAKxE,EAAMjB,KACf,GAAkB,MAAV,IAAHyF,GAAmB,CACpB,IAAKR,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAEJ,IAAIO,IAAW,GAALM,IAAc,MAAa,GAALI,IAAc,IAAW,GAALC,GACpD,GAAIX,GAAK,MACLP,GAAOc,OAAOC,aAAaR,OACxB,CAEH,IAAIY,EAAiB,QADrBZ,GAAK,QACU,IACXa,EAAMb,EAAI,KAAS,MACvBP,GAAOc,OAAOC,aAAaI,EAAIC,QAEhC,CAEH,GAAI3F,EAAE,GAAKgF,EAAI,CACX,IAAKC,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAEJ,IAAIiB,EAAKvE,EAAMjB,KACf,GAAkB,MAAV,IAAHwF,GAAmB,CACpB,IAAKP,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAEJ,IAAIkB,EAAKxE,EAAMjB,KACf,GAAkB,MAAV,IAAHyF,GAAmB,CACpB,IAAKR,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAEJ,IAAIqB,EAAK3E,EAAMjB,KACf,GAAkB,MAAV,IAAH4F,GAAmB,CACpB,IAAKX,EAAkB,MAAMM,WAAWtB,GACxCM,GAAO,IACP,SAGJ,IAAIO,IAAW,EAALM,IAAc,MAAa,GAALI,IAAc,MAAa,GAALC,IAAc,IAAW,GAALG,GAEtEF,EAAiB,QADrBZ,GAAK,QACU,IACXa,EAAMb,EAAI,KAAS,MACvBP,GAAOc,OAAOC,aAAaI,EAAIC,IAGvC,OAAOpB,GA2FX9E,EAAOD,QAAQuD,aAjFM,SAASQ,GAC1B,IAAKS,EAAaT,GAAI,MAAM,IAAIkB,UAAU,qCAE1C,IADA,IAAI1C,EAAI,GACC/B,EAAE,EAAGA,EAAEuD,EAAEE,OAAQzD,IAAK,CAC3B,IAAI2D,EAAIJ,EAAEvD,GACNkE,EAAYP,GACZ5B,GAAKsD,OAAOC,aAAa3B,GAEzB5B,GAAK,KAAO4B,EAAE,GAAK,IAAI,IAAMA,EAAEkC,SAAS,IAGhD,OAAO9D,GAuEXtC,EAAOD,QAAQsD,aAAoBA,EACnCrD,EAAOD,QAAQsG,gBAnBS,SAASvB,GAC7B,IAAKP,EAAaO,GAAM,CACpB,GAAmB,iBAARA,EAGP,MAAM,IAAIE,UAAU,kDAFpBF,EAAMzB,EAAayB,GAK3B,OAAOA,GAeX,IAAMwB,EAAgBjD,EAAa,QAYnCrD,EAAOD,QAAQuG,cAAsBA,EACrCtG,EAAOD,QAAQwG,kBAXa,IAY5BvG,EAAOD,QAAQyG,kBAXa,IAY5BxG,EAAOD,QAAQ0G,gBAXa,IAY5BzG,EAAOD,QAAQ2G,oBAXa,IAY5B1G,EAAOD,QAAQ4G,YAVa,UAW5B3G,EAAOD,QAAQ6G,YAVaD,YAW5B3G,EAAOD,QAAQ8G,cAVaD,sDAW5B5G,EAAOD,QAAQ+G,YAVa,kDAa5B,IAUMC,EAAiB,CACnBC,WAAqB,EACrBC,SAAoB,EACpBC,aAAoB,EACpBC,mBAAoB,EACpBC,YAAoB,EACpBC,YAAoB,EACpBC,WAAoB,EACpBC,cAAoB,EACpBC,cAAoB,EACpBC,YAAoB,EACpBC,YAAoB,GAGxBX,EAAeY,YAA4C,EAA9BZ,EAAeM,YAC5CN,EAAea,YAA4C,GAA9Bb,EAAeM,YAE5CN,EAAec,YAA4C,EAA9Bd,EAAeK,YAC5CL,EAAee,YAA4C,GAA9Bf,EAAeK,YAE5CL,EAAegB,SAA2C,EAAhChB,EAAeQ,cACzCR,EAAeiB,SAA2C,GAAhCjB,EAAeQ,cACzCR,EAAekB,SAA2C,GAAhClB,EAAeQ,cAMzC,IAsBMW,GADoB1F,EAAQ,GAA1B2F,cACmC,IAiD3CnI,EAAOD,QAAQqI,aAfU,EAgBzBpI,EAAOD,QAAQsI,cAbU,EAczBrI,EAAOD,QAAQuI,aAfU,EAgBzBtI,EAAOD,QAAQwI,YAjBU,EAkBzBvI,EAAOD,QAAQyI,iBAfU,EAgBzBxI,EAAOD,QAAQ0I,aAVQ,EAWvBzI,EAAOD,QAAQ2I,cARQ,EASvB1I,EAAOD,QAAQ4I,aAVQ,EAWvB3I,EAAOD,QAAQ6I,YAZQ,EAavB5I,EAAOD,QAAQ8I,aA7DM,GA8DrB7I,EAAOD,QAAQ+I,aAA2B,EAC1C9I,EAAOD,QAAQgJ,UAlFI,EAmFnB/I,EAAOD,QAAQiJ,WA5EI,EA6EnBhJ,EAAOD,QAAQkJ,WAvEI,GAwEnBjJ,EAAOD,QAAQmJ,UA7EI,EA8EnBlJ,EAAOD,QAAQoJ,WA7EI,EA8EnBnJ,EAAOD,QAAQqJ,UAlFI,EAmFnBpJ,EAAOD,QAAQsJ,SAzEE,EA0EjBrJ,EAAOD,QAAQuJ,WAnFI,EAoFnBtJ,EAAOD,QAAQwJ,SAzEE,EA0EjBvJ,EAAOD,QAAQyJ,SA3EE,EA4EjBxJ,EAAOD,QAAQ0J,UAzFI,EA0FnBzJ,EAAOD,QAAQ2J,UA3FI,EA4FnB1J,EAAOD,QAAQ4J,UA1FI,EA2FnB3J,EAAOD,QAAQ6J,UArFI,GAsFnB5J,EAAOD,QAAQ8J,UArFI,GAsFnB7J,EAAOD,QAAQ+J,UAhGI,EAiGnB9J,EAAOD,QAAQgK,UAtFI,GAuFnB/J,EAAOD,QAAQmI,kBAA0BA,EACzClI,EAAOD,QAAQiK,iBAtEa,EAuE5BhK,EAAOD,QAAQkK,cAvEa,EAwE5BjK,EAAOD,QAAQmK,oBAzEa,EA0E5BlK,EAAOD,QAAQgH,eAA0BA,EACzC/G,EAAOD,QAAQoK,UAtEX,SAAAA,iGAAcC,CAAAC,KAAAF,GACVE,KAAKC,MAAQC,IACbF,KAAKvJ,KAAO,KACZuJ,KAAKG,SAAW,KAChBH,KAAKI,KAAO,KACZJ,KAAKK,OAAS,KACdL,KAAKM,YAAcJ,IACnBF,KAAKO,YAAcL,IACnBF,KAAKQ,gBAAkBN,IACvBF,KAAKS,KAAOP,IACZF,KAAKU,QAAUR,IACfF,KAAKW,SAAWT,IAChBF,KAAKY,WAAaV,IAClBF,KAAKa,UAAY,KAEjBb,KAAKc,KAAO,MAwDpBnL,EAAOD,QAAQqL,iBAjFU,SAAS7K,GAC9B,OAAO2H,EAAoB3H,GAiF/BP,EAAOD,QAAQsL,cAhJO,CAClBC,OAAe,EACfC,UAAe,EACfC,WAAe,EACfC,cAAe,EACfC,WAAe,EACfC,YAAe,EACfC,WAAe,iCCrRnB,IAAMC,EAASrJ,EAAQ,GACjBsJ,EAAStJ,EAAQ,IACjBuJ,EAASvJ,EAAQ,IACjBwJ,EAASxJ,EAAQ,GACjByJ,EAASzJ,EAAQ,IAEvBxC,EAAOD,QAAQ+G,YAA0B+E,EAAK/E,YAC9C9G,EAAOD,QAAQ8G,cAA0BgF,EAAKhF,cAC9C7G,EAAOD,QAAQ6L,WAA0BC,EAAKR,cAAcO,WAC5D5L,EAAOD,QAAQ4L,YAA0BE,EAAKR,cAAcM,YAC5D3L,EAAOD,QAAQ2L,WAA0BG,EAAKR,cAAcK,WAC5D1L,EAAOD,QAAQyL,WAA0BK,EAAKR,cAAcG,WAC5DxL,EAAOD,QAAQ0L,cAA0BI,EAAKR,cAAcI,cAC5DzL,EAAOD,QAAQqI,aAA0ByD,EAAKzD,aAC9CpI,EAAOD,QAAQsI,cAA0BwD,EAAKxD,cAC9CrI,EAAOD,QAAQuI,aAA0BuD,EAAKvD,aAC9CtI,EAAOD,QAAQwI,YAA0BsD,EAAKtD,YAC9CvI,EAAOD,QAAQyI,iBAA0BqD,EAAKrD,iBAC9CxI,EAAOD,QAAQ0I,aAA0BoD,EAAKpD,aAC9CzI,EAAOD,QAAQ2I,cAA0BmD,EAAKnD,cAC9C1I,EAAOD,QAAQ4I,aAA0BkD,EAAKlD,aAC9C3I,EAAOD,QAAQ6I,YAA0BiD,EAAKjD,YAC9C5I,EAAOD,QAAQ8I,aAA0BgD,EAAKhD,aAC9C7I,EAAOD,QAAQ+I,YAA0B+C,EAAK/C,YAC9C9I,EAAOD,QAAQ2H,YAA0BmE,EAAK9E,eAAeW,YAC7D1H,EAAOD,QAAQuL,OAA0BO,EAAKR,cAAcC,OAC5DtL,EAAOD,QAAQgJ,UAA0B8C,EAAK9C,UAC9C/I,EAAOD,QAAQiJ,WAA0B6C,EAAK7C,WAC9ChJ,EAAOD,QAAQkJ,WAA0B4C,EAAK5C,WAC9CjJ,EAAOD,QAAQmJ,UAA0B2C,EAAK3C,UAC9ClJ,EAAOD,QAAQoJ,WAA0B0C,EAAK1C,WAC9CnJ,EAAOD,QAAQqJ,UAA0ByC,EAAKzC,UAC9CpJ,EAAOD,QAAQsJ,SAA0BwC,EAAKxC,SAC9CrJ,EAAOD,QAAQuJ,WAA0BuC,EAAKvC,WAC9CtJ,EAAOD,QAAQwJ,SAA0BsC,EAAKtC,SAC9CvJ,EAAOD,QAAQyJ,SAA0BqC,EAAKrC,SAC9CxJ,EAAOD,QAAQ0J,UAA0BoC,EAAKpC,UAC9CzJ,EAAOD,QAAQ2J,UAA0BmC,EAAKnC,UAC9C1J,EAAOD,QAAQ4J,UAA0BkC,EAAKlC,UAC9C3J,EAAOD,QAAQ6J,UAA0BiC,EAAKjC,UAC9C5J,EAAOD,QAAQ8J,UAA0BgC,EAAKhC,UAC9C7J,EAAOD,QAAQ+J,UAA0B+B,EAAK/B,UAC9C9J,EAAOD,QAAQgK,UAA0B8B,EAAK9B,UAC9C/J,EAAOD,QAAQmI,kBAA0B2D,EAAK3D,kBAC9ClI,EAAOD,QAAQ6G,YAA0BiF,EAAKjF,YAC9C5G,EAAOD,QAAQiK,iBAA0B6B,EAAK7B,iBAC9ChK,EAAOD,QAAQkK,cAA0B4B,EAAK5B,cAC9CjK,EAAOD,QAAQmK,oBAA0B2B,EAAK3B,oBAC9ClK,EAAOD,QAAQuG,cAA0BuF,EAAKvF,cAC9CtG,EAAOD,QAAQiH,UAA0B6E,EAAK9E,eAAeC,UAC7DhH,EAAOD,QAAQkH,SAA0B4E,EAAK9E,eAAeE,SAC7DjH,EAAOD,QAAQmH,aAA0B2E,EAAK9E,eAAeG,aAC7DlH,EAAOD,QAAQoH,mBAA0B0E,EAAK9E,eAAeI,mBAC7DnH,EAAOD,QAAQqH,YAA0ByE,EAAK9E,eAAeK,YAC7DpH,EAAOD,QAAQsH,YAA0BwE,EAAK9E,eAAeM,YAC7DrH,EAAOD,QAAQuH,WAA0BuE,EAAK9E,eAAeO,WAC7DtH,EAAOD,QAAQwH,cAA0BsE,EAAK9E,eAAeQ,cAC7DvH,EAAOD,QAAQyH,cAA0BqE,EAAK9E,eAAeS,cAC7DxH,EAAOD,QAAQ0H,YAA0BoE,EAAK9E,eAAeU,YAC7DzH,EAAOD,QAAQ4G,YAA0BkF,EAAKlF,YAC9C3G,EAAOD,QAAQwG,kBAA0BsF,EAAKtF,kBAC9CvG,EAAOD,QAAQyG,kBAA0BqF,EAAKrF,kBAC9CxG,EAAOD,QAAQ0G,gBAA0BoF,EAAKpF,gBAC9CzG,EAAOD,QAAQ2G,oBAA0BmF,EAAKnF,oBAC9C1G,EAAOD,QAAQwL,UAA0BM,EAAKR,cAAcE,UAC5DvL,EAAOD,QAAQoK,UAA0B0B,EAAK1B,UAC9CnK,EAAOD,QAAQqL,iBAA0BS,EAAKT,iBAC9CpL,EAAOD,QAAQmM,aAA0BJ,EAAKI,aAC9ClM,EAAOD,QAAQoM,UAA0BL,EAAKK,UAC9CnM,EAAOD,QAAQqM,YAA0BN,EAAKM,YAC9CpM,EAAOD,QAAQsM,kBAA0BP,EAAKO,kBAC9CrM,EAAOD,QAAQuM,SAA0BR,EAAKQ,SAC9CtM,EAAOD,QAAQwM,UAA0BT,EAAKS,UAC9CvM,EAAOD,QAAQyM,eAA0BV,EAAKU,eAC9CxM,EAAOD,QAAQ0M,UAA0BR,EAAOQ,UAChDzM,EAAOD,QAAQ2M,YAA0BZ,EAAKY,YAC9C1M,EAAOD,QAAQ4M,WAA0Bb,EAAKa,WAC9C3M,EAAOD,QAAQ6M,SAA0Bd,EAAKc,SAC9C5M,EAAOD,QAAQ8M,gBAA0Bf,EAAKe,gBAC9C7M,EAAOD,QAAQ+M,SAA0BhB,EAAKgB,SAC9C9M,EAAOD,QAAQgN,UAA0BjB,EAAKiB,UAC9C/M,EAAOD,QAAQiN,OAA0BlB,EAAKkB,OAC9ChN,EAAOD,QAAQkN,cAA0BnB,EAAKmB,cAC9CjN,EAAOD,QAAQmN,kBAA0BpB,EAAKoB,kBAC9ClN,EAAOD,QAAQoN,aAA0BrB,EAAKqB,aAC9CnN,EAAOD,QAAQqN,cAA0BtB,EAAKsB,cAC9CpN,EAAOD,QAAQsN,YAA0BtB,EAAOsB,YAChDrN,EAAOD,QAAQuN,iBAA0BvB,EAAOuB,iBAChDtN,EAAOD,QAAQwN,gBAA0BxB,EAAOwB,gBAChDvN,EAAOD,QAAQyN,SAA0B1B,EAAK0B,SAC9CxN,EAAOD,QAAQ0N,YAA0B1B,EAAO0B,YAChDzN,EAAOD,QAAQ2N,aAA0B3B,EAAO2B,aAChD1N,EAAOD,QAAQ4N,iBAA0B7B,EAAK6B,iBAC9C3N,EAAOD,QAAQ6N,aAA0B7B,EAAO6B,aAChD5N,EAAOD,QAAQ8N,aAA0B/B,EAAK+B,aAC9C7N,EAAOD,QAAQ+N,WAA0BhC,EAAKgC,WAC9C9N,EAAOD,QAAQgO,eAA0BjC,EAAKiC,eAC9C/N,EAAOD,QAAQiO,iBAA0BlC,EAAKkC,iBAC9ChO,EAAOD,QAAQkO,WAA0BnC,EAAKmC,WAC9CjO,EAAOD,QAAQmO,cAA0BpC,EAAKoC,cAC9ClO,EAAOD,QAAQoO,gBAA0BrC,EAAKqC,gBAC9CnO,EAAOD,QAAQqO,eAA0BtC,EAAKsC,eAC9CpO,EAAOD,QAAQsO,cAA0BvC,EAAKuC,cAC9CrO,EAAOD,QAAQuO,oBAA0BxC,EAAKwC,oBAC9CtO,EAAOD,QAAQwO,UAA0BzC,EAAKyC,UAC9CvO,EAAOD,QAAQyO,WAA0B1C,EAAK0C,WAC9CxO,EAAOD,QAAQ0O,gBAA0B3C,EAAK2C,gBAC9CzO,EAAOD,QAAQ2O,aAA0B5C,EAAK4C,aAC9C1O,EAAOD,QAAQ4O,YAA0B7C,EAAK6C,YAC9C3O,EAAOD,QAAQ6O,aAA0B9C,EAAK8C,aAC9C5O,EAAOD,QAAQ8O,YAA0B/C,EAAK+C,YAC9C7O,EAAOD,QAAQ+O,aAA0BhD,EAAKgD,aAC9C9O,EAAOD,QAAQgP,eAA0BjD,EAAKiD,eAC9C/O,EAAOD,QAAQiP,gBAA0BhD,EAAIgD,gBAC7ChP,EAAOD,QAAQkP,QAA0BnD,EAAKmD,QAC9CjP,EAAOD,QAAQmP,SAA0BpD,EAAKoD,SAC9ClP,EAAOD,QAAQoP,aAA0BlD,EAAOkD,aAChDnP,EAAOD,QAAQqP,aAA0BtD,EAAKsD,aAC9CpP,EAAOD,QAAQsP,cAA0BpD,EAAOoD,cAChDrP,EAAOD,QAAQuP,gBAA0BxD,EAAKwD,gBAC9CtP,EAAOD,QAAQwP,SAA0BzD,EAAKyD,SAC9CvP,EAAOD,QAAQyP,UAA0B1D,EAAK0D,UAC9CxP,EAAOD,QAAQ0P,WAA0B3D,EAAK2D,WAC9CzP,EAAOD,QAAQ2P,QAA0B5D,EAAK4D,QAC9C1P,EAAOD,QAAQ4P,gBAA0B7D,EAAK6D,gBAC9C3P,EAAOD,QAAQ6P,iBAA0B9D,EAAK8D,iBAC9C5P,EAAOD,QAAQ8P,kBAA0B/D,EAAK+D,kBAC9C7P,EAAOD,QAAQ+P,gBAA0BhE,EAAKgE,gBAC9C9P,EAAOD,QAAQgQ,oBAA0BjE,EAAKiE,oBAC9C/P,EAAOD,QAAQiQ,gBAA0BlE,EAAKkE,gBAC9ChQ,EAAOD,QAAQkQ,kBAA0BnE,EAAKmE,kBAC9CjQ,EAAOD,QAAQmQ,mBAA0BpE,EAAKoE,mBAC9ClQ,EAAOD,QAAQoQ,sBAA0BrE,EAAKqE,sBAC9CnQ,EAAOD,QAAQqQ,gBAA0BtE,EAAKsE,gBAC9CpQ,EAAOD,QAAQsQ,gBAA0BvE,EAAKuE,gBAC9CrQ,EAAOD,QAAQuQ,YAA0BxE,EAAKwE,YAC9CtQ,EAAOD,QAAQwQ,eAA0BzE,EAAKyE,eAC9CvQ,EAAOD,QAAQyQ,eAA0B1E,EAAK0E,eAC9CxQ,EAAOD,QAAQ0Q,eAA0B3E,EAAK2E,eAC9CzQ,EAAOD,QAAQ2Q,cAA0B5E,EAAK4E,cAC9C1Q,EAAOD,QAAQ4Q,iBAA0B7E,EAAK6E,iBAC9C3Q,EAAOD,QAAQ6Q,aAA0B9E,EAAK8E,aAC9C5Q,EAAOD,QAAQ8Q,WAA0B/E,EAAK+E,WAC9C7Q,EAAOD,QAAQ+Q,YAA0BhF,EAAKgF,YAC9C9Q,EAAOD,QAAQgR,YAA0BjF,EAAKiF,YAC9C/Q,EAAOD,QAAQiR,WAA0BlF,EAAKkF,WAC9ChR,EAAOD,QAAQkR,WAA0BnF,EAAKmF,WAC9CjR,EAAOD,QAAQmR,YAA0BpF,EAAKoF,YAC9ClR,EAAOD,QAAQoR,YAA0BrF,EAAKqF,YAC9CnR,EAAOD,QAAQqR,aAA0BtF,EAAKsF,aAC9CpR,EAAOD,QAAQsR,WAA0BvF,EAAKuF,WAC9CrR,EAAOD,QAAQuR,YAA0BxF,EAAKwF,YAC9CtR,EAAOD,QAAQwR,WAA0BvF,EAAIuF,WAC7CvR,EAAOD,QAAQyR,WAA0B1F,EAAK0F,WAC9CxR,EAAOD,QAAQ0R,aAA0BzF,EAAIyF,aAC7CzR,EAAOD,QAAQ2R,aAA0B5F,EAAK4F,aAC9C1R,EAAOD,QAAQ4R,cAA0B7F,EAAK6F,cAC9C3R,EAAOD,QAAQ6R,YAA0B7F,EAAO6F,YAChD5R,EAAOD,QAAQ8R,SAA0B/F,EAAK+F,SAC9C7R,EAAOD,QAAQ+R,aAA0B/F,EAAO+F,aAChD9R,EAAOD,QAAQgS,iBAA0BjG,EAAKiG,iBAC9C/R,EAAOD,QAAQiS,aAA0BlG,EAAKkG,aAC9ChS,EAAOD,QAAQkS,WAA0BnG,EAAKmG,WAC9CjS,EAAOD,QAAQmS,eAA0BpG,EAAKoG,eAC9ClS,EAAOD,QAAQoS,iBAA0BrG,EAAKqG,iBAC9CnS,EAAOD,QAAQqS,WAA0BtG,EAAKsG,WAC9CpS,EAAOD,QAAQsS,mBAA0BvG,EAAKuG,mBAC9CrS,EAAOD,QAAQuS,cAA0BxG,EAAKwG,cAC9CtS,EAAOD,QAAQwS,eAA0BzG,EAAKyG,eAC9CvS,EAAOD,QAAQyS,cAA0B1G,EAAK0G,cAC9CxS,EAAOD,QAAQ0S,eAA0B3G,EAAK2G,eAC9CzS,EAAOD,QAAQ2S,eAA0B5G,EAAK4G,eAC9C1S,EAAOD,QAAQ4S,cAA0B7G,EAAK6G,cAC9C3S,EAAOD,QAAQ6S,aAA0B9G,EAAK8G,aAC9C5S,EAAOD,QAAQ8S,cAA0B/G,EAAK+G,cAC9C7S,EAAOD,QAAQ+S,cAA0BhH,EAAKgH,cAC9C9S,EAAOD,QAAQgT,YAA0BjH,EAAKiH,YAC9C/S,EAAOD,QAAQiT,aAA0BlH,EAAKkH,aAC9ChT,EAAOD,QAAQkT,aAA0BnH,EAAKmH,aAC9CjT,EAAOD,QAAQmT,eAA0BpH,EAAKoH,eAC9ClT,EAAOD,QAAQoT,SAA0BrH,EAAKqH,SAC9CnT,EAAOD,QAAQqT,aAA0BtH,EAAKsH,aAC9CpT,EAAOD,QAAQsT,cAA0BvH,EAAKuH,cAC9CrT,EAAOD,QAAQuT,gBAA0BxH,EAAKwH,gBAC9CtT,EAAOD,QAAQwT,YAA0BzH,EAAKyH,YAC9CvT,EAAOD,QAAQyT,UAA0B1H,EAAK0H,UAC9CxT,EAAOD,QAAQ0T,UAA0BzH,EAAIyH,UAC7CzT,EAAOD,QAAQ2T,WAA0B1H,EAAI0H,WAC7C1T,EAAOD,QAAQ4T,gBAA0B7H,EAAK6H,8CC5L9C,IAAMC,EAAwE,KAM1EpR,EAAQ,GAHR+D,sBACAC,sBACAnD,iBAWJrD,EAAOD,QAAQ8T,aADO,IAItB7T,EAAOD,QAAQ+T,cADO,IAItB9T,EAAOD,QAAQgU,aADO,IAYtB,IAAMC,EAAWzN,EAAoB,IAAMC,EAC3CxG,EAAOD,QAAQiU,SAAWA,EAItBhU,EAAOD,QAAQkU,WADI,IAGnB,IAAMC,EAAW,SAAWF,EAAW,IACvChU,EAAOD,QAAQmU,SAAWA,EAE1B,IAAMC,EAAYD,EAClBlU,EAAOD,QAAQoU,UAAYA,EAE3B,IAAMC,EAAmB/Q,EACrB6Q,EAAW,SAAWA,EAAW,mCAIrClU,EAAOD,QAAQqU,iBAAmBA,EAElC,IAAMC,EAAqBhR,EACvB8Q,EAAY,QAAUA,EAAY,qBAEtCnU,EAAOD,QAAQsU,mBAAqBA,EAsExC,IAAMC,EAAyBV,EAAKU,yBAA0B,EAWxDnM,EAAgByL,EAAKzL,eAAiB,IAOtCoM,EAAaX,EAAKW,YAAe,GAiBjCC,EAAe,IAAAC,OAHM,GAGN,KAkBfC,EAAkBd,EAAKc,iBAAmB,KAiB1CC,EAAQ,SAASC,EAAUC,GAG7B,IAFA,IAAIC,EAAQrP,KAAKC,IAAI,EAAGD,KAAKsP,KAAKtP,KAAKuP,IAAIH,GAAY,OACnDI,EAASL,EACJrU,EAAI,EAAGA,EAAIuU,EAAOvU,IACvB0U,GAAUxP,KAAKyP,IAAI,EAAGzP,KAAK0P,OAAON,EAAWtU,GAAKuU,IACtD,OAAOG,GAGXjV,EAAOD,QAAQoI,cAAyBA,EACxCnI,EAAOD,QAAQuU,uBAAyBA,EACxCtU,EAAOD,QAAQwU,WAAyBA,EACxCvU,EAAOD,QAAQyU,gBAAyBA,EACxCxU,EAAOD,QAAQqV,mBAlDY,GAmD3BpV,EAAOD,QAAQsV,eAjFQ,WAkFvBrV,EAAOD,QAAQuV,gBAjFQ,WAkFvBtV,EAAOD,QAAQwV,eAjDS,QAkDxBvV,EAAOD,QAAQyV,kBArDW,GAsD1BxV,EAAOD,QAAQ2U,gBAAyBA,EACxC1U,EAAOD,QAAQ0V,MAhCD,SAASjU,GACnB,GAAc,IAAVA,EAAa,MAAO,CAACA,EAAO,GAChC,IAAIkU,EAAO,IAAIC,SAAS,IAAIC,YAAY,IACxCF,EAAKG,WAAW,EAAGrU,GACnB,IAAIsU,EAAQJ,EAAKK,UAAU,KAAO,GAAM,KAC3B,IAATD,IACAJ,EAAKG,WAAW,EAAGrU,EAAQiE,KAAKyP,IAAI,EAAG,KACvCY,GAASJ,EAAKK,UAAU,KAAO,GAAM,MAAS,IAElD,IAAIlB,EAAWiB,EAAO,KAEtB,MAAO,CADQnB,EAAMnT,GAAQqT,GACXA,IAsBtB7U,EAAOD,QAAQ4U,MAAyBA,EACxC3U,EAAOD,QAAQiW,sBApDe,WAK1B,OAAO,IAgDXhW,EAAOD,QAAQkW,gBAvES,SAASjU,GAC7B,OAAO4D,OAAO5D,IAuElBhC,EAAOD,QAAQmW,eApEQ,SAASlU,GAC5B,OAAO4D,OAAOuQ,OAAOnU,EAAEoU,YAAY,OAoEvCpW,EAAOD,QAAQsW,oBAjEa,SAASrU,GACjC,OAAOA,IA1BY,YA0BWA,EAAI,YAAkBA,GAiExDhC,EAAOD,QAAQuW,cAhDO,SAAS9V,EAAG+V,GAC9B,IAAKA,EAAG,MAAMnS,MAAMmS,sCC7KhBD,EAAkB9T,EAAQ,GAA1B8T,cAEFE,EAAa,SAAS5V,GACxB,IAAKA,EAAG,MAAMwD,MAAM,qBAExBpE,EAAOD,QAAQyW,WAAaA,EAE5BxW,EAAOD,QAAQuW,cAAgBA,GAAiB,SAAS9V,EAAG+V,GAAK,OAAOC,EAAWD,IAKnFvW,EAAOD,QAAQ0W,UAHG,SAASjW,EAAG+V,EAAGG,GAC7B,OAAOJ,EAAc9V,EAAG+V,GAAKG,IAKjC1W,EAAOD,QAAQ4W,eADQ,IAKvB3W,EAAOD,QAAQ6W,cADO,GAStB5W,EAAOD,QAAQ8W,YANK,SAASC,EAAGhT,EAAGwB,GAC/B,IAAI3E,EAAImD,EAAIwB,EAGZ,OAFK3E,EAAE2E,EAAK,IACR3E,GAAK2E,GACF3E,GAMXX,EAAOD,QAAQgX,QADC,WAGhB/W,EAAOD,QAAQiX,SADE,4BC1BjB,IAAMnL,EAAOrJ,EAAQ,GASfE,EAA0BC,iFAAoFkJ,EAAKhF,cAEzH7G,EAAOD,QAAQ0C,gBAHiB,8BAIhCzC,EAAOD,QAAQ2C,kBAA0BA,EACzC1C,EAAOD,QAAQ4C,gBANiBC,gBAOhC5C,EAAOD,QAAQ6C,gBARiB,cAShC5C,EAAOD,QAAQ8C,sBAbiB,IAchC7C,EAAOD,QAAQ+C,sBAbiB,IAchC9C,EAAOD,QAAQgD,oBAbiB,EAchC/C,EAAOD,QAAQiD,wBAbiB,IAchChD,EAAOD,QAAQwE,aAA0BsH,EAAKtH,aAC9CvE,EAAOD,QAAQkD,aAA0B4I,EAAK5I,aAC9CjD,EAAOD,QAAQ4D,eAA0BkI,EAAKlI,eAC9C3D,EAAOD,QAAQmD,kBAA0B2I,EAAK3I,kBAC9ClD,EAAOD,QAAQoD,aAA0B0I,EAAK1I,aAC9CnD,EAAOD,QAAQqD,YAA0ByI,EAAKzI,YAC9CpD,EAAOD,QAAQsD,aAA0BwI,EAAKxI,aAC9CrD,EAAOD,QAAQuD,aAA0BuI,EAAKvI,aAC9CtD,EAAOD,QAAQsG,gBAA0BwF,EAAKxF,2pBCM1C7D,EAAQ,GAtCRuG,cACAC,eACAC,eACAC,cACAC,eACAC,cACAE,eACAG,cACAC,cACAC,cACAC,cACAC,cACAC,cACAC,kBACAhD,eACIW,gBACAR,iBACAe,aACAV,kBACAS,aACAD,aACAZ,uBACAS,gBACAX,aACAG,gBACAS,gBACAC,gBACAH,gBACAN,gBACAC,eACAG,gBACAD,kBAEJnB,oBACAnD,sBACAC,iBACAC,gBACAC,mBAOAb,EAAQ,IAJRyU,aACAC,aACAC,aACAC,cAEErL,EAAUvJ,EAAQ,IAClBwJ,EAAUxJ,EAAQ,GAClByJ,EAAUzJ,EAAQ,OAIpBA,EAAQ,IAFR6U,iBACAC,eAEEC,GAAU/U,EAAQ,MAMpBA,EAAQ,GAJR8R,6BACAK,YACAsB,sBACAC,qBAEEsB,GAAUhV,EAAQ,OAKpBA,EAAQ,GAHRuU,cACAF,kBACAL,iBAEEiB,GAAUjV,EAAQ,IAElBkV,GAAahQ,EACbiQ,GAAejQ,EAAY,EAE3BkQ,cAEF,SAAAA,EAAYC,EAAMrW,GAAO4I,EAAAC,KAAAuN,GACrBvN,KAAKwN,KAAOA,EACZxN,KAAK7I,MAAQA,yDAKb,OAAmB,GAAZ6I,KAAKwN,qCAKZ,OAAmB,GAAZxN,KAAKwN,sCAGPpW,GACL,OAAO4I,KAAKwN,OAASpW,oCAGfA,GACN,OAAO4I,KAAKyN,UAAYrW,uCAIxB,OAAO4I,KAAK0N,UAAU3Q,uCAItB,OAAOiD,KAAK2N,SAASnQ,yCAIrB,OAAOwC,KAAK2N,SAASlQ,qCAIrB,OAAOuC,KAAK2N,SAAS/Q,yCAIrB,OAAOoD,KAAK2N,SAAS9Q,+CAIrB,OAAOmD,KAAK2N,SAAS7Q,wCAIrB,OAAOkD,KAAK0N,UAAU1Q,2CAItB,OAAOgD,KAAK2N,SAASrQ,2CAIrB,OAAO0C,KAAK2N,SAASpQ,uCAIrB,OAAOyC,KAAK2N,SAAS1Q,0CAIrB,OAAO+C,KAAK0N,UAAUxQ,yCAItB,OAAoB,GAAZ8C,KAAKwN,QAAiBtQ,yCAI9B,OAAO8C,KAAK2N,SAAS/P,0CAIrB,OAAOoC,KAAK2N,SAASjQ,qCAIrB,OAAOsC,KAAK2N,SAAShQ,8CAIrB,OAAOqC,KAAK2N,SAASxQ,wCAIrB,OAAO6C,KAAK2N,SAASvQ,yCAIrB,OAAO4C,KAAK2N,SAASL,wCAIrB,OAAOtN,KAAK4N,WAAc5N,KAAK6N,gBAAgC,IAAf7N,KAAK7I,0CAG7C2W,GACR9N,KAAKwN,KAAOhQ,EACZwC,KAAK7I,MAAQ2W,sCAGLA,GACR3B,GAAWnM,KAAKwN,MAAQhQ,GACxBwC,KAAK7I,MAAQ2W,oCAGPA,GACN9N,KAAKwN,KAAO/P,EACZuC,KAAK7I,MAAQ2W,oCAGPA,GACN3B,GAAWnM,KAAKwN,MAAQ/P,GACxBuC,KAAK7I,MAAQ2W,wCAIb9N,KAAKwN,KAAO5Q,EACZoD,KAAK7I,MAAQ,uCAGP2W,GACN9N,KAAKwN,KAAO7P,EACZqC,KAAK7I,MAAQ2W,oCAGPA,GACN9N,KAAKwN,KAAO1Q,EACZkD,KAAK7I,MAAQ2W,oCAGPA,GACN9N,KAAKwN,KAAO3Q,EACZmD,KAAK7I,MAAQ2W,oCAGPA,GACN9N,KAAKwN,KAAOjQ,EACZyC,KAAK7I,MAAQ2W,oCAGPA,GACN9N,KAAKwN,KAAOrQ,EACZ6C,KAAK7I,MAAQ2W,qCAGNA,GACP9N,KAAKwN,KAAOpQ,EACZ4C,KAAK7I,MAAQ2W,sCAGLA,GACR9N,KAAKwN,KAAO9P,EACZsC,KAAK7I,MAAQ2W,sCAGLA,GACR9N,KAAKwN,KAAO5P,EACZoC,KAAK7I,MAAQ2W,oCAGPA,GACN9N,KAAKwN,KAAOvQ,EACZ+C,KAAK7I,MAAQ2W,yCAIb9N,KAAKwN,KAAOF,GACZtN,KAAK7I,MAAQ,qCAGT4W,GACJ/N,KAAKwN,KAAOO,EAAGP,KACfxN,KAAK7I,MAAQ4W,EAAG5W,wCAKhB,OADAgV,GAAWnM,KAAKgO,cACThO,KAAK7I,uCAIZ,OAAO6I,KAAKiO,UAAUC,yCAItB,OAAOlO,KAAKiO,UAAUE,0CAGjB3U,EAAM0B,GACX,OAAOnC,EAAYiH,KAAKoO,SAAU5U,EAAM0B,GAAI,wCAkB9CmT,GAAc,SAAS5B,EAAG6B,EAAQC,GACpC9B,EAAE+B,MAAMF,GAAQG,UAAUF,IAGxBG,GAAiB,IAAInB,GAAO3Q,EAAU,MAC5ChG,OAAO+X,OAAOD,IACd/Y,EAAOD,QAAQgZ,eAAiBA,OAE1BE,GAEF,SAAAA,EAAYnC,EAAG9U,GAAGoI,EAAAC,KAAA4O,GACd5O,KAAK6O,GAAKpC,EAAEqC,IAAIC,aAEhB/O,KAAKhI,EAAI,KACTgI,KAAKgP,UAAYrX,EACjBqI,KAAKiP,OAAS,IAAInU,MAAMnD,IAK1BuX,GAEF,SAAAA,EAAYzC,EAAG0C,EAAGxX,GAMd,IANiBoI,EAAAC,KAAAkP,GACjBlP,KAAK6O,GAAKpC,EAAEqC,IAAIC,aAEhB/O,KAAKmP,EAAIA,EACTnP,KAAKgP,UAAYrX,EACjBqI,KAAKoP,QAAU,IAAItU,MAAMnD,GAClBA,KACHqI,KAAKoP,QAAQzX,GAAK,IAAI4V,GAAO3Q,EAAU,OAM7CyS,GAEF,SAAAA,EAAY5C,EAAG6C,GAAMvP,EAAAC,KAAAqP,GACjBrP,KAAK6O,GAAKpC,EAAEqC,IAAIC,aAEhB/O,KAAKuP,UAAY,KACjBvP,KAAKwP,UAAY,IAAIjC,GAAO3Q,EAAU,MACtCoD,KAAKtG,IAAM4V,EACXtP,KAAKqL,KAAOzU,OAAOY,OAAO,OAiB5BiY,GAAOzW,EAAa,OACpB0W,GAAO1W,EAAa,aACpB2W,GAAO3W,EAAa,MA+CpB4W,GAAiB,SAASrZ,GAC5B,OAAIqW,EAASrW,GAAWA,EAAI,IACX,IAAJA,GAAY,IAKvBsZ,GAAe,SAASC,EAAMhC,GAChC,IAAInW,EAAI,EAER,GADAwU,GAAW2B,GAAK,SACZA,EAAI,IACJgC,EAAKC,GAAkBjC,MACtB,CACD,IAAIkC,EAAM,GACV,GACIF,EAVO,EAUYnY,KAAQ,IAAY,GAAJmW,EACnCA,IAAM,EACNkC,IAAQ,QACHlC,EAAIkC,GACbF,EAdW,EAcOnY,IAAOqY,GAAO,EAAKlC,EAEzC,OAAOnW,GA4ELsY,GAAa,SAAShY,EAAGZ,GAC3B,IAAIuT,EAAkB,MAATvT,EAlEO,SAASY,GAQ7B,IAPA,IAKIiY,EALAha,EAAI,EACJc,EAAI,EACJmZ,EAAS,EACTC,EAAW,EACXlE,EAAI,EAEJmE,GAAS,EACNvD,EAAS7U,EAAE/B,KAAKA,IAGvB,IAFKga,EAAgB,KAATjY,EAAE/B,IAAuCA,IACnC,KAAT+B,EAAE/B,IAAqCA,IACjC,KAAT+B,EAAE/B,IAAmD,MAAX+B,EAAE/B,EAAE,IAAmD,KAAX+B,EAAE/B,EAAE,GAC5F,OAAO,KACX,IAAKA,GAAK,GAAKA,IACX,GAAa,KAAT+B,EAAE/B,GAAuE,CACzE,GAAIma,EAAQ,MACPA,GAAS,MACX,KAAItD,EAAU9U,EAAE/B,IAOhB,MANY,IAAXia,GAAyB,KAATlY,EAAE/B,GAClBka,MACOD,GA1BL,GA2BFnZ,EAAS,GAAJA,EAAU4Y,GAAe3X,EAAE/B,IAC/BgW,IACDmE,GAAQnE,IAIpB,GAAIkE,EAAWD,IAAW,EACtB,OAAO,KAEX,GADAjE,GAAK,EACQ,MAATjU,EAAE/B,IAAiD,KAAT+B,EAAE/B,GAAqC,CACjF,IACIoa,EADAC,EAAO,EAKX,IAFKD,EAAiB,KAATrY,IADb/B,IACsDA,IACpC,KAAT+B,EAAE/B,IAAqCA,KAC3C0W,EAAS3U,EAAE/B,IACZ,OAAO,KACX,KAAO0W,EAAS3U,EAAE/B,KACdqa,EAAc,GAAPA,EAAYtY,EAAE/B,KAAO,GAC5Boa,IAAMC,GAAQA,GAClBrE,GAAKqE,EAGT,OADIL,IAAKlZ,GAAKA,GACP,CACHW,EAAG2S,GAAMtT,EAAGkV,GACZhW,EAAGA,GAoBqBsa,CAAgBvY,GAhBzB,SAASA,GAC5B,IACIA,EAAIc,EAAYd,GAClB,MAAOiU,GACL,OAAO,KAIX,IAAIlV,EAAI,uEAAuEyZ,KAAKxY,GACpF,IAAKjB,EACD,OAAO,KACX,IAAI0Z,EAAMC,WAAW3Z,EAAE,IACvB,OAAQ4Z,MAAMF,GAAoC,KAA7B,CAAE/Y,EAAG+Y,EAAKxa,EAAGc,EAAE,GAAG2C,QAIUkX,CAAe5Y,GAChE,GAAe,OAAX2S,EAAiB,OAAO,KAC5B,KAAOkC,EAAS7U,EAAE2S,EAAO1U,KAAK0U,EAAO1U,IACrC,OAAQ0U,EAAO1U,IAAM+B,EAAE0B,QAA0B,IAAhB1B,EAAE2S,EAAO1U,GAAY0U,EAAS,MAG7DkG,GAAS,CACX,GACA,IACA,GACA,IACA,IAEEC,IAAKC,EAAAC,EAAA,GACL,GAAK,KADAD,EAAAC,EAEN,IAAM,KAFAD,EAAAC,EAGL,GAAK,KAHAD,EAAAC,EAIN,IAAM,KAJAD,EAAAC,EAKL,GAAK,KALAA,GA2BLC,GAAW9V,KAAK0P,MAAM4B,GAAU,IAChCyE,GAAWzE,GAAU,GAmDrB0E,GAAgB,SAAS3E,EAAG4E,GAC9B,IAAIvB,EACJ,GAAIuB,EAAIC,cACJxB,EAAO9W,EAAa4S,GAAgByF,EAAIla,YACvC,CACD,IAAIsD,EAAMoR,GAAewF,EAAIla,QACxB8S,IAA0B,mBAAmBsH,KAAK9W,KACnDA,GAAO,MAEXqV,EAAO9W,EAAayB,GAExB4W,EAAI5C,UAAUzB,GAAWP,EAAGqD,KAG1B0B,GAAU,SAAS/E,EAAGhS,GACxBkH,EAAI8P,YAAYhF,GAChB4B,GAAY5B,EAAGA,EAAEiF,IAAI,EAAGzE,GAASR,EAAGhS,KAGlCkX,GAAoB,SAASlF,EAAGmF,EAAKC,GAKvC,IAJA,IAGI3F,EAHAvU,EAAI,EACJzB,EAAI,EACJuD,EAAI,GAIM,IADVyS,EAAIrT,EAAkB+Y,EAAK,GAA8B1b,KADpD,CAIL,OADAsb,GAAQ/E,EAAGmF,EAAIE,SAAS5b,EAAGgW,IACpB0F,EAAI1F,EAAE,IACT,KAAK,IACD,IAAIjU,EAAI4Z,EAAKpY,KACb,GAAU,OAANxB,EAAYA,EAAIe,EAAa,UAAU,OACtC,CACDf,EAAI+D,EAAgB/D,GAEpB,IAAI/B,EAAI2C,EAAkBZ,EAAG,IAClB,IAAP/B,IACA+B,EAAIA,EAAE6Z,SAAS,EAAG5b,IAE1Bsb,GAAQ/E,EAAGxU,GACX,MAEJ,KAAK,GACD,IAAI6X,EAAO+B,EAAKpY,KACZoT,EAASiD,GACT0B,GAAQ/E,EAAG3T,EAAagX,IAExBiC,GAAiBtF,EAAGzT,EAAa,UAAU,GAAO8W,GACtD,MAEJ,KAAK,IACL,KAAK,GACDnO,EAAI8P,YAAYhF,GAChBA,EAAE+B,MAAM/B,EAAEiF,IAAI,GAAGM,UAAUH,EAAKpY,MAChC2X,GAAc3E,EAAGA,EAAE+B,MAAM/B,EAAEiF,IAAI,IAC/B,MACJ,KAAK,IACD/P,EAAI8P,YAAYhF,GAChBA,EAAE+B,MAAM/B,EAAEiF,IAAI,GAAGO,YAAYJ,EAAKpY,MAClC2X,GAAc3E,EAAGA,EAAE+B,MAAM/B,EAAEiF,IAAI,IAC/B,MACJ,KAAK,IACD,IAAI7X,EAAIgY,EAAKpY,KACb,GAAII,aAAa+H,EAAOsQ,WACpBrY,aAAaqT,GAAOiF,OACpBtY,aAAawV,IACbxV,aAAa+U,IACb/U,aAAaqV,GACbsC,GAAQ/E,EAAGzT,EAAa,KAAKa,EAAEgV,GAAG9S,SAAS,WAE3C,OAAAqW,EAAcvY,IACV,IAAK,YACD2X,GAAQ/E,EAAGzT,EAAa,cACxB,MACJ,IAAK,SACDwY,GAAQ/E,EAAGzT,EAAa,UAAUa,EAAE,MACpC,MACJ,IAAK,SACD2X,GAAQ/E,EAAGzT,EAAa,UAAUqZ,KAAKC,UAAUzY,GAAG,MACpD,MACJ,IAAK,UACD2X,GAAQ/E,EAAGzT,EAAaa,EAAE,gBAAgB,mBAC1C,MACJ,IAAK,SACD,GAAU,OAANA,EAAY,CACZ2X,GAAQ/E,EAAGzT,EAAa,SACxB,MAGR,IAAK,WACD,IAAI6V,EAAKpC,EAAEqC,IAAIyD,IAAIxb,IAAI8C,GAClBgV,IACDA,EAAKpC,EAAEqC,IAAIC,aACXtC,EAAEqC,IAAIyD,IAAIC,IAAI3Y,EAAGgV,IAErB2C,GAAQ/E,EAAGzT,EAAa,KAAK6V,EAAG9S,SAAS,MACzC,MAEJ,QAEIyV,GAAQ/E,EAAGzT,EAAa,aAGpC,MAEJ,KAAK,GACD,IAAI8W,EAAO,IAAIvW,WAnSZ,GAoSCpD,EAAI0Z,GAAaC,EAAM+B,EAAKpY,MAChC+X,GAAQ/E,EAAGqD,EAAKgC,SArSb,EAqSmC3b,IACtC,MAEJ,KAAK,GACDqb,GAAQ/E,EAAGzT,EAAa,KAAK,IAC7B,MACJ,QACI0I,EAAO+Q,cAAchG,EAAGzT,EAAa,8CAA+C4Y,EAAI1F,EAAI,IAEpGvU,GAAK,EACLzB,EAAIgW,EAAI,EAKZ,OAHAvK,EAAI+Q,gBAAgBjG,EAAG,GACvB+E,GAAQ/E,EAAGmF,EAAIE,SAAS5b,IACpByB,EAAI,GAAGwV,GAAIwF,YAAYlG,EAAG9U,EAAE,GACzB8U,EAAE+B,MAAM/B,EAAEiF,IAAI,GAAGtD,UAGtB2D,GAAmB,SAAStF,EAAGmF,GAAc,QAAAgB,EAAA3Y,UAAAN,OAANkY,EAAM,IAAA/W,MAAA8X,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANhB,EAAMgB,EAAA,GAAA5Y,UAAA4Y,GAC/C,OAAOlB,GAAkBlF,EAAGmF,EAAKC,IAuB/BiB,GAAW,SAASrG,EAAGsG,EAAIC,EAAIC,GACjC,OAAQF,GACJ,KAAKrU,EAAY,OAAQsU,EAAKC,EAAI,EAClC,KAAKxT,EAAY,OAAQuT,EAAKC,EAAI,EAClC,KAAK5T,EAAY,OAAO8N,GAAI+F,UAAUF,EAAIC,GAC1C,KAAK7T,EAAY,OAAO+N,GAAIgG,SAAS1G,EAAGuG,EAAIC,GAC5C,KAAKhU,EAAY,OAAOkO,GAAIiG,SAAS3G,EAAGuG,EAAIC,GAC5C,KAAKtU,EAAY,OAAQqU,EAAKC,EAC9B,KAAKpU,EAAY,OAAQmU,EAAKC,EAC9B,KAAKnU,EAAY,OAAQkU,EAAKC,EAC9B,KAAK1T,EAAY,OAAO4N,GAAIkG,YAAYL,EAAIC,GAC5C,KAAKzT,EAAY,OAAO2N,GAAIkG,YAAYL,GAAKC,GAC7C,KAAKvT,EAAY,OAAQ,EAAIsT,EAAI,EACjC,KAAKpU,EAAY,OAAQ,EAAKoU,EAC9B,QAAS7G,GAAW,KAKtBmH,GAAW,SAAS7G,EAAGsG,EAAIC,EAAIC,GACjC,OAAQF,GACJ,KAAKrU,EAAY,OAAOsU,EAAKC,EAC7B,KAAKxT,EAAY,OAAOuT,EAAKC,EAC7B,KAAK5T,EAAY,OAAO2T,EAAKC,EAC7B,KAAKlU,EAAY,OAAOiU,EAAKC,EAC7B,KAAK3T,EAAY,OAAOlE,KAAKyP,IAAImI,EAAIC,GACrC,KAAKhU,EAAY,OAAO7D,KAAK0P,MAAMkI,EAAKC,GACxC,KAAKvT,EAAY,OAAQsT,EACzB,KAAK5T,EAAY,OAAOoN,GAAYC,EAAGuG,EAAIC,GAC3C,QAAS9G,GAAW,KA6C5BxW,EAAOD,QAAQwZ,SAAoBA,GACnCvZ,EAAOD,QAAQkZ,SAAoBA,GACnCjZ,EAAOD,QAAQ4X,aAAoBA,GACnC3X,EAAOD,QAAQ2X,WAAoBA,GACnC1X,EAAOD,QAAQ6d,OA1dX,SAAAA,IAAcxT,EAAAC,KAAAuT,GACVvT,KAAKwT,QAAU,KACfxT,KAAKyT,QAAUvT,IACfF,KAAK0T,MAAQxT,KAwdrBvK,EAAOD,QAAQ6X,OAAoBA,GACnC5X,EAAOD,QAAQ2Z,MAAoBA,GACnC1Z,EAAOD,QAAQqa,WAhaI,EAianBpa,EAAOD,QAAQie,WAjDI,SAASlH,EAAGsG,EAAIa,EAAIC,EAAIC,GACvC,IAAIC,EAAqB,iBAAPD,EAAmBrH,EAAE+B,MAAMsF,GAAMA,EAEnD,OAAQf,GACJ,KAAKpU,EAAY,KAAKE,EAAW,KAAKC,EACtC,KAAKS,EAAW,KAAKC,EACrB,KAAKZ,EACD,IAAIoV,EAAIC,EACR,IAAiC,KAA5BD,EAAK7G,GAAI+G,UAAUN,MAA+C,KAA5BK,EAAK9G,GAAI+G,UAAUL,IAE1D,YADAE,EAAI/B,UAAUc,GAASrG,EAAGsG,EAAIiB,EAAIC,IAGjC,MAET,KAAKlV,EAAW,KAAKO,EACjB,IAAI6U,EAAIC,EACR,IAAgC,KAA3BD,EAAKhH,GAAIkH,SAAST,MAA8C,KAA3BQ,EAAKjH,GAAIkH,SAASR,IAExD,YADAE,EAAI9B,YAAYqB,GAAS7G,EAAGsG,EAAIoB,EAAIC,IAGnC,MAET,QACI,IAAID,EAAIC,EACR,GAAIR,EAAGtC,eAAiBuC,EAAGvC,cAEvB,YADAyC,EAAI/B,UAAUc,GAASrG,EAAGsG,EAAIa,EAAGzc,MAAO0c,EAAG1c,QAG1C,IAAgC,KAA3Bgd,EAAKhH,GAAIkH,SAAST,MAA8C,KAA3BQ,EAAKjH,GAAIkH,SAASR,IAE7D,YADAE,EAAI9B,YAAYqB,GAAS7G,EAAGsG,EAAIoB,EAAIC,IAOhDjI,GAAiB,OAANM,GACXW,GAAIkH,cAAc7H,EAAGmH,EAAIC,EAAIC,EAAKf,EAAKrU,EAAa0O,GAAImH,IAAIC,SAahE7e,EAAOD,QAAQ+e,aApdM,SAASpU,EAAQqU,GAClC,IACIC,EADAxe,EAAIkK,EAAO1G,OAEf,GAAkB,KAAd0G,EAAO,GACHlK,EAAIue,GACJC,EAAM,IAAIpb,WAAWpD,EAAE,IACnBqc,IAAInS,EAAOyR,SAAS,KAExB6C,EAAM,IAAIpb,WAAWmb,IACjBlC,IAAInS,EAAOyR,SAAS,EAAG4C,EAAQ,SAEpC,GAAkB,KAAdrU,EAAO,GACVlK,GAAKue,GACLC,EAAM,IAAIpb,WAAWpD,EAAE,IACnBqc,IAAInS,EAAOyR,SAAS,MAExB6C,EAAM,IAAIpb,WAAWmb,IACjBlC,IAAI/C,IACRiF,GAAWjF,GAAK9V,OAChBgb,EAAInC,IAAInS,EAAOyR,SAAS3b,EAAIue,GAAUjF,GAAK9V,aAE5C,CACHgb,EAAM,IAAIpb,WAAWmb,GACrB,IAAIE,EAAM/b,EAAkBwH,EAAQ,IACpCsU,EAAInC,IAAI9C,IACR,IAAImF,EAAQnF,GAAI/V,OAEZxD,GADJue,GAAWhF,GAAI/V,OAAS8V,GAAK9V,OAASgW,GAAIhW,UACd,IAATib,GACfD,EAAInC,IAAInS,EAAQwU,GAChBA,GAASxU,EAAO1G,UAEH,IAATib,IAAYze,EAAIye,GAChBze,EAAIue,IAASve,EAAIue,GACrBC,EAAInC,IAAInS,EAAOyR,SAAS,EAAG3b,GAAI0e,GAC/BA,GAAS1e,EACTwe,EAAInC,IAAI/C,GAAMoF,GACdA,GAASpF,GAAK9V,QAElBgb,EAAInC,IAAI7C,GAAKkF,GACbA,GAASlF,GAAIhW,OACbgb,EAAMA,EAAI7C,SAAS,EAAG+C,GAE1B,OAAOF,GA2aXhf,EAAOD,QAAQka,eAAoBA,GACnCja,EAAOD,QAAQof,YAnGK,SAAShH,GACzB,IAAI5B,EAAI,EACR,GAAI4B,EAAI,EAAG,OAAOA,EAClB,KAAOA,GAAM,KACTA,EAAKA,EAAI,IAAQ,EACjB5B,GAAK,EAET,KAAO4B,GAAM,IACTA,EAAKA,EAAI,GAAM,EACf5B,IAEJ,OAASA,EAAE,GAAM,EAAM4B,EAAI,GAyF/BnY,EAAOD,QAAQqc,iBAAoBA,GACnCpc,EAAOD,QAAQic,kBAAoBA,GACnChc,EAAOD,QAAQqf,aA7PM,SAAS9c,EAAGtB,GAC7B,IAAIqe,EAnCU,SAAS/c,GAMvB,IALA,IAGIiY,EAHAha,EAAI,EACJuD,EAAI,EACJwb,GAAQ,EAGLnI,EAAS7U,EAAE/B,KAAKA,IAGvB,IAFKga,EAAgB,KAATjY,EAAE/B,IAAuCA,IACnC,KAAT+B,EAAE/B,IAAqCA,IACnC,KAAT+B,EAAE/B,IAAmD,MAAX+B,EAAE/B,EAAE,IAAmD,KAAX+B,EAAE/B,EAAE,GAO1F,KAAOA,EAAI+B,EAAE0B,QAAUiT,EAAS3U,EAAE/B,IAAKA,IAAK,CACxC,IAAIM,EAAIyB,EAAE/B,GAAK,GACf,GAAIuD,GAAKyX,KAAYzX,EAAIyX,IAAW1a,EAAI2a,GAAWjB,GAC/C,OAAO,KACXzW,EAAS,GAAJA,EAASjD,EAAG,EACjBye,GAAQ,OAVZ,IADA/e,GAAK,EACEA,EAAI+B,EAAE0B,QAAUoT,EAAU9U,EAAE/B,IAAKA,IACpCuD,EAAS,GAAJA,EAASmW,GAAe3X,EAAE/B,IAAK,EACpC+e,GAAQ,EAWhB,KAAO/e,EAAI+B,EAAE0B,QAAUmT,EAAS7U,EAAE/B,KAAKA,IACvC,OAAI+e,GAAU/e,IAAM+B,EAAE0B,QAAmB,IAAT1B,EAAE/B,GAAkB,KAEzC,CACHyB,EAAkB,GAAduY,GAAOzW,EAAIA,GACfvD,EAAGA,GAMDgf,CAAUjd,GACpB,OAAY,OAAR+c,GACAre,EAAEqb,UAAUgD,EAAIrd,GACTqd,EAAI9e,EAAE,GAGD,QADZ8e,EA/DQ,SAAS/c,GAGrB,IAFA,IAAI9B,EAAI8B,EAAE0B,OACNwb,EAAQ,EACHjf,EAAE,EAAGA,EAAEC,EAAGD,IAAK,CACpB,IAAI2D,EAAI5B,EAAE/B,GACV,IAA2B,IAAvB4a,GAAOlX,QAAQC,GAAW,CAC1Bsb,EAAQtb,EACR,OAGR,IAAIxC,EAAO0Z,GAAMoE,GACjB,MAAa,MAAT9d,EACO,KACD4Y,GAAWhY,EAAGZ,GAkDd+d,CAAQnd,KAEVtB,EAAEsb,YAAY+C,EAAIrd,GACXqd,EAAI9e,EAAE,GAEN,GAmPnBP,EAAOD,QAAQ0b,cAAoBA,GACnCzb,EAAOD,QAAQma,aAAoBA,GACnCla,EAAOD,QAAQ4d,SAAoBA,GACnC3d,EAAOD,QAAQ2f,UA3iBG,SAAS5I,EAAGsB,GAC1BtB,EAAE+B,MAAM/B,EAAEiF,OAAS,IAAInE,GAAOQ,EAAGP,KAAMO,EAAG5W,QA2iB9CxB,EAAOD,QAAQ4f,aAziBM,SAAS7I,EAAG8B,GAC7B9B,EAAE+B,MAAM/B,EAAEiF,OAAS,IAAInE,GAAOhQ,EAAagR,IAyiB/C5Y,EAAOD,QAAQ6f,UAtiBG,SAAS9I,EAAG6B,EAAQkH,GAClC/I,EAAE+B,MAAMF,GAAQmH,QAAQhJ,EAAE+B,MAAMgH,KAsiBpC7f,EAAOD,QAAQggB,SAniBE,SAASjJ,EAAG6B,EAAQqH,GACjClJ,EAAE+B,MAAMF,GAAQmH,QAAQE,IAmiB5BhgB,EAAOD,QAAQ2Y,YAAoBA,mICtD/BuH,EA2CAC,EAjzBAxL,EACAlS,EAAQ,GADRkS,kBA4EAlS,EAAQ,GAzERoJ,eACA9C,gBACAZ,sBACA5B,kBACAY,iBACAC,uBACAF,aACAD,cACAI,gBACAC,gBACAC,eACAb,oBACA0D,cACA+B,iBACAE,gBACAE,aACAE,mBACAG,eACAC,aACAC,oBACAE,cACAI,iBACAM,gBACAE,qBACAC,iBACAE,eACAG,eACAI,kBACAE,cACAG,iBACAE,iBACAC,gBACAI,YACAC,aACAC,iBACAC,iBACAG,aACAC,cACAE,YACAC,oBACAC,qBACAC,sBACAC,oBACAE,oBACAI,oBACAC,oBACAC,iBACAE,oBACAE,mBACAC,sBACAC,kBACAC,gBACAC,iBACAE,gBACAE,iBACAG,gBACAK,kBACAC,mBACAI,sBACAE,gBACAK,mBACAE,mBACAC,oBACAC,oBACAC,mBACAC,kBACAC,mBACAC,mBACAE,kBACAE,oBACAC,cACAC,kBACAG,oBAOA/Q,EAAQ,GAJR6D,sBACApD,mBACAI,mBACAC,mBAIE6c,GAAcvU,EAAW,EAGzBwU,GAAmB/c,GAAa,WAGhCgd,GAAoBhd,GAAa,YAEjCid,GAAiBjd,GAAa,SAI9Bkd,GAASld,GAAa,UACtBmd,GAAand,GAAa,cAE1Bic,GAAQ,IAAI1b,WAAW,GAEvB6c,GACF,SAAAA,IAAcrW,EAAAC,KAAAoW,GACVpW,KAAKyM,EAAI,KACTzM,KAAK/E,EAAIga,GACTjV,KAAKrI,EAAI,GAuCX0e,GAAqB,SAAS5J,EAAG6J,GACnC,IAAI5E,EAAMjO,EAAWgJ,GAGrB,GAFArJ,EAAYqJ,EAAGzT,GAAa,KAAMsd,GAClCxT,EAAa2J,EAAG5O,EAAmBkY,IA/BrB,SAAZQ,EAAqB9J,EAAG+J,EAAQC,GAClC,GAAc,IAAVA,IAAgBjS,EAAYiI,GAAI,GAChC,OAAO,EAIX,IAFAxG,GAAYwG,GAELvH,EAASuH,GAAI,IAAI,CACpB,GAAI3D,GAAS2D,GAAI,KAAOzP,EAAa,CACjC,GAAIuJ,GAAakG,EAAG+J,GAAS,GAEzB,OADAnR,EAAQoH,EAAG,GACJ,EACJ,GAAI8J,EAAU9J,EAAG+J,EAAQC,EAAQ,GAKpC,OAJAzP,GAAWyF,GAAI,GACf1G,EAAgB0G,EAAG,KACnB7I,EAAW6I,GAAI,GACfnK,EAAWmK,EAAG,GACP,EAGfpH,EAAQoH,EAAG,GAGf,OAAO,EAUH8J,CAAU9J,EAAGiF,EAAM,EAAG,GAAI,CAC1B,IAAIjb,EAAOkS,GAAa8D,GAAI,GAU5B,OATgB,KAAZhW,EAAK,IACO,KAAZA,EAAK,IACO,KAAZA,EAAK,KAEL0P,GAAesG,EAAGhW,EAAKqb,SAAS,IAChC9K,GAAWyF,GAAI,IAEnBlK,EAASkK,GAAI,EAAGiF,EAAM,GACtBrM,EAAQoH,EAAG,GACJ,EAGP,OADA7E,GAAW6E,EAAGiF,GACP,GAITgF,GAAe,SAASjK,EAAG6J,GACzBD,GAAmB5J,EAAG6J,IACtB7Q,EAAgBgH,EAAGzT,GAAa,iBAAkB2P,GAAa8D,GAAI,IACnEzF,GAAWyF,GAAI,IAEa,IAAvB6J,EAAGnW,SAASxG,OACjB8L,EAAgBgH,EAAGzT,GAAa,WAAYsd,EAAGnW,SAAUmW,EAAG7f,MACvD6f,EAAGlW,MAAuB,MAAfkW,EAAGlW,KAAK,GACxB2F,EAAgB0G,EAAG,cACd6J,EAAGlW,MAAuB,KAAfkW,EAAGlW,KAAK,GACxBqF,EAAgBgH,EAAGzT,GAAa,oBAAqBsd,EAAGzV,UAAWyV,EAAG/V,aAEtEwF,EAAgB0G,EAAG,MA8CrBkK,GAAQ,SAASlK,GACnB,IAAIJ,EAAM,gDAAkDhE,GAAeoE,GAAI,GAAK,IACpF,MAAM,IAAI1S,MAAMsS,IAGduK,GAAgB,SAASnK,EAAGoK,EAAKC,GACnC,IAAIR,EAAK,IAAIxW,EAEb,OAAKyD,EAAakJ,EAAG,EAAG6J,IAGxBlT,EAAYqJ,EAAGzT,GAAa,KAAMsd,GAE9B1d,GAAa0d,EAAGnW,SAAUnH,GAAa,YAE3B,MADZ6d,EAEWE,GAAWtK,EAAGzT,GAAa,iCAAkCsd,EAAG7f,KAAMqgB,IAGrE,OAAZR,EAAG7f,OACH6f,EAAG7f,KAAO4f,GAAmB5J,EAAG6J,GAAM3N,GAAa8D,GAAI,GAAKzT,GAAa,MAEtE+d,GAAWtK,EAAGzT,GAAa,iCAAkC6d,EAAKP,EAAG7f,KAAMqgB,KAbvEC,GAAWtK,EAAGzT,GAAa,yBAA0B6d,EAAKC,IAgBnEE,GAAY,SAASvK,EAAGoK,EAAKI,GAC/B,IAAIC,EAEAA,EADAC,GAAkB1K,EAAGoK,EAAKX,MAAYlZ,EAC5B2L,GAAa8D,GAAI,GACtB3D,GAAS2D,EAAGoK,KAAS/Z,EAChB9D,GAAa,kBAAkB,GAE/Boe,GAAc3K,EAAGoK,GAE/B,IAAIxK,EAAM5G,EAAgBgH,EAAGzT,GAAa,uBAAwBie,EAAOC,GACzE,OAAON,GAAcnK,EAAGoK,EAAKxK,IAG3BgL,GAAa,SAAS5K,EAAGgK,GAC3B,IAAIH,EAAK,IAAIxW,EACTyD,EAAakJ,EAAGgK,EAAOH,KACvBlT,EAAYqJ,EAAGzT,GAAa,MAAM,GAAOsd,GACrCA,EAAGhW,YAAc,GACjBmF,EAAgBgH,EAAGzT,GAAa,WAAYsd,EAAGzV,UAAWyV,EAAGhW,aAIrE6F,GAAesG,EAAGzT,GAAa,MAG7B+d,GAAa,SAAStK,EAAGmF,GAC3ByF,GAAW5K,EAAG,GAD2B,QAAAmG,EAAA3Y,UAAAN,OAANkY,EAAM,IAAA/W,MAAA8X,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANhB,EAAMgB,EAAA,GAAA5Y,UAAA4Y,GAIzC,OAFAvM,GAAiBmG,EAAGmF,EAAKC,GACzBvP,EAAWmK,EAAG,GACP/J,EAAU+J,IAIf6K,GAAkB,SAAS7K,EAAG8K,EAAMC,EAAOtL,GAC7C,OAAIqL,GACAjS,EAAgBmH,EAAG,GACZ,IAEPxG,GAAYwG,GAERP,GACAuL,EAAUvL,EAAEuL,QACZC,GAASxL,EAAEwL,QAEXD,EAAU,UACVC,EAAQ,GAERF,EACA/R,EAAgBgH,EAAGzT,GAAa,UAAWwe,EAAOxe,GAAaye,IAE/DtR,GAAesG,EAAGzT,GAAaye,IACnC9R,EAAgB8G,EAAGiL,GACZ,GAbP,IAAID,EAASC,GAyCfC,GAAoB,SAASlL,EAAG9U,GAClC,OAAOmL,EAAa2J,EAAG5O,EAAmBlG,IAqBxCigB,GAAiB,SAASnL,EAAGoL,EAAIZ,GACnC,IAAIjf,EAAI6Q,GAAe4D,EAAGoL,GAC1B,OAAU,OAAN7f,GACIsL,EAAiBmJ,EAAGoL,IACpBF,GAAkBlL,EAAGwK,GAChB1Q,GAAakG,GAAI,GAAI,KACtBzU,EAAI,MACRqN,EAAQoH,EAAG,GACJzU,GAGR,MAiBL8f,GAAY,SAASrL,EAAGoK,EAAKkB,GAC/Bf,GAAUvK,EAAGoK,EAAK9N,GAAa0D,EAAGsL,KAUhCX,GAAgB,SAAS3K,EAAGvW,GAC9B,OAAO6S,GAAa0D,EAAG3D,GAAS2D,EAAGvW,KAiBjC8hB,GAAoB,SAASvL,EAAGoK,GAClC,IAAI5e,EAAIqQ,GAAcmE,EAAGoK,GAEzB,OADI5e,SAA+B6f,GAAUrL,EAAGoK,EAAK7Z,GAC9C/E,GAGLggB,GAAmBD,GAEnBE,GAAkB,SAASzL,EAAGoK,EAAKsB,GACrC,OAAIrP,GAAS2D,EAAGoK,IAAQ,EACL,OAARsB,EAAe,KAAOnc,GAAgBmc,GACnCH,GAAkBvL,EAAGoK,IAGjCuB,GAAiBF,GASjBG,GAAmB,SAAS5L,EAAGoK,GACjC,IAAIrgB,EAAIgS,GAAciE,EAAGoK,GAGzB,OAFU,IAANrgB,GACAshB,GAAUrL,EAAGoK,EAAK9Z,GACfvG,GAOL8hB,GAAoB,SAAS7L,EAAGoK,GAClC,IAAIrgB,EAAI4R,GAAeqE,EAAGoK,GAG1B,OAFU,IAANrgB,GApBS,SAASiW,EAAGoK,GACrBxS,EAAaoI,EAAGoK,GAChBD,GAAcnK,EAAGoK,EAAK7d,GAAa,wCAAwC,IAE3E8e,GAAUrL,EAAGoK,EAAK9Z,GAiBlBwb,CAAS9L,EAAGoK,GACTrgB,GAOLgiB,GAAoB,SAASC,EAAGC,GAClC,IAAIC,EAASF,EAAE9gB,EAAI+gB,EACnB,GAAID,EAAExd,EAAEtB,OAASgf,EAAQ,CACrB,IAAIC,EAAUxd,KAAKyd,IAAiB,EAAbJ,EAAExd,EAAEtB,OAAYgf,GACnCG,EAAU,IAAIvf,WAAWqf,GAC7BE,EAAQtG,IAAIiG,EAAExd,GACdwd,EAAExd,EAAI6d,EAEV,OAAOL,EAAExd,EAAE6W,SAAS2G,EAAE9gB,EAAGghB,IAGvBI,GAAgB,SAAStM,EAAGgM,GAC9BA,EAAEhM,EAAIA,EACNgM,EAAExd,EAAIga,IAYJ+D,GAAkB,SAASP,EAAGxgB,EAAG9B,GAC/BA,EAAI,IACJ8B,EAAI+D,GAAgB/D,GACZugB,GAAkBC,EAAGtiB,GAC3Bqc,IAAIva,EAAE6Z,SAAS,EAAG3b,IACpB8iB,GAAaR,EAAGtiB,KAIlB+iB,GAAiB,SAAST,EAAGxgB,GAC/BA,EAAI+D,GAAgB/D,GACpB+gB,GAAgBP,EAAGxgB,EAAGA,EAAE0B,SAGtBwf,GAAkB,SAASV,GAC7BzS,EAAgByS,EAAEhM,EAAGgM,EAAExd,EAAGwd,EAAE9gB,GAE5B8gB,EAAE9gB,EAAI,EACN8gB,EAAExd,EAAIga,IAQJgE,GAAe,SAASR,EAAGxgB,GAC7BwgB,EAAE9gB,GAAKM,GAeLmhB,GAAW,SAAS3M,EAAG0C,EAAGxX,EAAGnB,GAC/B,OAAOsS,GAAS2D,EAAG9U,IAAM,EAAInB,EAAI2Y,EAAE1C,EAAG9U,IAGpC0hB,GAAO,SAAS5M,EAAGoL,GACrB,IAAI5f,EAAI4f,EAAGyB,OAEX,OADAzB,EAAGyB,OAAS,KACLrhB,GAGLshB,GAAmB,SAAS9M,EAAGqD,EAAMR,EAAM7Y,EAAMY,GACnD,OAAOwN,EAAS4H,EAAG4M,GAAM,CAACC,OAAQxJ,GAAOrZ,EAAMY,IAG7CmiB,GAAkB,SAAS/M,EAAGxU,EAAGygB,EAAI/gB,GACvC,OAAO4hB,GAAiB9M,EAAGxU,EAAGygB,EAAI/gB,EAAG,OAGnC8hB,GAAkB,SAAShN,EAAGxU,GAChC,OAAOuhB,GAAgB/M,EAAGxU,EAAGA,EAAE0B,OAAQ1B,IAOrCkf,GAAoB,SAAS1K,EAAG4E,EAAKpR,GACvC,GAAKqD,EAAiBmJ,EAAG4E,GAEpB,CACDlL,GAAesG,EAAGxM,GAClB,IAAIyZ,EAAKlT,GAAWiG,GAAI,GAKxB,OAJIiN,IAAO9c,EACPyI,EAAQoH,EAAG,GAEXzF,GAAWyF,GAAI,GACZiN,EARP,OAAO9c,GAYT+c,GAAgB,SAASlN,EAAG4E,EAAKpR,GAEnC,OADAoR,EAAMxP,EAAa4K,EAAG4E,GAClB8F,GAAkB1K,EAAG4E,EAAKpR,KAAWrD,IAGzCyJ,GAAcoG,EAAG4E,GACjBpP,EAASwK,EAAG,EAAG,IAER,IAYLmN,GAAM5gB,GAAa,MACnB6gB,GAAM7gB,GAAa,MA8DnB8gB,GAAgB,SAASC,EAAKC,EAAQC,GACxC,IAAI/jB,EAAI+jB,IAAe,EACnBC,EAAKF,EAAOrgB,OACZxD,EAAI4jB,EAAIpgB,OAAS,EAAIugB,EAEzBC,EAAM,KAAOjkB,EAAIC,EAAGD,IAAK,CACrB,IAAK,IAAIkkB,EAAI,EAAGA,EAAIF,EAAIE,IACpB,GAAIL,EAAI7jB,EAAEkkB,KAAOJ,EAAOI,GACpB,SAASD,EACjB,OAAOjkB,EAEX,OAAQ,GAqBNmkB,GAAmB,SAAS5N,EAAG6N,EAAK9C,GACtC,OAAI1U,EAAa2J,EAAG6N,EAAK9C,KAAWva,IAGhCoI,EAAQoH,EAAG,GACX6N,EAAMzY,EAAa4K,EAAG6N,GACtBvV,EAAa0H,GACbpG,GAAcoG,GAAI,GAClBpF,GAAaoF,EAAG6N,EAAK9C,IACd,IAST+C,GAAgB,SAAS9N,EAAGtW,EAAGqkB,GAEjC,IAAK,IAAIC,KADTC,GAAgBjO,EAAG+N,EAAKxhB,GAAa,qBAAqB,IAC1C7C,EAAG,CACf,IAAK,IAAID,EAAI,EAAGA,EAAIskB,EAAKtkB,IACrBmQ,GAAcoG,GAAI+N,GACtBjV,EAAiBkH,EAAGtW,EAAEskB,GAAMD,GAC5BnT,GAAaoF,IAAK+N,EAAM,GAAIxhB,GAAayhB,IAE7CpV,EAAQoH,EAAG+N,IAUTE,GAAkB,SAASjO,EAAGkO,EAAOtO,GAClClK,EAAesK,EAAGkO,KACftO,EACA0K,GAAWtK,EAAGzT,GAAa,uBAAwBqT,GAEnD0K,GAAWtK,EAAGzT,GAAa,kBAAkB,MAiDnD4hB,GAAU,SAASnO,EAAGrM,EAAMya,EAAYC,GAC1C,IAAIC,EAAOD,EAAMrD,QACbuD,EAAWrS,GAAa8D,EAAGoO,GAAY/I,SAAS,GAGpD,OAFArM,EAAgBgH,EAAGzT,GAAa,oBAAqBA,GAAaoH,GAAO4a,EAAUhiB,GAAa+hB,IAChG/T,GAAWyF,EAAGoO,GACP/E,IAKLmF,GAAW,CAAC,IAAM,IAAM,KAsBxBC,GAAc,SAASC,GACzB,IAAI5kB,EAtBQ,SAAS4kB,GAErB,IAAI5kB,EADJ4kB,EAAGxjB,EAAI,EAEP,IAAIK,EAAI,EACR,EAAG,CAEC,GAAU,QADVzB,EAAIqf,EAAKuF,KACS5kB,IAAM0kB,GAASjjB,GAAI,OAAOzB,EAC5CyB,IACAmjB,EAAGrL,KAAKqL,EAAGxjB,KAAOpB,QACbyB,EAAIijB,GAASthB,QAEtB,OADAwhB,EAAGxjB,EAAI,EACAie,EAAKuF,GAWJC,CAAQD,GAChB,GAAU,KAAN5kB,EAAkC,CAClC,GACIA,EAAIqf,EAAKuF,SACJ5kB,GAAW,KAANA,GAEd,MAAO,CACH8kB,SAAS,EACT9kB,EAAGqf,EAAKuF,IAGZ,MAAO,CACHE,SAAS,EACT9kB,EAAGA,IAQL+kB,GACF,SAAAA,IAAcvb,EAAAC,KAAAsb,GACVtb,KAAKrI,EAAIuI,IACTF,KAAKmP,EAAI,KACTnP,KAAK8P,KAAO,IAAIvW,WAAW,MAC3ByG,KAAKub,IAAM,EACXvb,KAAKwb,SAAM,GAIbC,GAAO,SAAShP,EAAGoL,GACrB,IAAIsD,EAAKtD,EAET,GAAa,OAATsD,EAAGhM,GAAcgM,EAAGxjB,EAAI,EAAG,CAC3B,IAAI+jB,EAAQP,EAAGxjB,EAGf,OAFAwjB,EAAGxjB,EAAI,EACPwjB,EAAGhM,EAAIgM,EAAGhM,EAAE2C,SAASqJ,EAAGI,KACjBJ,EAAGrL,KAAKgC,SAAS,EAAG4J,GAG/B,IAAIvM,EAAIgM,EAAGhM,EAEX,OADAgM,EAAGhM,EAAI,KACAA,GAGXyG,EAAO,SAASuF,GACZ,OAAOA,EAAGI,IAAMJ,EAAGhM,EAAExV,OAASwhB,EAAGhM,EAAEgM,EAAGI,OAAS,MAGnD1F,EAAiB,SAASpJ,EAAGuO,EAAU3jB,GACnC,IAAI8jB,EAAK,IAAIG,GACTT,EAAapX,EAAWgJ,GAAK,EACjC,GAAiB,OAAbuO,EACA,MAAM,IAAIjhB,MAAM,mCAEhB0L,EAAgBgH,EAAGzT,GAAa,OAAQgiB,GACxC,IAAIW,EAAO1iB,GAAa+hB,GACpBY,EAAM,IAAIC,eAUd,GATAD,EAAIE,KAAK,MAAOH,GAAM,GAKA,oBAAX7lB,SACP8lB,EAAIG,aAAe,eAEvBH,EAAII,SACAJ,EAAIK,QAAU,KAAOL,EAAIK,QAAU,KAQnC,OADAd,EAAGK,IAAMI,EAAIK,OACNrB,GAAQnO,EAAG,OAAQoO,EAAY,CAAEpD,QAAO,GAAArN,OAAKwR,EAAIK,OAAT,MAAA7R,OAAoBwR,EAAIM,cAP3C,iBAAjBN,EAAIO,SACXhB,EAAGhM,EAAInW,GAAa4iB,EAAIO,UAExBhB,EAAGhM,EAAI,IAAI5V,WAAWqiB,EAAIO,UAOtC,IAAIC,EAAMlB,GAAYC,GAElBiB,EAAI7lB,IAAM0F,EAAc,IAAM+e,GAEvBoB,EAAIf,UACXF,EAAGrL,KAAKqL,EAAGxjB,KAAO,IAER,OAAVykB,EAAI7lB,IACJ4kB,EAAGrL,KAAKqL,EAAGxjB,KAAOykB,EAAI7lB,GAC1B,IAAI0lB,EAASpX,EAAS4H,EAAGgP,GAAMN,EAAIxS,GAAa8D,GAAI,GAAIpV,GACpDglB,EAAalB,EAAGK,IACpB,OAAIa,GACAzU,GAAW6E,EAAGoO,GACPD,GAAQnO,EAAG,OAAQoO,EAAYwB,KAE1CrV,GAAWyF,EAAGoO,GACPoB,IAmFf,IAAMK,GAAgB,SAAS7P,EAAGuO,GAC9B,OAAOnF,EAAepJ,EAAGuO,EAAU,OAyBjCuB,GAAqB,SAAS9P,EAAG+P,EAAK9D,GACxC,IAAI7e,EAAIqP,GAAYuD,GA74BD,IA84BfiM,GACA3B,GAAWtK,EAAGzT,GAAa,qDAC3Ba,GAAKqP,GAAY,MACjB6N,GAAWtK,EAAGzT,GAAa,8BACtBa,IAAM2iB,GACXzF,GAAWtK,EAAGzT,GAAa,yDAA0DwjB,EAAK3iB,IAQlGlE,EAAOD,QAAQogB,YAAuBA,GACtCngB,EAAOD,QAAQugB,eAAuBA,GACtCtgB,EAAOD,QAAQqgB,iBAAuBA,GACtCpgB,EAAOD,QAAQ+mB,WAlSK,EAmSpB9mB,EAAOD,QAAQsgB,kBAAuBA,GACtCrgB,EAAOD,QAAQgnB,YAnSI,EAoSnB/mB,EAAOD,QAAQ0gB,YAAuBA,GACtCzgB,EAAOD,QAAQinB,aA7gBM,SAASlE,EAAGliB,GAC7BiiB,GAAkBC,EAAG,GACrBA,EAAExd,EAAEwd,EAAE9gB,KAAOpB,GA4gBjBZ,EAAOD,QAAQsjB,gBAAuBA,GACtCrjB,EAAOD,QAAQujB,aAAuBA,GACtCtjB,EAAOD,QAAQwjB,eAAuBA,GACtCvjB,EAAOD,QAAQknB,cAngBO,SAASnE,GAC3B,IAAIhM,EAAIgM,EAAEhM,EACNxU,EAAI0Q,GAAa8D,GAAI,GACzBuM,GAAgBP,EAAGxgB,EAAGA,EAAE0B,QACxB0L,EAAQoH,EAAG,IAggBf9W,EAAOD,QAAQmnB,cA3nBO,SAASpQ,EAAGqQ,EAAMjG,EAAKC,GACpCgG,GAAMlG,GAAcnK,EAAGoK,EAAKC,IA2nBrCnhB,EAAOD,QAAQkhB,cAAuBA,GACtCjhB,EAAOD,QAAQqjB,cAAuBA,GACtCpjB,EAAOD,QAAQqnB,kBAnjBW,SAAStQ,EAAGgM,EAAGC,GAErC,OADAK,GAActM,EAAGgM,GACVD,GAAkBC,EAAGC,IAkjBhC/iB,EAAOD,QAAQikB,cAAuBA,GACtChkB,EAAOD,QAAQsnB,cA5nBO,SAASvQ,EAAGoK,GAC1B/N,GAAS2D,EAAGoK,KAASla,GACrBia,GAAcnK,EAAGoK,EAAK7d,GAAa,kBAAkB,KA2nB7DrD,EAAOD,QAAQ4iB,kBAAuBA,GACtC3iB,EAAOD,QAAQsiB,kBAAuBA,GACtCriB,EAAOD,QAAQ2iB,iBAAuBA,GACtC1iB,EAAOD,QAAQunB,iBA3pBU,SAASxQ,EAAGoK,EAAKsB,EAAK+E,GAE3C,IADA,IAAIzmB,EAAe,OAAR0hB,EAAeC,GAAe3L,EAAGoK,EAAKsB,GAAOF,GAAiBxL,EAAGoK,GACnE3gB,EAAI,EAAGgnB,EAAIhnB,GAAIA,IACpB,GAAI0C,GAAaskB,EAAIhnB,GAAIO,GACrB,OAAOP,EACf,OAAO0gB,GAAcnK,EAAGoK,EAAKpR,EAAgBgH,EAAGzT,GAAa,uBAAwBvC,KAupBzFd,EAAOD,QAAQglB,gBAAuBA,GACtC/kB,EAAOD,QAAQuiB,iBAAuBA,GACtCtiB,EAAOD,QAAQynB,eA9nBQ,SAAS1Q,EAAGoK,EAAKzf,GAChC0R,GAAS2D,EAAGoK,KAASzf,GACrB0gB,GAAUrL,EAAGoK,EAAKzf,IA6nB1BzB,EAAOD,QAAQ0nB,gBArqBS,SAAS3Q,EAAGoL,EAAIZ,GACpC,IAAIjf,EAAI4f,GAAenL,EAAGoL,EAAIZ,GAE9B,OADU,OAANjf,GAAYgf,GAAUvK,EAAGoL,EAAIZ,GAC1Bjf,GAmqBXrC,EAAOD,QAAQ2nB,kBA9BW,SAAS5Q,GAC/B8P,GAAmB9P,EAAGrQ,EAx5BH,KAs7BvBzG,EAAOD,QAAQ6mB,mBAAuBA,GACtC5mB,EAAOD,QAAQ4nB,YAjEK,SAAS7Q,EAAGuO,GAC5B,OAAQsB,GAAc7P,EAAGuO,IAAa7V,EAAUsH,EAAG,EAAGhO,EAAa,IAiEvE9I,EAAOD,QAAQ6nB,cAxfO,SAAS9Q,EAAGxU,GAC9B,OAAQwhB,GAAgBhN,EAAGxU,IAAMkN,EAAUsH,EAAG,EAAGhO,EAAa,IAwflE9I,EAAOD,QAAQqhB,WAAuBA,GACtCphB,EAAOD,QAAQ8nB,gBAtuBS,SAAS/Q,EAAGP,GAChC,IAAI9L,EAAMmX,EACV,GAAU,OAANrL,EAIA,OAHA5G,EAAgBmH,EAAG,GACnB1G,EAAgB0G,EAAG,QACnB9G,EAAgB8G,EAAG,GACZ,EACJ,GAAIP,EAAE+P,OACT7b,EAAO,OACPmX,EAAOrL,EAAE+P,WACN,KAAI/P,EAAEuR,OAKT,OAAOnG,GAAgB7K,EAAG,EAAG,KAAMP,GAJnC9L,EAAO,SACPmX,EAAOrL,EAAEuR,OAQb,OAHAxX,GAAYwG,GACZ1G,EAAgB0G,EAAGrM,GACnBuF,EAAgB8G,EAAG8K,GACZ,GAmtBX5hB,EAAOD,QAAQ4hB,gBAAuBA,GACtC3hB,EAAOD,QAAQyhB,kBAAuBA,GACtCxhB,EAAOD,QAAQiiB,kBAAuBA,GACtChiB,EAAOD,QAAQ2kB,iBAAuBA,GACtC1kB,EAAOD,QAAQgoB,UA5YG,SAASjR,EAAGxU,EAAGD,EAAGhB,GAChC,IAAI2mB,EACA1iB,EAAI,IAAImb,GAEZ,IADA2C,GAActM,EAAGxR,IACT0iB,EAAO7D,GAAc7hB,EAAGD,KAAO,GACnCghB,GAAgB/d,EAAGhD,EAAG0lB,GACtBzE,GAAeje,EAAGjE,GAClBiB,EAAIA,EAAE6Z,SAAS6L,EAAO3lB,EAAE2B,QAI5B,OAFAuf,GAAeje,EAAGhD,GAClBkhB,GAAgBle,GACT0N,GAAa8D,GAAI,IAkY5B9W,EAAOD,QAAQkoB,SAneE,SAASnR,EAAG6N,GACzB1V,EAAQ6H,EAAG6N,GACX,IAAInkB,EAAIiS,GAAeqE,GAAI,GAI3B,OAHU,IAANtW,GACA4gB,GAAWtK,EAAGzT,GAAa,mCAAmC,IAClEqM,EAAQoH,EAAG,GACJtW,GA8dXR,EAAOD,QAAQ8jB,gBAAuBA,GACtC7jB,EAAOD,QAAQ6jB,iBAAuBA,GACtC5jB,EAAOD,QAAQ4mB,cAAuBA,GACtC3mB,EAAOD,QAAQmgB,eAAuBA,EACtClgB,EAAOD,QAAQ+jB,gBAAuBA,GACtC9jB,EAAOD,QAAQmoB,YAhVK,SAASpR,EAAGtW,GAC5BqM,EAAgBiK,GAChB8N,GAAc9N,EAAGtW,EAAG,IA+UxBR,EAAOD,QAAQooB,iBArVU,SAASrR,GAC9BjK,EAAgBiK,IAqVpB9W,EAAOD,QAAQqoB,kBAztBW,SAAStR,EAAGwK,GAClC,OAAIU,GAAkBlL,EAAGwK,KAAWra,EACzB,GACXyI,EAAQoH,EAAG,GACXjK,EAAgBiK,EAAG,EAAG,GACtBtG,GAAesG,EAAGwK,GAClB5P,GAAaoF,GAAI,EAAGyJ,IACpB7P,GAAcoG,GAAI,GAClBpF,GAAaoF,EAAG5O,EAAmBoZ,GAC5B,IAitBXthB,EAAOD,QAAQsoB,cAxqBO,WAClB,IAAIvR,EAAI3H,IAER,OADI2H,GAAG1K,EAAY0K,EAAGkK,IACflK,GAsqBX9W,EAAOD,QAAQ0jB,SAAuBA,GACtCzjB,EAAOD,QAAQuoB,gBAxmBS,SAASxR,EAAGoK,EAAKsB,GACrC,OAAOiB,GAAS3M,EAAG6L,GAAmBzB,EAAKsB,IAwmB/CxiB,EAAOD,QAAQwiB,gBAAuBA,GACtCviB,EAAOD,QAAQwoB,eArnBQ,SAASzR,EAAGoK,EAAKsB,GACpC,OAAOiB,GAAS3M,EAAG4L,GAAkBxB,EAAKsB,IAqnB9CxiB,EAAOD,QAAQ0iB,eAAuBA,GACtCziB,EAAOD,QAAQyoB,gBAnlBS,SAAS1F,GAC7B,OAAOD,GAAkBC,EAAGpO,IAmlBhC1U,EAAOD,QAAQ8iB,kBAAuBA,GACtC7iB,EAAOD,QAAQyjB,gBAAuBA,GACtCxjB,EAAOD,QAAQ0oB,oBApjBa,SAAS3F,EAAGC,GACpCO,GAAaR,EAAGC,GAChBS,GAAgBV,IAmjBpB9iB,EAAOD,QAAQ2oB,SApVE,SAAS5R,EAAGrV,GACzB,IAAIknB,EACJ,OAAIpa,EAAUuI,GAAI,IACdpH,EAAQoH,EAAG,IALA,IAQfrV,EAAIyK,EAAa4K,EAAGrV,GACpBqP,GAAYgG,EAAGrV,EAAG,GAClBknB,EAAMnW,GAAcsE,GAAI,GACxBpH,EAAQoH,EAAG,GACC,IAAR6R,GACA7X,GAAYgG,EAAGrV,EAAGknB,GAClBzX,GAAY4F,EAAGrV,EAAG,IAGlBknB,EAAM3X,GAAW8F,EAAGrV,GAAK,EAC7ByP,GAAY4F,EAAGrV,EAAGknB,GACXA,IAoUX3oB,EAAOD,QAAQ6oB,cAjcO,SAAS9R,EAAG+R,EAASC,EAAOC,GAC9CrE,GAAiB5N,EAAG5O,EAAmBkY,IACvCjT,EAAa2J,GAAI,EAAG+R,GACfvW,GAAcwE,GAAI,KACnBpH,EAAQoH,EAAG,GACXjH,EAAkBiH,EAAGgS,GACrBtY,GAAesG,EAAG+R,GAClBvc,EAASwK,EAAG,EAAG,GACfpG,GAAcoG,GAAI,GAClBpF,GAAaoF,GAAI,EAAG+R,IAExBxX,GAAWyF,GAAI,GACXiS,IACArY,GAAcoG,GAAI,GAClBnF,GAAcmF,EAAG+R,KAobzB7oB,EAAOD,QAAQ6kB,cAAuBA,GACtC5kB,EAAOD,QAAQipB,kBA1tBW,SAASlS,EAAGwK,GAClCU,GAAkBlL,EAAGwK,GACrBvP,GAAiB+E,GAAI,IAytBzB9W,EAAOD,QAAQkiB,eAAuBA,GACtCjiB,EAAOD,QAAQkpB,eAhfQ,SAASnS,EAAG6N,GAC/B,GAAIX,GAAclN,EAAG6N,EAAKnE,IACjB5R,EAAakI,GAAI,IAClBsK,GAAWtK,EAAGzT,GAAa,2CAG/B,OADQ8P,GAAS2D,EAAG6N,IAEhB,KAAKvd,EACGiH,EAAcyI,EAAG6N,GACjB7U,EAAgBgH,EAAGmN,GAAKzR,GAAcsE,EAAG6N,IAEzC7U,EAAgBgH,EAAGoN,GAAKtR,GAAakE,EAAG6N,IAC5C,MAEJ,KAAKtd,EACDqJ,GAAcoG,EAAG6N,GACjB,MACJ,KAAKzd,EACDkJ,EAAgB0G,EAAIxE,GAAcwE,EAAG6N,GAAO,OAAS,SACrD,MACJ,KAAK1d,EACDmJ,EAAgB0G,EAAG,OACnB,MACJ,QACI,IAAIiN,EAAKvC,GAAkB1K,EAAG6N,EAAKpE,IAC/B2I,EAAOnF,IAAO1c,EAAc2L,GAAa8D,GAAI,GAAK2K,GAAc3K,EAAG6N,GACvE7U,EAAgBgH,EAAGzT,GAAa,UAAW6lB,EAAMpW,GAAcgE,EAAG6N,IAC9DZ,IAAO9c,GACPoK,GAAWyF,GAAI,GAM/B,OAAOnE,GAAcmE,GAAI,IA+c7B9W,EAAOD,QAAQopB,eAn3BQ,SAASrS,EAAGsS,EAAI1S,EAAKoK,GACxC,IAAIH,EAAK,IAAIxW,EACT4R,EAAMjO,EAAWgJ,GACjBuS,EAlBU,SAASvS,GAKvB,IAJA,IAAI6J,EAAK,IAAIxW,EACTmf,EAAK,EACLC,EAAK,EAEF3b,EAAakJ,EAAGyS,EAAI5I,IAAO2I,EAAKC,EAAIA,GAAM,EAEjD,KAAOD,EAAKC,GAAI,CACZ,IAAI5oB,EAAI8E,KAAK0P,OAAOmU,EAAKC,GAAI,GACzB3b,EAAakJ,EAAGnW,EAAGggB,GAAK2I,EAAK3oB,EAAI,EAChC4oB,EAAK5oB,EAEd,OAAO4oB,EAAK,EAMDC,CAAUJ,GACjB5K,EAAK6K,EAAOvI,EAAQ2I,GA3FZ,IA2F2C,EAKvD,IAJI/S,GACA5G,EAAgBgH,EAAGzT,GAAa,QAASqT,GAC7CqO,GAAgBjO,EAAG,GAAI,MACvB1G,EAAgB0G,EAAG,oBACZlJ,EAAawb,EAAItI,IAASH,IAChB,GAATnC,KACApO,EAAgB0G,EAAG,WACnBgK,EAAQuI,EAlGJ,GAkGqB,IAEzB5b,EAAY2b,EAAI/lB,GAAa,QAAQ,GAAOsd,GAC5C7Q,EAAgBgH,EAAGzT,GAAa,WAAYsd,EAAGzV,WAC3CyV,EAAGhW,YAAc,GACjByF,EAAgB0G,EAAD,GAAArC,OAAOkM,EAAGhW,YAAV,MACnByF,EAAgB0G,EAAG,QACnBiK,GAAajK,EAAG6J,GACZA,EAAG1V,YACHmF,EAAgB0G,EAAG,yBACvBnK,EAAWmK,EAAGhJ,EAAWgJ,GAAKiF,IAGtCpP,EAAWmK,EAAGhJ,EAAWgJ,GAAKiF,IA21BlC/b,EAAOD,QAAQ0hB,cAAuBA,GACtCzhB,EAAOD,QAAQ2pB,WAvUI,SAAS5S,EAAGrV,EAAGknB,GAC1BA,GAAO,IACPlnB,EAAIyK,EAAa4K,EAAGrV,GACpBqP,GAAYgG,EAAGrV,EAAG,GAClByP,GAAY4F,EAAGrV,EAAGknB,GAClB3Y,EAAgB8G,EAAG6R,GACnBzX,GAAY4F,EAAGrV,EAAG,KAkU1BzB,EAAOD,QAAQ2hB,WAAuBA,GACtC1hB,EAAOD,QAAQ4pB,qBAnGc,WACzB,IAAK,IAAIppB,EAAE,EAAGA,EAAE+D,UAAUN,OAAQzD,IAAK,CACnC,IAAIuD,EAAIQ,UAAU/D,GAGd,EAAG,CAGC,IAAIc,EAAI,uBAAuByZ,KAAKhX,GACpC8lB,QAAQzE,MAAM9jB,EAAE,IAChByC,EAAIzC,EAAE,SACK,KAANyC,yCC18BjBtB,EAAQ,GA1BR4F,iBACAG,gBACAC,qBACAC,iBACAE,iBACAC,gBACAC,iBACAC,gBACAxC,sBACAS,eACIkB,aACAD,aACAD,aACAd,iBAEJoE,cACIK,eACAE,eACAJ,eACAC,kBACAH,WACAC,cAEJpB,cACAjH,sBACAG,iBAEEyI,EAAWtJ,EAAQ,IACnBuJ,EAAWvJ,EAAQ,IACnBqnB,EAAWrnB,EAAQ,MAKrBA,EAAQ,GAHRiU,cACAD,eACAG,mBAEEmT,EAAWtnB,EAAQ,GACnBunB,EAAWvnB,EAAQ,IACnBwnB,EAAWxnB,EAAQ,IACnByJ,EAAWzJ,EAAQ,IACjBynB,EAAoBznB,EAAQ,IAA5BynB,gBACFxS,EAAWjV,EAAQ,IACjB2F,EAAkB3F,EAAQ,GAA1B2F,cACF+hB,EAAW1nB,EAAQ,IACnBgV,EAAWhV,EAAQ,IACjB2nB,EAAY3nB,EAAQ,IAApB2nB,QAEFC,EAAa,SAAStT,EAAGuT,GAC3B,GAAIvT,EAAEiF,IAAMsO,EACR,KAAOvT,EAAEiF,IAAMsO,GACXvT,EAAE+B,MAAM/B,EAAEiF,OAAS,IAAI+N,EAAQlS,OAAO3Q,EAAU,WAEpD,KAAO6P,EAAEiF,IAAMsO,UACJvT,EAAE+B,QAAQ/B,EAAEiF,MAIzBuO,EAAc,SAASxT,EAAGyT,EAASC,GAIrC,IAHA,IAAIC,EAAc3T,EAAEiF,IAGbjF,EAAEiF,IAAMyO,EAAS,GACpB1T,EAAE+B,MAAM/B,EAAEiF,OAAS,IAAI+N,EAAQlS,OAAO3Q,EAAU,MAEpD,OAAQsjB,GACJ,KAAK7e,EACDoe,EAAQpR,YAAY5B,EAAG0T,EAAQP,EAAgBnT,EAAG,sBAClD,MAEJ,KAAKlL,EACDke,EAAQpR,YAAY5B,EAAG0T,EAAQP,EAAgBnT,EAAG,4BAClD,MAEJ,QACIgT,EAAQlK,UAAU9I,EAAG0T,EAAQC,EAAc,GAInD,KAAO3T,EAAEiF,IAAMyO,EAAS,UACb1T,EAAE+B,QAAQ/B,EAAEiF,MAGrB2O,EAAiBviB,EAAgB,IAEjCwiB,EAAoB,SAAS7T,EAAGmM,GAClCzM,EAAWyM,GAAW9a,GAAiB8a,GAAWyH,GAClDlU,EAAWM,EAAE8T,YAAc9T,EAAE+B,MAAM7U,OAASiI,EAAO4e,aACnD/T,EAAE+B,MAAM7U,OAASif,EACjBnM,EAAE8T,WAAa3H,EAAUhX,EAAO4e,aAG9BC,EAAiB,SAAShU,EAAG9U,GAC/B,IAAI2X,EAAO7C,EAAE+B,MAAM7U,OACnB,GAAI2V,EAAOxR,EACP4iB,GAAWjU,EAAGlL,OACb,CACD,IAAIof,EAASlU,EAAEiF,IAAM/Z,EAAIiK,EAAO4e,YAC5B5H,EAAU,EAAItJ,EACdsJ,EAAU9a,IAAe8a,EAAU9a,GACnC8a,EAAU+H,IAAQ/H,EAAU+H,GAC5B/H,EAAU9a,GACVwiB,EAAkB7T,EAAG4T,GACrB3e,EAAO+Q,cAAchG,EAAGzT,EAAa,kBAAkB,KAGvDsnB,EAAkB7T,EAAGmM,KAI3BlG,EAAkB,SAASjG,EAAG9U,GAC5B8U,EAAE8T,WAAa9T,EAAEiF,KAAO/Z,GACxB8oB,EAAehU,EAAG9U,IAYpBipB,EAAmB,SAASnU,GAC9B,IAAIoU,EAVW,SAASpU,GAExB,IADA,IAAIqU,EAAMrU,EAAEiF,IACHqP,EAAKtU,EAAEsU,GAAW,OAAPA,EAAaA,EAAKA,EAAGC,SACjCF,EAAMC,EAAGrP,MAAKoP,EAAMC,EAAGrP,KAG/B,OADAvF,EAAW2U,GAAOrU,EAAE8T,YACbO,EAAM,EAIDG,CAAWxU,GACnByU,EAAWL,EAAQzlB,KAAK0P,MAAM+V,EAAQ,GAAK,EAAEjf,EAAO4e,YACpDU,EAAWpjB,IACXojB,EAAWpjB,GACX2O,EAAE+B,MAAM7U,OAASmE,GACjB8D,EAAOuf,YAAY1U,GAGnBoU,GAAU/iB,EAAgB8D,EAAO4e,aAAgBU,EAAWzU,EAAE+B,MAAM7U,QACpE2mB,EAAkB7T,EAAGyU,IAevBE,EAAe,SAAfA,EAAwB3U,EAAG4U,EAAKC,GAClC,IAAIC,EAAO9U,EAAE+B,MAAM6S,GAEnB,OAAOE,EAAK/T,MACR,KAAK5P,EACL,KAAKD,EACD,IAAIwR,EAAIoS,EAAK/T,OAAS5P,EAAW2jB,EAAKpqB,MAAMgY,EAAIoS,EAAKpqB,MAErDub,EAAgBjG,EAAGjO,GACnB,IAAIuiB,EAAKnf,EAAO4f,cAAc/U,GAC9BsU,EAAGU,QAAUJ,EACbN,EAAGO,SAAWA,EACdP,EAAGQ,KAAOA,EACVR,EAAGrP,IAAMjF,EAAEiF,IAAMlT,EACjB2N,EAAW4U,EAAGrP,KAAOjF,EAAE8T,YACvBQ,EAAGW,WAAa,EACZjV,EAAEkV,SAAWvjB,GACbwjB,GAAUnV,EAAG1O,GAAe,GAChC,IAAIpG,EAAIwX,EAAE1C,GACV,GAAiB,iBAAN9U,GAAkBA,EAAI,IAAQ,EAAFA,KAASA,EAC5C,MAAMoC,MAAM,4DAKhB,OAJA0H,EAAKogB,gBAAgBpV,EAAG9U,GAExBmqB,EAAarV,EAAGsU,EAAItU,EAAEiF,IAAM/Z,EAAGA,IAExB,EAEX,KAAK+F,EACD,IAAIqkB,EACA/pB,EAAIupB,EAAKpqB,MAAMa,EACfL,EAAI8U,EAAEiF,IAAM2P,EAAM,EAClBW,EAAQhqB,EAAEiqB,aAEd,GADAvP,EAAgBjG,EAAGuV,GACfhqB,EAAEkqB,UACFH,EAAOI,GAAe1V,EAAGzU,EAAGL,OACzB,CACH,KAAOA,EAAIK,EAAEoqB,UAAWzqB,IACpB8U,EAAE+B,MAAM/B,EAAEiF,OAAS,IAAI+N,EAAQlS,OAAO3Q,EAAU,MACpDmlB,EAAOV,EAAM,EAGjB,IAAIN,EAAKnf,EAAO4f,cAAc/U,GAY9B,OAXAsU,EAAGU,QAAUJ,EACbN,EAAGO,SAAWA,EACdP,EAAGQ,KAAOA,EACVR,EAAGsB,OAASN,EACZhB,EAAGrP,IAAMqQ,EAAOC,EAChBjC,EAAWtT,EAAGsU,EAAGrP,KACjBqP,EAAGuB,OAAStqB,EAAEuqB,KACdxB,EAAGyB,UAAY,EACfzB,EAAGW,WAAa9f,EAAO6gB,SACnBhW,EAAEkV,SAAWvjB,GACbskB,GAASjW,EAAGsU,IACT,EAEX,QAGI,OAFArO,EAAgBjG,EAAG,GACnBkW,GAAUlW,EAAG4U,EAAKE,GACXH,EAAa3U,EAAG4U,EAAKC,KAIlCQ,EAAe,SAASrV,EAAGsU,EAAI6B,EAAaC,GAC9C,IAAIC,EAAS/B,EAAGO,SAEZ7U,EAAEkV,UAAYpjB,EAAcD,KACxBmO,EAAEkV,SAAWpjB,GACbqjB,GAAUnV,EAAGvO,GAAc,GAC/BuO,EAAEsW,MAAQhC,EAAGC,SAASwB,WAG1B,IAAIzO,EAAMgN,EAAGU,QAGb,OAFAhV,EAAEsU,GAAKA,EAAGC,SACVvU,EAAEsU,GAAGiC,KAAO,KACLC,GAAYxW,EAAGmW,EAAa7O,EAAK8O,EAAMC,IAG5CG,GAAc,SAASxW,EAAGmW,EAAa7O,EAAK8O,EAAMC,GACpD,OAAQA,GACJ,KAAK,EACD,MACJ,KAAK,EACY,IAATD,EACApW,EAAE+B,MAAMuF,GAAKmP,cAEbzD,EAAQlK,UAAU9I,EAAGsH,EAAK6O,GAE9B,MAEJ,KAAKnkB,EACD,IAAK,IAAIvI,EAAI,EAAGA,EAAI2sB,EAAM3sB,IACtBupB,EAAQlK,UAAU9I,EAAGsH,EAAM7d,EAAG0sB,EAAc1sB,GAChD,IAAK,IAAIA,EAAEuW,EAAEiF,IAAKxb,GAAI6d,EAAM8O,EAAO3sB,WACxBuW,EAAE+B,MAAMtY,GAEnB,OADAuW,EAAEiF,IAAMqC,EAAM8O,GACP,EAEX,QACI,IAAI3sB,EACJ,GAAI4sB,GAAUD,EACV,IAAK3sB,EAAI,EAAGA,EAAI4sB,EAAQ5sB,IACpBupB,EAAQlK,UAAU9I,EAAGsH,EAAM7d,EAAG0sB,EAAc1sB,OAC7C,CACH,IAAKA,EAAI,EAAGA,EAAI2sB,EAAM3sB,IAClBupB,EAAQlK,UAAU9I,EAAGsH,EAAM7d,EAAG0sB,EAAc1sB,GAChD,KAAOA,EAAI4sB,EAAQ5sB,IACX6d,EAAI7d,GAAKuW,EAAEiF,IACXjF,EAAE+B,MAAMuF,EAAM7d,GAAK,IAAIupB,EAAQlS,OAAO3Q,EAAU,MAEhD6P,EAAE+B,MAAMuF,EAAM7d,GAAGgtB,eAOrC,IADA,IAAIlD,EAASjM,EAAM+O,EACV5sB,EAAEuW,EAAEiF,IAAKxb,GAAG8pB,EAAQ9pB,WAClBuW,EAAE+B,MAAMtY,GAEnB,OADAuW,EAAEiF,IAAMsO,GACD,GAQL4B,GAAY,SAASnV,EAAGxM,EAAOkjB,GACjC,IAAIC,EAAO3W,EAAE2W,KACb,GAAIA,GAAQ3W,EAAE4W,UAAW,CACrB,IAAItC,EAAKtU,EAAEsU,GACPrP,EAAMjF,EAAEiF,IACR4R,EAASvC,EAAGrP,IACZ4E,EAAK,IAAIxW,EACbwW,EAAGrW,MAAQA,EACXqW,EAAGhW,YAAc6iB,EACjB7M,EAAGxV,KAAOigB,EACVrO,EAAgBjG,EAAGjO,GACnBuiB,EAAGrP,IAAMjF,EAAEiF,IAAMlT,EACjB2N,EAAW4U,EAAGrP,KAAOjF,EAAE8T,YACvB9T,EAAE4W,UAAY,EACdtC,EAAGW,YAAc9f,EAAO2hB,YACxBH,EAAK3W,EAAG6J,GACRnK,GAAYM,EAAE4W,WACd5W,EAAE4W,UAAY,EACdtC,EAAGrP,IAAM4R,EACTvD,EAAWtT,EAAGiF,GACdqP,EAAGW,aAAe9f,EAAO2hB,cAI3Bb,GAAW,SAASjW,EAAGsU,GACzB,IAAIqC,EAAOrlB,EACXgjB,EAAGyB,YACEzB,EAAGC,SAASU,WAAa9f,EAAO6gB,UACnC1B,EAAGC,SAASsB,OAAOvB,EAAGC,SAASwB,UAAY,GAAGgB,QAAU9D,EAAS+D,SAASC,cACxE3C,EAAGW,YAAc9f,EAAO+hB,UACxBP,EAAOjlB,GAEXyjB,GAAUnV,EAAG2W,GAAO,GACpBrC,EAAGyB,aAGDL,GAAiB,SAAS1V,EAAGzU,EAAG4rB,GAClC,IAKI1tB,EALA2tB,EAAW7rB,EAAEoqB,UAEb0B,EAAQrX,EAAEiF,IAAMkS,EAChB7B,EAAOtV,EAAEiF,IAGb,IAAKxb,EAAI,EAAGA,EAAI2tB,GAAY3tB,EAAI0tB,EAAQ1tB,IACpCupB,EAAQpK,UAAU5I,EAAGA,EAAE+B,MAAMsV,EAAQ5tB,IACrCuW,EAAE+B,MAAMsV,EAAQ5tB,GAAGgtB,cAGvB,KAAOhtB,EAAI2tB,EAAU3tB,IACjBuW,EAAE+B,MAAM/B,EAAEiF,OAAS,IAAI+N,EAAQlS,OAAO3Q,EAAU,MAEpD,OAAOmlB,GAGLY,GAAY,SAASlW,EAAG4U,EAAKE,GAC/B,IAAIwC,EAAK3W,EAAI4W,gBAAgBvX,EAAG8U,EAAMnU,EAAImH,IAAI0P,SACzCF,EAAGG,aAAaH,IACjBriB,EAAOyiB,eAAe1X,EAAG8U,EAAMvoB,EAAa,QAAQ,IAExDymB,EAAQpK,UAAU5I,EAAGA,EAAE+B,MAAM/B,EAAEiF,IAAI,IACnC,IAAK,IAAI1Z,EAAIyU,EAAEiF,IAAI,EAAG1Z,EAAIqpB,EAAKrpB,IAC3BynB,EAAQlK,UAAU9I,EAAGzU,EAAGA,EAAE,GAC9BynB,EAAQ/J,SAASjJ,EAAG4U,EAAK0C,IAuBvBK,GAAY,SAAS3X,EAAG4U,EAAKgD,KACzB5X,EAAE6X,SAAWhY,GAdJ,SAASG,GACpBA,EAAE6X,UAAYhY,EACd5K,EAAO+Q,cAAchG,EAAGzT,EAAa,qBAAqB,IACrDyT,EAAE6X,SAAWhY,GAAkBA,GAAkB,IACtDoU,GAAWjU,EAAGlL,GAWdgjB,CAAW9X,GACV2U,EAAa3U,EAAG4U,EAAKgD,IACtBlX,EAAIqX,aAAa/X,GACrBA,EAAE6X,WAGA5D,GAAa,SAAbA,EAAsBjU,EAAGyT,GAC3B,GAAIzT,EAAEgY,SAEF,MADAhY,EAAEgY,SAASxI,OAASiE,EACdzT,EAAEgY,SAER,IAAIC,EAAIjY,EAAEqC,IAEV,GADArC,EAAEwP,OAASiE,GACPwE,EAAEC,WAAWF,SAGV,CACH,IAAI9N,EAAQ+N,EAAE/N,MAOd,MANIA,IACAsJ,EAAYxT,EAAGyT,EAASzT,EAAEiF,KACtBjF,EAAEsU,GAAGrP,IAAMjF,EAAEiF,MACbjF,EAAEsU,GAAGrP,IAAMjF,EAAEiF,KACjBiF,EAAMlK,IAEJ,IAAI1S,MAAJ,WAAAqQ,OAAqB8V,IAV3BwE,EAAEC,WAAWnW,MAAMkW,EAAEC,WAAWjT,OAASjF,EAAE+B,MAAM/B,EAAEiF,IAAM,GACzDgP,EAAWgE,EAAEC,WAAYzE,IAc/B0E,GAAuB,SAASnY,EAAG0C,EAAG0I,GACxC,IAAIgN,EAAapY,EAAE6X,QACfQ,EAAK,CACL7I,OAAQhb,EACR+f,SAAUvU,EAAEgY,UAEhBhY,EAAEgY,SAAWK,EAEb,IACI3V,EAAE1C,EAAGoL,GACP,MAAO3L,GACL,GAAI4Y,EAAG7I,SAAWhb,EAAQ,CAGtB,IAAI8jB,EAAgBtY,EAAEqC,IAAIiW,cAC1B,GAAIA,EACA,IASI,GARAD,EAAG7I,OAAShb,EAEZQ,EAAK+D,kBAAkBiH,EAAGsY,GAC1BtjB,EAAKqE,sBAAsB2G,EAAGP,GAC9B8Y,GAAiBvY,EAAGA,EAAEiF,IAAM,EAAG,GAIb,IAAdjF,EAAEwY,QAAe,CACjB,IAAIA,EAAUxY,EAAEwY,QAChBxF,EAAQpK,UAAU5I,EAAGA,EAAE+B,MAAM/B,EAAEiF,IAAM,IACrC+N,EAAQlK,UAAU9I,EAAGA,EAAEiF,IAAM,EAAGuT,GAChCD,GAAiBvY,EAAGA,EAAEiF,IAAM,EAAG,GAGnCoT,EAAG7I,OAAS9a,EACd,MAAM+jB,GACAJ,EAAG7I,SAAWhb,IAEd6jB,EAAG7I,QAAU,QAIrB6I,EAAG7I,QAAU,GAQzB,OAHAxP,EAAEgY,SAAWK,EAAG9D,SAChBvU,EAAE6X,QAAUO,EAELC,EAAG7I,QAQRkJ,GAAc,SAAS1Y,EAAGwP,GAC5B,IAAI8E,EAAKtU,EAAEsU,GAGX5U,EAAsB,OAAX4U,EAAGqE,KAA0B,IAAV3Y,EAAE4Y,KAEhClZ,EAAW4U,EAAGW,WAAa9f,EAAO0jB,aAAerJ,IAAW/a,GAExD6f,EAAGW,WAAa9f,EAAO0jB,cACvBvE,EAAGW,aAAe9f,EAAO0jB,YACzB7Y,EAAEwY,QAAUlE,EAAGwE,eAKfxE,EAAGO,WAAa7iB,GAAegO,EAAEsU,GAAGrP,IAAMjF,EAAEiF,MAAKjF,EAAEsU,GAAGrP,IAAMjF,EAAEiF,KAClE,IACI/Z,GAAIytB,EADErE,EAAGqE,KACD3Y,EAAGwP,EAAQ8E,EAAGyE,OAC1B/jB,EAAKogB,gBAAgBpV,EAAG9U,GACxBmqB,EAAarV,EAAGsU,EAAItU,EAAEiF,IAAM/Z,EAAGA,IAW7B8tB,GAAS,SAAShZ,EAAGoL,GAIvB,IAHW,OAAPA,GACAsN,GAAY1Y,EAAGoL,GAEZpL,EAAEsU,KAAOtU,EAAEiZ,SACRjZ,EAAEsU,GAAGW,WAAa9f,EAAO6gB,UAG3BtV,EAAIwY,cAAclZ,GAClBU,EAAIqX,aAAa/X,IAHjB0Y,GAAY1Y,EAAGvL,IA0BrB0kB,GAAU,SAASnZ,EAAGwP,GACxB,IAAI8E,EAfU,SAAStU,GACvB,IAAK,IAAIsU,EAAKtU,EAAEsU,GAAW,OAAPA,EAAaA,EAAKA,EAAGC,SACrC,GAAID,EAAGW,WAAa9f,EAAO0jB,YACvB,OAAOvE,EAGf,OAAO,KASE8E,CAAUpZ,GACnB,GAAW,OAAPsU,EAAa,OAAO,EAExB,IAAIZ,EAASY,EAAG+E,MAQhB,OAPAtG,EAAMuG,WAAWtZ,EAAG0T,GACpBF,EAAYxT,EAAGwP,EAAQkE,GACvB1T,EAAEsU,GAAKA,EACPtU,EAAE4W,UAAYtC,EAAGW,WAAa9f,EAAOokB,SACrCvZ,EAAE4Y,IAAM,EACRzE,EAAiBnU,GACjBA,EAAEwY,QAAUlE,EAAGwE,cACR,GAQLU,GAAe,SAASxZ,EAAGJ,EAAK6Z,GAClC,IAAI3X,EAAKqR,EAAgBnT,EAAGJ,GAC5B,GAAa,IAAT6Z,EACAzG,EAAQnK,aAAa7I,EAAG8B,GACxBnC,EAAUK,EAAGA,EAAEiF,KAAOjF,EAAEsU,GAAGrP,IAAK,sBAC7B,CAEH,IAAK,IAAIxb,EAAE,EAAGA,EAAEgwB,EAAMhwB,WACXuW,EAAE+B,QAAQ/B,EAAEiF,KACvB+N,EAAQpR,YAAY5B,EAAGA,EAAEiF,IAAI,EAAGnD,GAEpC,OAAOpN,GAULglB,GAAS,SAAS1Z,EAAG9U,GACvB,IAAIyuB,EAAW3Z,EAAEiF,IAAM/Z,EACnBopB,EAAKtU,EAAEsU,GACPtU,EAAEwP,SAAWhb,EACRmgB,EAAa3U,EAAG2Z,EAAW,EAAG3nB,IAC/B0O,EAAIqX,aAAa/X,IAErBN,EAAWM,EAAEwP,SAAW/a,GACxBuL,EAAEwP,OAAShb,EACX8f,EAAGU,QAAUV,EAAG+E,MAChB/E,EAAGQ,KAAO9U,EAAE+B,MAAMuS,EAAGU,SAEjBV,EAAGW,WAAa9f,EAAO6gB,SACvBtV,EAAIqX,aAAa/X,IAEF,OAAXsU,EAAGqE,MACHztB,EAAIopB,EAAGqE,IAAI3Y,EAAGvL,EAAW6f,EAAGyE,OAC5B/jB,EAAKogB,gBAAgBpV,EAAG9U,GACxByuB,EAAW3Z,EAAEiF,IAAM/Z,GAGvBmqB,EAAarV,EAAGsU,EAAIqF,EAAUzuB,IAGlC8tB,GAAOhZ,EAAG,QAgDZpD,GAAa,SAASoD,EAAG6U,EAAU+E,EAAKC,GAC1C,IAAIvF,EAAKtU,EAAEsU,GAwBX,OAvBAtf,EAAKogB,gBAAgBpV,EAAG6U,GAEpB7U,EAAE4Y,IAAM,IACJ5Y,IAAMA,EAAEqC,IAAI6V,WACZjjB,EAAO+Q,cAAchG,EAAGzT,EAAa,8CAA8C,IAEnF0I,EAAO+Q,cAAchG,EAAGzT,EAAa,6CAA6C,KAG1FyT,EAAEwP,OAAS/a,EACX6f,EAAG+E,MAAQ/E,EAAGU,QACVV,EAAGW,WAAa9f,EAAO6gB,SACvBrW,EAAUK,EAAS,OAAN6Z,EAAY,yCAEzBvF,EAAGqE,IAAMkB,EACC,OAANA,IACAvF,EAAGyE,MAAQa,GACftF,EAAGU,QAAUhV,EAAEiF,IAAM4P,EAAW,EAChCP,EAAGQ,KAAO9U,EAAE+B,MAAMuS,EAAGU,SACrBf,GAAWjU,EAAGvL,IAGlBiL,EAAW4U,EAAGW,WAAa9f,EAAO2hB,aAC3B,GAOLgD,GAAa,SAAS9Z,EAAG8U,EAAMvmB,EAAGwrB,EAASC,GAC7C,IAAIC,EAASja,EAAEsU,GACX4F,EAAiBla,EAAE4W,UACnBuD,EAAUna,EAAE4Y,IACZwB,EAAcpa,EAAEwY,QACpBxY,EAAEwY,QAAUwB,EAEZ,IAAIxK,EAAS2I,GAAqBnY,EAAG8U,EAAMvmB,GAa3C,OAXIihB,IAAWhb,IACXue,EAAMuG,WAAWtZ,EAAG+Z,GACpBvG,EAAYxT,EAAGwP,EAAQuK,GACvB/Z,EAAEsU,GAAK2F,EACPja,EAAE4W,UAAYsD,EACdla,EAAE4Y,IAAMuB,EACRhG,EAAiBnU,IAGrBA,EAAEwY,QAAU4B,EAEL5K,GAML+I,GAAmB,SAASvY,EAAG4U,EAAKgD,GACtC5X,EAAE4Y,MACFjB,GAAU3X,EAAG4U,EAAKgD,GAClB5X,EAAE4Y,OAMAyB,GACF,SAAAA,EAAYC,EAAGtwB,EAAMY,gGAAM0I,CAAAC,KAAA8mB,GACvB9mB,KAAK+mB,EAAIA,EACT/mB,KAAK8P,KAAO,IAAIgQ,EAChB9f,KAAKgnB,IAAM,IAAIrH,EAAQsH,QACvBjnB,KAAK3I,KAAOA,EACZ2I,KAAKvJ,KAAOA,GAIdywB,GAAY,SAASza,EAAGpV,EAAMyW,GAC5BzW,IAA2C,IAAnCwB,EAAkBxB,EAAMyW,EAAE,MAClC2R,EAAQ1N,iBAAiBtF,EACrBzT,EAAa,6CAA8C8U,EAAGzW,GAClEqpB,GAAWjU,EAAGrL,KAIhB+lB,GAAW,SAAS1a,EAAGzU,GACzB,IAAIovB,EACA7wB,EAAIyB,EAAE+uB,EAAEM,QACR9wB,IAAM0F,EAAc,IACpBirB,GAAUza,EAAGzU,EAAEX,KAAM2B,EAAa,UAAU,IAC5CouB,EAAKvH,EAAQyH,YAAY7a,EAAGzU,EAAE+uB,EAAG/uB,EAAEvB,QAEnCywB,GAAUza,EAAGzU,EAAEX,KAAM2B,EAAa,QAAQ,IAC1CouB,EAAKzH,EAAQ4H,YAAY9a,EAAGzU,EAAE+uB,EAAG/uB,EAAE8X,KAAM9X,EAAEgvB,IAAKhvB,EAAEvB,KAAMF,IAG5D4V,EAAWib,EAAGpY,YAAcoY,EAAGpvB,EAAEwvB,SAAS7tB,QAC1C6lB,EAAMiI,gBAAgBhb,EAAG2a,IAW7BzxB,EAAOD,QAAQqqB,WAAuBA,EACtCpqB,EAAOD,QAAQ0uB,UAAuBA,GACtCzuB,EAAOD,QAAQsvB,iBAAuBA,GACtCrvB,EAAOD,QAAQgd,gBAAuBA,EACtC/c,EAAOD,QAAQ+qB,eAAuBA,EACtC9qB,EAAOD,QAAQksB,UAAuBA,GACtCjsB,EAAOD,QAAQ+b,YAxlBK,SAAShF,GACzBiG,EAAgBjG,EAAG,GACnBA,EAAE+B,MAAM/B,EAAEiF,OAAS,IAAI+N,EAAQlS,OAAO3Q,EAAU,OAulBpDjH,EAAOD,QAAQ6wB,WAAuBA,GACtC5wB,EAAOD,QAAQosB,aAAuBA,EACtCnsB,EAAOD,QAAQ0rB,aAAuBA,EACtCzrB,EAAOD,QAAQgyB,qBAlBc,SAASjb,EAAGsa,EAAGtwB,EAAMY,GAC9C,IAAIW,EAAI,IAAI8uB,GAAQC,EAAGtwB,EAAMY,GAC7BoV,EAAE4Y,MACF,IAAIpJ,EAASsK,GAAW9Z,EAAG0a,GAAUnvB,EAAGyU,EAAEiF,IAAKjF,EAAEwY,SAEjD,OADAxY,EAAE4Y,MACKpJ,GAcXtmB,EAAOD,QAAQkvB,qBAAuBA,GACtCjvB,EAAOD,QAAQ4qB,kBAAuBA,EACtC3qB,EAAOD,QAAQgrB,WAAuBA,GACtC/qB,EAAOD,QAAQiP,gBA9HS,SAAS8H,GAC7B,OAAiB,IAAVA,EAAE4Y,KA8Hb1vB,EAAOD,QAAQwR,WAvKI,SAASuF,EAAGjT,EAAMmuB,GACjC,IAAIC,EAASnb,EAAE4Y,IAEf,GAAI5Y,EAAEwP,SAAWhb,GACb,GAAIwL,EAAEsU,KAAOtU,EAAEiZ,QACX,OAAOO,GAAaxZ,EAAG,wCAAyCkb,QACjE,GAAIlb,EAAEwP,SAAW/a,EACpB,OAAO+kB,GAAaxZ,EAAG,+BAAgCkb,GAG3D,GADAlb,EAAE6X,QAAU9qB,EAAOA,EAAK8qB,QAAU,EAAI,EAClC7X,EAAE6X,SAAWhY,EACb,OAAO2Z,GAAaxZ,EAAG,oBAAqBkb,GAEhDlb,EAAE4Y,IAAM,EAER5jB,EAAKogB,gBAAgBpV,EAAGA,EAAEwP,SAAWhb,EAAS0mB,EAAQ,EAAGA,GAEzD,IAAI1L,EAAS2I,GAAqBnY,EAAG0Z,GAAQwB,GAC7C,IAAgB,IAAZ1L,EACAA,EAAS9a,MACR,CACD,KAAO8a,EAAS/a,GAAa0kB,GAAQnZ,EAAGwP,IAEpCA,EAAS2I,GAAqBnY,EAAGgZ,GAAQxJ,GAGzCA,EAAS/a,GACTuL,EAAEwP,OAASA,EACXgE,EAAYxT,EAAGwP,EAAQxP,EAAEiF,KACzBjF,EAAEsU,GAAGrP,IAAMjF,EAAEiF,KAEbvF,EAAW8P,IAAWxP,EAAEwP,QAMhC,OAHAxP,EAAE4Y,IAAMuC,EACRnb,EAAE6X,UACFnY,EAAWM,EAAE6X,WAAa9qB,EAAOA,EAAK8qB,QAAU,IACzCrI,GAmIXtmB,EAAOD,QAAQ0T,UAhGG,SAASqD,EAAG9U,GAC1B0R,GAAWoD,EAAG9U,EAAG,EAAG,OAgGxBhC,EAAOD,QAAQ2T,WAAuBA,4QC1tBlClR,EAAQ,OAhBRuE,eACIG,iBACAe,aACAD,aACAD,aACAZ,uBACAS,gBACAX,aACAY,gBACAC,gBACAH,gBACAL,eACAG,gBACAD,kBAEJnE,iBAEImT,EAAehU,EAAQ,GAAvBgU,WACFzK,EAAUvJ,EAAQ,IAClBsnB,EAAUtnB,EAAQ,KAIpBA,EAAQ,IAFR0vB,qBACAC,YAEElmB,EAAUzJ,EAAQ,IAGpB4vB,EAAuB,IAAIC,QACzBC,EAAyB,SAASpuB,GACpC,IAAIquB,EAAOH,EAAqBhxB,IAAI8C,GAOpC,OANKquB,IAGDA,EAAO,GACPH,EAAqBvV,IAAI3Y,EAAGquB,IAEzBA,GAGLC,EAAa,SAAS1b,EAAGhV,GAC3B,OAAOA,EAAI+V,MACP,KAAK5Q,EACD,OAAO8E,EAAO+Q,cAAchG,EAAGzT,EAAa,sBAAsB,IACtE,KAAKwE,EACD,GAAIoT,MAAMnZ,EAAIN,OACV,OAAOuK,EAAO+Q,cAAchG,EAAGzT,EAAa,sBAAsB,IAE1E,KAAKyE,EACL,KAAKZ,EACL,KAAKI,EACL,KAAKS,EACL,KAAKC,EACL,KAAKC,EACL,KAAKT,EACL,KAAKC,EACD,OAAO3F,EAAIN,MACf,KAAKmG,EACL,KAAKC,EACD,OAAOsqB,EAAiBpwB,EAAIwW,WAChC,KAAKnR,EACD,IAAIjD,EAAIpC,EAAIN,MACZ,OAAAib,EAAcvY,IACV,IAAK,SAGD,MAAO,IAAMA,EACjB,IAAK,SAGD,MAAO,IAAMA,EACjB,IAAK,UAED,OAAOA,EAAE,QAAQ,SACrB,IAAK,WAGD,OAAOouB,EAAuBpuB,GAClC,IAAK,SAED,GAAKA,aAAa+H,EAAOsQ,WAAarY,EAAEiV,MAAQrC,EAAEqC,KAC9CjV,aAAasY,GACbtY,aAAa4lB,EAAQpQ,OACrBxV,aAAa4lB,EAAQ7Q,UACrB/U,aAAa4lB,EAAQvQ,SAErB,OAAO+Y,EAAuBpuB,GAGtC,QACI,OAAOA,EAGnB,QACI,MAAM,IAAIE,MAAM,qBAAuBtC,EAAI+V,QAIjD2E,EACF,SAAAA,EAAY1F,gGAAG1M,CAAAC,KAAAmS,GACXnS,KAAK6O,GAAKpC,EAAEqC,IAAIC,aAChB/O,KAAKooB,OAAS,IAAIC,IAClBroB,KAAKsoB,YAAc,IAAID,IACvBroB,KAAKuoB,eAAY,EACjBvoB,KAAKmP,OAAI,EACTnP,KAAK7J,OAAI,EACT6J,KAAKuP,UAAY,KACjBvP,KAAKwoB,OAAQ,GAQfC,EAAM,SAASrxB,EAAG8wB,EAAMzwB,EAAKN,GAC/BC,EAAEkxB,YAAYI,QACdtxB,EAAEmxB,eAAY,EACd,IAAII,EAAO,KACPC,EAAQ,CACRnxB,IAAKA,EACLN,MAAOA,EACPa,EAAG2wB,EAAOvxB,EAAEjB,EACZwB,OAAG,GAEFP,EAAE+X,IAAG/X,EAAE+X,EAAIyZ,GACZD,IAAMA,EAAKhxB,EAAIixB,GACnBxxB,EAAEgxB,OAAO5V,IAAI0V,EAAMU,GACnBxxB,EAAEjB,EAAIyyB,GAQJC,EAAY,SAASzxB,EAAG8wB,GAC1B,IANkC5B,EAM9Bpa,EAAI9U,EAAEgxB,OAAOrxB,IAAImxB,GACrB,GAAIhc,EAAG,CACHA,EAAEzU,IAAIqxB,eACN5c,EAAE/U,WAAQ,EACV,IAAI6rB,EAAO9W,EAAEvU,EACTgxB,EAAOzc,EAAElU,EACbkU,EAAElU,OAAI,EACH2wB,IAAMA,EAAKhxB,EAAIqrB,GACfA,IAAMA,EAAKhrB,EAAI2wB,GACfvxB,EAAE+X,IAAMjD,IAAG9U,EAAE+X,EAAI6T,GACjB5rB,EAAEjB,IAAM+V,IAAG9U,EAAEjB,EAAIwyB,GACpBvxB,EAAEgxB,OAAOW,OAAOb,IAhBA,WAAb9V,EAD2BkU,EAkBL4B,GAjBQ,OAAN5B,EAA0B,mBAANA,IAkBtClvB,EAAEmxB,YAAWnxB,EAAEmxB,UAAY,IAAIP,SACpC5wB,EAAEmxB,UAAU/V,IAAI0V,EAAMhc,IAGtB9U,EAAEkxB,YAAY9V,IAAI0V,EAAMhc,KAS9B8c,EAAa,SAAS5xB,EAAG8wB,GAC3B,IAAIruB,EAAIzC,EAAEgxB,OAAOrxB,IAAImxB,GACrB,OAAOruB,EAAIA,EAAE1C,MAAQsoB,EAAQ/Q,gBAG3Bua,EAAc,SAAS7xB,EAAGK,GAE5B,OADA0U,EAAyB,iBAAP1U,IAAwB,EAAJA,KAAWA,GAC1CuxB,EAAW5xB,EAAGK,IA8GzB9B,EAAOD,QAAQwzB,kBAzKW,SAAS9xB,GAC/BA,EAAEoxB,MAAQ,GAyKd7yB,EAAOD,QAAQyzB,SAvGE,SAAS1c,EAAGrV,EAAGK,GAE5B,OADA0U,EAAW1U,aAAegoB,EAAQlS,QAC9B9V,EAAImW,WAAcnW,EAAI2xB,aAAexY,MAAMnZ,EAAIN,OACxCsoB,EAAQ/Q,eACZsa,EAAW5xB,EAAG+wB,EAAW1b,EAAGhV,KAoGvC9B,EAAOD,QAAQuzB,YAAeA,EAC9BtzB,EAAOD,QAAQ2zB,UAnDG,SAASjyB,GAIvB,IAHA,IAAIlB,EAAI,EACJkkB,EAAIhjB,EAAEgxB,OAAO9Y,KAAO,EAEjB8K,EAAIlkB,EAAI,GAAG,CACd,IAAII,EAAI8E,KAAK0P,OAAO5U,EAAEkkB,GAAG,GACrB6O,EAAY7xB,EAAGd,GAAGsX,UAAWwM,EAAI9jB,EAChCJ,EAAII,EAEb,OAAOJ,GA2CXP,EAAOD,QAAQ4zB,YA/GK,SAASlyB,EAAGK,GAE5B,OADA0U,EAAW1U,aAAeqwB,GACnBkB,EAAW5xB,EAAGywB,EAAiBpwB,KA8G1C9B,EAAOD,QAAQ6zB,aAlFM,SAAS9c,EAAGrV,EAAGK,EAAKN,GACrCgV,EAAW1U,aAAegoB,EAAQlS,QAClC,IAAI2a,EAAOC,EAAW1b,EAAGhV,GACzB,GAAIN,EAAMyW,UACNib,EAAUzxB,EAAG8wB,OADjB,CAKA,IAAIhc,EAAI9U,EAAEgxB,OAAOrxB,IAAImxB,GACrB,GAAIhc,EACAA,EAAE/U,MAAMse,QAAQte,OACb,CACH,IAAImvB,EACAkD,EAAK/xB,EAAIN,MAGTmvB,EAFC7uB,EAAI2xB,cAAmB,EAAHI,KAAUA,EAE3B,IAAI/J,EAAQlS,OAAO9P,EAAa+rB,GAEhC,IAAI/J,EAAQlS,OAAO9V,EAAI+V,KAAMgc,GAErC,IAAI3vB,EAAI,IAAI4lB,EAAQlS,OAAOpW,EAAMqW,KAAMrW,EAAMA,OAC7CsxB,EAAIrxB,EAAG8wB,EAAM5B,EAAGzsB,MA8DxBlE,EAAOD,QAAQ+zB,YArGK,SAASryB,EAAGK,EAAKN,GACjCgV,EAAyB,iBAAP1U,IAAwB,EAAJA,KAAWA,GAAON,aAAiBsoB,EAAQlS,QACjF,IAAI2a,EAAOzwB,EACX,GAAIN,EAAMyW,UACNib,EAAUzxB,EAAG8wB,OADjB,CAIA,IAAIhc,EAAI9U,EAAEgxB,OAAOrxB,IAAImxB,GACrB,GAAIhc,EACSA,EAAE/U,MACRse,QAAQte,OACR,CACH,IAAImvB,EAAI,IAAI7G,EAAQlS,OAAO9P,EAAahG,GACpCoC,EAAI,IAAI4lB,EAAQlS,OAAOpW,EAAMqW,KAAMrW,EAAMA,OAC7CsxB,EAAIrxB,EAAG8wB,EAAM5B,EAAGzsB,MAwFxBlE,EAAOD,QAAQg0B,SAhIE,SAASjd,GACtB,OAAO,IAAI0F,EAAM1F,IAgIrB9W,EAAOD,QAAQi0B,UA5CG,SAASld,EAAGmd,EAAOC,GACjC,IAEIjB,EAFAkB,EAAOrd,EAAE+B,MAAMqb,GAGnB,GAAIC,EAAKtc,OAAS5Q,GAEd,KADAgsB,EAAQgB,EAAMza,GAEV,OAAO,MACR,CAEH,IAAI+Y,EAAOC,EAAW1b,EAAGqd,GAGzB,GADAlB,EAAQgB,EAAMxB,OAAOrxB,IAAImxB,IAGrB,KADAU,EAAQA,EAAMjxB,GAEV,OAAO,MACR,CAGH,KADAixB,EAASgB,EAAMrB,WAAaqB,EAAMrB,UAAUxxB,IAAImxB,IAAU0B,EAAMtB,YAAYvxB,IAAImxB,IAG5E,OAAOxmB,EAAO+Q,cAAchG,EAAGzT,EAAa,0BAEhD,GAEI,KADA4vB,EAAQA,EAAMjxB,GAEV,OAAO,QACNixB,EAAMnxB,IAAIsyB,gBAK3B,OAFAtK,EAAQ/J,SAASjJ,EAAGod,EAAMjB,EAAMnxB,KAChCgoB,EAAQ/J,SAASjJ,EAAGod,EAAK,EAAGjB,EAAMzxB,QAC3B,GAYXxB,EAAOD,QAAQyc,MAAeA,4MC5R1Bha,EAAQ,GAJR+B,iBACAtB,iBACAU,mBACAN,iBAEImT,EAAehU,EAAQ,GAAvBgU,WAEF2b,aAEF,SAAAA,EAAYrb,EAAGhS,gGAAKsF,CAAAC,KAAA8nB,GAChB9nB,KAAKkoB,KAAO,KACZloB,KAAKgqB,WAAavvB,0DAIlB,OAAOuF,KAAKgqB,4CAIZ,OAAOhqB,KAAKgqB,WAAWrwB,4CAazBswB,EAAY,SAASxvB,GACvB0R,EAAWjS,EAAaO,IAGxB,IAFA,IAAIf,EAAMe,EAAId,OACV1B,EAAI,IACC/B,EAAE,EAAGA,EAAEwD,EAAKxD,IACjB+B,GAAKwC,EAAIvE,GAAG6F,SAAS,IACzB,OAAO9D,GAYL+U,EAAa,SAASP,EAAGhS,GAE3B,OADA0R,EAAW1R,aAAelB,YACnB,IAAIuuB,EAAQrb,EAAGhS,IAa1B9E,EAAOD,QAAQw0B,cAzCO,SAASzwB,EAAGwB,GAG9B,OAFAkR,EAAW1S,aAAaquB,GACxB3b,EAAWlR,aAAa6sB,GACjBruB,GAAKwB,GAAKrC,EAAaa,EAAEuwB,WAAY/uB,EAAE+uB,aAuClDr0B,EAAOD,QAAQu0B,UAAmBA,EAClCt0B,EAAOD,QAAQmyB,iBA1BU,SAAStZ,GAK9B,OAJApC,EAAWoC,aAAcuZ,GACV,OAAZvZ,EAAG2Z,OACF3Z,EAAG2Z,KAAO+B,EAAU1b,EAAGL,WAEpBK,EAAG2Z,MAsBdvyB,EAAOD,QAAQsX,WAAmBA,EAClCrX,EAAOD,QAAQuX,SAbE,SAASR,EAAGhS,GACzB,OAAOuS,EAAWP,EAAGnT,EAAemB,KAaxC9E,EAAOD,QAAQkqB,gBATS,SAASnT,EAAGhS,GAChC,OAAOuS,EAAWP,EAAGzT,EAAayB,KAStC9E,EAAOD,QAAQoyB,QAAmBA,sCCtD9B3vB,EAAQ,GAjBR6F,kBACAC,iBACAI,kBACAC,qBACA5B,eACIG,iBACAD,aACAK,mBAEJ+D,cACIG,eACAD,cAEJlF,oBACApD,iBACAC,sBACAG,mBAKAb,EAAQ,GAFRiU,cACAD,eAEIjC,EAAe/R,EAAQ,GAAvB+R,WACFzI,EAAWtJ,EAAQ,IACnBwJ,EAAWxJ,EAAQ,GACnBqnB,EAAWrnB,EAAQ,IACnBgyB,EAAWhyB,EAAQ,IACnBsnB,EAAWtnB,EAAQ,GACnBunB,EAAWvnB,EAAQ,IACnByJ,EAAWzJ,EAAQ,IACnB+U,EAAW/U,EAAQ,GACnBiV,EAAWjV,EAAQ,IACnBgV,EAAWhV,EAAQ,IAEnBiyB,EAAY,SAASrJ,GAEvB,OADA5U,EAAW4U,EAAGW,WAAa9f,EAAO6gB,UAC3B1B,EAAGyB,UAAY,GAGpBliB,EAAc,SAASygB,GACzB,OAA2C,IAApCA,EAAGQ,KAAKpqB,MAAMa,EAAEqyB,SAAS1wB,OAAeonB,EAAGQ,KAAKpqB,MAAMa,EAAEqyB,SAASD,EAAUrJ,KAAQ,GASxFuJ,EAAY,SAAS7d,GACvB,GAAIA,EAAEwP,SAAW/a,EAAW,CACxB,IAAI6f,EAAKtU,EAAEsU,GACPwJ,EAAOxJ,EAAGU,QACdV,EAAGQ,KAAO9U,EAAE+B,MAAMuS,EAAG+E,OACrB/E,EAAGU,QAAUV,EAAG+E,MAChB/E,EAAG+E,MAAQyE,IA6CbC,EAAY,SAASxyB,EAAGyyB,GAC1Bte,EAAWse,EAAKzyB,EAAEwvB,SAAS7tB,QAC3B,IAAI1B,EAAID,EAAEwvB,SAASiD,GAAIh0B,KACvB,OAAU,OAANwB,EAAmBe,EAAa,KAAK,GAClCf,EAAEiW,UAePwc,EAAY,SAASje,EAAGsU,EAAIppB,GAC9B,IAAIoqB,EAAMtrB,EAAO,KAEjB,GAAIsqB,EAAGW,WAAa9f,EAAO6gB,SAAU,CACjC,GAAI9qB,EAAI,EACJ,OAjBO,SAASopB,EAAIppB,GAC5B,IAAI+I,EAAUqgB,EAAGQ,KAAKpqB,MAAMa,EAAEoqB,UAC9B,OAAIzqB,GAAKopB,EAAGsB,OAAStB,EAAGU,QAAU/gB,EACvB,KAEA,CACH6a,IAAKwF,EAAGU,QAAU/gB,EAAU/I,EAC5BlB,KAAMuC,EAAa,aAAa,IAUzB2xB,CAAW5J,GAAKppB,GAEvBoqB,EAAOhB,EAAGsB,OACV5rB,EAAO+oB,EAAMoL,kBAAkB7J,EAAGQ,KAAKpqB,MAAMa,EAAGL,EAAGyyB,EAAUrJ,SAGjEgB,EAAOhB,EAAGU,QAAU,EAExB,GAAa,OAAThrB,EAAe,CAEf,MADYsqB,IAAOtU,EAAEsU,GAAKtU,EAAEiF,IAAMqP,EAAGiC,KAAKvB,SAC9BM,GAAQpqB,GAAKA,EAAI,GAGzB,OAAO,KAFPlB,EAAOuC,EAAa,gBAAgB,GAI5C,MAAO,CACHuiB,IAAKwG,GAAQpqB,EAAI,GACjBlB,KAAMA,IAyCRo0B,EAAW,SAASvU,EAAI8Q,GAC1B,GAAW,OAAPA,GAAeA,aAAc3H,EAAQvQ,SACrCoH,EAAGjW,OAASrH,EAAa,SAAS,GAClCsd,EAAG/V,aAAe,EAClB+V,EAAG9V,iBAAmB,EACtB8V,EAAGlW,KAAOpH,EAAa,KAAK,OACzB,CACH,IAAIhB,EAAIovB,EAAGpvB,EACXse,EAAGjW,OAASrI,EAAEqI,OAASrI,EAAEqI,OAAO6N,SAAWlV,EAAa,MAAM,GAC9Dsd,EAAG/V,YAAcvI,EAAEuI,YACnB+V,EAAG9V,gBAAkBxI,EAAEwI,gBACvB8V,EAAGlW,KAA0B,IAAnBkW,EAAG/V,YAAoBvH,EAAa,QAAQ,GAAQA,EAAa,OAAO,GAGtFsd,EAAGzV,UAAY4e,EAAQhL,aAAa6B,EAAGjW,OAAQ6J,IAkB7C4gB,EAAc,SAASre,EAAGsU,GAC5B,IAAI/pB,EAAI,CACJP,KAAM,KACNs0B,SAAU,MAEd,OAAW,OAAPhK,EACO,KACFA,EAAGW,WAAa9f,EAAOopB,UAC5Bh0B,EAAEP,KAAOuC,EAAa,QAAQ,GAC9BhC,EAAE+zB,SAAW/xB,EAAa,cAAc,GACjChC,KAGA+pB,EAAGW,WAAa9f,EAAO+hB,YAAc5C,EAAGC,SAASU,WAAa9f,EAAO6gB,SACrEwI,EAAiBxe,EAAGsU,EAAGC,UACtB,MAiFVkK,EAAQ,SAASlzB,EAAGmzB,EAAI50B,GAC1B,IAAIS,EAAI,CACJP,KAAM,KACNs0B,SAAU,MAGd,GAAIrL,EAAS0L,IAAI70B,GAAI,CACjB,IAAI80B,EAASrzB,EAAEsuB,EAAE5G,EAAS4L,OAAO/0B,IACjC,GAAI80B,EAAOrd,aAEP,OADAhX,EAAEP,KAAO40B,EAAOjd,SACTpX,MAGR,CACH,IAAIoJ,EAAOmrB,EAAWvzB,EAAGmzB,EAAI50B,GAC7B,GAAI6J,GAA6B,KAArBA,EAAK2qB,SAAS,GACtB,OAAO3qB,EAKf,OADApJ,EAAEP,KAAOuC,EAAa,KAAK,GACpBhC,GAGLw0B,EAAW,SAASL,EAAIM,GAC1B,OAAIN,EAAKM,GACG,EACAN,GAoDVI,EAAa,SAAbA,EAAsBvzB,EAAG0zB,EAAQC,GACnC,IAAI30B,EAAI,CACJP,KAAM+oB,EAAMoL,kBAAkB5yB,EAAG2zB,EAAM,EAAGD,GAC1CX,SAAU,MAGd,GAAI/zB,EAAEP,KAEF,OADAO,EAAE+zB,SAAW/xB,EAAa,SAAS,GAC5BhC,EAIX,IAAIm0B,EA1DW,SAASnzB,EAAG0zB,EAAQC,GAInC,IAHA,IAAIC,GAAU,EACVH,EAAY,EACZI,EAAMnM,EAAS+D,SACV0H,EAAK,EAAGA,EAAKO,EAAQP,IAAM,CAChC,IAAIj1B,EAAI8B,EAAEuqB,KAAK4I,GACX1xB,EAAIvD,EAAE41B,EACV,OAAQ51B,EAAEstB,QACN,KAAKqI,EAAIE,WACL,IAAI9wB,EAAI/E,EAAEuiB,EACNhf,GAAKkyB,GAAOA,GAAOlyB,EAAIwB,IACvB2wB,EAASJ,EAASL,EAAIM,IAC1B,MAEJ,KAAKI,EAAIG,YACDL,GAAOlyB,EAAI,IACXmyB,EAASJ,EAASL,EAAIM,IAC1B,MAEJ,KAAKI,EAAII,QACT,KAAKJ,EAAInI,YACDiI,GAAOlyB,IACPmyB,EAASJ,EAASL,EAAIM,IAC1B,MAEJ,KAAKI,EAAIK,OACL,IACIC,EAAOhB,EAAK,EADRj1B,EAAEk2B,IAGNjB,EAAKgB,GAAQA,GAAQT,GACjBS,EAAOV,IACPA,EAAYU,GAEpB,MAEJ,QACQzM,EAAS2M,UAAUn2B,EAAEstB,SAAWmI,IAAQlyB,IACxCmyB,EAASJ,EAASL,EAAIM,KAKtC,OAAOG,EAgBEU,CAAWt0B,EAAG0zB,EAAQC,GAC3BE,EAAMnM,EAAS+D,SACnB,IAAY,IAAR0H,EAAW,CACX,IAAIj1B,EAAI8B,EAAEuqB,KAAK4I,GACf,OAAQj1B,EAAEstB,QACN,KAAKqI,EAAIU,QACL,IAAItxB,EAAI/E,EAAEuiB,EACV,GAAIxd,EAAI/E,EAAE41B,EACN,OAAOP,EAAWvzB,EAAGmzB,EAAIlwB,GAC7B,MAEJ,KAAK4wB,EAAIW,YACT,KAAKX,EAAIY,YACL,IAAInG,EAAIpwB,EAAEw2B,EACNt1B,EAAIlB,EAAEuiB,EACNkU,EAAKz2B,EAAEstB,SAAWqI,EAAIY,YAAcjN,EAAMoL,kBAAkB5yB,EAAGZ,EAAI,EAAG+zB,GAAMX,EAAUxyB,EAAGZ,GAG7F,OAFAJ,EAAEP,KAAOy0B,EAAMlzB,EAAGmzB,EAAI7E,GAAG7vB,KACzBO,EAAE+zB,SAAY4B,GAAM/zB,EAAa+zB,EAAIxC,EAAKyC,SAAY5zB,EAAa,UAAU,GAAQA,EAAa,SAAS,GACpGhC,EAEX,KAAK60B,EAAIgB,YAGL,OAFA71B,EAAEP,KAAO+zB,EAAUxyB,EAAG9B,EAAEuiB,GACxBzhB,EAAE+zB,SAAW/xB,EAAa,WAAW,GAC9BhC,EAEX,KAAK60B,EAAIiB,SACT,KAAKjB,EAAIkB,UACL,IAAI9xB,EAAI/E,EAAEstB,SAAWqI,EAAIiB,SAAW52B,EAAE82B,GAAKh1B,EAAEuqB,KAAK4I,EAAK,GAAG8B,GAC1D,GAAIj1B,EAAEsuB,EAAErrB,GAAG+S,aAGP,OAFAhX,EAAEP,KAAOuB,EAAEsuB,EAAErrB,GAAGmT,SAChBpX,EAAE+zB,SAAW/xB,EAAa,YAAY,GAC/BhC,EAEX,MAEJ,KAAK60B,EAAIqB,QACL,IAAI5G,EAAIpwB,EAAEw2B,EAGV,OAFA11B,EAAEP,KAAOy0B,EAAMlzB,EAAGmzB,EAAI7E,GAAG7vB,KACzBO,EAAE+zB,SAAW/xB,EAAa,UAAU,GAC7BhC,GAMnB,OAAO,MASLi0B,EAAmB,SAASxe,EAAGsU,GACjC,IAAI/pB,EAAI,CACJP,KAAM,KACNs0B,SAAU,MAGVhH,EAAK,EACL/rB,EAAI+oB,EAAGQ,KAAKpqB,MAAMa,EAClBmzB,EAAKf,EAAUrJ,GACf7qB,EAAI8B,EAAEuqB,KAAK4I,GACXU,EAAMnM,EAAS+D,SAEnB,GAAI1C,EAAGW,WAAa9f,EAAO2hB,YAGvB,OAFAvsB,EAAEP,KAAOuC,EAAa,KAAK,GAC3BhC,EAAE+zB,SAAW/xB,EAAa,QAAQ,GAC3BhC,EAGX,OAAQd,EAAEstB,QACN,KAAKqI,EAAII,QACT,KAAKJ,EAAInI,YACL,OAAO6H,EAAWvzB,EAAGmzB,EAAIj1B,EAAE41B,GAC/B,KAAKD,EAAIG,YAGL,OAFAh1B,EAAEP,KAAOuC,EAAa,gBAAgB,GACtChC,EAAE+zB,SAAW/xB,EAAa,gBAAgB,GACnChC,EAEX,KAAK60B,EAAIqB,QACT,KAAKrB,EAAIW,YACT,KAAKX,EAAIY,YACL1I,EAAK3W,EAAImH,IAAI4Y,SACb,MACJ,KAAKtB,EAAIuB,YACT,KAAKvB,EAAIwB,YACLtJ,EAAK3W,EAAImH,IAAI+Y,YACb,MACJ,KAAKzB,EAAI0B,OAAWxJ,EAAK3W,EAAImH,IAAIC,OAAW,MAC5C,KAAKqX,EAAI2B,OAAWzJ,EAAK3W,EAAImH,IAAIkZ,OAAW,MAC5C,KAAK5B,EAAI6B,OAAW3J,EAAK3W,EAAImH,IAAIoZ,OAAW,MAC5C,KAAK9B,EAAI+B,OAAW7J,EAAK3W,EAAImH,IAAIsZ,OAAW,MAC5C,KAAKhC,EAAIiC,OAAW/J,EAAK3W,EAAImH,IAAIwZ,OAAW,MAC5C,KAAKlC,EAAImC,OAAWjK,EAAK3W,EAAImH,IAAI0Z,OAAW,MAC5C,KAAKpC,EAAIqC,QAAWnK,EAAK3W,EAAImH,IAAI4Z,QAAW,MAC5C,KAAKtC,EAAIuC,QAAWrK,EAAK3W,EAAImH,IAAI8Z,QAAW,MAC5C,KAAKxC,EAAIyC,OAAWvK,EAAK3W,EAAImH,IAAIga,OAAW,MAC5C,KAAK1C,EAAI2C,QAAWzK,EAAK3W,EAAImH,IAAIka,QAAW,MAC5C,KAAK5C,EAAI6C,OAAW3K,EAAK3W,EAAImH,IAAIoa,OAAW,MAC5C,KAAK9C,EAAI+C,OAAW7K,EAAK3W,EAAImH,IAAIsa,OAAW,MAC5C,KAAKhD,EAAIiD,OAAW/K,EAAK3W,EAAImH,IAAIwa,OAAW,MAC5C,KAAKlD,EAAImD,QAAWjL,EAAK3W,EAAImH,IAAI0a,QAAW,MAC5C,KAAKpD,EAAIqD,OAAWnL,EAAK3W,EAAImH,IAAI4a,OAAW,MAC5C,KAAKtD,EAAIuD,UAAWrL,EAAK3W,EAAImH,IAAI8a,UAAW,MAC5C,KAAKxD,EAAIyD,MAAWvL,EAAK3W,EAAImH,IAAIgb,MAAW,MAC5C,KAAK1D,EAAI2D,MAAWzL,EAAK3W,EAAImH,IAAIkb,MAAW,MAC5C,KAAK5D,EAAI6D,MAAW3L,EAAK3W,EAAImH,IAAIob,MAAW,MAC5C,QACI,OAAO,KAKf,OAFA34B,EAAEP,KAAOgW,EAAEqC,IAAI8gB,OAAO7L,GAAI7V,SAC1BlX,EAAE+zB,SAAW/xB,EAAa,cAAc,GACjChC,GA+BL64B,EAAU,SAASpjB,EAAG9V,GACxB,IAAIoqB,EAAKtU,EAAEsU,GACPlC,EAAO,KACX,GAAIkC,EAAGW,WAAa9f,EAAO6gB,SAAU,CACjC5D,EAlBa,SAASpS,EAAGsU,EAAIpqB,GAEjC,IADA,IAAIJ,EAAIwqB,EAAGQ,KAAKpqB,MACPjB,EAAI,EAAGA,EAAIK,EAAEyY,UAAW9Y,IAC7B,GAAIK,EAAE0Y,OAAO/Y,KAAOS,EAChB,MAAO,CACHF,KAAM+zB,EAAUj0B,EAAEyB,EAAG9B,GACrB60B,SAAU/xB,EAAa,WAAW,IAK9C,OAAO,KAOI82B,CAAarjB,EAAGsU,EAAIpqB,GAC3B,IAAIo5B,EAjCM,SAAStjB,EAAGsU,EAAIpqB,GAC9B,IAAK,IAAIT,EAAI6qB,EAAGsB,OAAQnsB,EAAI6qB,EAAGrP,IAAKxb,IAChC,GAAIuW,EAAE+B,MAAMtY,KAAOS,EACf,OAAOT,EAGf,OAAO,EA2BS85B,CAAUvjB,EAAGsU,EAAIpqB,IACxBkoB,GAAQkR,IACTlR,EAAO0M,EAAWxK,EAAGQ,KAAKpqB,MAAMa,EAAGoyB,EAAUrJ,GAAKgP,EAAQhP,EAAGsB,SAGrE,OAAOxD,EAAOY,EAAQ1N,iBAAiBtF,EAAGzT,EAAa,cAAc,GAAO6lB,EAAKkM,SAAUlM,EAAKpoB,MAAQuC,EAAa,IAAI,IAGvHmrB,EAAiB,SAAS1X,EAAG9V,EAAGoc,GAClC,IAAI3b,EAAIgW,EAAI6iB,iBAAiBxjB,EAAG9V,GAChC8b,EAAchG,EAAGzT,EAAa,8BAA8B,GAAO+Z,EAAI3b,EAAGy4B,EAAQpjB,EAAG9V,KA2BnFu5B,EAAe,SAASzjB,EAAGJ,EAAK8jB,EAAKhN,GACvC,IAAIrT,EAMJ,OAJIA,EADAqgB,EACO1Q,EAAQhL,aAAa0b,EAAIjiB,SAAUhE,GAEnClR,EAAa,KAAK,GAEtBymB,EAAQ1N,iBAAiBtF,EAAGzT,EAAa,aAAa,GAAO8W,EAAMqT,EAAM9W,IAG9EoG,EAAgB,SAAShG,EAAGmF,GAAc,IAC5C,IAAImP,EAAKtU,EAAEsU,GADiCnO,EAAA3Y,UAAAN,OAANkY,EAAM,IAAA/W,MAAA8X,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANhB,EAAMgB,EAAA,GAAA5Y,UAAA4Y,GAE5C,IAAIxG,EAAMoT,EAAQ9N,kBAAkBlF,EAAGmF,EAAKC,GACxCkP,EAAGW,WAAa9f,EAAO6gB,UACvByN,EAAazjB,EAAGJ,EAAK0U,EAAGQ,KAAKpqB,MAAMa,EAAEqI,OAAQC,EAAYygB,IAC7DqP,EAAc3jB,IAGZ2jB,EAAgB,SAAS3jB,GAC3B,GAAkB,IAAdA,EAAEwY,QAAe,CACjB,IAAIA,EAAUxY,EAAEwY,QAChBxF,EAAQpK,UAAU5I,EAAGA,EAAE+B,MAAM/B,EAAEiF,IAAM,IACrC+N,EAAQlK,UAAU9I,EAAGA,EAAEiF,IAAM,EAAGuT,GAChCtjB,EAAIqjB,iBAAiBvY,EAAGA,EAAEiF,IAAM,EAAG,GAGvC/P,EAAI+e,WAAWjU,EAAGtL,IAgDtBxL,EAAOD,QAAQw6B,aAAmBA,EAClCv6B,EAAOD,QAAQ26B,iBAnGU,SAAS5jB,EAAGmH,EAAIC,IACjCD,EAAG5F,cAAgBb,EAAImjB,QAAQ1c,MAAKA,EAAKC,GAC7CsQ,EAAe1X,EAAGmH,EAAI5a,EAAa,eAAe,KAkGtDrD,EAAOD,QAAQ06B,cAAmBA,EAClCz6B,EAAOD,QAAQ66B,gBA7FS,SAAS9jB,EAAGmH,EAAIC,EAAIxH,IACf,IAArBc,EAAIkH,SAAST,KACbC,EAAKD,GACTuQ,EAAe1X,EAAGoH,EAAIxH,IA2F1B1W,EAAOD,QAAQ86B,gBAxFS,SAAS/jB,EAAGmH,EAAIC,GACpC,IAAI4c,EAAKrjB,EAAI6iB,iBAAiBxjB,EAAGmH,GAC7B8c,EAAKtjB,EAAI6iB,iBAAiBxjB,EAAGoH,GAC7Bjb,EAAa63B,EAAIC,GACjBje,EAAchG,EAAGzT,EAAa,oCAAoC,GAAOy3B,GAEzEhe,EAAchG,EAAGzT,EAAa,iCAAiC,GAAOy3B,EAAIC,IAmFlF/6B,EAAOD,QAAQ+c,cAAmBA,EAClC9c,EAAOD,QAAQi7B,gBAhDS,SAASlkB,EAAGmH,EAAIC,IAEvB,IADF1G,EAAI+G,UAAUN,KAErBC,EAAKD,GACTnB,EAAchG,EAAGzT,EAAa,0CAA0C,GAAO62B,EAAQpjB,EAAGoH,KA6C9Fle,EAAOD,QAAQk7B,eA1CQ,SAASnkB,GAC5B,IAAIsU,EAAKtU,EAAEsU,GACP8P,EAAOpkB,EAAEkV,SACTmP,EAA+B,KAAhBrkB,EAAEskB,WAAoBF,EAAOxyB,EAChD,GAAIyyB,EACArkB,EAAEskB,UAAYtkB,EAAEukB,mBACf,KAAMH,EAAOvyB,GACd,OACJ,GAAIyiB,EAAGW,WAAa9f,EAAOqvB,eACvBlQ,EAAGW,aAAe9f,EAAOqvB,mBAD7B,CAMA,GAFIH,GACAnvB,EAAIigB,UAAUnV,EAAGzO,GAAgB,GACjC6yB,EAAOvyB,EAAc,CACrB,IAAItG,EAAI+oB,EAAGQ,KAAKpqB,MAAMa,EAClBk5B,EAAMnQ,EAAGyB,UAAY,EACrB2O,EAAgC,IAAtBn5B,EAAEqyB,SAAS1wB,OAAe3B,EAAEqyB,SAAS6G,IAAQ,GAC/C,IAARA,GACAnQ,EAAGyB,WAAa/V,EAAEsW,OAClBoO,KAAmC,IAAtBn5B,EAAEqyB,SAAS1wB,OAAe3B,EAAEqyB,SAAS5d,EAAEsW,MAAQ,IAAM,KAClEphB,EAAIigB,UAAUnV,EAAGxO,EAAckzB,GAEvC1kB,EAAEsW,MAAQhC,EAAGyB,UACT/V,EAAEwP,SAAW/a,IACT4vB,IACArkB,EAAEskB,UAAY,GAClBhQ,EAAGyB,YACHzB,EAAGW,YAAc9f,EAAOqvB,eACxBlQ,EAAGU,QAAUhV,EAAEiF,IAAM,EACrBqP,EAAGQ,KAAO9U,EAAE+B,MAAMuS,EAAGU,SACrB9f,EAAI+e,WAAWjU,EAAGvL,MAY1BvL,EAAOD,QAAQyuB,eAAmBA,EAClCxuB,EAAOD,QAAQsN,YAxlBK,SAASyJ,GACzB,OAAOA,EAAE2W,MAwlBbztB,EAAOD,QAAQuN,iBA/kBU,SAASwJ,GAC9B,OAAOA,EAAEukB,eA+kBbr7B,EAAOD,QAAQwN,gBArlBS,SAASuJ,GAC7B,OAAOA,EAAEkV,UAqlBbhsB,EAAOD,QAAQ0N,YA3YK,SAASqJ,EAAGrM,EAAMkW,GAElC,IAAI2F,EAAQmL,EAAIrG,EAAIQ,EAyBpB,OA1BAnhB,EAAOpE,EAAgBoE,GAEvBkqB,EAAU7d,GACM,KAAZrM,EAAK,IACL2gB,EAAK,KACLQ,EAAO9U,EAAE+B,MAAM/B,EAAEiF,IAAM,GACvBtF,EAAUK,EAAG8U,EAAK2C,eAAgB,qBAClC9jB,EAAOA,EAAK0R,SAAS,GACrBrF,EAAEiF,QAGF6P,GADAR,EAAKzK,EAAGxV,MACEygB,KACVpV,EAAW4U,EAAGQ,KAAK2C,iBAIvBjI,EAjEe,SAASxP,EAAGrM,EAAMkW,EAAInH,EAAG4R,GAExC,IADA,IAAI9E,EAAS,EACN7b,EAAKzG,OAAS,EAAGyG,EAAOA,EAAK0R,SAAS,GACzC,OAAQ1R,EAAK,IACT,KAAK,GACDyqB,EAASvU,EAAInH,GACb,MAEJ,KAAK,IACDmH,EAAGhW,YAAcygB,GAAMA,EAAGW,WAAa9f,EAAO6gB,SAAWniB,EAAYygB,IAAO,EAC5E,MAEJ,KAAK,IACDzK,EAAG7V,KAAa,OAAN0O,EAAa,EAAIA,EAAEH,UACnB,OAANG,GAAcA,aAAasQ,EAAQvQ,UACnCoH,EAAG3V,UAAW,EACd2V,EAAG5V,QAAU,IAEb4V,EAAG3V,SAAWwO,EAAEnX,EAAEkqB,UAClB5L,EAAG5V,QAAUyO,EAAEnX,EAAEoqB,WAErB,MAEJ,KAAK,IACD9L,EAAG1V,WAAamgB,EAAKA,EAAGW,WAAa9f,EAAO+hB,UAAY,EACxD,MAEJ,KAAK,IACD,IAAI3sB,EAAI8zB,EAAYre,EAAGsU,GACb,OAAN/pB,GACAsf,EAAGnW,SAAWnH,EAAa,IAAI,GAC/Bsd,EAAG7f,KAAO,OAEV6f,EAAGnW,SAAWnJ,EAAE+zB,SAChBzU,EAAG7f,KAAOO,EAAEP,MAEhB,MAEJ,KAAK,GACL,KAAK,IACD,MACJ,QAASwlB,EAAS,EAI1B,OAAOA,EAoBEmV,CAAW3kB,EAAGrM,EAAMkW,EAD7B8Q,EAAK7F,EAAK8P,cAAgB9P,EAAKpqB,MAAQ,KACF4pB,GACjCloB,EAAkBuH,EAAM,MAAkC,IAC1Dqf,EAAQpK,UAAU5I,EAAG8U,GACrBnV,EAAUK,EAAGA,EAAEiF,KAAOjF,EAAEsU,GAAGrP,IAAK,mBAGpC4Y,EAAU7d,GACN5T,EAAkBuH,EAAM,KAAiC,GAzGvC,SAASqM,EAAG0C,GAClC,GAAU,OAANA,GAAcA,aAAasQ,EAAQvQ,SACnCzC,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAI+N,EAAQlS,OAAO3Q,EAAU,MAC9C6E,EAAK6vB,aAAa7kB,OACf,CACH,IAAI4d,EAAWlb,EAAEnX,EAAEqyB,SACfjzB,EAAI8V,EAAOwc,SAASjd,GACxBA,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAI+N,EAAQlS,OAAOtQ,EAAY7F,GAChDqK,EAAK6vB,aAAa7kB,GAElB,IADA,IAAI5S,EAAI,IAAI4lB,EAAQlS,OAAO1Q,GAAc,GAChC3G,EAAI,EAAGA,EAAIm0B,EAAS1wB,OAAQzD,IACjCgX,EAAOuc,YAAYryB,EAAGizB,EAASn0B,GAAI2D,IA+FvC03B,CAAkB9kB,EAAG2a,GAElBnL,GAiXXtmB,EAAOD,QAAQ2N,aAnhBM,SAASoJ,EAAG6J,EAAI3e,GACjC,IAAIlB,EAEJ,GADA6zB,EAAU7d,GACC,OAAP6J,EAII7f,EAHCgW,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAG8f,eAGbhS,EAAMoL,kBAAkBne,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAGva,MAAMa,EAAGL,EAAG,GAFvD,SAGR,CACH,IAAI85B,EAAQ/G,EAAUje,EAAG6J,EAAGxV,KAAMnJ,GAC9B85B,GACAh7B,EAAOg7B,EAAMh7B,KACbgpB,EAAQpK,UAAU5I,EAAGA,EAAE+B,MAAMijB,EAAMlW,MACnCnP,EAAUK,EAAGA,EAAEiF,KAAOjF,EAAEsU,GAAGrP,IAAK,mBAEhCjb,EAAO,KAIf,OADA6zB,EAAU7d,GACHhW,GAigBXd,EAAOD,QAAQ6N,aA/kBM,SAASkJ,EAAGgK,EAAOH,GACpC,IAAIyK,EACA9E,EACJ,GAAIxF,EAAQ,EAAG,OAAO,EACtB,IAAKsK,EAAKtU,EAAEsU,GAAItK,EAAQ,GAAKsK,IAAOtU,EAAEiZ,QAAS3E,EAAKA,EAAGC,SACnDvK,IAMJ,OALc,IAAVA,GAAesK,IAAOtU,EAAEiZ,SACxBzJ,EAAS,EACT3F,EAAGxV,KAAOigB,GAEV9E,EAAS,EACNA,GAqkBXtmB,EAAOD,QAAQ6R,YA3mBK,SAASkF,EAAG8U,EAAMsP,EAAMa,GAC3B,OAATnQ,GAA0B,IAATsP,IACjBA,EAAO,EACPtP,EAAO,MAEP9U,EAAEsU,GAAGW,WAAa9f,EAAO6gB,WACzBhW,EAAEsW,MAAQtW,EAAEsU,GAAGyB,WACnB/V,EAAE2W,KAAO7B,EACT9U,EAAEukB,cAAgBU,EAClBjlB,EAAEskB,UAAYtkB,EAAEukB,cAChBvkB,EAAEkV,SAAWkP,GAkmBjBl7B,EAAOD,QAAQ+R,aAhgBM,SAASgF,EAAG6J,EAAI3e,GACjC,IAAIlB,EACJ6zB,EAAU7d,GACV,IAAIglB,EAAQ/G,EAAUje,EAAG6J,EAAGxV,KAAMnJ,GASlC,OARI85B,GACAh7B,EAAOg7B,EAAMh7B,KACbgpB,EAAQlK,UAAU9I,EAAGglB,EAAMlW,IAAK9O,EAAEiF,IAAM,UACjCjF,EAAE+B,QAAQ/B,EAAEiF,MAEnBjb,EAAO,KAEX6zB,EAAU7d,GACHhW,qICvKP0B,EAAQ,GAZRqG,iBACAmB,qBACAE,4BACAnD,eACIW,gBACAT,aACAK,eACAG,gBAGA6D,IADJD,cACIC,OAGFwe,EAAuBtnB,EAAQ,GAC/BwJ,EAAuBxJ,EAAQ,GAC/BsJ,EAAuBtJ,EAAQ,IAC/B+U,EAAuB/U,EAAQ,GAC/BiV,EAAuBjV,EAAQ,IAI/Bw5B,EAAmB,EAAInzB,EAEvBozB,EAEF,SAAAA,IAAc7xB,EAAAC,KAAA4xB,GACV5xB,KAAKuhB,KAAO,KACZvhB,KAAKyhB,QAAUvhB,IACfF,KAAK0R,IAAMxR,IACXF,KAAKghB,SAAW,KAChBhhB,KAAKgjB,KAAO,KAGZhjB,KAAKqiB,OAASniB,IACdF,KAAKsiB,OAAS,KACdtiB,KAAKwiB,UAAYtiB,IAEjBF,KAAKolB,IAAM,KACXplB,KAAKulB,cAAgB,KACrBvlB,KAAKwlB,MAAQ,KAEbxlB,KAAKshB,SAAWphB,IAChBF,KAAK0hB,WAAaxhB,KAKpBgS,EAEF,SAAAA,EAAYwS,GAAG3kB,EAAAC,KAAAkS,GACXlS,KAAK6O,GAAK6V,EAAE3V,aAEZ/O,KAAK0lB,QAAU,IAAIkM,EACnB5xB,KAAK0R,IAAMxR,IACXF,KAAKugB,WAAargB,IAClBF,KAAK+iB,MAAQ7iB,IAGbF,KAAK8O,IAAM4V,EACX1kB,KAAKwO,MAAQ,KACbxO,KAAK+gB,GAAK,KACV/gB,KAAKykB,SAAW,KAChBzkB,KAAKskB,QAAU,EACftkB,KAAKojB,KAAO,KACZpjB,KAAK2hB,SAAW,EAChB3hB,KAAKgxB,cAAgB,EACrBhxB,KAAKqjB,UAAY,EACjBrjB,KAAK+wB,UAAY/wB,KAAKgxB,cACtBhxB,KAAKqlB,IAAM,EACXrlB,KAAKic,OAAShb,EACdjB,KAAKilB,QAAU,GAKjB4M,EAEF,SAAAA,IAAc9xB,EAAAC,KAAA6xB,GACV7xB,KAAK+O,WAAa,EAClB/O,KAAKuS,IAAM,IAAIyV,QAEfhoB,KAAK2kB,WAAa,KAClB3kB,KAAK8xB,WAAa,IAAIrS,EAAQlS,OAAO3Q,EAAU,MAC/CoD,KAAK2W,MAAQ,KACb3W,KAAK+kB,cAAgB,KACrB/kB,KAAK+xB,QAAU,KACf/xB,KAAK4vB,OAAS,IAAI90B,MAAMsS,EAAImH,IAAIyd,MAChChyB,KAAKiyB,GAAK,IAAIn3B,MAAMuC,IActB8jB,EAAc,SAAS1U,GAChBA,EAAEsU,GACRiC,KAAO,MAGRkP,EAAa,SAASnT,EAAItS,GAC5BsS,EAAGvQ,MAAQ,IAAI1T,MAAM62B,GACrB5S,EAAGrN,IAAM,EACTqN,EAAGwB,WAAaoR,EA1FA,EA4FhB,IAAI5Q,EAAKhC,EAAG2G,QACZ3E,EAAGiC,KAAOjC,EAAGC,SAAW,KACxBD,EAAGW,WAAa,EAChBX,EAAGU,QAAU1C,EAAGrN,IAChBqP,EAAGQ,KAAOxC,EAAGvQ,MAAMuQ,EAAGrN,KACtBqN,EAAGvQ,MAAMuQ,EAAGrN,OAAS,IAAI+N,EAAQlS,OAAO3Q,EAAU,MAClDmkB,EAAGrP,IAAMqN,EAAGrN,IAAMlT,EAClBugB,EAAGgC,GAAKA,GAGNoR,EAAY,SAAS1lB,GACvBA,EAAEsU,GAAKtU,EAAEiZ,QACTvE,EAAY1U,GACZA,EAAE+B,MAAQ,MAiBR4jB,EAAY,SAAS3lB,GACvB,IAAIiY,EAAIjY,EAAEqC,IACVojB,EAAWzlB,GAbO,SAASA,EAAGiY,GAC9B,IAAI2N,EAAWnlB,EAAOwc,SAASjd,GAC/BiY,EAAEoN,WAAWQ,UAAUD,GACvBnlB,EAAOuc,YAAY4I,EAAUxyB,EAAqB,IAAI4f,EAAQlS,OAAOnQ,EAAaqP,IAClFS,EAAOuc,YAAY4I,EAAU1yB,EAAkB,IAAI8f,EAAQlS,OAAOtQ,EAAYiQ,EAAOwc,SAASjd,KAU9F8lB,CAAc9lB,EAAGiY,GACjBtX,EAAIolB,UAAU/lB,GACdiY,EAAEqN,QAAUtwB,EAAKyH,YAAY,OAyCjCvT,EAAOD,QAAQwc,UAAkBA,EACjCvc,EAAOD,QAAQk8B,SAAkBA,EACjCj8B,EAAOD,QAAQswB,SAAmB,EAClCrwB,EAAOD,QAAQ+sB,SAAmB,EAClC9sB,EAAOD,QAAQ6tB,YAAmB,EAClC5tB,EAAOD,QAAQ+8B,WAAmB,EAClC98B,EAAOD,QAAQ4vB,YAAmB,GAClC3vB,EAAOD,QAAQiuB,UAAmB,GAClChuB,EAAOD,QAAQu7B,eAAmB,GAClCt7B,EAAOD,QAAQg9B,SAAmB,IAClC/8B,EAAOD,QAAQs1B,SAAmB,IAClCr1B,EAAOD,QAAQ8qB,YAnLK,EAoLpB7qB,EAAOD,QAAQ0M,UAjBG,SAASqK,IAJP,SAASA,GACzB0lB,EAAU1lB,GAKVkmB,CADAlmB,EAAIA,EAAEqC,IAAI6V,aAiBdhvB,EAAOD,QAAQoP,aAlCM,WACjB,IAAI4f,EAAI,IAAImN,EACRplB,EAAI,IAAIyF,EAAUwS,GAOtB,OANAA,EAAEC,WAAalY,EAEX9K,EAAIijB,qBAAqBnY,EAAG2lB,EAAW,QAAUnxB,IACjDwL,EAAI,MAGDA,GA0BX9W,EAAOD,QAAQsP,cApDO,SAASyH,GAC3B,IAAIiY,EAAIjY,EAAEqC,IACNiQ,EAAK,IAAI7M,EAAUwS,GAQvB,OAPAjY,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAI+N,EAAQlS,OAAOnQ,EAAa2hB,GACjDtd,EAAK6vB,aAAa7kB,GAClBsS,EAAG4C,SAAWlV,EAAEkV,SAChB5C,EAAGiS,cAAgBvkB,EAAEukB,cACrBjS,EAAGqE,KAAO3W,EAAE2W,KACZrE,EAAGgS,UAAYhS,EAAGiS,cAClBkB,EAAWnT,GACJA,GA2CXppB,EAAOD,QAAQ8rB,cA9GO,SAAS/U,GAC3B,IAAIsU,EAAK,IAAI6Q,EAKb,OAJAnlB,EAAEsU,GAAGiC,KAAOjC,EACZA,EAAGC,SAAWvU,EAAEsU,GAChBA,EAAGiC,KAAO,KACVvW,EAAEsU,GAAKA,EACAA,GAyGXprB,EAAOD,QAAQyrB,YAAkBA,EACjCxrB,EAAOD,QAAQk9B,gBA1CS,SAASnmB,EAAGsS,GAChCoT,EAAUpT,sCCpKYniB,EAAezE,EAAQ,GAAzCuE,eAAkBE,SACpB6iB,EAAUtnB,EAAQ,GA8DxBxC,EAAOD,QAAQm9B,SAAoB,IACnCl9B,EAAOD,QAAQo9B,MA5DX,SAAAA,EAAYrmB,gGAAG1M,CAAAC,KAAA8yB,GACX9yB,KAAK6O,GAAKpC,EAAEqC,IAAIC,aAChB/O,KAAKsmB,EAAI,GACTtmB,KAAKhI,EAAI,GACTgI,KAAKuiB,KAAO,GACZviB,KAAKtF,MAAQ,KACbsF,KAAKqqB,SAAW,GAChBrqB,KAAKwnB,SAAW,GAChBxnB,KAAKoiB,UAAY,EACjBpiB,KAAKkiB,WAAY,EACjBliB,KAAKiiB,aAAe,EACpBjiB,KAAK+yB,QAAU,GACf/yB,KAAKO,YAAc,EACnBP,KAAKQ,gBAAkB,EACvBR,KAAKK,OAAS,MA+CtB1K,EAAOD,QAAQs9B,eAtCQ,SAASvmB,EAAGgK,GAC/B,OAAOhK,EAAE+B,MAAMiI,IAsCnB9gB,EAAOD,QAAQqwB,WAnCI,SAAStZ,EAAGgK,GAG3B,IAAK,IAAIvgB,EAAEugB,EAAOvgB,EAAEuW,EAAEiF,IAAKxb,IAAK,CAC5B,IAAI+8B,EAAMxmB,EAAE+B,MAAMtY,GAClBuW,EAAE+B,MAAMtY,GAAK,IAAIupB,EAAQlS,OAAO0lB,EAAIzlB,KAAMylB,EAAI97B,SA+BtDxB,EAAOD,QAAQk1B,kBAfW,SAASzb,EAAG+jB,EAAc/H,GAChD,IAAK,IAAIj1B,EAAI,EAAGA,EAAIiZ,EAAE4jB,QAAQp5B,QAAUwV,EAAE4jB,QAAQ78B,GAAGud,SAAW0X,EAAIj1B,IAChE,GAAIi1B,EAAKhc,EAAE4jB,QAAQ78B,GAAGwd,OAEG,KADrBwf,EAEI,OAAO/jB,EAAE4jB,QAAQ78B,GAAGsd,QAAQtF,SAGxC,OAAO,MAQXvY,EAAOD,QAAQ+xB,gBAzBS,SAAShb,EAAG2a,GAChC,IAAK,IAAIlxB,EAAI,EAAGA,EAAIkxB,EAAGpY,UAAW9Y,IAC9BkxB,EAAGnY,OAAO/Y,GAAK,IAAIupB,EAAQlS,OAAO3Q,EAAU,OAwBpDjH,EAAOD,QAAQy9B,iBA/CU,SAAS1mB,EAAG9U,GACjC,OAAO,IAAI8nB,EAAQ7Q,SAASnC,EAAG9U,wCCjB/BQ,EAAQ,OALRuE,eACIO,eACAE,kBAEJnE,iBAEImT,EAAehU,EAAQ,GAAvBgU,WACFsT,EAAUtnB,EAAQ,GAClBwJ,EAAUxJ,EAAQ,GAClByJ,EAAUzJ,EAAQ,MAIpBA,EAAQ,IAFR6U,eACAC,aAEEC,EAAU/U,EAAQ,GAClBuJ,EAAUvJ,EAAQ,IAClBgV,EAAUhV,EAAQ,IAElBi7B,EAAkB,CACpB,WACA,MACA,UACA,WACA,SACA,SACA,QACA,WACA,WACA,SACA,SACFC,IAAI,SAAAnnB,GAAC,OAAIlT,EAAakT,KAElBonB,EAAY,SAASl8B,GACvB,OAAOg8B,EAAgBh8B,EAAI,IAQzBmd,EAAM,CACR4Y,SAAa,EACbG,YAAa,EACbiG,MAAa,EACbC,QAAa,EACbrE,OAAa,EACbI,MAAa,EACb/a,OAAa,EACbiZ,OAAa,EACbE,OAAa,EACbE,OAAa,EACbE,OAAY,GACZE,OAAY,GACZE,QAAY,GACZE,QAAY,GACZE,OAAY,GACZE,QAAY,GACZE,OAAY,GACZE,OAAY,GACZE,OAAY,GACZE,QAAY,GACZQ,MAAY,GACZE,MAAY,GACZN,UAAY,GACZpL,QAAY,GACZ+N,KAAY,IAkCV9b,EAASld,EAAa,UAAU,GAYhCy6B,EAAc,SAAShnB,EAAG0C,EAAGyE,EAAIC,EAAIC,EAAI4f,GAC3C,IAAInS,EAAO9U,EAAEiF,IAcb,GAZA+N,EAAQpK,UAAU5I,EAAG0C,GACrBsQ,EAAQpK,UAAU5I,EAAGmH,GACrB6L,EAAQpK,UAAU5I,EAAGoH,GAEhB6f,GACDjU,EAAQpK,UAAU5I,EAAGqH,GAErBrH,EAAEsU,GAAGW,WAAa9f,EAAO6gB,SACzB9gB,EAAIyiB,UAAU3X,EAAG8U,EAAMmS,GAEvB/xB,EAAIqjB,iBAAiBvY,EAAG8U,EAAMmS,GAE9BA,EAAQ,CACR,IAAI3lB,EAAKtB,EAAE+B,MAAM/B,EAAEiF,IAAI,UAChBjF,EAAE+B,QAAQ/B,EAAEiF,KACnBoC,EAAG2B,QAAQ1H,KAIb4lB,EAAiB,SAASlnB,EAAGmH,EAAIC,EAAIE,EAAK9T,GAC5C,IAAI8jB,EAAKC,EAAgBvX,EAAGmH,EAAI3T,GAGhC,OAFI8jB,EAAGnW,YACHmW,EAAKC,EAAgBvX,EAAGoH,EAAI5T,KAC5B8jB,EAAGnW,YACP6lB,EAAYhnB,EAAGsX,EAAInQ,EAAIC,EAAIE,EAAK,IACzB,IAoCL6f,EAAa,SAASC,EAAQ5zB,EAAO6zB,GACvC,IAAM/P,EAAK7W,EAAOoc,YAAYuK,EAAQC,GAEtC,OADA3nB,EAAWlM,GAASsU,EAAIgb,OACpBxL,EAAGnW,WACHimB,EAAOrL,OAAS,GAAGvoB,EACZ,MAEC8jB,GAGVC,EAAkB,SAASvX,EAAG9V,EAAGsJ,GACnC,IAAIgyB,EACJ,OAAOt7B,EAAE8W,SACL,KAAKxQ,EACL,KAAKE,EACD80B,EAAKt7B,EAAEQ,MAAMoY,UACb,MACJ,QACI0iB,EAAKxlB,EAAEqC,IAAImjB,GAAGt7B,EAAE8W,SAGxB,OAAOwkB,EAAK/kB,EAAOoc,YAAY2I,EAAIxlB,EAAEqC,IAAI8gB,OAAO3vB,IAAUwf,EAAQ/Q,gBAGtE/Y,EAAOD,QAAQq+B,OA7BA,SAAS59B,EAAG69B,EAAI9nB,GAC3B,OAAc,OAAP8nB,EAAc,KAChBA,EAAGxL,MAAS,GAAKtc,EAAM,KAAO0nB,EAAWI,EAAI9nB,EAAG/V,EAAE2Y,IAAI8gB,OAAO1jB,KA4BtEvW,EAAOD,QAAQ6e,IAAmBA,EAClC5e,EAAOD,QAAQ+9B,YAAmBA,EAClC99B,EAAOD,QAAQi+B,eAAmBA,EAClCh+B,EAAOD,QAAQ4e,cA7DO,SAAS7H,EAAGmH,EAAIC,EAAIE,EAAK9T,GAC3C,IAAK0zB,EAAelnB,EAAGmH,EAAIC,EAAIE,EAAK9T,GAChC,OAAQA,GACJ,KAAKsU,EAAI8a,UACL,OAAO3tB,EAAO2uB,iBAAiB5jB,EAAGmH,EAAIC,GAC1C,KAAKU,EAAI8Z,QAAS,KAAK9Z,EAAIga,OAAQ,KAAKha,EAAIka,QAC5C,KAAKla,EAAIoa,OAAQ,KAAKpa,EAAIsa,OAAQ,KAAKta,EAAI0a,QACvC,IAAI9a,EAAKhH,EAAIkH,SAAST,GAClBQ,EAAKjH,EAAIkH,SAASR,GACtB,OAAW,IAAPM,IAAuB,IAAPC,EACT1S,EAAOivB,gBAAgBlkB,EAAGmH,EAAIC,GAE9BnS,EAAO6uB,gBAAgB9jB,EAAGmH,EAAIC,EAAI7a,EAAa,gCAAgC,IAE9F,QACI,OAAO0I,EAAO6uB,gBAAgB9jB,EAAGmH,EAAIC,EAAI7a,EAAa,yBAAyB,MA+C/FrD,EAAOD,QAAQu+B,iBA1CU,SAASxnB,EAAGmH,EAAIC,EAAI5T,GACzC,IAAI8T,EAAM,IAAI0L,EAAQlS,OACtB,OAAKomB,EAAelnB,EAAGmH,EAAIC,EAAIE,EAAK9T,IAGxB8T,EAAImgB,YAFL,MAwCfv+B,EAAOD,QAAQk+B,WAAmBA,EAClCj+B,EAAOD,QAAQsuB,gBAAmBA,EAClCruB,EAAOD,QAAQ88B,UA3IG,SAAS/lB,GACvBA,EAAEqC,IAAI8gB,OAAOrb,EAAI4Y,UAAe,IAAIlgB,EAASR,EAAGzT,EAAa,WAAW,IACxEyT,EAAEqC,IAAI8gB,OAAOrb,EAAI+Y,aAAe,IAAIrgB,EAASR,EAAGzT,EAAa,cAAc,IAC3EyT,EAAEqC,IAAI8gB,OAAOrb,EAAIgf,OAAe,IAAItmB,EAASR,EAAGzT,EAAa,QAAQ,IACrEyT,EAAEqC,IAAI8gB,OAAOrb,EAAIif,SAAe,IAAIvmB,EAASR,EAAGzT,EAAa,UAAU,IACvEyT,EAAEqC,IAAI8gB,OAAOrb,EAAI4a,QAAe,IAAIliB,EAASR,EAAGzT,EAAa,SAAS,IACtEyT,EAAEqC,IAAI8gB,OAAOrb,EAAIgb,OAAe,IAAItiB,EAASR,EAAGzT,EAAa,QAAQ,IACrEyT,EAAEqC,IAAI8gB,OAAOrb,EAAIC,QAAe,IAAIvH,EAASR,EAAGzT,EAAa,SAAS,IACtEyT,EAAEqC,IAAI8gB,OAAOrb,EAAIkZ,QAAe,IAAIxgB,EAASR,EAAGzT,EAAa,SAAS,IACtEyT,EAAEqC,IAAI8gB,OAAOrb,EAAIoZ,QAAe,IAAI1gB,EAASR,EAAGzT,EAAa,SAAS,IACtEyT,EAAEqC,IAAI8gB,OAAOrb,EAAIsZ,QAAe,IAAI5gB,EAASR,EAAGzT,EAAa,SAAS,IACtEyT,EAAEqC,IAAI8gB,OAAOrb,EAAIwZ,QAAe,IAAI9gB,EAASR,EAAGzT,EAAa,SAAS,IACtEyT,EAAEqC,IAAI8gB,OAAOrb,EAAI0Z,QAAe,IAAIhhB,EAASR,EAAGzT,EAAa,SAAS,IACtEyT,EAAEqC,IAAI8gB,OAAOrb,EAAI4Z,SAAe,IAAIlhB,EAASR,EAAGzT,EAAa,UAAU,IACvEyT,EAAEqC,IAAI8gB,OAAOrb,EAAI8Z,SAAe,IAAIphB,EAASR,EAAGzT,EAAa,UAAU,IACvEyT,EAAEqC,IAAI8gB,OAAOrb,EAAIga,QAAe,IAAIthB,EAASR,EAAGzT,EAAa,SAAS,IACtEyT,EAAEqC,IAAI8gB,OAAOrb,EAAIka,SAAe,IAAIxhB,EAASR,EAAGzT,EAAa,UAAU,IACvEyT,EAAEqC,IAAI8gB,OAAOrb,EAAIoa,QAAe,IAAI1hB,EAASR,EAAGzT,EAAa,SAAS,IACtEyT,EAAEqC,IAAI8gB,OAAOrb,EAAIsa,QAAe,IAAI5hB,EAASR,EAAGzT,EAAa,SAAS,IACtEyT,EAAEqC,IAAI8gB,OAAOrb,EAAIwa,QAAe,IAAI9hB,EAASR,EAAGzT,EAAa,SAAS,IACtEyT,EAAEqC,IAAI8gB,OAAOrb,EAAI0a,SAAe,IAAIhiB,EAASR,EAAGzT,EAAa,UAAU,IACvEyT,EAAEqC,IAAI8gB,OAAOrb,EAAIkb,OAAe,IAAIxiB,EAASR,EAAGzT,EAAa,QAAQ,IACrEyT,EAAEqC,IAAI8gB,OAAOrb,EAAIob,OAAe,IAAI1iB,EAASR,EAAGzT,EAAa,QAAQ,IACrEyT,EAAEqC,IAAI8gB,OAAOrb,EAAI8a,WAAe,IAAIpiB,EAASR,EAAGzT,EAAa,YAAY,IACzEyT,EAAEqC,IAAI8gB,OAAOrb,EAAI0P,SAAe,IAAIhX,EAASR,EAAGzT,EAAa,UAAU,KAoH3ErD,EAAOD,QAAQu6B,iBA5GU,SAASxjB,EAAG9V,GACjC,IAAIs7B,EACJ,GAAKt7B,EAAEw9B,aAA4C,QAA5BlC,EAAKt7B,EAAEQ,MAAMoY,YAC/B5Y,EAAEy9B,oBAAmD,QAA5BnC,EAAKt7B,EAAEQ,MAAMoY,WAAsB,CAC7D,IAAI9Y,EAAOyW,EAAOoc,YAAY2I,EAAIjlB,EAAWP,EAAGyJ,IAChD,GAAIzf,EAAKuX,aACL,OAAOvX,EAAK2X,SAEpB,OAAOklB,EAAU38B,EAAE8W,UAqGvB9X,EAAOD,QAAQ49B,UAAmBA,sCCjM9Bn7B,EAAQ,GAjBRmG,iBACAD,kBACAI,oBACA/B,eACIG,iBACAc,aACAb,uBACAS,gBACAX,aACAG,gBACAS,gBACAC,gBACAH,gBACAL,eACAE,kBAEJnE,mBAuDAb,EAAQ,IApDRmzB,WACAF,QACAiJ,0BACA5Q,SACI8J,WACAa,YACAY,YACAV,WACAE,YACAvC,YACAqI,eACAlF,cACApB,WACAsB,UACAiF,gBACAC,eACAC,eACAhI,gBACAD,gBACAK,gBACAqB,YACAhC,WACAwD,UACAR,WACAwF,gBACA5H,aACAC,cACAhB,eACAyD,UACA5B,WACArB,YACAmB,WACAiH,gBACAC,YACA9G,YACA+G,eACA3H,aACA4H,gBACAzH,iBACAD,iBACA2H,iBACArG,YACAE,YACApB,YACA9J,iBACAsR,aACAC,gBACAjJ,iBACAkJ,iBACApG,YACAqG,kBAOJh9B,EAAQ,GAHR6S,qBACAC,qBACAe,6BAKA7T,EAAQ,GAFRgU,iBACAK,kBAEEiT,GAAUtnB,EAAQ,GAClBqnB,GAAUrnB,EAAQ,IAClByJ,GAAUzJ,EAAQ,OAKpBA,EAAQ,IAHR6U,iBACAkd,oBACArC,uBAEElmB,GAAUxJ,EAAQ,GAClBiV,GAAUjV,EAAQ,IAClB+U,GAAU/U,EAAQ,GAClBuJ,GAAUvJ,EAAQ,IA6DlBi9B,GAAK,SAAS3oB,EAAGsV,EAAM7rB,GACzB,OAAO6rB,EAAO7rB,EAAE41B,GAGduJ,GAAK,SAAS5oB,EAAGsV,EAAM7rB,GACzB,OAAO6rB,EAAO7rB,EAAEuiB,GAOd6c,GAAM,SAAS7oB,EAAGsV,EAAMuE,EAAGpwB,GAC7B,OAAOk1B,EAAIl1B,EAAEuiB,GAAK6N,EAAEgF,EAAOp1B,EAAEuiB,IAAMhM,EAAE+B,MAAMuT,EAAO7rB,EAAEuiB,IAGlD8c,GAAM,SAAS9oB,EAAGsV,EAAMuE,EAAGpwB,GAC7B,OAAOk1B,EAAIl1B,EAAEw2B,GAAKpG,EAAEgF,EAAOp1B,EAAEw2B,IAAMjgB,EAAE+B,MAAMuT,EAAO7rB,EAAEw2B,IA6gBlD8I,GAAS,SAAS/oB,EAAGsU,EAAI7qB,EAAGgW,GAC9B,IAAIzS,EAAIvD,EAAE41B,EACA,IAANryB,GAAS+lB,GAAMuG,WAAWtZ,EAAGsU,EAAGsB,OAAS5oB,EAAI,GACjDsnB,EAAGyB,WAAatsB,EAAEk2B,IAAMlgB,GAGtBupB,GAAa,SAAShpB,EAAGsU,GAC3ByU,GAAO/oB,EAAGsU,EAAIA,EAAGuB,OAAOvB,EAAGyB,WAAY,IAIrCkT,GAAgB,SAASjpB,EAAGtW,EAAGa,GACjC,GAAIb,EAAEw/B,cAAgB3+B,EAAE2+B,aACpB,OAAOC,GAAMz/B,EAAGa,GAAK,EAAI,EACxB,GAAIb,EAAE6X,cAAgBhX,EAAEgX,aACzB,OAAO6nB,GAAS1/B,EAAE8X,UAAWjX,EAAEiX,WAAa,EAAI,EAAI,EAEpD,IAAI8F,EAAM3G,GAAI6mB,iBAAiBxnB,EAAGtW,EAAGa,EAAGoW,GAAImH,IAAIkb,OAGhD,OAFY,OAAR1b,GACArS,GAAO8uB,gBAAgB/jB,EAAGtW,EAAGa,GAC1B+c,EAAM,EAAI,GAInB+hB,GAAiB,SAASrpB,EAAGtW,EAAGa,GAClC,IAAI+c,EAEJ,OAAI5d,EAAEw/B,cAAgB3+B,EAAE2+B,aACbI,GAAM5/B,EAAGa,GAAK,EAAI,EACpBb,EAAE6X,cAAgBhX,EAAEgX,aAClB6nB,GAAS1/B,EAAE8X,UAAWjX,EAAEiX,YAAc,EAAI,EAAI,EAGzC,QADZ8F,EAAM3G,GAAI6mB,iBAAiBxnB,EAAGtW,EAAGa,EAAGoW,GAAImH,IAAIob,QAEjC5b,EAAM,EAAI,GAGzBtH,EAAEsU,GAAGW,YAAc9f,GAAO8wB,SAC1B3e,EAAM3G,GAAI6mB,iBAAiBxnB,EAAGzV,EAAGb,EAAGiX,GAAImH,IAAIkb,OAC5ChjB,EAAEsU,GAAGW,YAAc9f,GAAO8wB,SACd,OAAR3e,GACArS,GAAO8uB,gBAAgB/jB,EAAGtW,EAAGa,GAC1B+c,EAAM,EAAI,IAGfiiB,GAAgB,SAASvpB,EAAGgkB,EAAIC,GAClC,GAAID,EAAGwF,UAAYvF,EAAGuF,QAClB,OAAIxF,EAAGhjB,UAAYijB,EAAGjjB,SAAWgjB,EAAGhjB,UAAY1Q,EACrC,EAGC0zB,EAAGt5B,QAAUu5B,EAAGv5B,MAAS,EAAI,EAI7C,IAAI4sB,EAGJ,OAAO0M,EAAGwF,SACN,KAAKr5B,EACD,OAAO,EACX,KAAKC,EACD,OAAO4zB,EAAGt5B,OAASu5B,EAAGv5B,MAAQ,EAAI,EACtC,KAAK2F,EACL,KAAKW,EACL,KAAKD,EACL,KAAKG,EACD,OAAO8yB,EAAGt5B,QAAUu5B,EAAGv5B,MAAQ,EAAI,EACvC,KAAKmG,EACL,KAAKC,EACD,OAAO2sB,GAAcuG,EAAGxiB,UAAWyiB,EAAGziB,WAAa,EAAI,EAE3D,KAAK9Q,EACL,KAAKF,EACD,GAAIwzB,EAAGt5B,QAAUu5B,EAAGv5B,MAAO,OAAO,EAC7B,GAAU,OAANsV,EAAY,OAAO,EAGjB,QADXsX,EAAK3W,GAAI2mB,OAAOtnB,EAAGgkB,EAAGt5B,MAAMoY,UAAWnC,GAAImH,IAAIgb,UAE3CxL,EAAK3W,GAAI2mB,OAAOtnB,EAAGikB,EAAGv5B,MAAMoY,UAAWnC,GAAImH,IAAIgb,QACnD,MACJ,QACI,OAAOkB,EAAGt5B,QAAUu5B,EAAGv5B,MAAQ,EAAI,EAG3C,GAAW,OAAP4sB,EACA,OAAO,EAEX,IAAIhW,EAAK,IAAI0R,GAAQlS,OAErB,OADAH,GAAIqmB,YAAYhnB,EAAGsX,EAAI0M,EAAIC,EAAI3iB,EAAI,GAC5BA,EAAGmmB,YAAc,EAAI,GAO1BgC,GAAW,SAAS7kB,EAAK8kB,GAC3B,IAAIC,GAAU,EACVC,EAASC,GAAejlB,EAAK8kB,EAAO,EAAI,EAAI,GAChD,IAAe,IAAXE,EAAkB,CAClB,IAAI1+B,EAAI0c,GAAShD,GACjB,IAAU,IAAN1Z,EACA,OAAO,EAEP,EAAIA,GACJ0+B,EAASrrB,GACLmrB,EAAO,IAAGC,GAAU,KAExBC,EAASprB,GACLkrB,GAAQ,IAAGC,GAAU,IAIjC,MAAO,CACHA,QAASA,EACTC,OAAQA,IAUVC,GAAiB,SAAjBA,EAA0BjlB,EAAKha,GACjC,GAAIga,EAAI+X,YAAa,CACjB,IAAIzxB,EAAI0Z,EAAIla,MACRgY,EAAI/T,KAAK0P,MAAMnT,GAEnB,GAAIA,IAAMwX,EAAG,CACT,GAAa,IAAT9X,EACA,OAAO,EACFA,EAAO,IACZ8X,GAAK,GAGb,OAAOnD,GAAoBmD,GACxB,GAAIkC,EAAIC,cACX,OAAOD,EAAIla,MACR,GAAIo/B,GAAQllB,GAAM,CACrB,IAAIxX,EAAI,IAAI4lB,GAAQlS,OACpB,GAAIkS,GAAQ1K,aAAa1D,EAAIjD,SAAUvU,KAAQwX,EAAImlB,QAAU,EACzD,OAAOF,EAAez8B,EAAGxC,GAGjC,OAAO,GAGL6c,GAAY,SAASvd,GACvB,OAAOA,EAAE2a,cAAgB3a,EAAEQ,MAAQm/B,GAAe3/B,EAAG,IAGnD0d,GAAW,SAAS1d,GACtB,GAAIA,EAAE8W,UAAY1Q,EACd,OAAOpG,EAAEQ,MAEb,GAAIo/B,GAAQ5/B,GAAI,CACZ,IAAIkD,EAAI,IAAI4lB,GAAQlS,OACpB,GAAIkS,GAAQ1K,aAAape,EAAEyX,SAAUvU,KAAQlD,EAAE6/B,QAAU,EACrD,OAAO38B,EAAE1C,MAGjB,OAAO,GAQLy+B,GAAQ,SAASz/B,EAAGa,GACtB,OAAOb,EAAEgB,MAAQH,EAAEG,OAMjB4+B,GAAQ,SAAS5/B,EAAGa,GACtB,OAAOb,EAAEgB,OAASH,EAAEG,OAOlB0+B,GAAW,SAASY,EAAIC,GAC1B,IAAIvgC,EAAI0xB,GAAiB4O,GACrBz/B,EAAI6wB,GAAiB6O,GAEzB,OAAIvgC,IAAMa,EACC,EACFb,EAAIa,GACD,EAED,GAMT2/B,GAAc,SAASlqB,EAAGmqB,EAAIC,GAChC,IAAI9S,EACJ,OAAO8S,EAAGZ,SACN,KAAKh5B,EACD,IAAI65B,EAAID,EAAG1/B,MAEX,GAAW,QADX4sB,EAAK3W,GAAI2mB,OAAOtnB,EAAGqqB,EAAEvnB,UAAWnC,GAAImH,IAAI4a,SACvB,MAEjB,YADAyH,EAAG5kB,UAAU9E,GAAOmc,UAAUyN,IAGlC,KAAKx5B,EACL,KAAKC,EAED,YADAq5B,EAAG5kB,UAAU6kB,EAAGL,SAEpB,SACIzS,EAAK3W,GAAI4W,gBAAgBvX,EAAGoqB,EAAIzpB,GAAImH,IAAI4a,SACjCvhB,WACHlM,GAAOyiB,eAAe1X,EAAGoqB,EAAI79B,EAAa,iBAAiB,IAKvEoU,GAAIqmB,YAAYhnB,EAAGsX,EAAI8S,EAAIA,EAAID,EAAI,IAIjC1jB,GAAY9X,KAAK27B,MAAQ,SAASt9B,EAAGwB,GACvC,IACI+7B,EAAU,MAAJv9B,EAENw9B,EAAU,MAAJh8B,EAKV,OAAS+7B,EAAMC,IARJx9B,IAAM,GAAM,OAQQw9B,EAAMD,GAN1B/7B,IAAM,GAAM,QAM4B,KAAQ,GAAK,GAG9DmY,GAAW,SAAS3G,EAAGnW,EAAGqB,GAG5B,OAFU,IAANA,GACA+J,GAAO+Q,cAAchG,EAAGzT,EAAa,8BAChB,EAAlBoC,KAAK0P,MAAMxU,EAAIqB,IAIpBwb,GAAW,SAAS1G,EAAGnW,EAAGqB,GAG5B,OAFU,IAANA,GACA+J,GAAO+Q,cAAchG,EAAGzT,EAAa,8BACjC1C,EAAI8E,KAAK0P,MAAMxU,EAAIqB,GAAKA,EAAG,GAKjC0b,GAAc,SAASvF,EAAGopB,GAC5B,OAAIA,EAAI,EACAA,IAJE,GAIkB,EACZppB,KAAOopB,EAGfA,GARE,GAQiB,EACXppB,GAAKopB,GASnBC,GAAY,SAASn/B,EAAGo/B,EAAO5oB,EAAOuT,GACxC,IAAIxrB,EAAIyB,EAAE0C,MACV,GAAU,OAANnE,EAGA,IAFA,IAAIk0B,EAAKzyB,EAAEwvB,SACPhN,EAAMiQ,EAAG9wB,OACJzD,EAAI,EAAGA,EAAIskB,EAAKtkB,IAAK,CAC1B,IAAI2D,EAAI4wB,EAAGv0B,GAAGmhC,QAAU7oB,EAAMuT,EAAO0I,EAAGv0B,GAAGokB,KAAO8c,EAAM3M,EAAGv0B,GAAGokB,KAC9D,GAAI/jB,EAAE0Y,OAAO/Y,KAAO2D,EAChB,OAAO,KAGnB,OAAOtD,GAOL+gC,GAAc,SAAS7qB,EAAGzU,EAAGo/B,EAAOrV,EAAM6U,GAC5C,IAAIpc,EAAMxiB,EAAEwvB,SAAS7tB,OACjB8wB,EAAKzyB,EAAEwvB,SACP+P,EAAM,IAAI9X,GAAQ7Q,SAASnC,EAAG+N,GAClC+c,EAAIv/B,EAAIA,EACRyU,EAAE+B,MAAMooB,GAAIY,YAAYD,GACxB,IAAK,IAAIrhC,EAAI,EAAGA,EAAIskB,EAAKtkB,IACjBu0B,EAAGv0B,GAAGmhC,QACNE,EAAItoB,OAAO/Y,GAAKspB,GAAMwT,eAAevmB,EAAGsV,EAAO0I,EAAGv0B,GAAGokB,KAErDid,EAAItoB,OAAO/Y,GAAKkhC,EAAM3M,EAAGv0B,GAAGokB,KAEpCtiB,EAAE0C,MAAQ68B,GAGRjH,GAAU,SAAS35B,GACrB,OAAOA,EAAEg/B,cAGPY,GAAU,SAAS5/B,GACrB,OAAOA,EAAEqX,cAGPypB,GAAW,SAAShrB,EAAGvW,GACzB,IAAIS,EAAI8V,EAAE+B,MAAMtY,GAEhB,QAAIS,EAAEqX,gBAEFsiB,GAAQ35B,KACR8oB,GAAQrO,cAAc3E,EAAG9V,IAClB,IAMT+gC,GAAa,SAAS/gC,GACxB,OAAOA,EAAEqX,cAA8B,IAAdrX,EAAE6/B,SAIzBmB,GAAY,SAASlrB,EAAGiF,EAAK/Z,EAAGmY,GAClC,IAAI8nB,EAAK,EACT,EAAG,CACC,IAAI7pB,EAAKtB,EAAE+B,MAAMkD,EAAI/Z,GACjBxB,EAAI4X,EAAGyoB,QACPv+B,EAAI8V,EAAGK,SACX0B,EAAK0C,IAAIva,EAAG2/B,GACZA,GAAMzhC,UACCwB,EAAI,IAObgb,GAAc,SAASlG,EAAGorB,GAC5B1rB,GAAW0rB,GAAS,GACpB,EAAG,CACC,IAAInmB,EAAMjF,EAAEiF,IACR/Z,EAAI,EAER,IAAM8U,EAAE+B,MAAMkD,EAAI,GAAG1D,cAAgBsiB,GAAQ7jB,EAAE+B,MAAMkD,EAAI,MAAS+lB,GAAShrB,EAAGiF,EAAM,GAE7E,GAAIgmB,GAAWjrB,EAAE+B,MAAMkD,EAAI,IAC9B+lB,GAAShrB,EAAGiF,EAAM,QACf,GAAIgmB,GAAWjrB,EAAE+B,MAAMkD,EAAI,IAC9B+N,GAAQlK,UAAU9I,EAAGiF,EAAM,EAAGA,EAAM,OACjC,CAEH,IAAIkmB,EAAKnrB,EAAE+B,MAAMkD,EAAI,GAAG8kB,QAExB,IAAK7+B,EAAI,EAAGA,EAAIkgC,GAASJ,GAAShrB,EAAGiF,EAAM/Z,EAAI,GAAIA,IAAK,CAEpDigC,GADQnrB,EAAE+B,MAAMkD,EAAM/Z,EAAI,GAAG6+B,QAGjC,IAAI1mB,EAAO,IAAIvW,WAAWq+B,GAC1BD,GAAUlrB,EAAGiF,EAAK/Z,EAAGmY,GACrB,IAAIvB,EAAKvB,GAAWP,EAAGqD,GACvB2P,GAAQpR,YAAY5B,EAAGiF,EAAM/Z,EAAG4W,QAhBhCnB,GAAIkH,cAAc7H,EAAGA,EAAE+B,MAAMkD,EAAI,GAAIjF,EAAE+B,MAAMkD,EAAI,GAAIjF,EAAE+B,MAAMkD,EAAI,GAAItE,GAAImH,IAAI8a,WAoBjF,IAFAwI,GAASlgC,EAAI,EAEN8U,EAAEiF,IAAMA,GAAK/Z,EAAE,WACX8U,EAAE+B,QAAQ/B,EAAEiF,WAClBmmB,EAAQ,IAKfC,GAAgB,SAASrrB,EAAGrV,EAAGK,EAAKm/B,GACtC,IAAK,IAAIzc,EAAO,EAAGA,EAHJ,IAGuBA,IAAQ,CAC1C,IAAI4J,OAAE,EAEN,GAAK3sB,EAAE+8B,YAKA,CACH,IAAI4D,EAAO7qB,GAAOic,SAAS1c,EAAGrV,EAAED,MAAOM,GACvC,IAAKsgC,EAAKnqB,UAEN,YADA6R,GAAQ/J,SAASjJ,EAAGmqB,EAAImB,GAIxB,GAAW,QADXhU,EAAK3W,GAAI2mB,OAAOtnB,EAAGrV,EAAED,MAAMoY,UAAWnC,GAAImH,IAAI4Y,WAG1C,YADA1gB,EAAE+B,MAAMooB,GAAI1T,mBAZpBa,EAAK3W,GAAI4W,gBAAgBvX,EAAGrV,EAAGgW,GAAImH,IAAI4Y,WAChCvf,WACHlM,GAAOyiB,eAAe1X,EAAGrV,EAAG4B,EAAa,SAAS,IAgB1D,GAAI+qB,EAAGG,eAEH,YADA9W,GAAIqmB,YAAYhnB,EAAGsX,EAAI3sB,EAAGK,EAAKgV,EAAE+B,MAAMooB,GAAK,GAGhDx/B,EAAI2sB,EAGRriB,GAAO+Q,cAAchG,EAAGzT,EAAa,2CAA2C,KAG9Eg/B,GAAW,SAASvrB,EAAGrV,EAAGK,EAAKwgC,GACjC,IAAK,IAAI9d,EAAO,EAAGA,EApCJ,IAoCuBA,IAAQ,CAC1C,IAAI4J,OAAE,EACN,GAAI3sB,EAAE+8B,YAAa,CACf,IAAI2C,EAAI1/B,EAAED,MAEV,IADW+V,GAAOic,SAAS1c,EAAGqqB,EAAGr/B,GACvBmW,WAAwE,QAA1DmW,EAAK3W,GAAI2mB,OAAOtnB,EAAGqqB,EAAEvnB,UAAWnC,GAAImH,IAAI+Y,cAG5D,OAFApgB,GAAOqc,aAAa9c,EAAGqqB,EAAGr/B,EAAKwgC,QAC/B/qB,GAAOgc,kBAAkB4N,QAKxB/S,EAAK3W,GAAI4W,gBAAgBvX,EAAGrV,EAAGgW,GAAImH,IAAI+Y,cAAc1f,WACtDlM,GAAOyiB,eAAe1X,EAAGrV,EAAG4B,EAAa,SAAS,IAG1D,GAAI+qB,EAAGG,eAEH,YADA9W,GAAIqmB,YAAYhnB,EAAGsX,EAAI3sB,EAAGK,EAAKwgC,EAAK,GAGxC7gC,EAAI2sB,EAGRriB,GAAO+Q,cAAchG,EAAGzT,EAAa,8CAA8C,KAIvFrD,EAAOD,QAAQ46B,QAAmBA,GAClC36B,EAAOD,QAAQ6gC,QAAmBA,GAClC5gC,EAAOD,QAAQoiC,cAAmBA,GAClCniC,EAAOD,QAAQid,YAAmBA,GAClChd,EAAOD,QAAQ0d,SAAmBA,GAClCzd,EAAOD,QAAQsgC,cAAmBA,GAClCrgC,EAAOD,QAAQ8uB,aAx8BM,SAAS/X,GAC1B,IAAIsU,EAAKtU,EAAEsU,GAEXA,EAAGW,YAAc9f,GAAO6wB,WACxByF,EACA,OAAS,CACL/rB,GAAW4U,IAAOtU,EAAEsU,IACpB,IAAIqG,EAAKrG,EAAGQ,KAAKpqB,MACbmvB,EAAIc,EAAGpvB,EAAEsuB,EACTvE,EAAOhB,EAAGsB,OAEVnsB,EAAI6qB,EAAGuB,OAAOvB,EAAGyB,aAEjB/V,EAAEkV,UAAYrjB,EAAeD,IAC7BqD,GAAOkvB,eAAenkB,GAG1B,IAAImqB,EAAKxB,GAAG3oB,EAAGsV,EAAM7rB,GAGrB,OAFaA,EAAEstB,QAGX,KAAK+I,EACD9M,GAAQlK,UAAU9I,EAAGmqB,EAAIvB,GAAG5oB,EAAGsV,EAAM7rB,IACrC,MAEJ,KAAK42B,EACD,IAAIqL,EAAQ7R,EAAEpwB,EAAE82B,IAChBvN,GAAQ/J,SAASjJ,EAAGmqB,EAAIuB,GACxB,MAEJ,KAAKpL,EACD5gB,GAAW4U,EAAGuB,OAAOvB,EAAGyB,WAAWgB,SAAW+Q,GAC9C,IAAI4D,EAAQ7R,EAAEvF,EAAGuB,OAAOvB,EAAGyB,aAAayK,IACxCxN,GAAQ/J,SAASjJ,EAAGmqB,EAAIuB,GACxB,MAEJ,KAAKzD,EACDjoB,EAAE+B,MAAMooB,GAAIwB,UAAkB,IAARliC,EAAEuiB,GAEZ,IAARviB,EAAEw2B,GACF3L,EAAGyB,YAEP,MAEJ,KAAKuJ,EACD,IAAK,IAAI3R,EAAI,EAAGA,GAAKlkB,EAAEuiB,EAAG2B,IACtB3N,EAAE+B,MAAMooB,EAAKxc,GAAG8I,cACpB,MAEJ,KAAK2J,EACD,IAAI5xB,EAAI/E,EAAEuiB,EACVgH,GAAQ/J,SAASjJ,EAAGmqB,EAAIxP,EAAGnY,OAAOhU,IAClC,MAEJ,KAAKuxB,EACD,IAAI6L,EAAQjR,EAAGnY,OAAO/Y,EAAEuiB,GACpB6f,EAAK/C,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GACzB4hC,GAAcrrB,EAAG4rB,EAAOC,EAAI1B,GAC5B,MAEJ,KAAKnK,EACD,IAAIoK,EAAKpqB,EAAE+B,MAAM6mB,GAAG5oB,EAAGsV,EAAM7rB,IACzBoiC,EAAK/C,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GACzB4hC,GAAcrrB,EAAGoqB,EAAIyB,EAAI1B,GACzB,MAEJ,KAAKxJ,GACD,IAAIiL,EAAQjR,EAAGnY,OAAO/Y,EAAE41B,GACpB+K,EAAKvB,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GACrBoiC,EAAK/C,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GACzB8hC,GAASvrB,EAAG4rB,EAAOxB,EAAIyB,GACvB,MAEJ,KAAKvD,GACQ3N,EAAGnY,OAAO/Y,EAAEuiB,GAClBhD,QAAQhJ,EAAE+B,MAAMooB,IACnB,MAEJ,KAAKvJ,GACD,IAAIzD,EAAQnd,EAAE+B,MAAMooB,GAChBn/B,EAAM69B,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GACtB2D,GAAI07B,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GAExB8hC,GAASvrB,EAAGmd,EAAOnyB,EAAKoC,IACxB,MAEJ,KAAK86B,EACDloB,EAAE+B,MAAMooB,GAAItE,UAAUplB,GAAOwc,SAASjd,IACtC,MAEJ,KAAKygB,GACD,IAAI2J,GAAKxB,GAAG5oB,EAAGsV,EAAM7rB,GACjBoiC,GAAK/C,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GACzBupB,GAAQlK,UAAU9I,EAAGmqB,EAAK,EAAGC,IAC7BiB,GAAcrrB,EAAGA,EAAE+B,MAAMqoB,IAAKyB,GAAI1B,GAClC,MAEJ,KAAKrJ,EACD,IAAIgL,GAAMjD,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GACtBsiC,GAAMjD,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GACtBuiC,QAAS,EAAEC,QAAS,EAEpBH,GAAIjnB,eAAiBknB,GAAIlnB,cACzB7E,EAAE+B,MAAMooB,GAAI5kB,UAAWumB,GAAIphC,MAAQqhC,GAAIrhC,MAAO,IACP,KAA/BshC,GAAYpkB,GAASkkB,OAAmD,KAA/BG,GAAYrkB,GAASmkB,KACtE/rB,EAAE+B,MAAMooB,GAAI3kB,YAAYwmB,GAAYC,IAEpCtrB,GAAIkH,cAAc7H,EAAG8rB,GAAKC,GAAK/rB,EAAE+B,MAAMooB,GAAKxpB,GAAImH,IAAIC,QAExD,MAEJ,KAAKgZ,GACD,IAAI+K,GAAMjD,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GACtBsiC,GAAMjD,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GACtBuiC,QAAS,EAAEC,QAAS,EAEpBH,GAAIjnB,eAAiBknB,GAAIlnB,cACzB7E,EAAE+B,MAAMooB,GAAI5kB,UAAWumB,GAAIphC,MAAQqhC,GAAIrhC,MAAO,IACP,KAA/BshC,GAAYpkB,GAASkkB,OAAmD,KAA/BG,GAAYrkB,GAASmkB,KACtE/rB,EAAE+B,MAAMooB,GAAI3kB,YAAYwmB,GAAYC,IAEpCtrB,GAAIkH,cAAc7H,EAAG8rB,GAAKC,GAAK/rB,EAAE+B,MAAMooB,GAAKxpB,GAAImH,IAAIkZ,QAExD,MAEJ,KAAKC,EACD,IAAI6K,GAAMjD,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GACtBsiC,GAAMjD,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GACtBuiC,QAAS,EAAEC,QAAS,EAEpBH,GAAIjnB,eAAiBknB,GAAIlnB,cACzB7E,EAAE+B,MAAMooB,GAAI5kB,UAAUkB,GAAUqlB,GAAIphC,MAAOqhC,GAAIrhC,SACR,KAA/BshC,GAAYpkB,GAASkkB,OAAmD,KAA/BG,GAAYrkB,GAASmkB,KACtE/rB,EAAE+B,MAAMooB,GAAI3kB,YAAYwmB,GAAYC,IAEpCtrB,GAAIkH,cAAc7H,EAAG8rB,GAAKC,GAAK/rB,EAAE+B,MAAMooB,GAAKxpB,GAAImH,IAAIoZ,QAExD,MAEJ,KAAKC,EACD,IAAI2K,GAAMjD,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GACtBsiC,GAAMjD,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GACtBuiC,QAAS,EAAEC,QAAS,EAEpBH,GAAIjnB,eAAiBknB,GAAIlnB,cACzB7E,EAAE+B,MAAMooB,GAAI5kB,UAAUmB,GAAS1G,EAAG8rB,GAAIphC,MAAOqhC,GAAIrhC,SACV,KAA/BshC,GAAYpkB,GAASkkB,OAAmD,KAA/BG,GAAYrkB,GAASmkB,KACtE/rB,EAAE+B,MAAMooB,GAAI3kB,YAAYzF,GAAYC,EAAGgsB,GAAWC,KAElDtrB,GAAIkH,cAAc7H,EAAG8rB,GAAKC,GAAK/rB,EAAE+B,MAAMooB,GAAKxpB,GAAImH,IAAIsZ,QAExD,MAEJ,KAAKC,GACD,IAEI2K,GAFAF,GAAMjD,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GACtBsiC,GAAMjD,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GACXwiC,QAAS,GAEY,KAA/BD,GAAYpkB,GAASkkB,OAAmD,KAA/BG,GAAYrkB,GAASmkB,KAC/D/rB,EAAE+B,MAAMooB,GAAI3kB,YAAY7W,KAAKyP,IAAI4tB,GAAWC,KAE5CtrB,GAAIkH,cAAc7H,EAAG8rB,GAAKC,GAAK/rB,EAAE+B,MAAMooB,GAAKxpB,GAAImH,IAAIwZ,QAExD,MAEJ,KAAKC,EACD,IAEIyK,GAFAF,GAAMjD,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GACtBsiC,GAAMjD,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GACXwiC,QAAS,GAEY,KAA/BD,GAAYpkB,GAASkkB,OAAmD,KAA/BG,GAAYrkB,GAASmkB,KAC/D/rB,EAAE+B,MAAMooB,GAAI3kB,YAAYwmB,GAAYC,IAEpCtrB,GAAIkH,cAAc7H,EAAG8rB,GAAKC,GAAK/rB,EAAE+B,MAAMooB,GAAKxpB,GAAImH,IAAI0Z,QAExD,MAEJ,KAAKC,EACD,IAAIqK,GAAMjD,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GACtBsiC,GAAMjD,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GACtBuiC,QAAS,EAAEC,QAAS,EAEpBH,GAAIjnB,eAAiBknB,GAAIlnB,cACzB7E,EAAE+B,MAAMooB,GAAI5kB,UAAUoB,GAAS3G,EAAG8rB,GAAIphC,MAAOqhC,GAAIrhC,SACV,KAA/BshC,GAAYpkB,GAASkkB,OAAmD,KAA/BG,GAAYrkB,GAASmkB,KACtE/rB,EAAE+B,MAAMooB,GAAI3kB,YAAY7W,KAAK0P,MAAM2tB,GAAYC,KAE/CtrB,GAAIkH,cAAc7H,EAAG8rB,GAAKC,GAAK/rB,EAAE+B,MAAMooB,GAAKxpB,GAAImH,IAAI4Z,SAExD,MAEJ,KAAKC,EACD,IAEIqK,GAFAF,GAAMjD,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GACtBsiC,GAAMjD,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GACXwiC,QAAS,GAEa,KAAhCD,GAAYvkB,GAAUqkB,OAAoD,KAAhCG,GAAYxkB,GAAUskB,KACjE/rB,EAAE+B,MAAMooB,GAAI5kB,UAAUymB,GAAYC,IAElCtrB,GAAIkH,cAAc7H,EAAG8rB,GAAKC,GAAK/rB,EAAE+B,MAAMooB,GAAKxpB,GAAImH,IAAI8Z,SAExD,MAEJ,KAAKC,EACD,IAEImK,GAFAF,GAAMjD,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GACtBsiC,GAAMjD,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GACXwiC,QAAS,GAEa,KAAhCD,GAAYvkB,GAAUqkB,OAAoD,KAAhCG,GAAYxkB,GAAUskB,KACjE/rB,EAAE+B,MAAMooB,GAAI5kB,UAAUymB,GAAYC,IAElCtrB,GAAIkH,cAAc7H,EAAG8rB,GAAKC,GAAK/rB,EAAE+B,MAAMooB,GAAKxpB,GAAImH,IAAIga,QAExD,MAEJ,KAAKC,EACD,IAEIiK,GAFAF,GAAMjD,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GACtBsiC,GAAMjD,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GACXwiC,QAAS,GAEa,KAAhCD,GAAYvkB,GAAUqkB,OAAoD,KAAhCG,GAAYxkB,GAAUskB,KACjE/rB,EAAE+B,MAAMooB,GAAI5kB,UAAUymB,GAAYC,IAElCtrB,GAAIkH,cAAc7H,EAAG8rB,GAAKC,GAAK/rB,EAAE+B,MAAMooB,GAAKxpB,GAAImH,IAAIka,SAExD,MAEJ,KAAKC,GACD,IAEI+J,GAFAF,GAAMjD,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GACtBsiC,GAAMjD,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GACXwiC,QAAS,GAEa,KAAhCD,GAAYvkB,GAAUqkB,OAAoD,KAAhCG,GAAYxkB,GAAUskB,KACjE/rB,EAAE+B,MAAMooB,GAAI5kB,UAAUqB,GAAYolB,GAAWC,KAE7CtrB,GAAIkH,cAAc7H,EAAG8rB,GAAKC,GAAK/rB,EAAE+B,MAAMooB,GAAKxpB,GAAImH,IAAIoa,QAExD,MAEJ,KAAKC,GACD,IAEI6J,GAFAF,GAAMjD,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GACtBsiC,GAAMjD,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,GACXwiC,QAAS,GAEa,KAAhCD,GAAYvkB,GAAUqkB,OAAoD,KAAhCG,GAAYxkB,GAAUskB,KACjE/rB,EAAE+B,MAAMooB,GAAI5kB,UAAUqB,GAAYolB,IAAYC,KAE9CtrB,GAAIkH,cAAc7H,EAAG8rB,GAAKC,GAAK/rB,EAAE+B,MAAMooB,GAAKxpB,GAAImH,IAAIsa,QAExD,MAEJ,KAAKC,GACD,IAAI/b,GAAKtG,EAAE+B,MAAM6mB,GAAG5oB,EAAGsV,EAAM7rB,IACzByiC,QAAQ,EAER5lB,GAAGzB,cACH7E,EAAE+B,MAAMooB,GAAI5kB,UAAsB,GAAVe,GAAG5b,QACU,KAA7BwhC,GAAWtkB,GAAStB,KAC5BtG,EAAE+B,MAAMooB,GAAI3kB,aAAa0mB,IAEzBvrB,GAAIkH,cAAc7H,EAAGsG,GAAIA,GAAItG,EAAE+B,MAAMooB,GAAKxpB,GAAImH,IAAIwa,QAEtD,MAEJ,KAAKC,EACD,IAAIjc,GAAKtG,EAAE+B,MAAM6mB,GAAG5oB,EAAGsV,EAAM7rB,IAEzB6c,GAAGzB,cACH7E,EAAE+B,MAAMooB,GAAI5kB,WAAWe,GAAG5b,OAE1BiW,GAAIkH,cAAc7H,EAAGsG,GAAIA,GAAItG,EAAE+B,MAAMooB,GAAKxpB,GAAImH,IAAI0a,SAEtD,MAEJ,KAAK2F,GACD,IAAI7hB,GAAKtG,EAAE+B,MAAM6mB,GAAG5oB,EAAGsV,EAAM7rB,IAC7BuW,EAAE+B,MAAMooB,GAAIwB,UAAUrlB,GAAGmhB,aACzB,MAEJ,KAAKhF,EACDyH,GAAYlqB,EAAGA,EAAE+B,MAAMooB,GAAKnqB,EAAE+B,MAAM6mB,GAAG5oB,EAAGsV,EAAM7rB,KAChD,MAEJ,KAAKk5B,EACD,IAAIn0B,GAAI/E,EAAEuiB,EACNliB,GAAIL,EAAEw2B,EACVjgB,EAAEiF,IAAMqQ,EAAOxrB,GAAI,EACnBoc,GAAYlG,EAAGlW,GAAI0E,GAAI,GACvB,IAAI47B,GAAK9U,EAAO9mB,GAChBwkB,GAAQlK,UAAU9I,EAAGmqB,EAAIC,IACzBl1B,GAAIoe,WAAWtT,EAAGsU,EAAGrP,KACrB,MAEJ,KAAKwa,EACDsJ,GAAO/oB,EAAGsU,EAAI7qB,EAAG,GACjB,MAEJ,KAAKo5B,EACG0G,GAAcvpB,EAAG6oB,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GAAIq/B,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,MAAQA,EAAE41B,EAC/D/K,EAAGyB,YAEHiT,GAAWhpB,EAAGsU,GAClB,MAEJ,KAAKyO,EACGkG,GAAcjpB,EAAG6oB,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GAAIq/B,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,MAAQA,EAAE41B,EAC/D/K,EAAGyB,YAEHiT,GAAWhpB,EAAGsU,GAClB,MAEJ,KAAK2O,EACGoG,GAAerpB,EAAG6oB,GAAI7oB,EAAGsV,EAAMuE,EAAGpwB,GAAIq/B,GAAI9oB,EAAGsV,EAAMuE,EAAGpwB,MAAQA,EAAE41B,EAChE/K,EAAGyB,YAEHiT,GAAWhpB,EAAGsU,GAClB,MAEJ,KAAKiU,IACG9+B,EAAEw2B,EAAIjgB,EAAE+B,MAAMooB,GAAI1C,aAAeznB,EAAE+B,MAAMooB,GAAI1C,aAC7CnT,EAAGyB,YAEHiT,GAAWhpB,EAAGsU,GAClB,MAEJ,KAAKkU,GACD,IAAI2D,GAAQvD,GAAG5oB,EAAGsV,EAAM7rB,GACpB2gC,GAAKpqB,EAAE+B,MAAMoqB,KACb1iC,EAAEw2B,EAAImK,GAAG3C,aAAe2C,GAAG3C,aAC3BnT,EAAGyB,aAEH/C,GAAQlK,UAAU9I,EAAGmqB,EAAIgC,IACzBnD,GAAWhpB,EAAGsU,IAElB,MAEJ,KAAKkL,EACD,IAAIhxB,GAAI/E,EAAEuiB,EACN6I,GAAWprB,EAAEw2B,EAAI,EAErB,GADU,IAANzxB,IAAS0G,GAAIoe,WAAWtT,EAAGmqB,EAAG37B,KAC9B0G,GAAIyf,aAAa3U,EAAGmqB,EAAItV,IAGrB,CACHP,EAAKtU,EAAEsU,GACP,SAASmX,EAJL5W,IAAY,GACZ3f,GAAIoe,WAAWtT,EAAGsU,EAAGrP,KAM7B,MAEJ,KAAKgS,GACD,IAAIzoB,GAAI/E,EAAEuiB,EAEV,GADU,IAANxd,IAAS0G,GAAIoe,WAAWtT,EAAGmqB,EAAG37B,KAC9B0G,GAAIyf,aAAa3U,EAAGmqB,EAAIn4B,GACrB,CAEH,IAAIo6B,GAAMpsB,EAAEsU,GACR+X,GAAMD,GAAI7X,SACV+X,GAAQF,GAAItX,KACZyX,GAAWH,GAAIpX,QACfwX,GAAWH,GAAIrX,QACfX,GAAM+X,GAAIxW,OAAS0W,GAAM5hC,MAAMa,EAAEoqB,UACjCgF,EAAGpvB,EAAEA,EAAE2B,OAAS,GAAG6lB,GAAMuG,WAAWtZ,EAAGqsB,GAAIzW,QAC/C,IAAK,IAAI6W,GAAM,EAAGF,GAAWE,GAAMpY,GAAKoY,KACpCzZ,GAAQlK,UAAU9I,EAAGwsB,GAAWC,GAAKF,GAAWE,IACpDJ,GAAIzW,OAAS4W,IAAYJ,GAAIxW,OAAS2W,IACtCF,GAAIpnB,IAAMunB,IAAYxsB,EAAEiF,IAAMsnB,IAC9Br3B,GAAIoe,WAAWtT,EAAGqsB,GAAIpnB,KACtBonB,GAAIxW,OAASuW,GAAIvW,OACjBwW,GAAItW,UAAYqW,GAAIrW,UACpBsW,GAAIpX,YAAc9f,GAAO+hB,UACzBmV,GAAI9V,KAAO,KACXjC,EAAKtU,EAAEsU,GAAK+X,GAEZ3sB,GAAWM,EAAEiF,MAAQonB,GAAIzW,OAAS5V,EAAE+B,MAAMyqB,IAAU9hC,MAAMa,EAAEiqB,cAE5D,SAASiW,EAEb,MAEJ,KAAKrD,GACGzN,EAAGpvB,EAAEA,EAAE2B,OAAS,GAAG6lB,GAAMuG,WAAWtZ,EAAGsV,GAC3C,IAAI9mB,GAAI0G,GAAImgB,aAAarV,EAAGsU,EAAI6V,EAAa,IAAR1gC,EAAEuiB,EAAUviB,EAAEuiB,EAAI,EAAIhM,EAAEiF,IAAMklB,GAEnE,GAAI7V,EAAGW,WAAa9f,GAAO6wB,WACvB,OAEJ1R,EAAKtU,EAAEsU,GACH9lB,IAAG0G,GAAIoe,WAAWtT,EAAGsU,EAAGrP,KAC5BvF,GAAW4U,EAAGW,WAAa9f,GAAO6gB,UAClCtW,GAAW4U,EAAGuB,OAAOvB,EAAGyB,UAAY,GAAGgB,SAAWyI,GAClD,SAASiM,EAEb,KAAK1D,EACD,GAAI/nB,EAAE+B,MAAMooB,GAAItlB,cAAe,CAC3B,IAAI6kB,GAAO1pB,EAAE+B,MAAMooB,EAAK,GAAGz/B,MACvBmjB,GAAO7N,EAAE+B,MAAMooB,GAAIz/B,MAAQg/B,GAAM,EACjCgD,GAAQ1sB,EAAE+B,MAAMooB,EAAK,GAAGz/B,OAExB,EAAIg/B,GAAO7b,IAAO6e,GAAQA,IAAS7e,MACnCyG,EAAGyB,WAAatsB,EAAEk2B,IAClB3f,EAAE+B,MAAMooB,GAAIwC,UAAU9e,IACtB7N,EAAE+B,MAAMooB,EAAK,GAAG5kB,UAAUsI,SAE3B,CACH,IAAI6b,GAAO1pB,EAAE+B,MAAMooB,EAAK,GAAGz/B,MACvBmjB,GAAM7N,EAAE+B,MAAMooB,GAAIz/B,MAAQg/B,GAC1BgD,GAAQ1sB,EAAE+B,MAAMooB,EAAK,GAAGz/B,OAExB,EAAIg/B,GAAO7b,IAAO6e,GAAQA,IAAS7e,MACnCyG,EAAGyB,WAAatsB,EAAEk2B,IAClB3f,EAAE+B,MAAMooB,GAAIyC,YAAY/e,IACxB7N,EAAE+B,MAAMooB,EAAK,GAAG3kB,YAAYqI,KAGpC,MAEJ,KAAKma,EACD,IAAI6E,GAAO7sB,EAAE+B,MAAMooB,GACf2C,GAAS9sB,EAAE+B,MAAMooB,EAAK,GACtB4C,GAAQ/sB,EAAE+B,MAAMooB,EAAK,GACrB6C,QAAM,EAEV,GAAIH,GAAKhoB,eAAiBkoB,GAAMloB,gBAAkBmoB,GAASvD,GAASqD,GAAQC,GAAMriC,QAAS,CAEvF,IAAIuiC,GAAQD,GAAOrD,QAAU,EAAIkD,GAAKniC,MACtCoiC,GAAOpiC,MAAQsiC,GAAOpD,OACtBiD,GAAKniC,MAASuiC,GAAQF,GAAMriC,MAAO,MAChC,CACH,IAAIwiC,GAAQC,GAAOC,IACiB,KAA/BF,GAAStlB,GAASklB,MACnB73B,GAAO+Q,cAAchG,EAAGzT,EAAa,gCAAgC,IACzEyT,EAAE+B,MAAMooB,EAAK,GAAG3kB,YAAY0nB,KACM,KAA7BC,GAAQvlB,GAASmlB,MAClB93B,GAAO+Q,cAAchG,EAAGzT,EAAa,+BAA+B,IACxEyT,EAAE+B,MAAMooB,EAAK,GAAG3kB,YAAY2nB,KACK,KAA5BC,GAAQxlB,GAASilB,MAClB53B,GAAO+Q,cAAchG,EAAGzT,EAAa,wCAAwC,IACjFyT,EAAE+B,MAAMooB,GAAI3kB,YAAY4nB,GAAQD,IAGpC7Y,EAAGyB,WAAatsB,EAAEk2B,IAClB,MAEJ,KAAKJ,GACD,IAAI8N,GAAKlD,EAAK,EACdnX,GAAQlK,UAAU9I,EAAGqtB,GAAG,EAAGlD,EAAG,GAC9BnX,GAAQlK,UAAU9I,EAAGqtB,GAAG,EAAGlD,EAAG,GAC9BnX,GAAQlK,UAAU9I,EAAGqtB,GAAIlD,GACzBj1B,GAAIoe,WAAWtT,EAAGqtB,GAAG,GACrBn4B,GAAIyiB,UAAU3X,EAAGqtB,GAAI5jC,EAAEw2B,GACvB/qB,GAAIoe,WAAWtT,EAAGsU,EAAGrP,KAErBxb,EAAI6qB,EAAGuB,OAAOvB,EAAGyB,aACjBoU,EAAKxB,GAAG3oB,EAAGsV,EAAM7rB,GACjBiW,GAAWjW,EAAEstB,SAAW0R,IAG5B,KAAKA,GACIzoB,EAAE+B,MAAMooB,EAAK,GAAGhpB,YACjB6R,GAAQlK,UAAU9I,EAAGmqB,EAAIA,EAAK,GAC9B7V,EAAGyB,WAAatsB,EAAEk2B,KAEtB,MAEJ,KAAK0I,GACD,IAAIn9B,GAAIzB,EAAEuiB,EACNliB,GAAIL,EAAEw2B,EAEA,IAAN/0B,KAASA,GAAI8U,EAAEiF,IAAMklB,EAAK,GAEpB,IAANrgC,KACA4V,GAAW4U,EAAGuB,OAAOvB,EAAGyB,WAAWgB,SAAW+Q,GAC9Ch+B,GAAIwqB,EAAGuB,OAAOvB,EAAGyB,aAAayK,IAMlC,IAHA,IAAI6J,GAAIrqB,EAAE+B,MAAMooB,GAAIz/B,MAChB6nB,IAASzoB,GAAI,GAAK89B,EAAqB18B,GAEpCA,GAAI,EAAGA,KACVuV,GAAOuc,YAAYqN,GAAG9X,KAAQvS,EAAE+B,MAAMooB,EAAKj/B,KAE/CgK,GAAIoe,WAAWtT,EAAGsU,EAAGrP,KACrB,MAEJ,KAAK4iB,EACD,IAAIt8B,GAAIovB,EAAGpvB,EAAEA,EAAE9B,EAAE82B,IACbuK,GAAMJ,GAAUn/B,GAAGovB,EAAGnY,OAAQxC,EAAE+B,MAAOuT,GAC/B,OAARwV,GACAD,GAAY7qB,EAAGzU,GAAGovB,EAAGnY,OAAQ8S,EAAM6U,GAEnCnqB,EAAE+B,MAAMooB,GAAIY,YAAYD,IAC5B,MAEJ,KAAKpC,GACD,IAAIl6B,GAAI/E,EAAEuiB,EAAI,EACV9gB,GAAIoqB,EAAOhB,EAAGU,QAAU2F,EAAGpvB,EAAEoqB,UAAY,EACzChI,QAAC,EAWL,IATIziB,GAAI,IACJA,GAAI,GAEJsD,GAAI,IACJA,GAAItD,GACJgK,GAAI+Q,gBAAgBjG,EAAG9U,IACvBgK,GAAIoe,WAAWtT,EAAGmqB,EAAKj/B,KAGtByiB,GAAI,EAAGA,GAAInf,IAAKmf,GAAIziB,GAAGyiB,KACxBqF,GAAQlK,UAAU9I,EAAGmqB,EAAKxc,GAAG2H,EAAOpqB,GAAIyiB,IAE5C,KAAOA,GAAInf,GAAGmf,KACV3N,EAAE+B,MAAMooB,EAAKxc,IAAG8I,cACpB,MAEJ,KAAKqR,EACD,MAAMx6B,MAAM,qBAqc5BpE,EAAOD,QAAQiwB,cArhCO,SAASlZ,GAC3B,IAAIsU,EAAKtU,EAAEsU,GACPgB,EAAOhB,EAAGsB,OACV0X,EAAOhZ,EAAGuB,OAAOvB,EAAGyB,UAAY,GAChCzP,EAAKgnB,EAAKvW,OAEd,OAAQzQ,GACJ,KAAKwa,EAAQ,KAAKC,GAAQ,KAAKE,EAAQ,KAAKM,EAAQ,KAAKE,EACzD,KAAKE,EAAS,KAAKE,EAAQ,KAAKE,EAAS,KAAKE,GAAQ,KAAKE,GAC3D,KAAKhB,EAAQ,KAAKE,GAClB,KAAKgB,GAAQ,KAAKE,EAAS,KAAKE,EAChC,KAAK1C,EAAa,KAAKC,EAAa,KAAKS,GACrCzN,GAAQlK,UAAU9I,EAAGsV,EAAOgY,EAAKjO,EAAGrf,EAAEiF,IAAI,UACnCjF,EAAE+B,QAAQ/B,EAAEiF,KACnB,MAEJ,KAAKge,EAAO,KAAKF,EAAO,KAAKF,EACzB,IAAIvb,GAAOtH,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAGwiB,mBACvBznB,EAAE+B,QAAQ/B,EAAEiF,KACfqP,EAAGW,WAAa9f,GAAO8wB,WACvBvmB,GAAW4G,IAAO2c,GAClB3O,EAAGW,YAAc9f,GAAO8wB,SACxB3e,GAAOA,GAEX5H,GAAW4U,EAAGuB,OAAOvB,EAAGyB,WAAWgB,SAAW0I,GAC1CnY,MAASgmB,EAAKjO,GACd/K,EAAGyB,YACP,MAEJ,KAAK4M,EACD,IAAI1d,EAAMjF,EAAEiF,IAAM,EAEdmmB,EAAQnmB,EAAM,GAAKqQ,EADfgY,EAAKthB,GAEbgH,GAAQlK,UAAU9I,EAAGiF,EAAM,EAAGA,GAC1BmmB,EAAQ,IACRprB,EAAEiF,IAAMA,EAAM,EACdiB,GAAYlG,EAAGorB,IAGnBpY,GAAQlK,UAAU9I,EAAGsU,EAAGsB,OAAS0X,EAAKjO,EAAGrf,EAAEiF,IAAM,GACjD/P,GAAIoe,WAAWtT,EAAGsU,EAAGrP,KACrB,MAEJ,KAAKsa,GACD7f,GAAW4U,EAAGuB,OAAOvB,EAAGyB,WAAWgB,SAAW0R,IAC9CvzB,GAAIoe,WAAWtT,EAAGsU,EAAGrP,KACrB,MAEJ,KAAKua,EACG8N,EAAKrN,EAAI,GAAK,GACd/qB,GAAIoe,WAAWtT,EAAGsU,EAAGrP,OAo+BrC/b,EAAOD,QAAQwd,UAAmBA,GAClCvd,EAAOD,QAAQogC,eAAmBA,GAClCngC,EAAOD,QAAQggC,cAAmBA,GAClC//B,EAAOD,QAAQyd,SAAmBA,GAClCxd,EAAOD,QAAQihC,YAAmBA,GAClChhC,EAAOD,QAAQskC,iBAxWU,SAASvJ,EAAIC,GAClC,OAAOsF,GAAc,KAAMvF,EAAIC,IAwWnC/6B,EAAOD,QAAQ2d,YAAmBA,GAClC1d,EAAOD,QAAQ4gC,eAAmBA,GAClC3gC,EAAOD,QAAQsiC,SAAmBA,GAClCriC,EAAOD,QAAQwe,UAAmBA,GAClCve,EAAOD,QAAQ2e,SAAmBA,iCCloClC,IAuHM4lB,EAAe,CACjB,GACA,IACA,GACA,GACA,GACA,GACA,GACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,IAqEEC,EAAQ,SAASviC,EAAGK,GACtB,SAAY,GAAML,IAAOK,GAIvBmiC,EAAQ,SAASxiC,EAAGK,GACtB,OAASkiC,EAAMviC,EAAGK,IAYhBoiC,EAAS,SAASlkC,EAAG2D,EAAG0hB,EAAKjM,GAE/B,OADApZ,EAAEqsB,KAAQrsB,EAAEqsB,KAAO4X,EAAM7qB,EAAMiM,GAAU1hB,GAAK0hB,EAAO2e,EAAM5qB,EAAMiM,GAC1D8e,EAAQnkC,IA+BbokC,EAAY,SAASpkC,EAAE2D,GACzB,OAAOugC,EAAOlkC,EAAG2D,EA1FD0gC,GANAC,KAsHdH,EAAU,SAASI,GACrB,GAAmB,iBAARA,EACP,MAAO,CACHlY,KAAQkY,EACRjX,OAASiX,GAtHF,EAsHmBP,EAvHnB,EAuHkC,GACzCpO,EAAS2O,GAtHDC,EAsHkBR,EA1HnB,EA0HkC,GACzCzhB,EAASgiB,GArHDE,GAqHkBT,EA7HnB,EA6HkC,GACzCxN,EAAS+N,GAvHDF,GAuHkBL,EA/HnB,EA+HkC,GACzClN,GAASyN,GAxHDF,GAwHkBL,EA9HlBM,GA8HiC,GACzCvN,GAASwN,GA1HDC,EA0HkBR,EA7HlBM,GA6HiC,GACzCpO,KAAUqO,GA1HFF,GA0HmBL,EAhInBM,GAgIkC,IArHlCI,QAwHZ,IAAI1kC,EAAIukC,EAAIlY,KAQZ,OAPAkY,EAAIjX,OAAUttB,GAhIH,EAgIkBgkC,EAjIlB,EAiIiC,GAC5CO,EAAI3O,EAAU51B,GAhIFwkC,EAgIiBR,EApIlB,EAoIiC,GAC5CO,EAAIhiB,EAAUviB,GA/HFykC,GA+HiBT,EAvIlB,EAuIiC,GAC5CO,EAAI/N,EAAUx2B,GAjIFqkC,GAiIiBL,EAzIlB,EAyIiC,GAC5CO,EAAIzN,GAAU92B,GAlIFqkC,GAkIiBL,EAxIjBM,GAwIgC,GAC5CC,EAAIxN,GAAU/2B,GApIFwkC,EAoIiBR,EAvIjBM,GAuIgC,GAC5CC,EAAIrO,KAAWl2B,GApIHqkC,GAoIkBL,EA1IlBM,GA0IiC,IA/HjCI,OAgILH,GAmBf9kC,EAAOD,QAAQmlC,MA5IK,IA6IpBllC,EAAOD,QAAQolC,WAhBI,SAASnkC,EAAG8C,EAAGwB,EAAG1E,GACjC,OAAO8jC,EAAQ1jC,GA5IA,EA4Ic8C,GA3IbihC,EA2I0Bz/B,GAzI1B0/B,GAyIuCpkC,GA1IvCgkC,KA0JpB5kC,EAAOD,QAAQqlC,WAbI,SAASpkC,EAAG8C,EAAGuhC,GAC9B,OAAOX,EAAQ1jC,GAhJA,EAgJc8C,GA/IbihC,EA+I0BM,GA9I1BT,KA2JpB5kC,EAAOD,QAAQulC,UAVG,SAAStkC,EAAG8C,GAC1B,OAAO4gC,EAAQ1jC,GApJA,EAoJc8C,GAnJbihC,IA6JpB/kC,EAAOD,QAAQwlC,WA7GI,SAAShlC,GACxB,OAAOA,EAAEstB,QA6Gb7tB,EAAOD,QAAQylC,SAhGE,SAASjlC,GACtB,OAAOA,EAAE41B,GAgGbn2B,EAAOD,QAAQ0lC,SAzFE,SAASllC,GACtB,OAAOA,EAAEuiB,GAyFb9iB,EAAOD,QAAQ2lC,SAlFE,SAASnlC,GACtB,OAAOA,EAAEw2B,GAkFb/2B,EAAOD,QAAQ4lC,UA3EG,SAASplC,GACvB,OAAOA,EAAE82B,IA2Ebr3B,EAAOD,QAAQ6lC,UApEG,SAASrlC,GACvB,OAAOA,EAAE+2B,IAoEbt3B,EAAOD,QAAQ8lC,WA7DI,SAAStlC,GACxB,OAAOA,EAAEk2B,KA6Dbz2B,EAAOD,QAAQ41B,OAxIA,SAAUt0B,GACrB,OAAW,IAAJA,GAwIXrB,EAAOD,QAAQ01B,IA9IH,SAAUtd,GAClB,OAXgB,IAWTA,GA8IXnY,EAAOD,QAAQ2+B,kBAfW,GAgB1B1+B,EAAOD,QAAQ+lC,SA/JK,IAgKpB9lC,EAAOD,QAAQgmC,UAjKK,SAkKpB/lC,EAAOD,QAAQimC,SAhKK,IAiKpBhmC,EAAOD,QAAQklC,UArKK,OAsKpBjlC,EAAOD,QAAQkmC,SAjKK,IAkKpBjmC,EAAOD,QAAQmmC,WAtKKjB,OAuKpBjlC,EAAOD,QAAQomC,WA9JKjB,IA+JpBllC,EAAOD,QAAQqmC,OAtKK,IAuKpBpmC,EAAOD,QAAQsmC,OApQA,EAqQfrmC,EAAOD,QAAQumC,OAxQA,EAyQftmC,EAAOD,QAAQwmC,OAvQA,EAwQfvmC,EAAOD,QAAQymC,OAzQA,EA0QfxmC,EAAOD,QAAQ0mC,QAvXC,CACZ,OACA,QACA,SACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,SACA,MACA,KACA,KACA,KACA,OACA,UACA,OACA,WACA,SACA,UACA,UACA,WACA,WACA,UACA,UACA,SACA,YAyUJzmC,EAAOD,QAAQ+tB,SAtUE,CACb8I,QAAa,EACbO,SAAa,EACbC,UAAa,EACb2H,YAAa,EACb3I,WAAa,EACbc,YAAa,EACbL,YAAa,EACbC,YAAa,EACbW,YAAa,EACb2H,YAAa,EACb1H,YAAa,GACbsH,YAAa,GACbzH,QAAa,GACbK,OAAa,GACbC,OAAa,GACbE,OAAa,GACbE,OAAa,GACbE,OAAa,GACbE,OAAa,GACbE,QAAa,GACbE,QAAa,GACbE,OAAa,GACbE,QAAa,GACbE,OAAa,GACbE,OAAa,GACbE,OAAa,GACbE,QAAa,GACb4F,OAAa,GACb1F,OAAa,GACbE,UAAa,GACblD,OAAa,GACboD,MAAa,GACbE,MAAa,GACbE,MAAa,GACbsF,QAAa,GACbC,WAAa,GACbhJ,QAAa,GACbvI,YAAa,GACbmR,UAAa,GACbL,WAAa,GACbC,WAAa,GACbzI,YAAa,GACbkJ,YAAa,GACbJ,WAAa,GACbR,WAAa,GACba,UAAa,GACbZ,YAAa,IAwRjB5+B,EAAOD,QAAQ6kC,MArLKG,EAsLpB/kC,EAAOD,QAAQ2mC,OAtLK3B,EAuLpB/kC,EAAOD,QAAQ4mC,MArLK3B,GAsLpBhlC,EAAOD,QAAQ6mC,OAvLKhC,GAwLpB5kC,EAAOD,QAAQilC,MAxLKJ,GAyLpB5kC,EAAOD,QAAQglC,OA3LI,EA4LnB/kC,EAAOD,QAAQ8mC,MA1JD,SAAS1uB,GACnB,OArBgB,IAqBTA,GA0JXnY,EAAOD,QAAQ+mC,SA1HE,SAASvmC,EAAE2D,GACxB,OAAOugC,EAAOlkC,EAAG2D,EAnED6gC,EAJD,IAiMnB/kC,EAAOD,QAAQgnC,UA3FG,SAASxmC,EAAE2D,GACzB,OAAOugC,EAAOlkC,EAAG2D,EAnGD6gC,EAHAF,KAiMpB7kC,EAAOD,QAAQinC,SApHE,SAASzmC,EAAE2D,GACxB,OAAOugC,EAAOlkC,EAAG2D,EAzED8gC,GARD,IAqMnBhlC,EAAOD,QAAQ4kC,UAAsBA,EACrC3kC,EAAOD,QAAQknC,SA9GE,SAAS1mC,EAAE2D,GACxB,OAAOugC,EAAOlkC,EAAG2D,EAlFD0gC,GARD,IAwMnB5kC,EAAOD,QAAQmnC,WAvFI,SAAS3mC,EAAG+E,GAC3B,OAAOq/B,EAAUpkC,EAAG+E,EArGJ2/B,SA4LpBjlC,EAAOD,QAAQonC,WA9II,SAAS5mC,EAAGS,GAE3B,OADAT,EAAEqsB,KAAQrsB,EAAEqsB,KAAO4X,EAvDJ,EACA,GAsDgCxjC,GAtDhC,EAsD+CujC,EAvD/C,EACA,GAuDRG,EAAQnkC,IA6InBP,EAAOD,QAAQqnC,OAvMI,EAwMnBpnC,EAAOD,QAAQsnC,QAvMKxC,GAwMpB7kC,EAAOD,QAAQunC,OA3MI,EA4MnBtnC,EAAOD,QAAQwnC,QA3MK1C,GA4MpB7kC,EAAOD,QAAQ8kC,OA9MI,EA+MnB7kC,EAAOD,QAAQynC,QA1MI,EA2MnBxnC,EAAOD,QAAQ2kC,QAAsBA,EACrC1kC,EAAOD,QAAQ0nC,SAjOE,SAAS9mC,GACtB,OAAQ2jC,EAAa3jC,IAAM,EAAK,GAiOpCX,EAAOD,QAAQ2nC,SA9NE,SAAS/mC,GACtB,OAAQ2jC,EAAa3jC,IAAM,EAAK,GA8NpCX,EAAOD,QAAQ4nC,UAvOG,SAAShnC,GACvB,OAAyB,EAAlB2jC,EAAa3jC,IAuOxBX,EAAOD,QAAQ6nC,KA/RD,EAgSd5nC,EAAOD,QAAQ8nC,KA/RD,EAgSd7nC,EAAOD,QAAQ+nC,MA/RD,EAgSd9nC,EAAOD,QAAQgoC,IA/RD,EAgSd/nC,EAAOD,QAAQ22B,UAhOG,SAAS/1B,GACvB,OAA0B,GAAnB2jC,EAAa3jC,IAgOxBX,EAAOD,QAAQioC,UA7NG,SAASrnC,GACvB,OAA0B,IAAnB2jC,EAAa3jC,wCCvLpB6B,EAAQ,GAENylC,EAAgB,MAJlB1hC,kBAI4C,MAH5CC,kBAIJxG,EAAOD,QAAQkoC,cAAgBA,EAE/BjoC,EAAOD,QAAQyW,WAAa,SAAS5V,KAErCZ,EAAOD,QAAQmoC,aAAe1lC,EAAQ,IAAiB0lC,aAGvDloC,EAAOD,QAAQooC,cADO,YAEtBnoC,EAAOD,QAAQqoC,kBAAoB5lC,EAAQ,IAAiB4lC,kBAG5DpoC,EAAOD,QAAQsoC,eADQ,QAEvBroC,EAAOD,QAAQuoC,cAAgB9lC,EAAQ,IAAgB8lC,cASvDtoC,EAAOD,QAAQwoC,cADO,KAEtBvoC,EAAOD,QAAQyoC,WAAahmC,EAAQ,IAAegmC,WAGnDxoC,EAAOD,QAAQ0oC,eADQ,SAEvBzoC,EAAOD,QAAQ2oC,eAAiBlmC,EAAQ,IAAgBkmC,eAGxD1oC,EAAOD,QAAQ4oC,gBADS,OAExB3oC,EAAOD,QAAQ6oC,aAAepmC,EAAQ,IAAiBomC,aAGvD5oC,EAAOD,QAAQ8oC,eADQ,QAKvB7oC,EAAOD,QAAQ+oC,gBADS,OAExB9oC,EAAOD,QAAQgpC,aAAevmC,EAAQ,IAAiBumC,aAGvD/oC,EAAOD,QAAQipC,cADO,QAEtBhpC,EAAOD,QAAQkpC,cAAgBzmC,EAAQ,IAAeymC,cAGtDjpC,EAAOD,QAAQmpC,gBADS,UAExBlpC,EAAOD,QAAQopC,gBAAkB3mC,EAAQ,IAAgB2mC,gBAGzDnpC,EAAOD,QAAQqpC,mBADY,UAE3BppC,EAAOD,QAAQspC,gBAAkB7mC,EAAQ,IAAmB6mC,gBAE5D,IAAMC,EAAQ9mC,EAAQ,IACtBxC,EAAOD,QAAQwpC,cAAgBD,EAAMC,uRCtDjC/mC,EAAQ,GAJXgB,QACAC,YACAC,WACAL,iBAGAyF,EA+CGtF,EA/CHsF,YACAwC,EA8CG9H,EA9CH8H,OACApD,EA6CG1E,EA7CH0E,kBACAgC,EA4CG1G,EA5CH0G,oBACAhD,EA2CG1D,EA3CH0D,aACAK,EA0CG/D,EA1CH+D,cACAJ,EAyCG3D,EAzCH2D,mBACAF,EAwCGzD,EAxCHyD,SACAD,EAuCGxD,EAvCHwD,UACAI,EAsCG5D,EAtCH4D,YACAC,EAqCG7D,EArCH6D,YACAC,EAoCG9D,EApCH8D,WACAG,EAmCGjE,EAnCHiE,YACAD,EAkCGhE,EAlCHgE,cACA6E,EAiCG7I,EAjCH6I,kBACAC,EAgCG9I,EAhCH8I,SACAa,EA+BG3J,EA/BH2J,aACAU,EA8BGrK,EA9BHqK,aACAC,EA6BGtK,EA7BHsK,WACAS,EA4BG/K,EA5BH+K,UACAI,EA2BGnL,EA3BHmL,YACAW,EA0BG9L,EA1BH8L,gBACAE,EAyBGhM,EAzBHgM,UACAE,EAwBGlM,EAxBHkM,QACAC,EAuBGnM,EAvBHmM,gBACAE,EAsBGrM,EAtBHqM,kBACAG,EAqBGxM,EArBHwM,gBACAG,EAoBG3M,EApBH2M,sBACAC,EAmBG5M,EAnBH4M,gBACAE,EAkBG9M,EAlBH8M,YACAC,EAiBG/M,EAjBH+M,eACAC,EAgBGhN,EAhBHgN,eACAE,EAeGlN,EAfHkN,cACAI,EAcGtN,EAdHsN,YACAC,EAaGvN,EAbHuN,YACAI,EAYG3N,EAZH2N,YACAK,EAWGhO,EAXHgO,WACAE,EAUGlO,EAVHkO,aACAM,EASGxO,EATHwO,aACAC,EAQGzO,EARHyO,WACAK,EAOG9O,EAPH8O,cACAI,EAMGlP,EANHkP,eACAE,EAKGpP,EALHoP,aACAG,EAIGvP,EAJHuP,YACAE,EAGGzP,EAHHyP,aACAC,GAEG1P,EAFH0P,eACAC,GACG3P,EADH2P,SAGA8N,GAcGxd,EAdHwd,cACAoG,GAaG5jB,EAbH4jB,cACAC,GAYG7jB,EAZH6jB,iBACAvC,GAWGthB,EAXHshB,gBACA0C,GAUGhkB,EAVHgkB,gBACArG,GASG3d,EATH2d,WACAI,GAQG/d,EARH+d,kBACA0G,GAOGzkB,EAPHykB,YACAE,GAMG3kB,EANH2kB,kBACAQ,GAKGnlB,EALHmlB,cACAhE,GAIGnhB,EAJHmhB,cACAoE,GAGGvlB,EAHHulB,kBACA/G,GAEGxe,EAFHwe,eACAgH,GACGxlB,EADHwlB,eAGAif,GACGxkC,EADHwkC,aAiBD,IAiBIsB,GAAOC,GAAWC,GAjBhBC,GAKwB,oBAAXxpC,OAEVA,OACgC,oBAAtBypC,mBAAqCC,gBAAgBD,kBAE/DC,MAGA,EAAIC,MAAM,QAKnB,GAAuB,oBAAZC,QACVP,GAAQO,QAAQP,MAChBC,GAAYM,QAAQN,UACpBC,GAAyBK,QAAQC,mBAC3B,CACN,IAAMC,GAASC,SAASV,MAClBznC,GAAOmoC,SAASnoC,KACtBynC,GAAQ,SAASW,EAAQC,EAAcC,GACtC,OAAOJ,GAAOvpC,KAAKypC,EAAQC,EAAcC,IAE1CZ,GAAY,SAASU,EAAQE,GAC5B,OAAQA,EAAcrmC,QACrB,KAAK,EAAG,OAAO,IAAImmC,EACnB,KAAK,EAAG,OAAO,IAAIA,EAAOE,EAAc,IACxC,KAAK,EAAG,OAAO,IAAIF,EAAOE,EAAc,GAAIA,EAAc,IAC1D,KAAK,EAAG,OAAO,IAAIF,EAAOE,EAAc,GAAIA,EAAc,GAAIA,EAAc,IAC5E,KAAK,EAAG,OAAO,IAAIF,EAAOE,EAAc,GAAIA,EAAc,GAAIA,EAAc,GAAIA,EAAc,IAE/F,IAAIC,EAAO,CAAC,MAEZ,OADAA,EAAKC,KAAKf,MAAMc,EAAMD,GACf,IAAKtoC,GAAKynC,MAAMW,EAAQG,KAGhCZ,GAAyBQ,SAAS,IAAK,IAAK,eAO7C,IAAM9jC,GAAWR,OAAOzD,UAAUsS,OAAO1S,KAAK,IAExCyoC,GAAW,SAASxpC,GACzB,MAAoB,WAAbyb,EAAOzb,GAAuB,OAANA,EAA0B,mBAANA,GAG9CypC,GAAWpnC,EAAa,aAGxBqnC,GAAS,SAAS5zB,EAAG6N,GAC1B,IAAItf,EAAI4c,GAAenL,EAAG6N,EAAK8lB,IAC/B,OAAIplC,EACIA,EAAEqQ,UAET,GAGIi1B,GAAU,SAAS7zB,EAAG6N,GAC3B,OAAO8C,GAAgB3Q,EAAG6N,EAAK8lB,IAAU/0B,MAGpCk1B,GAAS,SAAS9zB,EAAG5S,GAClBoL,EAAgBwH,GACtBpB,KAAOxR,EACT8kB,GAAkBlS,EAAG2zB,KAGhBI,GAAgB,SAAS/zB,GAC9BhG,EAAYgG,EAAG5O,EAAmBgC,GAClC,IAAI4gC,EAAQ73B,EAAa6D,GAAI,GAE7B,OADApH,EAAQoH,EAAG,GACJg0B,GAIFC,GAAS,IAAI1Y,QAEbkY,GAAO,SAASzzB,EAAG5S,GACxB,OAAAuY,EAAevY,IACd,IAAK,YACJoM,EAAYwG,GACZ,MACD,IAAK,SACJvG,EAAeuG,EAAG5S,GAClB,MACD,IAAK,SACJsM,EAAesG,EAAGzT,EAAaa,IAC/B,MACD,IAAK,UACJyL,EAAgBmH,EAAG5S,GACnB,MACD,IAAK,SACJiM,EAAsB2G,EAAG5S,GACzB,MACD,IAAK,WACJ,GAAIyK,EAAYzK,EAAG4S,GAAI,CACtB5S,EAAE4S,GACF,MAGF,IAAK,SACJ,GAAU,OAAN5S,EAAY,CAEf,GAAI6M,EAAY+F,EAAG5O,EAAmB,QAAUV,EAC/C,MAAMpD,MAzDmB,wCA0D1B,MAGF,QAEC,IAAI4mC,EAAeD,GAAO3pC,IAAIypC,GAAc/zB,IAC5C,IAAKk0B,EAAc,MAAM5mC,MAhEE,wCAiE3B,IAAI/B,EAAI2oC,EAAa5pC,IAAI8C,GACrB7B,EACHA,EAAEyU,IAEF8zB,GAAO9zB,EAAG5S,GACV7B,EAAI0Q,EAAY+D,GAAI,GACpBk0B,EAAanuB,IAAI3Y,EAAG7B,MAMlB+sB,GAAgB,SAAStY,GAC9B,IAAIzR,EAAI6N,GAAe4D,EAAG,GAE1B,OADAyzB,GAAKzzB,EAAGzR,GACD,GAGF4lC,GAAO,SAASn0B,EAAG6N,GACxB,OAAOxR,GAAS2D,EAAG6N,IAClB,KAAK3d,EACL,KAAKC,EACJ,OACD,KAAKC,EACJ,OAAOoL,EAAcwE,EAAG6N,GACzB,KAAKxd,EACJ,OAAO+L,GAAe4D,EAAG6N,GAC1B,KAAKvd,EACJ,OAAOwL,EAAakE,EAAG6N,GACxB,KAAKtd,EACJ,OAAOqL,EAAeoE,EAAG6N,GAC1B,KAAKnd,EACJ,IAAInC,EAAIqlC,GAAO5zB,EAAG6N,GAClB,QAAU,IAANtf,EACH,OAAOA,EAGT,KAAKiC,EACL,KAAKC,EACL,KAAKE,EAEL,QACC,OAAOyjC,GAAKp0B,EAAG/D,EAAY+D,EAAG6N,MAO3BwmB,GAAS,SAASr0B,EAAGkb,GAC1B,IAAI1L,EAAS9W,EAAUsH,EAAGkb,EAAO,EAAG,GAChC3wB,EAAI4pC,GAAKn0B,GAAI,GAEjB,OADApH,EAAQoH,EAAG,GACJwP,GACN,KAAKhb,EACJ,OAAOjK,EACR,QACC,MAAMA,IAIH+pC,GAAS,SAASt0B,EAAGzU,EAAGgpC,EAASf,EAAMgB,GAC5C,IAAKd,GAASF,GAAO,MAAM,IAAItlC,UAAU,qCACzC,IAAIhB,GAAUsmC,EAAKtmC,OACbA,GAAU,IAAIA,EAAS,GAC7B+gB,GAAgBjO,EAAG,EAAE9S,EAAQ,MAC7B,IAAIooB,EAAOte,EAAWgJ,GACtBzU,EAAEyU,GACFyzB,GAAKzzB,EAAGu0B,GACR,IAAK,IAAI9qC,EAAE,EAAGA,EAAEyD,EAAQzD,IACvBgqC,GAAKzzB,EAAGwzB,EAAK/pC,IAEd,OAAOiP,EAAUsH,EAAG,EAAE9S,EAAQsnC,EAAW,IACxC,KAAKhgC,EAGJ,IAFA,IAAI4hB,EAAOpf,EAAWgJ,GAAGsV,EACrBhO,EAAM,IAAIjZ,MAAM+nB,GACX3sB,EAAE,EAAGA,EAAE2sB,EAAM3sB,IACrB6d,EAAI7d,GAAK0qC,GAAKn0B,EAAGsV,EAAK7rB,EAAE,GAGzB,OADA0R,EAAW6E,EAAGsV,GACPhO,EAER,QACC,IAAI/c,EAAI4pC,GAAKn0B,GAAI,GAEjB,MADA7E,EAAW6E,EAAGsV,GACR/qB,IAKHkqC,GAAW,SAASz0B,GAEzB,OADAjJ,EAAaiJ,EAAG,GACT,GAGF1V,GAAM,SAAS0V,EAAGzU,EAAGmpC,GAK1B,OAJAzmB,GAAgBjO,EAAG,EAAG,MACtBjH,EAAkBiH,EAAGy0B,IACrBlpC,EAAEyU,GACFyzB,GAAKzzB,EAAG00B,GACDL,GAAOr0B,EAAG,IAGZ20B,GAAM,SAAS30B,EAAGzU,EAAGmpC,GAM1B,OALAzmB,GAAgBjO,EAAG,EAAG,MACtBjH,EAAkBiH,EAAGy0B,IACrBlpC,EAAEyU,GACFyzB,GAAKzzB,EAAG00B,GACKh8B,EAAUsH,EAAG,EAAG,EAAG,IAE/B,KAAKxL,EACJ,IAAIjK,EAAIkN,EAAUuI,GAAI,GAEtB,OADApH,EAAQoH,EAAG,IACHzV,EAET,QACC,IAAIA,EAAI4pC,GAAKn0B,GAAI,GAEjB,MADApH,EAAQoH,EAAG,GACLzV,IAKHwb,GAAM,SAAS/F,EAAGzU,EAAGmpC,EAAMhqC,GAShC,OARAujB,GAAgBjO,EAAG,EAAG,MACtBjH,EAAkBiH,EAAG,SAASA,GAE7B,OADA9E,EAAa8E,EAAG,GACT,IAERzU,EAAEyU,GACFyzB,GAAKzzB,EAAG00B,GACRjB,GAAKzzB,EAAGtV,GACDgO,EAAUsH,EAAG,EAAG,EAAG,IACzB,KAAKxL,EACJ,OACD,QACC,IAAIjK,EAAI4pC,GAAKn0B,GAAI,GAEjB,MADApH,EAAQoH,EAAG,GACLzV,IAKH2oC,GAAiB,SAASlzB,EAAGzU,EAAGmpC,GASrC,OARAzmB,GAAgBjO,EAAG,EAAG,MACtBjH,EAAkBiH,EAAG,SAASA,GAE7B,OADA9E,EAAa8E,EAAG,GACT,IAERzU,EAAEyU,GACFyzB,GAAKzzB,EAAG00B,GACRl7B,EAAYwG,GACLtH,EAAUsH,EAAG,EAAG,EAAG,IACzB,KAAKxL,EACJ,OACD,QACC,IAAIjK,EAAI4pC,GAAKn0B,GAAI,GAEjB,MADApH,EAAQoH,EAAG,GACLzV,IAKHygC,GAAW,SAAShrB,EAAGzU,GAO5B,OANA0iB,GAAgBjO,EAAG,EAAG,MACtBjH,EAAkBiH,EAAG,SAASA,GAE7B,OADAmS,GAAenS,EAAG,GACX,IAERzU,EAAEyU,GACKq0B,GAAOr0B,EAAG,IAIZ40B,GAAY,WACjB,IAAI50B,EAAIzM,KAAKyM,EACbiO,GAAgBjO,EAAG,EAAG,MACtB,IAAIiF,EAAMjO,EAAWgJ,GAIrB,OAHAzM,KAAKshC,KAAK70B,GACVzM,KAAKuhC,MAAM90B,GACXzM,KAAKgf,KAAKvS,GACHtH,EAAUsH,EAAG,EAAGhO,EAAa,IACnC,KAAKwC,EAEJ,IAAIjK,EACJ,GAFAgJ,KAAKgf,KAAOtW,EAAY+D,EAAGiF,EAAI,GAE3BxN,EAAUuI,GAAI,GACjBzV,EAAI,CACHwqC,MAAM,EACNrqC,WAAO,OAEF,CAGN,IAFA,IAAI8pC,EAAYx9B,EAAWgJ,GAAKiF,EAC5B9G,EAAS,IAAI9P,MAAMmmC,GACd/qC,EAAE,EAAGA,EAAE+qC,EAAW/qC,IAC1B0U,EAAO1U,GAAK0qC,GAAKn0B,EAAGiF,EAAIxb,EAAE,GAE3Bc,EAAI,CACHwqC,MAAM,EACNrqC,MAAOyT,GAIT,OADAhD,EAAW6E,EAAGiF,GACP1a,EAER,QACC,IAAIkV,EAAI00B,GAAKn0B,GAAI,GAEjB,MADApH,EAAQoH,EAAG,GACLP,IAqCH20B,GAAO,SAAS9hB,EAAI/mB,GACzB,IAAMyU,EAAI+zB,GAAczhB,GAEpB0iB,EAAW,WAEd,OAAOV,GAAOt0B,EAAGzU,EAAGgI,KAAM/F,UAAW,GAAG,IAEzCwnC,EAAStC,MAAQ,SAAS6B,EAASf,GAElC,OAAOc,GAAOt0B,EAAGzU,EAAGgpC,EAASf,EAAM,GAAG,IAEvCwB,EAASV,OAAS,SAASC,EAASf,GACnC,OAAOc,GAAOt0B,EAAGzU,EAAGgpC,EAASf,EAAMxhC,IAEpCgjC,EAAS1qC,IAAM,SAASuvB,GACvB,OAAOvvB,GAAI0V,EAAGzU,EAAGsuB,IAElBmb,EAASL,IAAM,SAAS9a,GACvB,OAAO8a,GAAI30B,EAAGzU,EAAGsuB,IAElBmb,EAASjvB,IAAM,SAAS8T,EAAGzsB,GAC1B,OAAO2Y,GAAI/F,EAAGzU,EAAGsuB,EAAGzsB,IAErB4nC,EAAS1Y,OAAS,SAASzC,GAC1B,OAAOqZ,GAAelzB,EAAGzU,EAAGsuB,IAE7Bmb,EAAS1lC,SAAW,WACnB,OAAO07B,GAAShrB,EAAGzU,IAEE,mBAAXf,SACVwqC,EAASxqC,OAAOC,aAAe,iBAC/BuqC,EAASxqC,OAAOyqC,UAAY,WAC3B,OA/DgB,SAASj1B,EAAGzU,GAS9B,OARA0iB,GAAgBjO,EAAG,EAAG,MACtBjH,EAAkBiH,EAAG,SAASA,GAK7B,OAJA8R,GAAc9R,EAAGzT,EAAa,MAAO6kC,GAAc,GACnD/6B,EAAa2J,GAAI,EAAGzT,EAAa,UACjChB,EAAEyU,GACFxK,EAASwK,EAAG,EAAG,GACR,IAEDtH,EAAUsH,EAAG,EAAG,EAAG,IACzB,KAAKxL,EACJ,IAAIqgC,EAAO54B,EAAY+D,GAAI,GACvB80B,EAAQ74B,EAAY+D,GAAI,GACxBuS,EAAOtW,EAAY+D,GAAI,GAE3B,OADApH,EAAQoH,EAAG,GACJ,CACNA,EAAGA,EACH60B,KAAMA,EACNC,MAAOA,EACPviB,KAAMA,EACNgE,KAAMqe,IAGR,QACC,IAAIrqC,EAAI4pC,GAAKn0B,GAAI,GAEjB,MADApH,EAAQoH,EAAG,GACLzV,GAqCC2qC,CAAWl1B,EAAGzU,IAElBf,OAAO2qC,cACVH,EAASxqC,OAAO2qC,aAAe,SAASC,GACvC,GAAa,WAATA,EACH,OAAOpK,GAAShrB,EAAGzU,MAQvB,IAAI2oC,EAAeD,GAAO3pC,IAAI0V,GAC9B,IAAKk0B,EAAc,MAAM5mC,MAnWI,wCAqW7B,OADA4mC,EAAanuB,IAAIivB,EAAUzpC,GACpBypC,GAGFK,GAAQ,CACbC,IAAO,SAASt1B,GAIf,IAHA,IAAIzR,EAAI4lC,GAAKn0B,EAAG,GACZkb,EAAQlkB,EAAWgJ,GAAG,EACtBwzB,EAAO,IAAInlC,MAAM6sB,GACZzxB,EAAI,EAAGA,EAAIyxB,EAAOzxB,IAC1B+pC,EAAK/pC,GAAK0qC,GAAKn0B,EAAGvW,EAAE,GAGrB,OADAgqC,GAAKzzB,EAAG2yB,GAAUpkC,EAAGilC,IACd,GAER5rB,SAAY,SAAS5H,GACpB,IAAIzR,EAAI4lC,GAAKn0B,EAAG,GAEhB,OADAvG,EAAeuG,GAAIzR,GACZ,GAERy8B,SAAY,SAAShrB,GACpB,IAAIzR,EAAI4lC,GAAKn0B,EAAG,GAEhB,OADA1G,EAAgB0G,EAAG1Q,GAASf,IACrB,GAERgnC,WAAc,SAASv1B,GACtB,IAAI/Q,EAAKklC,GAAKn0B,EAAG,GACb9Q,EAAKilC,GAAKn0B,EAAG,GAEjB,OADAnH,EAAgBmH,EAAG/Q,aAAcC,GAC1B,GAERsmC,OAAU,SAAA7vB,EAAS3F,GAClB,IAAIzR,EAAI4lC,GAAKn0B,EAAG,GAEhB,OADA1G,EAAgB0G,EAAD2F,EAAWpX,IACnB,IAIT,GAAsB,mBAAX/D,QAAyBA,OAAOyqC,SAAU,CACpD,IAWM1e,GAAO,SAASvW,GACrB,IACIzV,EADO4pC,GAAKn0B,EAAG,GACNuW,OACb,OAAIhsB,EAAEwqC,KACE,GAEPtB,GAAKzzB,EAAGzV,EAAEG,OACH,IAIT2qC,GAAK,GAAS,SAASr1B,GACtB,IAAI60B,EAvBgB,SAAS70B,EAAG6N,GAChC,IAAItf,EAAIslC,GAAQ7zB,EAAG6N,GACf4nB,EAAUlnC,EAAE/D,OAAOyqC,UAClBQ,GACJtrB,GAAcnK,EAAG6N,EAAKthB,EAAa,wBACpC,IAAIsoC,EAAOnC,GAAM+C,EAASlnC,EAAG,IAG7B,OAFKmlC,GAASmB,IACb1qB,GAAcnK,EAAG6N,EAAKthB,EAAa,0DAC7BsoC,EAeIa,CAAa11B,EAAG,GAG3B,OAFAjH,EAAkBiH,EAAGuW,IACrBkd,GAAKzzB,EAAG60B,GACD,GAIT,GAAqB,mBAAVc,OAA0C,mBAAXnrC,OAAuB,CAChE,IAAMorC,GAAWprC,OAAO,aAClBqrC,GAAWrrC,OAAO,iBAElBsrC,GAAiB,CACtBpD,MAAS,SAASW,EAAQkB,EAASf,GAClC,OAAOc,GAAOjB,EAAOuC,IAAWvC,EAAOwC,IAAWtB,EAASf,EAAM,GAAG,IAErEb,UAAa,SAASU,EAAQE,GAC7B,IAAIvzB,EAAIqzB,EAAOuC,IACXrqC,EAAI8nC,EAAOwC,IACXE,EAAaxC,EAAcrmC,OAC/B+gB,GAAgBjO,EAAG,EAAE+1B,EAAY,MACjCxqC,EAAEyU,GACF,IAAI6N,EAAM7W,EAAWgJ,GACrB,GAAI0K,GAAkB1K,EAAG6N,EAAKthB,EAAa,gBAAkB4D,EAE5D,MADAyI,EAAQoH,EAAG,GACL,IAAI9R,UAAU,qBAErBwM,EAAWsF,EAAG6N,EAAK,GACnB,IAAK,IAAIpkB,EAAE,EAAGA,EAAEssC,EAAYtsC,IAC3BgqC,GAAKzzB,EAAGuzB,EAAc9pC,IAEvB,OAAO4qC,GAAOr0B,EAAG,EAAE+1B,IAEpB3rC,eAAkB,SAASipC,EAAQqB,EAAMsB,GACxC,IAAIh2B,EAAIqzB,EAAOuC,IACXrqC,EAAI8nC,EAAOwC,IAGf,OAFA5nB,GAAgBjO,EAAG,EAAG,MACtBzU,EAAEyU,GACE0K,GAAkB1K,GAAI,EAAGzT,EAAa,qBAAuB4D,GAChEyI,EAAQoH,EAAG,IACJ,IAERtF,EAAWsF,GAAI,EAAG,GAClByzB,GAAKzzB,EAAG00B,GACRjB,GAAKzzB,EAAGg2B,GACD3B,GAAOr0B,EAAG,KAElBkzB,eAAkB,SAASG,EAAQxZ,GAClC,OAAOqZ,GAAeG,EAAOuC,IAAWvC,EAAOwC,IAAWhc,IAE3DvvB,IAAO,SAAS+oC,EAAQxZ,GACvB,OAAOvvB,GAAI+oC,EAAOuC,IAAWvC,EAAOwC,IAAWhc,IAEhDoc,yBAA4B,SAAS5C,EAAQqB,GAC5C,IAAI10B,EAAIqzB,EAAOuC,IACXrqC,EAAI8nC,EAAOwC,IAGf,GAFA5nB,GAAgBjO,EAAG,EAAG,MACtBzU,EAAEyU,GACE0K,GAAkB1K,GAAI,EAAGzT,EAAa,+BAAiC4D,EAM3E,OAFAuK,EAAWsF,GAAI,EAAG,GAClByzB,GAAKzzB,EAAG00B,GACDL,GAAOr0B,EAAG,GALhBpH,EAAQoH,EAAG,IAObk2B,eAAkB,SAAS7C,GAC1B,IAAIrzB,EAAIqzB,EAAOuC,IACXrqC,EAAI8nC,EAAOwC,IAGf,OAFA5nB,GAAgBjO,EAAG,EAAG,MACtBzU,EAAEyU,GACE0K,GAAkB1K,GAAI,EAAGzT,EAAa,qBAAuB4D,GAChEyI,EAAQoH,EAAG,GACJ,OAERtF,EAAWsF,GAAI,EAAG,GACXq0B,GAAOr0B,EAAG,KAElB20B,IAAO,SAAStB,EAAQxZ,GACvB,OAAO8a,GAAItB,EAAOuC,IAAWvC,EAAOwC,IAAWhc,IAEhDsc,QAAW,SAAS9C,GACnB,IAAIrzB,EAAIqzB,EAAOuC,IACXrqC,EAAI8nC,EAAOwC,IAGf,GAFA5nB,GAAgBjO,EAAG,EAAG,MACtBzU,EAAEyU,GACE0K,GAAkB1K,GAAI,EAAGzT,EAAa,cAAgB4D,EAEzD,MADAyI,EAAQoH,EAAG,GACL1S,MAAM,sCAGb,OADAoN,EAAWsF,GAAI,EAAG,GACXq0B,GAAOr0B,EAAG,IAElB+F,IAAO,SAASstB,EAAQxZ,EAAGzsB,GAE1B,OADA2Y,GAAIstB,EAAOuC,IAAWvC,EAAOwC,IAAWhc,EAAGzsB,IACpC,GAERgpC,eAAkB,SAAS/C,EAAQhoC,GAClC,IAAI2U,EAAIqzB,EAAOuC,IACXrqC,EAAI8nC,EAAOwC,IAGf,OAFA5nB,GAAgBjO,EAAG,EAAG,MACtBzU,EAAEyU,GACE0K,GAAkB1K,GAAI,EAAGzT,EAAa,qBAAuB4D,GAChEyI,EAAQoH,EAAG,IACJ,IAERtF,EAAWsF,GAAI,EAAG,GAClByzB,GAAKzzB,EAAG3U,GACDgpC,GAAOr0B,EAAG,MA6Bbq2B,GAAsBjD,SAAS,sBAsB/BkD,GAAc,SAAShkB,EAAI/mB,EAAGwV,GACnC,IACIsyB,EArCA3wB,EAoCE1C,EAAI+zB,GAAczhB,GAExB,OAAQvR,GACP,IAAK,kBAvCF2B,EAAK,aAAczX,QACdiC,cACFwV,EAAE1Y,KAsCPqpC,EArCK3wB,EAsCL,MACD,IAAK,iBACJ2wB,EA7BwB,WAC1B,IAAI3wB,EAAI2zB,KAGR,cAFO3zB,EAAExV,cACFwV,EAAE1Y,KACF0Y,EAyBI6zB,GACT,MACD,IAAK,SACJlD,EAAS,GACT,MACD,QACC,MAAMnlC,UAAU,+BAIlB,OAFAmlC,EAAOwC,IAAYtqC,EACnB8nC,EAAOuC,IAAY51B,EACZ,IAAI21B,MAAMtC,EAAQyC,KAGpBU,GAAc,CAAC,WAAY,iBAAkB,UAC7CC,GAA2BD,GAAY5P,IAAI,SAACx5B,GAAD,OAAOb,EAAaa,KACrEioC,GAAK,YAAkB,SAASr1B,GAC/BuQ,GAAcvQ,EAAG,GACjB,IAAIe,EAAOy1B,GAAYhmB,GAAiBxQ,EAAG,EAAGy2B,GAAyB,GAAIA,KACvEC,EAAeJ,GAAYt2B,EAAG/D,EAAY+D,EAAG,GAAIe,GAErD,OADA0yB,GAAKzzB,EAAG02B,GACD,GAIT,IAAIC,GAAO,CACVC,QAAW,SAAS52B,GACnB,IAAIzR,EAAIslC,GAAQ7zB,EAAG,GACf6Z,EAAIsa,GAAKn0B,EAAG,GAEhB,OADAyzB,GAAKzzB,EAAGzR,EAAEsrB,IACH,GAERgd,WAAc,SAAS72B,GACtB,IAAIzR,EAAIslC,GAAQ7zB,EAAG,GACf6Z,EAAIsa,GAAKn0B,EAAG,GACZ5S,EAAI+mC,GAAKn0B,EAAG,GAKhB,YAJU,IAAN5S,EACHwlC,GAAuBrkC,EAAGsrB,GAE1BtrB,EAAEsrB,GAAKzsB,EACD,GAERsc,WAAc,SAAS1J,GACtB,IAAIzR,EAAIslC,GAAQ7zB,EAAG,GACfxU,EAAI8D,GAASf,GAEjB,OADAmL,EAAesG,EAAGzT,EAAaf,IACxB,GAERsrC,OAAU,SAAS92B,GAClB,IAEIu0B,EAFAhmC,EAAIslC,GAAQ7zB,EAAG,GACfkb,EAAQlkB,EAAWgJ,GAAG,EAEtBwzB,EAAO,IAAInlC,MAAMM,KAAKyd,IAAI,EAAG8O,EAAM,IACvC,GAAIA,EAAQ,IACXqZ,EAAUJ,GAAKn0B,EAAG,GACdkb,KAAU,GACb,IAAK,IAAIzxB,EAAI,EAAGA,EAAIyxB,EAAOzxB,IAC1B+pC,EAAK/pC,GAAK0qC,GAAKn0B,EAAGvW,EAAE,GAKvB,OADAgqC,GAAKzzB,EAAG0yB,GAAMnkC,EAAGgmC,EAASf,IACnB,GAERuD,QAAW,SAAS/2B,GACnB,IACI0C,EACAmyB,EAAMC,EAAOkC,EAFbzoC,EAAIslC,GAAQ7zB,EAAG,GAGnB,GAAsB,mBAAXxV,aAA4D,KAAlCkY,EAAInU,EAAE/D,OAAOysC,IAAI,aAErDpC,EAAO,SAAStiB,GACf,KAAIhf,KAAK2jC,OAAS3jC,KAAK4jC,KAAKjqC,QAA5B,CAEA,IAAIlC,EAAMuI,KAAK4jC,KAAK5jC,KAAK2jC,SACzB,MAAO,CAAClsC,EAAKuI,KAAKpI,OAAOH,MAE1B8pC,EAAQ,CACP3pC,OAAQoD,EACR4oC,KAAMhtC,OAAOgtC,KAAK5oC,GAClB2oC,MAAO,OAEF,CACN,IAAI3sC,EAAImoC,GAAMhwB,EAAGnU,EAAG,SACV,IAANhE,GACH+f,GAAWtK,EAAGzT,EAAa,mFAEf,KADbsoC,EAAOtqC,EAAEsqC,OAERvqB,GAAWtK,EAAGzT,EAAa,kDAC5BuoC,EAAQvqC,EAAEuqC,MACVkC,EAAQzsC,EAAEysC,MAoBX,OAlBAj+B,EAAkBiH,EAAG,WACpB,IAAI80B,EAAQX,GAAKn0B,EAAG,GAChBuS,EAAO4hB,GAAKn0B,EAAG,GACfzV,EAAImoC,GAAMmC,EAAMC,EAAO,CAACviB,IAE5B,QAAU,IAANhoB,EACH,OAAO,EAEH8D,MAAM+oC,QAAQ7sC,IAClB+f,GAAWtK,EAAGzT,EAAa,sDAC5B0hB,GAAgBjO,EAAGzV,EAAE2C,OAAQ,MAC7B,IAAK,IAAIzD,EAAE,EAAGA,EAAEc,EAAE2C,OAAQzD,IACzBgqC,GAAKzzB,EAAGzV,EAAEd,IAEX,OAAOc,EAAE2C,SAEVumC,GAAKzzB,EAAG80B,GACRrB,GAAKzzB,EAAGg3B,GACD,GAERK,MAAS,SAASr3B,GACjB,IACI0C,EACAnY,EAFAgE,EAAIslC,GAAQ7zB,EAAG,GAUnB,OALCzV,EAFqB,mBAAXC,aAA0D,KAAhCkY,EAAInU,EAAE/D,OAAOysC,IAAI,WAEjD1oC,EAAErB,OAEFwlC,GAAMhwB,EAAGnU,EAAG,IAEjBklC,GAAKzzB,EAAGzV,GACD,IAkCTrB,EAAOD,QAAQquC,wBApyByBC,MAqyBxCruC,EAAOD,QAAQuuC,4BAvyByB,EAwyBxCtuC,EAAOD,QAAQwuC,wBAryByBH,QAsyBxCpuC,EAAOD,QAAQ4qC,QAAUA,GACzB3qC,EAAOD,QAAQ2qC,OAASA,GACxB1qC,EAAOD,QAAQ6qC,OAASA,GACxB5qC,EAAOD,QAAQwqC,KAAOA,GACtBvqC,EAAOD,QAAQkrC,KAAOA,GACtBjrC,EAAOD,QAAQyuC,WAtCI,SAAS13B,GA2B3B,OAzBAi0B,GAAOluB,IAAIguB,GAAc/zB,GAAI,IAAIub,SAEjChmB,EAAkByK,EAAGsY,IAErBlH,GAAYpR,EAAGq1B,IACf/7B,EAAgB0G,EA7wBuBu3B,OA8wBvC38B,EAAaoF,GAAI,EAAGzT,EAAa,aACjC2M,EAAgB8G,EAjxBuB,GAkxBvCpF,EAAaoF,GAAI,EAAGzT,EAAa,iBACjC+M,EAAgB0G,EAhxBuBs3B,SAixBvC18B,EAAaoF,GAAI,EAAGzT,EAAa,aAEjC+kB,GAAkBtR,EAAG2zB,IACrB7lB,GAAc9N,EAAG22B,GAAM,GACvB/9B,EAAQoH,EAAG,GAEX8zB,GAAO9zB,EAAG,MAEVpG,EAAcoG,GAAI,GAClB3F,EAAY2F,EAAG5O,EAAmB,MAClCwJ,EAAaoF,GAAI,EAAGzT,EAAa,SAEjCknC,GAAKzzB,EAAG6yB,IACRj4B,EAAaoF,GAAI,EAAGzT,EAAa,WAE1B,uCCj1BJb,EAAQ,GA9BRsG,gBACAG,eACAI,aACAE,aACAC,aACAO,cACA7B,sBACA8B,qBACAvD,wBACAM,eACIW,gBACAR,iBACAe,aACAV,kBACAS,aACAD,aACAZ,uBACAS,gBACAX,aACAD,cACAa,gBACAC,gBACAH,gBACAL,eACAG,gBACAD,kBAEa8D,IAAjBD,cAAiBC,OACjBjF,oBACAhD,iBAEIoT,EAAcjU,EAAQ,GAAtBiU,UACF1K,EAAYvJ,EAAQ,IACpBwJ,EAAYxJ,EAAQ,GAClBisC,EAAcjsC,EAAQ,IAAtBisC,UACF5kB,EAAYrnB,EAAQ,IACpBsnB,EAAYtnB,EAAQ,GACpByJ,EAAYzJ,EAAQ,MAKtBA,EAAQ,IAHR6U,eACAC,aACA2S,oBAEExS,EAAYjV,EAAQ,IAClB2F,EAAkB3F,EAAQ,GAA1B2F,cACFqP,EAAYhV,EAAQ,IACpB+U,EAAY/U,EAAQ,GAClBksC,EAAQlsC,EAAQ,IAAhBksC,IACF92B,EAAYkS,EAAQlS,OACpB2B,EAAYuQ,EAAQvQ,SAEpBoiB,EAAe,SAAS7kB,GAC1BA,EAAEiF,MACFtF,EAAUK,EAAGA,EAAEiF,KAAOjF,EAAEsU,GAAGrP,IAAK,mBAG9BmQ,EAAkB,SAASpV,EAAG9U,GAChCyU,EAAUK,EAAG9U,EAAK8U,EAAEiF,IAAMjF,EAAEsU,GAAGU,QAAU,qCAGvC6iB,EAAmB,SAAS/tC,GAC9B,IAAKA,EAAG,MAAMoE,UAAU,qBAGtB4pC,GAA0B,SAAS5sC,GACrC2sC,EAA8B,iBAAN3sC,IAAqB,EAAFA,KAASA,IAGlD6sC,GAAU,SAAS7tC,GACrB,OAAOA,IAAM8oB,EAAQ/Q,gBAqBnB+1B,GAAa,SAASh4B,EAAG6N,GAC3B,IAAIyG,EAAKtU,EAAEsU,GACX,GAAIzG,EAAM,EAAG,CACT,IAAI3jB,EAAIoqB,EAAGU,QAAUnH,EAErB,OADAlO,EAAUK,EAAG6N,GAAOyG,EAAGrP,KAAOqP,EAAGU,QAAU,GAAI,sBAC3C9qB,GAAK8V,EAAEiF,IAAY+N,EAAQ/Q,eACnBjC,EAAE+B,MAAM7X,GACjB,OAAI2jB,EAAMzc,GACbuO,EAAUK,EAAW,IAAR6N,IAAcA,GAAO7N,EAAEiF,IAAK,iBAClCjF,EAAE+B,MAAM/B,EAAEiF,IAAM4I,IAChBA,IAAQzc,EACR4O,EAAEqC,IAAIgjB,YAGb1lB,EAAUK,GADV6N,EAAMzc,EAAoByc,IACNkF,EAAMqT,SAAW,EAAG,2BACpC9R,EAAGQ,KAAKmjB,UACDjlB,EAAQ/Q,eAER4L,GAAOyG,EAAGQ,KAAKpqB,MAAM6X,UAAY+R,EAAGQ,KAAKpqB,MAAMiY,QAAQkL,EAAM,GAAKmF,EAAQ/Q,iBAMvFi2B,GAAc,SAASl4B,EAAG6N,GAC5B,IAAIyG,EAAKtU,EAAEsU,GACX,GAAIzG,EAAM,EAAG,CACT,IAAI3jB,EAAIoqB,EAAGU,QAAUnH,EAErB,OADAlO,EAAUK,EAAG6N,GAAOyG,EAAGrP,KAAOqP,EAAGU,QAAU,GAAI,sBAC3C9qB,GAAK8V,EAAEiF,IAAY,KACX/a,EACT,GAAI2jB,EAAMzc,EAEb,OADAuO,EAAUK,EAAW,IAAR6N,IAAcA,GAAO7N,EAAEiF,IAAK,iBAClCjF,EAAEiF,IAAM4I,EAEf,MAAMvgB,MAAM,gCA8Dd6N,GAAa,SAAS6E,EAAG6N,GAC3B,IACI0F,EADAuB,EAAO9U,EAAEsU,GAAGU,QAEZnH,GAAO,GACPlO,EAAUK,EAAG6N,GAAO7N,EAAE8T,YAAcgB,EAAO,GAAI,qBAC/CvB,EAASuB,EAAO,EAAIjH,IAEpBlO,EAAUK,IAAK6N,EAAM,IAAM7N,EAAEiF,KAAO6P,EAAO,GAAI,mBAC/CvB,EAASvT,EAAEiF,IAAM4I,EAAM,GAE3B3Y,EAAIoe,WAAWtT,EAAGuT,IAGhB3a,GAAU,SAASoH,EAAG9U,GACxBiQ,GAAW6E,GAAI9U,EAAI,IAGjBitC,GAAU,SAASn4B,EAAGjT,EAAM0B,GAC9B,KAAO1B,EAAO0B,EAAI1B,IAAQ0B,IAAM,CAC5B,IAAI2pC,EAASp4B,EAAE+B,MAAMhV,GACjB+wB,EAAO,IAAIhd,EAAOs3B,EAAOr3B,KAAMq3B,EAAO1tC,OAC1CsoB,EAAQlK,UAAU9I,EAAGjT,EAAM0B,GAC3BukB,EAAQ/J,SAASjJ,EAAGvR,EAAIqvB,KAQ1BpjB,GAAa,SAASsF,EAAG6N,EAAK3iB,GAChC,IAAIP,EAAIqV,EAAEiF,IAAM,EACZozB,EAAOH,GAAYl4B,EAAG6N,GACtBtiB,EAAIyU,EAAE+B,MAAMs2B,GAChB14B,EAAUK,EAAG+3B,GAAQxsC,IAAMsiB,EAAMzc,EAAmB,0BACpDuO,EAAUK,GAAI9U,GAAK,EAAIA,GAAKA,IAAOP,EAAI0tC,EAAO,EAAI,eAClD,IAAIxuC,EAAIqB,GAAK,EAAIP,EAAIO,EAAImtC,EAAOntC,EAAI,EACpCitC,GAAQn4B,EAAGq4B,EAAMxuC,GACjBsuC,GAAQn4B,EAAGnW,EAAI,EAAGmW,EAAEiF,IAAM,GAC1BkzB,GAAQn4B,EAAGq4B,EAAMr4B,EAAEiF,IAAM,IAGvBnP,GAAW,SAASkK,EAAGs4B,EAASC,GAClC,IAAIxrC,EAAOirC,GAAWh4B,EAAGs4B,GACzBN,GAAWh4B,EAAGu4B,GAAOvvB,QAAQjc,IA6F3B+L,GAAmB,SAASkH,EAAGw4B,EAAIttC,GAGrC,GAFA2sC,EAA+B,mBAAPW,GACxBV,GAAwB5sC,GACd,IAANA,EACA8U,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAInE,EAAO5P,EAAUsnC,OACrC,CACDpjB,EAAgBpV,EAAG9U,GACnByU,EAAUK,EAAG9U,GAAK6nB,EAAMqT,SAAU,2BAElC,IADA,IAAIzL,EAAK,IAAIlY,EAASzC,EAAGw4B,EAAIttC,GACpBzB,EAAE,EAAGA,EAAEyB,EAAGzB,IACfkxB,EAAGhY,QAAQlZ,GAAGuf,QAAQhJ,EAAE+B,MAAM/B,EAAEiF,IAAM/Z,EAAIzB,IAC9C,IAAK,IAAIA,EAAE,EAAGA,EAAEyB,EAAGzB,WACRuW,EAAE+B,QAAQ/B,EAAEiF,KACnB/Z,EAAE,KACA8U,EAAEiF,IACRjF,EAAE+B,MAAM/B,EAAEiF,KAAKwzB,YAAY9d,GAE/BkK,EAAa7kB,IAGX7G,GAAoBL,GAEpBC,GAAoB,SAASiH,EAAGw4B,GAClC1/B,GAAiBkH,EAAGw4B,EAAI,IAGtBp/B,GAAqBL,GA6BrB2/B,GAAY,SAAS14B,EAAGrV,EAAGkvB,GAC7B,IAAI7rB,EAAMwS,EAASR,EAAGzQ,EAAgBsqB,IACtCzE,EAAgBpV,EAAG,GACnBgT,EAAQnK,aAAa7I,EAAGhS,GACxB2R,EAAUK,EAAGA,EAAEiF,KAAOjF,EAAEsU,GAAGrP,IAAK,kBAChCvE,EAAI6qB,SAASvrB,EAAGrV,EAAGqV,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAIjF,EAAE+B,MAAM/B,EAAEiF,IAAM,WAEhDjF,EAAE+B,QAAQ/B,EAAEiF,YACZjF,EAAE+B,QAAQ/B,EAAEiF,MAGjBpK,GAAgB,SAASmF,EAAGhW,GAC9B0uC,GAAU14B,EAAGS,EAAO+b,YAAYxc,EAAEqC,IAAIgjB,WAAW36B,MAAOwI,GAAmBlJ,IAyFzE2uC,GAAY,SAAS34B,EAAGrV,EAAGkvB,GAC7B,IAAI7rB,EAAMwS,EAASR,EAAGzQ,EAAgBsqB,IAItC,OAHA7G,EAAQnK,aAAa7I,EAAGhS,GACxB2R,EAAUK,EAAGA,EAAEiF,KAAOjF,EAAEsU,GAAGrP,IAAK,kBAChCvE,EAAI2qB,cAAcrrB,EAAGrV,EAAGqV,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAIjF,EAAEiF,IAAM,GAC7CjF,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAGjE,SAGxBhH,GAAc,SAASgG,EAAG6N,EAAK3iB,GACjC,IAAIP,EAAIqtC,GAAWh4B,EAAG6N,GAKtB,OAJAiqB,GAAwB5sC,GACxByU,EAAUK,EAAGrV,EAAE+8B,YAAa,kBAC5B1U,EAAQpK,UAAU5I,EAAGS,EAAO+b,YAAY7xB,EAAED,MAAOQ,IACjDyU,EAAUK,EAAGA,EAAEiF,KAAOjF,EAAEsU,GAAGrP,IAAK,kBACzBjF,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAGjE,SAoBxBjL,GAAkB,SAASiK,EAAG44B,EAAQC,GACxC,IAAIluC,EAAI,IAAIqoB,EAAQlS,OAAOtQ,EAAYiQ,EAAOwc,SAASjd,IACvDA,EAAE+B,MAAM/B,EAAEiF,KAAOta,EACjBk6B,EAAa7kB,IAcX84B,GAAc,SAAS94B,EAAG+4B,EAAI7tC,GAEhC,OADA4sC,GAAwB5sC,GACjB6tC,EAAGvP,SACN,KAAKr4B,EACD,IAAIuR,EAAIq2B,EAAGruC,MACX,OAAM,GAAKQ,GAAKA,GAAKwX,EAAEH,UAChB,CACHvY,KAAMuC,EAAa,IAAI,GACvBi/B,IAAK9oB,EAAEC,QAAQzX,EAAE,IAHqB,KAM9C,KAAK+F,EACD,IAAIyR,EAAIq2B,EAAGruC,MACPa,EAAImX,EAAEnX,EACV,KAAM,GAAKL,GAAKA,GAAKK,EAAEwvB,SAAS7tB,QAAS,OAAO,KAChD,IAAIlD,EAAOuB,EAAEwvB,SAAS7vB,EAAE,GAAGlB,KAC3B,MAAO,CACHA,KAAMA,EAAOA,EAAKyX,SAAWlV,EAAa,cAAc,GACxDi/B,IAAK9oB,EAAEF,OAAOtX,EAAE,IAGxB,QAAS,OAAO,OAuGlB2Q,GAAgB,SAASmE,EAAG6N,GAC9B,IAAI3jB,EAAI8tC,GAAWh4B,EAAG6N,GAEtB,IAAK3jB,EAAEqX,aAAc,CACjB,IAAKb,EAAImjB,QAAQ35B,GACb,OAAO,KAEX8oB,EAAQrO,cAAc3E,EAAG9V,GAE7B,OAAOA,EAAEyX,UAGPzF,GAAgBL,GA6ChBF,GAAiB,SAASqE,EAAG6N,GAC/B,OAAOnN,EAAI+G,UAAUuwB,GAAWh4B,EAAG6N,KAQjC9R,GAAgB,SAASiE,EAAG6N,GAC9B,OAAOnN,EAAIkH,SAASowB,GAAWh4B,EAAG6N,KAuChCmrB,GAAO,IAAIzd,QAwDX0d,GAAS,SAASj5B,EAAGoL,GACvBlW,EAAIqjB,iBAAiBvY,EAAGoL,EAAG4J,QAAS5J,EAAGyJ,WAGrCxY,GAAW,SAAS2D,EAAG6N,GACzB,IAAI3jB,EAAI8tC,GAAWh4B,EAAG6N,GACtB,OAAOkqB,GAAQ7tC,GAAMA,EAAE8W,QAAU9Q,GAsF/BgpC,GAAoB3sC,EAAa,KAuCjC4sC,GAAe,SAASn5B,EAAEo5B,EAAGC,GAC/B15B,EAAUK,EAAGq5B,IAAOrnC,GAAgBgO,EAAEsU,GAAGrP,IAAMjF,EAAEiF,KAAQo0B,EAAOD,EAC5D,sDAGF3jC,GAAY,SAASuK,EAAGkb,EAAOrG,EAAU+E,EAAKC,GAChDla,EAAUK,EAAS,OAAN6Z,KAAgB7Z,EAAEsU,GAAGW,WAAa9f,EAAO6gB,UAAW,yCACjEZ,EAAgBpV,EAAGkb,EAAQ,GAC3Bvb,EAAUK,EAAGA,EAAEwP,SAAWhb,EAAQ,wCAClC2kC,GAAan5B,EAAGkb,EAAOrG,GACvB,IAAIC,EAAO9U,EAAEiF,KAAOiW,EAAQ,GAClB,OAANrB,GAAwB,IAAV7Z,EAAE4Y,KAChB5Y,EAAEsU,GAAGqE,IAAMkB,EACX7Z,EAAEsU,GAAGyE,MAAQa,EACb1kB,EAAIyiB,UAAU3X,EAAG8U,EAAMD,IAEvB3f,EAAIqjB,iBAAiBvY,EAAG8U,EAAMD,GAG9BA,IAAa7iB,GAAegO,EAAEsU,GAAGrP,IAAMjF,EAAEiF,MACzCjF,EAAEsU,GAAGrP,IAAMjF,EAAEiF,MAOftM,GAAa,SAASqH,EAAGkb,EAAOrG,EAAU2D,EAASoB,EAAKC,GAK1D,IAAIrK,EACAsF,EALJnV,EAAUK,EAAS,OAAN6Z,KAAgB7Z,EAAEsU,GAAGW,WAAa9f,EAAO6gB,UAAW,yCACjEZ,EAAgBpV,EAAGkb,EAAQ,GAC3Bvb,EAAUK,EAAGA,EAAEwP,SAAWhb,EAAQ,wCAClC2kC,GAAan5B,EAAGkb,EAAOrG,GAInBC,EADY,IAAZ0D,EACO,EAEA0f,GAAYl4B,EAAGwY,GAE1B,IAAIxD,EAAUhV,EAAEiF,KAAOiW,EAAQ,GAC/B,GAAU,OAANrB,GAAc7Z,EAAE4Y,IAAM,EAAG,CACzB,IAAI9uB,EAAI,CACJkrB,QAASA,EACTH,SAAUA,GAEdrF,EAASta,EAAI4kB,WAAW9Z,EAAGi5B,GAAQnvC,EAAGkrB,EAASF,OAC5C,CACH,IAAIR,EAAKtU,EAAEsU,GACXA,EAAGqE,IAAMkB,EACTvF,EAAGyE,MAAQa,EAEXtF,EAAG+E,MAAQrE,EACXV,EAAGwE,cAAgB9Y,EAAEwY,QACrBxY,EAAEwY,QAAU1D,EACZR,EAAGW,aAAe9f,EAAOokB,SAAWvZ,EAAE4W,UACtCtC,EAAGW,YAAc9f,EAAO0jB,YACxB3jB,EAAIyiB,UAAU3X,EAAGgV,EAASH,GAC1BP,EAAGW,aAAe9f,EAAO0jB,YACzB7Y,EAAEwY,QAAUlE,EAAGwE,cACftJ,EAAShb,EAMb,OAHIqgB,IAAa7iB,GAAegO,EAAEsU,GAAGrP,IAAMjF,EAAEiF,MACzCjF,EAAEsU,GAAGrP,IAAMjF,EAAEiF,KAEVuK,GAiDL8pB,GAAc,SAASt5B,EAAGu5B,EAAMruC,GAClC,IAAI6tC,EAAKf,GAAWh4B,EAAGu5B,GACvB55B,EAAUK,EAAG+4B,EAAGhU,eAAgB,yBAChC,IAAIriB,EAAIq2B,EAAGruC,MAGX,OAFAotC,GAAwB5sC,GACxByU,EAAUK,EAAG,GAAK9U,GAAKA,GAAKwX,EAAEnX,EAAEwvB,SAAS7tB,OAAQ,yBAC1C,CACHwV,EAAGA,EACHjZ,EAAGyB,EAAI,IAgDfhC,EAAOD,QAAQ47B,aAAwBA,EACvC37B,EAAOD,QAAQmsB,gBAAwBA,EACvClsB,EAAOD,QAAQmM,aAp7BM,SAAS4K,EAAG6N,GAC7B,OAAQA,EAAM,GAAKA,GAAOzc,EACpByc,EACC7N,EAAEiF,IAAMjF,EAAEsU,GAAGU,QAAWnH,GAk7BnC3kB,EAAOD,QAAQoM,UArOG,SAAS2K,EAAGsG,GACtBA,IAAOrT,GAAaqT,IAAOnU,EAC3BijB,EAAgBpV,EAAG,IAEnBoV,EAAgBpV,EAAG,GACnBgT,EAAQpK,UAAU5I,EAAGA,EAAE+B,MAAM/B,EAAEiF,IAAI,IACnCtF,EAAUK,EAAGA,EAAEiF,KAAOjF,EAAEsU,GAAGrP,IAAK,mBAGpC+N,EAAQ9L,WAAWlH,EAAGsG,EAAItG,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAIjF,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAIjF,EAAE+B,MAAM/B,EAAEiF,IAAM,WAC3EjF,EAAE+B,QAAQ/B,EAAEiF,MA4NvB/b,EAAOD,QAAQqM,YArhCK,SAAS0K,EAAGw5B,GAC5B,IAAIhT,EAAMxmB,EAAEqC,IAAI6H,MAEhB,OADAlK,EAAEqC,IAAI6H,MAAQsvB,EACPhT,GAmhCXt9B,EAAOD,QAAQsM,kBAhhCW,SAASyK,EAAGy5B,GAClC,IAAIjT,EAAMxmB,EAAEqC,IAAIiW,cAEhB,OADAtY,EAAEqC,IAAIiW,cAAgBmhB,EACfjT,GA8gCXt9B,EAAOD,QAAQuM,SAzJE,SAASwK,EAAG9U,EAAGX,GAC5BkL,GAAUuK,EAAG9U,EAAGX,EAAG,EAAG,OAyJ1BrB,EAAOD,QAAQwM,UAAwBA,GACvCvM,EAAOD,QAAQyM,eAr+BQ,SAASsK,EAAG9U,GAC/B,IAAIoc,EACAgN,EAAKtU,EAAEsU,GACX3U,EAAUK,EAAG9U,GAAK,EAAG,gBACjB8U,EAAE8T,WAAa9T,EAAEiF,IAAM/Z,EACvBoc,GAAM,EAEMtH,EAAEiF,IAAM9P,EAAO4e,YACf1iB,EAAgBnG,EACxBoc,GAAM,GAENpS,EAAI8e,eAAehU,EAAG9U,GACtBoc,GAAM,GAOd,OAHIA,GAAOgN,EAAGrP,IAAMjF,EAAEiF,IAAM/Z,IACxBopB,EAAGrP,IAAMjF,EAAEiF,IAAM/Z,GAEdoc,GAm9BXpe,EAAOD,QAAQ2M,YAlVK,SAASoK,EAAG05B,EAAQC,EAAQrzB,GAC5C,IAAIszB,EAAK5B,GAAWh4B,EAAG05B,GACnBG,EAAK7B,GAAWh4B,EAAG25B,GAEnBlwC,EAAI,EAER,GAAIsuC,GAAQ6B,IAAO7B,GAAQ8B,GACvB,OAAQvzB,GACJ,KAAK/T,EAAU9I,EAAIiX,EAAI6oB,cAAcvpB,EAAG45B,EAAIC,GAAK,MACjD,KAAKnnC,EAAUjJ,EAAIiX,EAAIuoB,cAAcjpB,EAAG45B,EAAIC,GAAK,MACjD,KAAKpnC,EAAUhJ,EAAIiX,EAAI2oB,eAAerpB,EAAG45B,EAAIC,GAAK,MAClD,QAASl6B,EAAUK,GAAG,EAAO,kBAIrC,OAAOvW,GAoUXP,EAAOD,QAAQ4M,WApFI,SAASmK,EAAG9U,GAC3BkqB,EAAgBpV,EAAG9U,GACfA,GAAK,EACLwV,EAAIwF,YAAYlG,EAAG9U,GACR,IAANA,IACL8nB,EAAQnK,aAAa7I,EAAGO,EAAWP,EAAGzT,EAAa,IAAI,KACvDoT,EAAUK,EAAGA,EAAEiF,KAAOjF,EAAEsU,GAAGrP,IAAK,oBA+ExC/b,EAAOD,QAAQ6M,SAAwBA,GACvC5M,EAAOD,QAAQ8M,gBAAwBA,GACvC7M,EAAOD,QAAQ+M,SA3ME,SAASgK,EAAG85B,EAAQl7B,EAAMm7B,GACvC3kB,EAAgBpV,EAAG,GACnB,IAAI9V,EAAI8V,EAAE+B,MAAM/B,EAAEiF,IAAK,GACvB,OAAI/a,EAAE66B,eACK4S,EAAU33B,EAAG9V,EAAEQ,MAAMa,EAAGuuC,EAAQl7B,EAAMm7B,GAC1C,GAuMX7wC,EAAOD,QAAQgN,UA5GG,SAAS+J,GACvBoV,EAAgBpV,EAAG,GACnB/K,EAAO0uB,cAAc3jB,IA2GzB9W,EAAOD,QAAQiN,OAhCA,aAiCfhN,EAAOD,QAAQkN,cA/BO,WAElB,OADA2c,QAAQknB,KAAK,kCACN,GA8BX9wC,EAAOD,QAAQmN,kBAtBW,WAEtB,OADA0c,QAAQknB,KAAK,sCACN,GAqBX9wC,EAAOD,QAAQoN,aA3fM,SAAS2J,EAAG6N,EAAKgM,GAClC,OAAO8e,GAAU34B,EAAGg4B,GAAWh4B,EAAG6N,GAAMgM,IA2f5C3wB,EAAOD,QAAQqN,cA/eO,SAAS0J,EAAGhW,GAC9B,OAAO2uC,GAAU34B,EAAGS,EAAO+b,YAAYxc,EAAEqC,IAAIgjB,WAAW36B,MAAOwI,GAAmBlJ,IA+etFd,EAAOD,QAAQyN,SAzfE,SAASsJ,EAAG6N,EAAK3iB,GAC9B,IAAIP,EAAIqtC,GAAWh4B,EAAG6N,GAKtB,OAJAiqB,GAAwB5sC,GACxB8U,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAInE,EAAO9P,EAAa9F,GACzC25B,EAAa7kB,GACbU,EAAI2qB,cAAcrrB,EAAGrV,EAAGqV,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAIjF,EAAEiF,IAAM,GAC7CjF,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAGjE,SAof9B9X,EAAOD,QAAQ4N,iBApiBU,SAASmJ,EAAGi6B,GACjC,IACIzU,EADA5gB,EAAMozB,GAAWh4B,EAAGi6B,GAEpB3yB,GAAM,EACV,OAAQ1C,EAAI5D,SACR,KAAKxQ,EACL,KAAKE,EACD80B,EAAK5gB,EAAIla,MAAMoY,UACf,MACJ,QACI0iB,EAAKxlB,EAAEqC,IAAImjB,GAAG5gB,EAAI5D,SAU1B,OANIwkB,UACAxlB,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAInE,EAAOtQ,EAAYg1B,GACxCX,EAAa7kB,GACbsH,GAAM,GAGHA,GAihBXpe,EAAOD,QAAQ8N,aArgBM,SAASiJ,EAAG6N,GAC7B,IAAIljB,EAAIqtC,GAAWh4B,EAAG6N,GAEtB,OADAnN,EAAI2qB,cAAcrrB,EAAGrV,EAAGqV,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAIjF,EAAEiF,IAAM,GAC7CjF,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAGjE,SAmgB9B9X,EAAOD,QAAQ+N,WAn8BI,SAASgJ,GACxB,OAAOA,EAAEiF,KAAOjF,EAAEsU,GAAGU,QAAU,IAm8BnC9rB,EAAOD,QAAQgO,eA1kBQ,SAAS+I,EAAGk6B,EAAWhvC,GAC1C,IAAIivC,EAAKrB,GAAY94B,EAAGg4B,GAAWh4B,EAAGk6B,GAAYhvC,GAClD,GAAIivC,EAAI,CACJ,IAAInwC,EAAOmwC,EAAGnwC,KACVwhC,EAAM2O,EAAG3O,IAGb,OAFAxY,EAAQpK,UAAU5I,EAAGwrB,GACrB7rB,EAAUK,EAAGA,EAAEiF,KAAOjF,EAAEsU,GAAGrP,IAAK,kBACzBjb,EAEX,OAAO,MAkkBXd,EAAOD,QAAQiO,iBAjhBU,SAAS8I,EAAG6N,GACjC,IAAI3jB,EAAI8tC,GAAWh4B,EAAG6N,GACtBlO,EAAUK,EAAG9V,EAAEy9B,mBAAoB,0BACnC,IAAI3J,EAAK9zB,EAAEQ,MAAMqY,UAGjB,OAFA/C,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAInE,EAAOkd,EAAGjd,KAAMid,EAAGtzB,OACxCm6B,EAAa7kB,GACNA,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAGjE,SA4gB9B9X,EAAOD,QAAQkO,WAz4BI,SAAS6I,EAAG6N,GAC3BnT,GAAWsF,EAAG6N,EAAK,IAy4BvB3kB,EAAOD,QAAQmO,cAjTO,SAAS4I,EAAG9U,GAC9B,OAAOmR,GAAS2D,EAAG9U,KAAOkF,GAiT9BlH,EAAOD,QAAQoO,gBA3TS,SAAS2I,EAAG6N,GAChC,IAAI3jB,EAAI8tC,GAAWh4B,EAAG6N,GACtB,OAAO3jB,EAAE+tC,QAAQ/tC,IAAMA,EAAEkwC,gBA0T7BlxC,EAAOD,QAAQqO,eA7QQ,SAAS0I,EAAG6N,GAC/B,OAAOxR,GAAS2D,EAAG6N,KAASpd,GA6QhCvH,EAAOD,QAAQsO,cApSO,SAASyI,EAAG6N,GAC9B,OAAOmqB,GAAWh4B,EAAG6N,GAAKhJ,eAoS9B3b,EAAOD,QAAQuO,oBA3Qa,SAASwI,EAAG6N,GACpC,OAAOxR,GAAS2D,EAAG6N,KAASxd,GA2QhCnH,EAAOD,QAAQwO,UA1TG,SAASuI,EAAG9U,GAC1B,OAAOmR,GAAS2D,EAAG9U,KAAOiF,GA0T9BjH,EAAOD,QAAQyO,WAnTI,SAASsI,EAAG9U,GAC3B,OAAOmR,GAAS2D,EAAG9U,KAAOgF,GAmT9BhH,EAAOD,QAAQ0O,gBAhTS,SAASqI,EAAG9U,GAChC,OAAOmR,GAAS2D,EAAG9U,IAAM,GAgT7BhC,EAAOD,QAAQ2O,aArSM,SAASoI,EAAG6N,GAC7B,OAA4C,IAArCnN,EAAIkH,SAASowB,GAAWh4B,EAAG6N,KAqStC3kB,EAAOD,QAAQ4O,YAtYK,SAAStM,EAAGyU,GAC5B,IAAIq6B,EAAIrB,GAAK1uC,IAAIiB,GACjB,QAAK8uC,IAES,OAANr6B,GAAgBA,EAAEqC,MAAQg4B,IAmYtCnxC,EAAOD,QAAQ6O,aAnSM,SAASkI,EAAG6N,GAC7B,IAAI3jB,EAAI8tC,GAAWh4B,EAAG6N,GACtB,OAAO3jB,EAAEqX,cAAgBb,EAAImjB,QAAQ35B,IAkSzChB,EAAOD,QAAQ8O,YAhTK,SAASiI,EAAG6N,GAC5B,OAAOmqB,GAAWh4B,EAAG6N,GAAK6Z,aAgT9Bx+B,EAAOD,QAAQ+O,aA3RM,SAASgI,EAAG6N,GAC7B,OAAOxR,GAAS2D,EAAG6N,KAASld,GA2RhCzH,EAAOD,QAAQgP,eAjSQ,SAAS+H,EAAG6N,GAC/B,IAAI3jB,EAAI8tC,GAAWh4B,EAAG6N,GACtB,OAAO3jB,EAAEy9B,iBAAiBz9B,IAAMA,EAAEowC,qBAgStCpxC,EAAOD,QAAQkP,QAzGC,SAAS6H,EAAG6N,GACxB,IAAIljB,EAAIqtC,GAAWh4B,EAAG6N,GAClBvM,EAAK,IAAIR,EACbJ,EAAIwpB,YAAYlqB,EAAGsB,EAAI3W,GACvBqV,EAAE+B,MAAM/B,EAAEiF,KAAO3D,EACjBujB,EAAa7kB,IAqGjB9W,EAAOD,QAAQmP,SA1PE,SAAS4H,EAAGu6B,EAAQ37B,EAAM47B,EAAW5vC,GAE7C4vC,EADAA,EACYjrC,EAAgBirC,GADLtB,GAEf,OAATtuC,IAAeA,EAAO2E,EAAgB3E,IAC1C,IAAI0vB,EAAI,IAAIsd,EAAI53B,EAAGu6B,EAAQ37B,GACvB4Q,EAASta,EAAI+lB,qBAAqBjb,EAAGsa,EAAGkgB,EAAW5vC,GACvD,GAAI4kB,IAAWhb,EAAQ,CACnB,IAAIkO,EAAI1C,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAGva,MAC3B,GAAIgY,EAAEH,WAAa,EAAG,CAElB,IAAIk4B,EAAKh6B,EAAO+b,YAAYxc,EAAEqC,IAAIgjB,WAAW36B,MAAOwI,GAEpDwP,EAAEF,OAAO,GAAGwG,QAAQyxB,IAG5B,OAAOjrB,GA4OXtmB,EAAOD,QAAQqP,aAnkBM,SAAS0H,GAC1BjK,GAAgBiK,IAmkBpB9W,EAAOD,QAAQuP,gBA9nBS,SAASwH,EAAG6C,GAChC,IAAItU,EALc,SAASyR,EAAG6C,GAC9B,OAAO,IAAImQ,EAAQpQ,MAAM5C,EAAG6C,GAIpB63B,CAAc16B,EAAG6C,GAGzB,OAFA7C,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAI+N,EAAQlS,OAAOpQ,EAAenC,GACnDs2B,EAAa7kB,GACNzR,EAAEqQ,MA2nBb1V,EAAOD,QAAQwP,SAtIE,SAASuH,EAAG6N,GACzB,IAAIljB,EAAIqtC,GAAWh4B,EAAG6N,GAItB,OAHAlO,EAAUK,EAAGrV,EAAE+8B,YAAa,kBAC5B1nB,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAInE,EACVL,EAAOyc,UAAUld,EAAGrV,EAAED,MAAOsV,EAAEiF,IAAM,IAE5C4f,EAAa7kB,GACN,WAEAA,EAAE+B,MAAM/B,EAAEiF,YACVjF,EAAE+B,QAAQ/B,EAAEiF,KACZ,IA4Hf/b,EAAOD,QAAQyP,UApJG,SAASsH,EAAG9U,EAAGX,EAAGmY,GAChC,OAAO/J,GAAWqH,EAAG9U,EAAGX,EAAGmY,EAAG,EAAG,OAoJrCxZ,EAAOD,QAAQ0P,WAAwBA,GACvCzP,EAAOD,QAAQ2P,QAAwBA,GACvC1P,EAAOD,QAAQ4P,gBA/yBS,SAASmH,EAAGxR,GAChCwR,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAInE,EAAO1Q,IAAgB5B,GAC5Cq2B,EAAa7kB,IA8yBjB9W,EAAOD,QAAQ6P,iBAAwBA,GACvC5P,EAAOD,QAAQ8P,kBAAwBA,GACvC7P,EAAOD,QAAQ+P,gBAn2BS,SAAUgH,EAAGmF,GACjCA,EAAM5V,EAAgB4V,GADyB,QAAAgB,EAAA3Y,UAAAN,OAANkY,EAAM,IAAA/W,MAAA8X,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANhB,EAAMgB,EAAA,GAAA5Y,UAAA4Y,GAE/C,OAAO4M,EAAQ9N,kBAAkBlF,EAAGmF,EAAKC,IAk2B7Clc,EAAOD,QAAQgQ,oBAnyBa,SAAS+G,GACjChG,GAAYgG,EAAG5O,EAAmB8B,IAmyBtChK,EAAOD,QAAQiQ,gBA74BS,SAAS8G,EAAG9U,GAChC4sC,GAAwB5sC,GACxB8U,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAInE,EAAO9P,EAAa9F,GACzC25B,EAAa7kB,IA24BjB9W,EAAOD,QAAQkQ,kBAAwBA,GACvCjQ,EAAOD,QAAQmQ,mBAAwBA,GACvClQ,EAAOD,QAAQoQ,sBAlzBe,SAAS2G,EAAGzU,GACtCyU,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAInE,EAAOzQ,EAAoB9E,GAChDs5B,EAAa7kB,IAizBjB9W,EAAOD,QAAQqQ,gBAn2BS,SAAU0G,EAAGxU,GACjC,GAAIA,QACAwU,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAInE,EAAO3Q,EAAU,MACtC6P,EAAEiF,UACC,CACH4yB,EAA8B,iBAANrsC,GACxB,IAAIsW,EAAKqR,EAAgBnT,EAAGxU,GAC5BwnB,EAAQnK,aAAa7I,EAAG8B,GACxBtW,EAAIsW,EAAGL,SAIX,OAFA9B,EAAUK,EAAGA,EAAEiF,KAAOjF,EAAEsU,GAAGrP,IAAK,kBAEzBzZ,GAw1BXtC,EAAOD,QAAQsQ,gBA54BS,SAASyG,EAAGxU,EAAGyB,GAEnC,IAAI6U,EAWJ,OAZAg2B,GAAwB7qC,GAEZ,IAARA,GACAzB,EAAIe,EAAa,IAAI,GACrBuV,EAAKvB,EAAWP,EAAGxU,KAEnBA,EAAI+D,EAAgB/D,GACpBmU,EAAUK,EAAGxU,EAAE0B,QAAUD,EAAK,qCAC9B6U,EAAKtB,EAASR,EAAGxU,EAAE6Z,SAAS,EAAGpY,KAEnC+lB,EAAQnK,aAAa7I,EAAG8B,GACxBnC,EAAUK,EAAGA,EAAEiF,KAAOjF,EAAEsU,GAAGrP,IAAK,kBACzBnD,EAAGpX,OAg4BdxB,EAAOD,QAAQuQ,YA95BK,SAASwG,GACzBA,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAInE,EAAO3Q,EAAU,MACtC00B,EAAa7kB,IA65BjB9W,EAAOD,QAAQwQ,eA15BQ,SAASuG,EAAG9U,GAC/B2sC,EAA8B,iBAAN3sC,GACxB8U,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAInE,EAAO/P,EAAa7F,GACzC25B,EAAa7kB,IAw5BjB9W,EAAOD,QAAQyQ,eA/3BQ,SAAUsG,EAAGxU,GAChC,GAAIA,QACAwU,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAInE,EAAO3Q,EAAU,MACtC6P,EAAEiF,UACC,CACH,IAAInD,EAAKtB,EAASR,EAAGzQ,EAAgB/D,IACrCwnB,EAAQnK,aAAa7I,EAAG8B,GACxBtW,EAAIsW,EAAGL,SAGX,OADA9B,EAAUK,EAAGA,EAAEiF,KAAOjF,EAAEsU,GAAGrP,IAAK,kBACzBzZ,GAs3BXtC,EAAOD,QAAQ0Q,eAnzBQ,SAASqG,GAG5B,OAFAA,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAInE,EAAOnQ,EAAaqP,GACzC6kB,EAAa7kB,GACNA,EAAEqC,IAAI6V,aAAelY,GAizBhC9W,EAAOD,QAAQ2Q,cAx+BO,SAASoG,EAAG6N,GAC9BmF,EAAQpK,UAAU5I,EAAGg4B,GAAWh4B,EAAG6N,IACnClO,EAAUK,EAAGA,EAAEiF,KAAOjF,EAAEsU,GAAGrP,IAAK,mBAu+BpC/b,EAAOD,QAAQ4Q,iBAr3BU,SAAUmG,EAAGmF,EAAKC,GAEvC,OADAD,EAAM5V,EAAgB4V,GACf6N,EAAQ9N,kBAAkBlF,EAAGmF,EAAKC,IAo3B7Clc,EAAOD,QAAQ6Q,aA1SM,SAASkG,EAAG05B,EAAQC,GACrC,IAAIC,EAAK5B,GAAWh4B,EAAG05B,GACnBG,EAAK7B,GAAWh4B,EAAG25B,GACvB,OAAO5B,GAAQ6B,IAAO7B,GAAQ8B,GAAMn5B,EAAI6oB,cAAc,KAAMqQ,EAAIC,GAAM,GAwS1E3wC,EAAOD,QAAQ8Q,WAvqBI,SAASiG,EAAG6N,GAC3B,IAAIljB,EAAIqtC,GAAWh4B,EAAG6N,GAGtB,OAFAlO,EAAUK,EAAGrV,EAAE+8B,UAAU/8B,GAAI,kBAC7BqoB,EAAQ/J,SAASjJ,EAAGA,EAAEiF,IAAM,EAAGxE,EAAOic,SAAS1c,EAAGrV,EAAED,MAAOsV,EAAE+B,MAAM/B,EAAEiF,IAAM,KACpEjF,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAGjE,SAoqB9B9X,EAAOD,QAAQ+Q,YAAwBA,GACvC9Q,EAAOD,QAAQgR,YAlrBK,SAAS+F,EAAG6N,EAAKtiB,GACjC,IAAIZ,EAAIqtC,GAAWh4B,EAAG6N,GACtBlO,EAAUK,EAAGrV,EAAE+8B,YAAa,kBAC5B,IAAI7N,EAAI,IAAI/Y,EAAOzQ,EAAoB9E,GAGvC,OAFAynB,EAAQpK,UAAU5I,EAAGS,EAAOic,SAAS1c,EAAGrV,EAAED,MAAOmvB,IACjDla,EAAUK,EAAGA,EAAEiF,KAAOjF,EAAEsU,GAAGrP,IAAK,kBACzBjF,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAGjE,SA6qB9B9X,EAAOD,QAAQiR,WAtfI,SAAS8F,EAAG6N,GAC3B,IAAI3jB,EAAI8tC,GAAWh4B,EAAG6N,GACtB,OAAQ3jB,EAAEs/B,SACN,KAAK34B,EACL,KAAKC,EACD,OAAO5G,EAAE6/B,QACb,KAAKr5B,EACD,OAAOxG,EAAEQ,MAAMuC,IACnB,KAAKuD,EACD,OAAOiQ,EAAOmc,UAAU1yB,EAAEQ,OAC9B,QACI,OAAO,IA4enBxB,EAAOD,QAAQkR,WAxuBI,SAAS6F,EAAG6N,GAC3BuH,EAAgBpV,EAAG,GACnB,IAAI9V,EAAI8tC,GAAWh4B,EAAG6N,GACtBlO,EAAUK,EAAG9V,EAAEw9B,YAAa,kBAC5B,IAAI7N,EAAI7Z,EAAE+B,MAAM/B,EAAEiF,IAAM,GACpB7X,EAAI4S,EAAE+B,MAAM/B,EAAEiF,IAAM,GACxBxE,EAAOqc,aAAa9c,EAAG9V,EAAEQ,MAAOmvB,EAAGzsB,GACnCqT,EAAOgc,kBAAkBvyB,EAAEQ,cACpBsV,EAAE+B,QAAQ/B,EAAEiF,YACZjF,EAAE+B,QAAQ/B,EAAEiF,MAguBvB/b,EAAOD,QAAQmR,YA7tBK,SAAS4F,EAAG6N,EAAK3iB,GACjC4sC,GAAwB5sC,GACxBkqB,EAAgBpV,EAAG,GACnB,IAAI9V,EAAI8tC,GAAWh4B,EAAG6N,GACtBlO,EAAUK,EAAG9V,EAAEw9B,YAAa,kBAC5BjnB,EAAOuc,YAAY9yB,EAAEQ,MAAOQ,EAAG8U,EAAE+B,MAAM/B,EAAEiF,IAAM,WACxCjF,EAAE+B,QAAQ/B,EAAEiF,MAwtBvB/b,EAAOD,QAAQoR,YArtBK,SAAS2F,EAAG6N,EAAKtiB,GACjC6pB,EAAgBpV,EAAG,GACnB,IAAI9V,EAAI8tC,GAAWh4B,EAAG6N,GACtBlO,EAAUK,EAAG9V,EAAEw9B,YAAa,kBAC5B,IAAI7N,EAAI,IAAI/Y,EAAOzQ,EAAoB9E,GACnC6B,EAAI4S,EAAE+B,MAAM/B,EAAEiF,IAAM,GACxBxE,EAAOqc,aAAa9c,EAAG9V,EAAEQ,MAAOmvB,EAAGzsB,UAC5B4S,EAAE+B,QAAQ/B,EAAEiF,MA+sBvB/b,EAAOD,QAAQqR,aA9lBM,SAAS0F,EAAG9U,EAAGwX,GAChC3J,GAAkBiH,EAAG0C,GACrB7H,GAAcmF,EAAG9U,IA6lBrBhC,EAAOD,QAAQsR,WA/7BI,SAASyF,EAAG6N,GAC3BnT,GAAWsF,EAAG6N,GAAM,GACpBjV,GAAQoH,EAAG,IA87Bf9W,EAAOD,QAAQuR,YAv7BK,SAASwF,EAAG6N,GAC5B/X,GAASkK,GAAI,EAAG6N,GAChBjV,GAAQoH,EAAG,IAs7Bf9W,EAAOD,QAAQyR,WAAwBA,GACvCxR,EAAOD,QAAQ0xC,cAxFO,WAElB,OADA7nB,QAAQknB,KAAK,kCACN,GAuFX9wC,EAAOD,QAAQ2R,aAhwBM,SAASoF,EAAG6N,EAAKgM,GAClC6e,GAAU14B,EAAGg4B,GAAWh4B,EAAG6N,GAAMgM,IAgwBrC3wB,EAAOD,QAAQ4R,cAAwBA,GACvC3R,EAAOD,QAAQ8R,SA9vBE,SAASiF,EAAG6N,EAAK3iB,GAC9B4sC,GAAwB5sC,GACxBkqB,EAAgBpV,EAAG,GACnB,IAAIrV,EAAIqtC,GAAWh4B,EAAG6N,GACtB7N,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAInE,EAAO9P,EAAa9F,GACzC25B,EAAa7kB,GACbU,EAAI6qB,SAASvrB,EAAGrV,EAAGqV,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAIjF,EAAE+B,MAAM/B,EAAEiF,IAAM,WAEhDjF,EAAE+B,QAAQ/B,EAAEiF,YACZjF,EAAE+B,QAAQ/B,EAAEiF,MAsvBvB/b,EAAOD,QAAQgS,iBAtyBU,SAAS+E,EAAGi6B,GAEjC,IAAIzU,EADJpQ,EAAgBpV,EAAG,GAEnB,IAAI4E,EAAMozB,GAAWh4B,EAAGi6B,GAQxB,OAPIj6B,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAG9D,UACnBqkB,EAAK,MAEL7lB,EAAUK,EAAGA,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAGyiB,YAAa,kBAC7ClC,EAAKxlB,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAGva,OAGpBka,EAAI5D,SACR,KAAKtQ,EACL,KAAKF,EACDoU,EAAIla,MAAMoY,UAAY0iB,EACtB,MAEJ,QACIxlB,EAAEqC,IAAImjB,GAAG5gB,EAAI5D,SAAWwkB,EAMhC,cADOxlB,EAAE+B,QAAQ/B,EAAEiF,MACZ,GA+wBX/b,EAAOD,QAAQiS,aA5wBM,SAAS8E,EAAG6N,GAC7BuH,EAAgBpV,EAAG,GACnB,IAAIrV,EAAIqtC,GAAWh4B,EAAG6N,GACtBnN,EAAI6qB,SAASvrB,EAAGrV,EAAGqV,EAAE+B,MAAM/B,EAAEiF,IAAM,GAAIjF,EAAE+B,MAAM/B,EAAEiF,IAAM,WAChDjF,EAAE+B,QAAQ/B,EAAEiF,YACZjF,EAAE+B,QAAQ/B,EAAEiF,MAwwBvB/b,EAAOD,QAAQkS,WAAwBA,GACvCjS,EAAOD,QAAQmS,eA3nBQ,SAAS4E,EAAGk6B,EAAWhvC,GAC1C,IAAI6tC,EAAKf,GAAWh4B,EAAGk6B,GACvB9kB,EAAgBpV,EAAG,GACnB,IAAIysB,EAAMqM,GAAY94B,EAAG+4B,EAAI7tC,GAC7B,GAAIuhC,EAAK,CACL,IAAIziC,EAAOyiC,EAAIziC,KAIf,OAHUyiC,EAAIjB,IACVxiB,QAAQhJ,EAAE+B,MAAM/B,EAAEiF,IAAI,WACnBjF,EAAE+B,QAAQ/B,EAAEiF,KACZjb,EAEX,OAAO,MAinBXd,EAAOD,QAAQoS,iBAxQU,SAAS2E,EAAG6N,GACjCuH,EAAgBpV,EAAG,GACnB,IAAI9V,EAAI8tC,GAAWh4B,EAAG6N,GACtBlO,EAAUK,EAAG9V,EAAEy9B,mBAAoB,0BACnCz9B,EAAEQ,MAAMqY,UAAUiG,QAAQhJ,EAAE+B,MAAM/B,EAAEiF,IAAM,WACnCjF,EAAE+B,QAAQ/B,EAAEiF,MAoQvB/b,EAAOD,QAAQqS,WA7QI,SAAS0E,GACxB,OAAOA,EAAEwP,QA6QbtmB,EAAOD,QAAQsS,mBA/YY,SAASyE,EAAGxU,GACnC,IAAI8V,EAAK,IAAIR,EACTmL,EAAK+G,EAAQ1K,aAAa9c,EAAG8V,GAKjC,OAJW,IAAP2K,IACAjM,EAAE+B,MAAM/B,EAAEiF,KAAO3D,EACjBujB,EAAa7kB,IAEViM,GAyYX/iB,EAAOD,QAAQuS,cA7iBO,SAASwE,EAAG6N,GAE9B,OADQmqB,GAAWh4B,EAAG6N,GACZ4Z,aA4iBdv+B,EAAOD,QAAQ4T,gBA3fS,SAASmD,EAAG6N,GAChC,IAAI3jB,EAAI8tC,GAAWh4B,EAAG6N,GACtB,OAAI3jB,EAAE+tC,WAAa/tC,EAAEkwC,eAAuBlwC,EAAEQ,MAClC,MAyfhBxB,EAAOD,QAAQwS,eAhhBQ,SAASuE,EAAG6N,GAC/B,IAAI+sB,EAAK/+B,GAAcmE,EAAG6N,GAC1B,OAAO,IAAIhP,SAAS+7B,EAAGC,OAAQD,EAAGE,WAAYF,EAAGG,aA+gBrD7xC,EAAOD,QAAQyS,cAvfO,SAASsE,EAAG6N,GAC9B,IAAI3iB,EAAIyQ,GAAeqE,EAAG6N,GAC1B,OAAa,IAAN3iB,EAAc,EAAIA,GAsf7BhC,EAAOD,QAAQ0S,eAAwBA,GACvCzS,EAAOD,QAAQ2S,eA/hBQ,SAASoE,EAAG6N,GAC/B,IAAI3jB,EAAI8tC,GAAWh4B,EAAG6N,GAEtB,IAAK3jB,EAAEqX,aAAc,CACjB,IAAKb,EAAImjB,QAAQ35B,GACb,OAAO,KAEX8oB,EAAQrO,cAAc3E,EAAG9V,GAE7B,OAAOA,EAAE8wC,YAuhBb9xC,EAAOD,QAAQ4S,cAAwBA,GACvC3S,EAAOD,QAAQ6S,aAlfM,SAASkE,EAAG6N,GAC7B,IAAI3iB,EAAI6Q,GAAciE,EAAG6N,GACzB,OAAa,IAAN3iB,EAAc,EAAIA,GAif7BhC,EAAOD,QAAQ8S,cAAwBA,GACvC7S,EAAOD,QAAQ+S,cA3dO,SAASgE,EAAG6N,GAC9B,IAAI3jB,EAAI8tC,GAAWh4B,EAAG6N,GACtB,OAAQ3jB,EAAEs/B,SACN,KAAKh5B,EACL,KAAKS,EACL,KAAKE,EACL,KAAKD,EACL,KAAKP,EACL,KAAKD,EACL,KAAKL,EACD,OAAOnG,EAAEQ,MACb,QACI,OAAO,OAgdnBxB,EAAOD,QAAQgT,YAnbK,SAAS+D,EAAG6N,GAC5B,IAX0BwsB,EAAGt5B,EAAMrW,EAC/BuwC,EAUA35B,EAAK02B,GAAWh4B,EAAG6N,GAEvB,OAb0BwsB,EAaNr6B,EAAEqC,IAbOtB,EAaFO,EAAGP,KAbKrW,EAaC4W,EAAG5W,MAZnCuwC,EAAQ,SAASj7B,GACjBL,EAAUK,EAAGA,aAAa7K,EAAOsQ,WAAa40B,IAAMr6B,EAAEqC,IAAK,kCAC3DrC,EAAE+B,MAAM/B,EAAEiF,KAAO,IAAInE,EAAOC,EAAMrW,GAClCm6B,EAAa7kB,IAEjBg5B,GAAKjzB,IAAIk1B,EAAOZ,GACTY,GAubX/xC,EAAOD,QAAQiT,aAAwBA,GACvChT,EAAOD,QAAQkT,aAneM,SAAS6D,EAAG6N,GAC7B,IAAI3jB,EAAI8tC,GAAWh4B,EAAG6N,GACtB,OAAO3jB,EAAEgxC,aAAehxC,EAAEQ,MAAQ,MAketCxB,EAAOD,QAAQmT,eA/eQ,SAAS4D,EAAG6N,GAC/B,IAAI3jB,EAAI8tC,GAAWh4B,EAAG6N,GACtB,OAAQ3jB,EAAE8W,SACN,KAAKtQ,EACD,OAAOxG,EAAEQ,MAAMkU,KACnB,KAAKvO,EACD,OAAOnG,EAAEQ,MACb,QAAS,OAAO,OAyexBxB,EAAOD,QAAQoT,SAAwBA,GACvCnT,EAAOD,QAAQqT,aA5YM,SAAS0D,EAAGrV,GAE7B,OADAgV,EAAUK,EAAG9P,GAAavF,GAAKA,EAAIiG,EAAa,eACzC+P,EAAIkmB,UAAUl8B,IA2YzBzB,EAAOD,QAAQsT,cArJO,SAASyD,EAAGu5B,EAAMruC,GACpC,IAAI6tC,EAAKf,GAAWh4B,EAAGu5B,GACvB,OAAQR,EAAGvP,SACP,KAAKv4B,EACD,IAAI4gB,EAAMynB,GAAYt5B,EAAGu5B,EAAMruC,GAC/B,OAAO2mB,EAAInP,EAAEF,OAAOqP,EAAIpoB,GAE5B,KAAK0H,EACD,IAAIuR,EAAIq2B,EAAGruC,MAEX,OADAiV,EAAUK,GAAM,EAAF9U,KAASA,GAAKA,EAAI,GAAKA,GAAKwX,EAAEH,UAAW,yBAChDG,EAAEC,QAAQzX,EAAI,GAEzB,QAEI,OADAyU,EAAUK,GAAG,EAAO,oBACb,OAwInB9W,EAAOD,QAAQuT,gBAnIS,SAASwD,EAAGm7B,EAAOzzB,EAAI0zB,EAAOzzB,GAClD,IAAI0zB,EAAO/B,GAAYt5B,EAAGm7B,EAAOzzB,GAC7B4zB,EAAOhC,GAAYt5B,EAAGo7B,EAAOzzB,GAC7B4zB,EAAMD,EAAK54B,EAAEF,OAAO84B,EAAK7xC,GAC7B4xC,EAAK34B,EAAEF,OAAO64B,EAAK5xC,GAAK8xC,GAgI5BryC,EAAOD,QAAQwT,YAjoCK,SAASuD,GACzB,OAAU,OAANA,EAAmBrQ,EACXqQ,EAAEqC,IAAIijB,SAgoCtBp8B,EAAOD,QAAQyT,UAnjCG,SAAS3P,EAAM0B,EAAIvD,GACjC,GAAI6B,IAAS0B,EAAb,CACA2mB,EAAgBroB,EAAM7B,GACtByU,EAAU5S,EAAMA,EAAKsV,MAAQ5T,EAAG4T,IAAK,mCACrC1C,EAAU5S,EAAM0B,EAAG6lB,GAAGrP,IAAMxW,EAAGwW,KAAO/Z,EAAG,kBACzC6B,EAAKkY,KAAO/Z,EACZ,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,EAAGzB,IACnBgF,EAAGsT,MAAMtT,EAAGwW,KAAO,IAAI+N,EAAQlS,OAC/BkS,EAAQ/J,SAASxa,EAAIA,EAAGwW,IAAKlY,EAAKgV,MAAMhV,EAAKkY,IAAMxb,WAC5CsD,EAAKgV,MAAMhV,EAAKkY,IAAMxb,GAC7BgF,EAAGwW,8SClKHvF,EAAehU,EAAQ,GAAvBgU,WA4BFk4B,aACF,SAAAA,EAAY53B,EAAGu6B,EAAQ37B,GAAMtL,EAAAC,KAAAqkC,GACzBrkC,KAAKyM,EAAIA,EACTN,EAA4B,mBAAV66B,EAAsB,yBACxChnC,KAAKgnC,OAASA,EACdhnC,KAAKqL,KAAOA,EACZrL,KAAKrI,EAAI,EACTqI,KAAKsnC,OAAS,KACdtnC,KAAKqhB,IAAM,yDAIX,OAASrhB,KAAKrI,KAAO,EAAKqI,KAAKsnC,OAAOtnC,KAAKqhB,OAAS4mB,EAAUjoC,2CAMhEioC,EAAY,SAASlhB,GACvB,IAAIjX,EAAOiX,EAAEigB,OAAOjgB,EAAEta,EAAGsa,EAAE1b,MAC3B,GAAa,OAATyE,EACA,OALI,EAMR3D,EAAW2D,aAAgBvW,WAAY,6CACvC,IAAI+V,EAAOQ,EAAKnW,OAChB,OAAa,IAAT2V,GARI,GAURyX,EAAEugB,OAASx3B,EACXiX,EAAE1F,IAAM,EACR0F,EAAEpvB,EAAI2X,EAAO,EACNyX,EAAEugB,OAAOvgB,EAAE1F,SA4BtB1rB,EAAOD,QAAQwyC,KAzCH,EA0CZvyC,EAAOD,QAAQyyC,YA7EK,SAASr4B,GACzB,OAAOA,EAAKw3B,OAAOx1B,SAAS,EAAGhC,EAAKnY,IA6ExChC,EAAOD,QAAQ0yC,gBA1ES,SAASt4B,EAAM5Z,GACnC4Z,EAAKnY,GAAKzB,GA0EdP,EAAOD,QAAQuyC,UAAoBA,EACnCtyC,EAAOD,QAAQ2yC,UA3BG,SAASthB,EAAG9rB,EAAGqtC,EAAU3wC,GACvC,KAAOA,GAAG,CACN,GAAY,IAARovB,EAAEpvB,EAAS,CACX,IArBA,IAqBIswC,EAAUlhB,GACV,OAAOpvB,EAEPovB,EAAEpvB,IACFovB,EAAE1F,MAIV,IADA,IAAI/qB,EAAKqB,GAAKovB,EAAEpvB,EAAKA,EAAIovB,EAAEpvB,EAClBzB,EAAE,EAAGA,EAAEI,EAAGJ,IACf+E,EAAEqtC,KAAcvhB,EAAEugB,OAAOvgB,EAAE1F,OAE/B0F,EAAEpvB,GAAKrB,EACK,IAARywB,EAAEpvB,IACFovB,EAAEugB,OAAS,MACf3vC,GAAKrB,EAGT,OAAO,GAQXX,EAAOD,QAAQ6yC,iBAzEU,SAASz4B,GAC9BA,EAAKnY,EAAI,GAyEbhC,EAAOD,QAAQ8yC,kBAtEW,SAAS/7B,EAAGqD,EAAMR,GACxC,IAAIwJ,EAAU,IAAIvf,WAAW+V,GACzBQ,EAAKw3B,QACLxuB,EAAQtG,IAAI1C,EAAKw3B,QACrBx3B,EAAKw3B,OAASxuB,GAmElBnjB,EAAOD,QAAQoqB,QAzFX,SAAAA,IAAc/f,EAAAC,KAAA8f,GACV9f,KAAKsnC,OAAS,KACdtnC,KAAKrI,EAAI,GAwFjBhC,EAAOD,QAAQ2uC,IAAoBA,oICzF/BlsC,EAAQ,OAHRuE,eAAkBG,iBAAcU,gBACf6D,IAAjBJ,cAAiBI,cACjBpI,mBAMAb,EAAQ,GAHRoU,kBACAG,YACAP,eAEEzK,EAAWvJ,EAAQ,IACnBwJ,EAAWxJ,EAAQ,KAOrBA,EAAQ,IALRyU,aACA67B,cACAC,cACA57B,aACAC,cAEE0S,EAAWtnB,EAAQ,KAMrBA,EAAQ,IAJR6U,eACAid,cACApC,qBACA5a,aAEEC,EAAW/U,EAAQ,KAOrBA,EAAQ,IALR+vC,QACAC,gBACAC,oBACAG,qBACAC,sBAKE5b,EAAU5zB,EAAa,QAAQ,GA0C/B2vC,EAAW,CACbC,OA7CmB,IA8CnBC,SAxCgBC,IAyChBC,MAxCgBD,IAyChBE,QAxCgBF,IAyChBG,UAxCgBH,IAyChBI,OAxCgBJ,IAyChBK,SAxCgBL,IAyChBM,OAxCgBN,IAyChBO,YAxCgBP,IAyChBQ,QAxCgBR,IAyChBS,MAxCgBT,IAyChBU,MAxCgBV,IAyChBW,SAxCgBX,IAyChBY,OAxCgBZ,IAyChBa,OAxCgBb,IAyChBc,MAxCgBd,IAyChBe,UAxCgBf,IAyChBgB,UAxCgBhB,IAyChBiB,QAxCgBjB,IAyChBkB,QAxCgBlB,IAyChBmB,SAxCgBnB,IAyChBoB,SAxCgBpB,IAyChBqB,QAvCgBrB,IAwChBsB,UAvCgBtB,IAwChBuB,QAvCgBvB,IAwChBwB,MAvCgBxB,IAwChByB,MAvCgBzB,IAwChB0B,MAvCgB1B,IAwChB2B,MAvCgB3B,IAwChB4B,OAvCgB5B,IAwChB6B,OAvCgB7B,IAwChB8B,WAvCgB9B,IAwChB+B,OAvCgB/B,IAwChBgC,OAvCgBhC,IAwChBiC,OAvCgBjC,IAwChBkC,QAvCgBlC,IAwChBmC,UAvCgBnC,KA0CdoC,EAAc,CAChB,MAAO,QAAS,KAAM,OAAQ,SAC9B,MAAO,QAAS,MAAO,WAAY,OAAQ,KAC3C,KAAM,QAAS,MAAO,MAAO,KAAM,SACnC,SAAU,OAAQ,OAAQ,QAAS,QACnC,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KACrC,KAAM,KAAM,KAAM,QAClB,WAAY,YAAa,SAAU,YACrC7X,IAAI,SAACnnB,EAAGhW,GAAJ,OAAQ8C,EAAakT,KAErBi/B,EACF,SAAAA,IAAcprC,EAAAC,KAAAmrC,GACVnrC,KAAKhJ,EAAIkJ,IACTF,KAAK9J,EAAIgK,IACTF,KAAKuO,GAAK,MAIZ68B,EACF,SAAAA,IAAcrrC,EAAAC,KAAAorC,GACVprC,KAAKqrC,MAAQnrC,IACbF,KAAKsrC,QAAU,IAAIH,GAwBrBI,EAAO,SAAS9U,EAAIlgC,GACtB,IAAI0E,EAAIw7B,EAAG3mB,KACX,GAAI7U,EAAEtD,EAAI,EAAIsD,EAAEqsC,OAAO3tC,OAAQ,CACvBsB,EAAEqsC,OAAO3tC,QAAU+S,EAAQ,GAC3B8+B,EAAS/U,EAAIz9B,EAAa,4BAA4B,GAAO,GACjE,IAAI4f,EAA0B,EAAhB3d,EAAEqsC,OAAO3tC,OACvB6uC,EAAkB/R,EAAGhqB,EAAGxR,EAAG2d,GAE/B3d,EAAEqsC,OAAOrsC,EAAEtD,KAAOpB,EAAI,EAAI,IAAMA,EAAI,EAAIA,GAGtCk1C,EAAiB,SAAShV,EAAI4U,GAChC,GAAIA,EA7Ie,IA8If,OAAO5rB,EAAQ1N,iBAAiB0kB,EAAGhqB,EAAGzT,EAAa,QAAQ,GAAOqyC,GAElE,IAAIpzC,EAAIizC,EAAYG,EAhJL,KAiJf,OAAIA,EA3GQvC,IA4GDrpB,EAAQ1N,iBAAiB0kB,EAAGhqB,EAAGzT,EAAa,QAAQ,GAAOf,GAE3DA,GAIbyzC,EAAgB,SAASjV,GAC3B,OAAsB,KAAfA,EAAGkV,SAA4D,KAAflV,EAAGkV,SAGxD3oB,EAAO,SAASyT,GAClBA,EAAGkV,QAAUlV,EAAG1P,EAAEM,SAGhBukB,EAAgB,SAASnV,GAC3B8U,EAAK9U,EAAIA,EAAGkV,SACZ3oB,EAAKyT,IAQHoV,EAAS,IAAIpsB,EAAQlS,OAAO1Q,GAAc,GAC1CivC,EAAiB,SAASrV,EAAIh8B,GAChC,IAAIgS,EAAIgqB,EAAGhqB,EACP8B,EAAKtB,EAASR,EAAGhS,GAEjBsxC,EAAQtV,EAAGK,EAAE1O,OAAOrxB,IAAI8wB,EAAiBtZ,IAC7C,GAAKw9B,EAIDx9B,EAAKw9B,EAAMt0C,IAAIwW,cAJP,CACR,IAAIxW,EAAM,IAAIgoB,EAAQlS,OAAOhQ,EAAagR,GAC1CrB,EAAOqc,aAAa9c,EAAGgqB,EAAGK,EAAGr/B,EAAKo0C,GAItC,OAAOt9B,GAOLy9B,EAAgB,SAASvV,GAC3B,IAAIxD,EAAMwD,EAAGkV,QACbx/B,EAAWu/B,EAAcjV,IACzBzT,EAAKyT,GACDiV,EAAcjV,IAAOA,EAAGkV,UAAY1Y,GACpCjQ,EAAKyT,KACHA,EAAGwV,YAAcv/B,GACnB8+B,EAAS/U,EAAIz9B,EAAa,4BAA4B,GAAO,IAuB/DkzC,EAAc,SAASzV,EAAIlgC,GAC7B,OAAIkgC,EAAGkV,UAAYp1C,IACfysB,EAAKyT,IACE,IAUT0V,EAAc,SAAS1V,EAAIjkB,GAC7B,OAAIikB,EAAGkV,UAAYn5B,EAAI,GAAGjY,WAAW,IAAMk8B,EAAGkV,UAAYn5B,EAAI,GAAGjY,WAAW,MACxEqxC,EAAcnV,IACP,IAMT2V,EAAe,SAAS3V,EAAI6U,GAC9B,IAAIe,EAAO,KACP5I,EAAQhN,EAAGkV,QAMf,IALAx/B,EAAWS,EAAS6pB,EAAGkV,UACvBC,EAAcnV,GACA,KAAVgN,GAA0C0I,EAAY1V,EAAI,QAC1D4V,EAAO,QAKP,GAFIF,EAAY1V,EAAI4V,IAChBF,EAAY1V,EAAI,MAChB1pB,EAAU0pB,EAAGkV,SACbC,EAAcnV,OACb,IAAmB,KAAfA,EAAGkV,QAEP,MADDC,EAAcnV,GAMtB,IAAIplB,EAAM,IAAIoO,EAAQlS,OAGtB,OAFwD,IAApDkS,EAAQ1K,aAAaozB,EAAY1R,EAAG3mB,MAAOuB,IAC3Cm6B,EAAS/U,EAAIz9B,EAAa,oBAAoB,GAhOlC8vC,KAiOZz3B,EAAIC,eACJg6B,EAAQp1C,EAAImb,EAAIla,MAjOJ2xC,MAoOZ38B,EAAWkF,EAAI+X,aACfkiB,EAAQt0C,EAAIqa,EAAIla,MAtOJ2xC,MAsPd0C,EAAW,SAAS/U,EAAIpqB,EAAKg/B,GAC/Bh/B,EAAM3K,EAAOwuB,aAAauG,EAAGhqB,EAAGJ,EAAKoqB,EAAGp2B,OAAQo2B,EAAGwV,YAC/CZ,GACA5rB,EAAQ1N,iBAAiB0kB,EAAGhqB,EAAGzT,EAAa,cAAeqT,EAdlD,SAASoqB,EAAI4U,GAC1B,OAAQA,GACJ,KA3OYvC,IA2OE,KA1OFA,IA2OZ,KA9OYA,IA8OC,KA7ODA,IA+OR,OAAOrpB,EAAQ1N,iBAAiB0kB,EAAGhqB,EAAGzT,EAAa,QAAQ,GAAOmvC,EAAY1R,EAAG3mB,OACrF,QACI,OAAO27B,EAAehV,EAAI4U,IAOkCiB,CAAS7V,EAAI4U,IACjF1pC,EAAI+e,WAAW+V,EAAGhqB,EAAGrL,IAYnBmrC,EAAW,SAAS9V,GACtB,IAAI/E,EAAQ,EACRz5B,EAAIw+B,EAAGkV,QAGX,IAFAx/B,EAAiB,KAANlU,GAA4C,KAANA,GACjD2zC,EAAcnV,GACQ,KAAfA,EAAGkV,SACNC,EAAcnV,GACd/E,IAEJ,OAAO+E,EAAGkV,UAAY1zC,EAAIy5B,GAAUA,EAAS,GAG3C8a,EAAmB,SAAS/V,EAAI6U,EAASmB,GAC3C,IAAItpB,EAAOsT,EAAGwV,WACdL,EAAcnV,GAEViV,EAAcjV,IACduV,EAAcvV,GAGlB,IADA,IAAIiW,GAAO,GACHA,GACJ,OAAQjW,EAAGkV,SACP,KAAKzD,EACD,IACI77B,EAAG,mBAAAjC,OADIkhC,EAAU,SAAW,UACzB,uBAAAlhC,OAAgD+Y,EAAhD,KACPqoB,EAAS/U,EAAIz9B,EAAaqT,GAhStBy8B,KAiSJ,MAEJ,KAAK,GACGyD,EAAS9V,KAAQgW,IACjBb,EAAcnV,GACdiW,GAAO,GAEX,MAEJ,KAAK,GACL,KAAK,GACDnB,EAAK9U,EAAI,IACTuV,EAAcvV,GACT6U,GAAS/C,EAAiB9R,EAAG3mB,MAClC,MAEJ,QACQw7B,EAASM,EAAcnV,GACtBzT,EAAKyT,GAKlB6U,IACAA,EAAQ/8B,GAAKu9B,EAAerV,EAAIA,EAAG3mB,KAAKw3B,OAAOx1B,SAAS,EAAI26B,EAAKhW,EAAG3mB,KAAKnY,GAAK,EAAI80C,OAGpFE,GAAW,SAASlW,EAAIlgC,EAAG8V,GACxB9V,IACGkgC,EAAGkV,UAAYzD,GACf0D,EAAcnV,GAClB+U,EAAS/U,EAAIpqB,EA5TDy8B,OAgUd8D,GAAU,SAASnW,GAGrB,OAFAmV,EAAcnV,GACdkW,GAASlW,EAAI1pB,EAAU0pB,EAAGkV,SAAU3yC,EAAa,8BAA8B,IACxEymB,EAAQ7P,eAAe6mB,EAAGkV,UAG/BkB,GAAc,SAASpW,GACzB,IAAIz/B,EAAI41C,GAAQnW,GAGhB,OAFAz/B,GAAKA,GAAK,GAAK41C,GAAQnW,GACvB2R,EAAgB3R,EAAG3mB,KAAM,GAClB9Y,GAsBL81C,GAAU,SAASrW,GAGrB,IAFA,IAAI3mB,EAAO,IAAIvW,WAAWkmB,EAAQ1P,YAC9BpY,EAAI8nB,EAAQ5P,aAAaC,EArBZ,SAAS2mB,GAC1B,IAAIvgC,EAAI,EACR01C,EAAcnV,GACdkW,GAASlW,EAAmB,MAAfA,EAAGkV,QAA2C3yC,EAAa,eAAe,IACvF,IAAIhC,EAAI41C,GAAQnW,GAGhB,IADAmV,EAAcnV,GACP1pB,EAAU0pB,EAAGkV,UAChBz1C,IACAc,GAAKA,GAAK,GAAKyoB,EAAQ7P,eAAe6mB,EAAGkV,SACzCgB,GAASlW,EAAIz/B,GAAK,QAAUgC,EAAa,yBAAyB,IAClE4yC,EAAcnV,GAKlB,OAHAkW,GAASlW,EAAmB,MAAfA,EAAGkV,QAA2C3yC,EAAa,eAAe,IACvFgqB,EAAKyT,GACL2R,EAAgB3R,EAAG3mB,KAAM5Z,GAClBc,EAK4B+1C,CAAatW,IACzC9+B,EAAI,EAAGA,IACV4zC,EAAK9U,EAAI3mB,EAAK2P,EAAQ1P,WAAapY,KAGrCq1C,GAAa,SAASvW,GACxB,IACIvgC,EADAc,EAAI,EAER,IAAKd,EAAI,EAAGA,EAAI,GAAK0W,EAAS6pB,EAAGkV,SAAUz1C,IACvCc,EAAI,GAAKA,EAAIy/B,EAAGkV,QAAU,GAC1BC,EAAcnV,GAIlB,OAFAkW,GAASlW,EAAIz/B,GAAK,IAAKgC,EAAa,4BAA4B,IAChEovC,EAAgB3R,EAAG3mB,KAAM5Z,GAClBc,GAGLi2C,GAAc,SAASxW,EAAIyW,EAAK5B,GAGlC,IAFAM,EAAcnV,GAEPA,EAAGkV,UAAYuB,GAClB,OAAQzW,EAAGkV,SACP,KAAKzD,EACDsD,EAAS/U,EAAIz9B,EAAa,qBAAqB,GA7X3C8vC,KA8XJ,MACJ,KAAK,GACL,KAAK,GACD0C,EAAS/U,EAAIz9B,EAAa,qBAAqB,GA7X3C8vC,KA8XJ,MACJ,KAAK,GACD8C,EAAcnV,GACd,IAAI0W,OAAI,EACJ52C,OAAC,EACL,OAAOkgC,EAAGkV,SACN,KAAK,GAA8Bp1C,EAAI,EAA2B42C,EAAO,YAAa,MACtF,KAAK,GAA8B52C,EAAI,EAA8B42C,EAAO,YAAa,MACzF,KAAK,IAA+B52C,EAAI,GAA+B42C,EAAO,YAAa,MAC3F,KAAK,IAA+B52C,EAAI,GAA+B42C,EAAO,YAAa,MAC3F,KAAK,IAA+B52C,EAAI,GAA+B42C,EAAO,YAAa,MAC3F,KAAK,IAA+B52C,EAAI,EAA8B42C,EAAO,YAAa,MAC1F,KAAK,IAA+B52C,EAAI,GAA+B42C,EAAO,YAAa,MAC3F,KAAK,IAA+B52C,EAAIs2C,GAAYpW,GAAK0W,EAAO,YAAa,MAC7E,KAAK,IAA+BL,GAAQrW,GAAK0W,EAAO,UAAW,MACnE,KAAK,GACL,KAAK,GACDnB,EAAcvV,GAAKlgC,EAAI,GAA+B42C,EAAO,YAAa,MAC9E,KAAK,GACL,KAAK,GACL,KAAK,GACD52C,EAAIkgC,EAAGkV,QAASwB,EAAO,YAAa,MACxC,KAAKjF,EAAKiF,EAAO,UAAW,MAC5B,KAAK,IAGD,IAFA/E,EAAgB3R,EAAG3mB,KAAM,GACzBkT,EAAKyT,GACE3pB,EAAS2pB,EAAGkV,UACXD,EAAcjV,GAAKuV,EAAcvV,GAChCzT,EAAKyT,GAEd0W,EAAO,UAAW,MAEtB,QACIR,GAASlW,EAAI7pB,EAAS6pB,EAAGkV,SAAU3yC,EAAa,2BAA2B,IAC3EzC,EAAIy2C,GAAWvW,GACf0W,EAAO,YAIF,cAATA,GACAnqB,EAAKyT,GAEI,cAAT0W,GAAiC,cAATA,IACxB/E,EAAgB3R,EAAG3mB,KAAM,GACzBy7B,EAAK9U,EAAIlgC,IAGb,MAEJ,QACIq1C,EAAcnV,GAG1BmV,EAAcnV,GAEd6U,EAAQ/8B,GAAKu9B,EAAerV,EAAIA,EAAG3mB,KAAKw3B,OAAOx1B,SAAS,EAAG2kB,EAAG3mB,KAAKnY,EAAE,KAGnEy1C,GAAiBx2C,OAAOY,OAAO,MACrC0zC,EAAYmC,QAAQ,SAACnhC,EAAGhW,GAAJ,OAAQk3C,GAAenjB,EAAU/d,IAAMhW,IAE3D,IAKMi0B,GAAO,SAASsM,EAAI6U,GAEtB,IADA/C,EAAiB9R,EAAG3mB,QAGhB,OADA3D,EAAgC,iBAAdsqB,EAAGkV,SACblV,EAAGkV,SACP,KAAK,GACL,KAAK,GACDK,EAAcvV,GACd,MAEJ,KAAK,GACL,KAAK,GACL,KAAK,EACL,KAAK,GACDzT,EAAKyT,GACL,MAEJ,KAAK,GAED,GADAzT,EAAKyT,GACc,KAAfA,EAAGkV,QAA0C,OAAO,GAGxD,GADA3oB,EAAKyT,GACc,KAAfA,EAAGkV,QAA0C,CAC7C,IAAIc,EAAMF,EAAS9V,GAEnB,GADA8R,EAAiB9R,EAAG3mB,MAChB28B,GAAO,EAAG,CACVD,EAAiB/V,EAAI,KAAMgW,GAC3BlE,EAAiB9R,EAAG3mB,MACpB,OAKR,MAAQ47B,EAAcjV,IAAOA,EAAGkV,UAAYzD,GACxCllB,EAAKyT,GACT,MAEJ,KAAK,GACD,IAAIgW,EAAMF,EAAS9V,GACnB,OAAIgW,GAAO,GACPD,EAAiB/V,EAAI6U,EAASmB,GAxe9B3D,OA0egB,IAAT2D,GACPjB,EAAS/U,EAAIz9B,EAAa,iCAAiC,GA3e3D8vC,KA4eG,IAEX,KAAK,GAED,OADA9lB,EAAKyT,GACDyV,EAAYzV,EAAI,IA3fhBqS,IA4fQ,GAEhB,KAAK,GAED,OADA9lB,EAAKyT,GACDyV,EAAYzV,EAAI,IA9fhBqS,IA+fKoD,EAAYzV,EAAI,IA7frBqS,IA8fQ,GAEhB,KAAK,GAED,OADA9lB,EAAKyT,GACDyV,EAAYzV,EAAI,IArgBhBqS,IAsgBKoD,EAAYzV,EAAI,IAlgBrBqS,IAmgBQ,GAEhB,KAAK,GAED,OADA9lB,EAAKyT,GACDyV,EAAYzV,EAAI,IA/gBhBqS,IAghBQ,GAEhB,KAAK,IAED,OADA9lB,EAAKyT,GACDyV,EAAYzV,EAAI,IA9gBhBqS,IA+gBQ,IAEhB,KAAK,GAED,OADA9lB,EAAKyT,GACDyV,EAAYzV,EAAI,IAhhBhBqS,IAihBQ,GAEhB,KAAK,GACL,KAAK,GAED,OADAmE,GAAYxW,EAAIA,EAAGkV,QAASL,GAhhBxBxC,IAmhBR,KAAK,GAED,OADA8C,EAAcnV,GACVyV,EAAYzV,EAAI,IACZyV,EAAYzV,EAAI,IAliBpBqS,IADAA,IAuiBMl8B,EAAS6pB,EAAGkV,SACVS,EAAa3V,EAAI6U,GADU,GAG3C,KAAK,GAA8B,KAAK,GAA8B,KAAK,GAA8B,KAAK,GAA8B,KAAK,GACjJ,KAAK,GAA8B,KAAK,GAA8B,KAAK,GAA8B,KAAK,GAA8B,KAAK,GAC7I,OAAOc,EAAa3V,EAAI6U,GAE5B,KAAKpD,EACD,OAtiBIY,IAwiBR,QACI,GAAIJ,EAAUjS,EAAGkV,SAAU,CACvB,GACIC,EAAcnV,SACTgS,EAAUhS,EAAGkV,UACtB,IAAIp9B,EAAKu9B,EAAerV,EAAI0R,EAAY1R,EAAG3mB,OAC3Cw7B,EAAQ/8B,GAAKA,EACb,IAAI++B,EAAOF,GAAevlB,EAAiBtZ,IAC3C,YAAa,IAAT++B,GAAmBA,GAAQ,GACpBA,EAvlBR,IAyCHxE,IAkjBA,IAAIvyC,EAAIkgC,EAAGkV,QAEX,OADA3oB,EAAKyT,GACElgC,IAyB3BZ,EAAOD,QAAQozC,eAtnBQ,IAunBvBnzC,EAAOD,QAAQk3B,QAAmBA,EAClCj3B,EAAOD,QAAQ63C,SAxgBX,SAAAA,IAAcxtC,EAAAC,KAAAutC,GACVvtC,KAAK2rC,QAAUzrC,IACfF,KAAKisC,WAAa/rC,IAClBF,KAAKwtC,SAAWttC,IAChBF,KAAK5I,EAAI,IAAIg0C,EACbprC,KAAKytC,UAAY,IAAIrC,EACrBprC,KAAK0tC,GAAK,KACV1tC,KAAKyM,EAAI,KACTzM,KAAK+mB,EAAI,KACT/mB,KAAK8P,KAAO,KACZ9P,KAAK82B,EAAI,KACT92B,KAAKgnB,IAAM,KACXhnB,KAAKK,OAAS,KACdL,KAAK2tC,KAAO,MA4fpBh4C,EAAOD,QAAQizC,SAAmBA,EAClChzC,EAAOD,QAAQk4C,WArJI,SAASC,GACxB,IAAIP,EAAOF,GAAevlB,EAAiBgmB,IAC3C,YAAgB,IAATP,GAAmBA,GAAQ,IAoJtC33C,EAAOD,QAAQo4C,eAXQ,SAASrX,GAG5B,OAFAtqB,EA3kBgB28B,MA2kBLrS,EAAGgX,UAAUpC,OACxB5U,EAAGgX,UAAUpC,MAAQlhB,GAAKsM,EAAIA,EAAGgX,UAAUnC,SACpC7U,EAAGgX,UAAUpC,OASxB11C,EAAOD,QAAQo2C,eAAmBA,EAClCn2C,EAAOD,QAAQq4C,UAzBG,SAAStX,GACvBA,EAAG+W,SAAW/W,EAAGwV,WA/jBDnD,MAgkBZrS,EAAGgX,UAAUpC,OACb5U,EAAGr/B,EAAEi0C,MAAQ5U,EAAGgX,UAAUpC,MAC1B5U,EAAGr/B,EAAEk0C,QAAQp1C,EAAIugC,EAAGgX,UAAUnC,QAAQp1C,EACtCugC,EAAGr/B,EAAEk0C,QAAQt0C,EAAIy/B,EAAGgX,UAAUnC,QAAQt0C,EACtCy/B,EAAGr/B,EAAEk0C,QAAQ/8B,GAAKkoB,EAAGgX,UAAUnC,QAAQ/8B,GACvCkoB,EAAGgX,UAAUpC,MArkBDvC,KAukBZrS,EAAGr/B,EAAEi0C,MAAQlhB,GAAKsM,EAAIA,EAAGr/B,EAAEk0C,UAiBnC31C,EAAOD,QAAQs4C,cAvbO,SAASvhC,EAAGgqB,EAAI1P,EAAG1mB,EAAQ4tC,GAC7CxX,EAAGr/B,EAAI,CACHi0C,MAAO,EACPC,QAAS,IAAIH,GAEjB1U,EAAGhqB,EAAIA,EACPgqB,EAAGkV,QAAUsC,EACbxX,EAAGgX,UAAY,CACXpC,MAzKYvC,IA0KZwC,QAAS,IAAIH,GAEjB1U,EAAG1P,EAAIA,EACP0P,EAAGiX,GAAK,KACRjX,EAAGwV,WAAa,EAChBxV,EAAG+W,SAAW,EACd/W,EAAGp2B,OAASA,EACZo2B,EAAGkX,KAAO3gC,EAAWP,EAAGmgB,GACxB4b,EAAkB/7B,EAAGgqB,EAAG3mB,KAAMvD,IAualC5W,EAAOD,QAAQw4C,iBA3VU,SAASzX,EAAIpqB,GAClCm/B,EAAS/U,EAAIpqB,EAAKoqB,EAAGr/B,EAAEi0C,QA2V3B11C,EAAOD,QAAQ+1C,eAAmBA,EAClC91C,EAAOD,QAAQw1C,YAAmBA,oCClqB5BiD,GAAcr1C,EAFKX,EAAQ,GAAzBW,cAGJ,EACA,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,GAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACjD,GAAO,GAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,GAiCrDnD,EAAOD,QAAQkX,SAxBE,SAASrW,GACtB,OAA8C,IAAlB,EAApB43C,EAAY53C,EAAE,KAwB1BZ,EAAOD,QAAQ+yC,UALG,SAASlyC,GACvB,OAA8D,IAAtD,EAAA43C,EAAY53C,EAAE,KAK1BZ,EAAOD,QAAQgzC,UAVG,SAASnyC,GACvB,OAA8C,IAAlB,EAApB43C,EAAY53C,EAAE,KAU1BZ,EAAOD,QAAQmX,SAnBE,SAAStW,GACtB,OAA8C,IAAlB,EAApB43C,EAAY53C,EAAE,KAmB1BZ,EAAOD,QAAQoX,SAhBE,SAASvW,GACtB,OAA8C,IAAlB,EAApB43C,EAAY53C,EAAE,KAgB1BZ,EAAOD,QAAQqX,UAzBG,SAASxW,GACvB,OAA+C,IAAnB,GAApB43C,EAAY53C,EAAE,6SC9CtB4B,EAAQ,GAFRsG,gBACAzF,mBAwEAb,EAAQ,QArERi2C,OACIC,YACAC,YACAC,aACAC,YACAC,aACAC,eACAC,YACAC,WACAC,WACAC,WACAC,aACAC,WACAC,WACAC,YACAC,YACAC,WACAC,iBACAC,WACAC,YACAC,YACAC,YACAC,gBAEJC,MACIC,aACAC,YACAC,cACAC,YACAC,gBAEJC,YACAC,mBACAC,oBACAC,iBACAC,iBACAC,kBACAC,eACAC,gBACAC,uBACAC,gBACAC,oBACAC,sBACAC,qBACAC,iBACAC,iBACAC,kBACAC,oBACAC,mBACAC,kBACAC,gBACAC,eACAC,eACAC,iBACAC,cACAC,qBACAC,oBACAC,sBACAC,iBACAC,iBACAC,sBACAC,cACAC,eACAC,kBACAC,qBACAC,oBACAC,qBACAC,mBACAC,kBAEE3wC,GAAWxJ,EAAQ,GACnBqnB,GAAWrnB,EAAQ,IACnBgyB,GAAWhyB,EAAQ,OAKpBA,EAAQ,GAHTmU,qBACAI,cACAP,iBAEEsT,GAAWtnB,EAAQ,MAoBrBA,EAAQ,UAlBRsrB,SACIwI,cACAqI,iBACAE,iBACAC,iBACA5H,kBACAN,cACAoI,kBACAtH,kBACA3J,kBACAsI,kBACAkJ,kBACAC,gBAEJd,wBACAsI,eACAC,eACAE,oBAMA3kC,EAAQ,IAHR+xB,oBACAjd,eACA2S,sBAEE1S,GAAW/U,EAAQ,GACnB26B,GAAWtT,GAAMsT,MACjByf,GAAWpoB,GAAKwe,SAIhB6J,GAAa,SAASlsB,GACxB,OAAOA,IAAMmsB,GAAQC,OAASpsB,IAAMmsB,GAAQE,SAG1CC,GAAQ,SAASn5C,EAAGwB,GAEtB,OAAOivB,GAAczwB,EAAGwB,IAGtB43C,GACF,SAAAA,IAAc9yC,EAAAC,KAAA6yC,GACV7yC,KAAKghB,SAAW,KAChBhhB,KAAK8yC,WAAa5yC,IAClBF,KAAK+yC,UAAY7yC,IACjBF,KAAKgzC,QAAU9yC,IACfF,KAAKq4B,MAAQn4B,IACbF,KAAKizC,OAAS/yC,KAIhBuyC,GAAU,CACZS,MAAO,EAEPC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,GAAI,EACJC,MAAO,EACPC,MAAO,EACPC,UAAW,EAEXC,OAAQ,EACRC,OAAQ,EACRC,SAAU,GAIVC,KAAM,GAENC,WAAY,GAEZpB,MAAO,GACPC,QAAS,IAWPoB,cACF,SAAAA,IAAch0C,EAAAC,KAAA+zC,GACV/zC,KAAKsmB,EAAIpmB,IACTF,KAAKhF,EAAI,CACLg5C,KAAM9zC,IACN+zC,KAAM/zC,IACNg0C,KAAMh0C,IACNi0C,IAAK,CACD75B,IAAKpa,IACL9I,EAAG8I,IACHk0C,GAAIl0C,MAGZF,KAAK5I,EAAI8I,IACTF,KAAKmP,EAAIjP,sDAGVgM,GACClM,KAAKsmB,EAAIpa,EAAEoa,EACXtmB,KAAKhF,EAAIkR,EAAElR,EACXgF,KAAK5I,EAAI8U,EAAE9U,EACX4I,KAAKmP,EAAIjD,EAAEiD,uCAIbklC,GACF,SAAAA,IAAct0C,EAAAC,KAAAq0C,GACVr0C,KAAKmP,EAAI,KACTnP,KAAK2oB,KAAO,KACZ3oB,KAAKy2B,GAAK,KACVz2B,KAAKs0C,GAAK,KACVt0C,KAAKmrB,GAAKjrB,IACVF,KAAKu0C,WAAar0C,IAClBF,KAAKw0C,IAAMt0C,IACXF,KAAKy0C,GAAKv0C,IACVF,KAAK00C,GAAKx0C,IACVF,KAAK20C,WAAaz0C,IAClBF,KAAK40C,SAAW10C,IAChBF,KAAKgzC,QAAU9yC,IACfF,KAAKS,KAAOP,IACZF,KAAK60C,QAAU30C,KAKjB40C,GACF,SAAAA,IAAc/0C,EAAAC,KAAA80C,GACV90C,KAAKsa,IAAMpa,KAMb60C,GACF,SAAAA,IAAch1C,EAAAC,KAAA+0C,GACV/0C,KAAKvJ,KAAO,KACZuJ,KAAKmrB,GAAKjrB,IACVF,KAAKmjB,KAAOjjB,IACZF,KAAKgzC,QAAU9yC,KAMjB80C,GACF,SAAAA,IAAcj1C,EAAAC,KAAAg1C,GACVh1C,KAAK+Z,IAAM,GACX/Z,KAAKrI,EAAIuI,IACTF,KAAKsP,KAAOpP,KAiBd+0C,GAAW,SAASxe,EAAIpqB,GAC1BoqB,EAAGr/B,EAAEi0C,MAAQ,EACblhB,GAAK+jB,iBAAiBzX,EAAIpqB,IAGxB6oC,GAAiB,SAASze,EAAI4U,GAChClhB,GAAK+jB,iBAAiBzX,EAAIhX,GAAQ1N,iBAAiB0kB,EAAGhqB,EAAGzT,EAAa,eAAe,GAAOmxB,GAAKshB,eAAehV,EAAI4U,MAclH8J,GAAa,SAASzH,EAAI7zC,EAAG1D,EAAGiK,GAC9BvG,EAAI1D,GAZO,SAASu3C,EAAIvU,EAAO/4B,GACnC,IAAIqM,EAAIihC,EAAGjX,GAAGhqB,EACV0W,EAAOuqB,EAAGv+B,EAAE5O,YACZ60C,EAAkB,IAATjyB,EACPnqB,EAAa,iBAAiB,GAC9BymB,GAAQ1N,iBAAiBtF,EAAGzT,EAAa,uBAAuB,GAAOmqB,GACzE9W,EAAMoT,GAAQ1N,iBAAiBtF,EAAGzT,EAAa,mCAAmC,GAClFoH,EAAM+4B,EAAOic,GACjBjrB,GAAK+jB,iBAAiBR,EAAGjX,GAAIpqB,GAIlBgpC,CAAW3H,EAAIv3C,EAAGiK,IAG3Bk1C,GAAW,SAAS7e,EAAIlgC,GAC1B,OAAIkgC,EAAGr/B,EAAEi0C,QAAU90C,IACf4zB,GAAK4jB,UAAUtX,IACR,IAMT8e,GAAQ,SAAS9e,EAAIlgC,GACnBkgC,EAAGr/B,EAAEi0C,QAAU90C,GACf2+C,GAAeze,EAAIlgC,IAGrBi/C,GAAY,SAAS/e,EAAIlgC,GAC3Bg/C,GAAM9e,EAAIlgC,GACV4zB,GAAK4jB,UAAUtX,IAGbgf,GAAkB,SAAShf,EAAIlgC,EAAG8V,GAC/B9V,GACD4zB,GAAK+jB,iBAAiBzX,EAAIpqB,IAG5BqpC,GAAc,SAASjf,EAAIr2B,EAAMu1C,EAAKP,GACnCE,GAAS7e,EAAIr2B,KACVg1C,IAAU3e,EAAGwV,WACbiJ,GAAeze,EAAIr2B,GAEnB+pB,GAAK+jB,iBAAiBzX,EAAIhX,GAAQ1N,iBAAiB0kB,EAAGhqB,EAClDzT,EAAa,wCACbmxB,GAAKshB,eAAehV,EAAIr2B,GAAO+pB,GAAKshB,eAAehV,EAAIkf,GAAMP,MAIvEQ,GAAgB,SAASnf,GAC3B8e,GAAM9e,EAAI8b,GAAEvH,SACZ,IAAIz8B,EAAKkoB,EAAGr/B,EAAEk0C,QAAQ/8B,GAEtB,OADA4b,GAAK4jB,UAAUtX,GACRloB,GAGLsnC,GAAW,SAAS3pC,EAAGoa,EAAGpwB,GAC5BgW,EAAEiD,EAAIjD,EAAE9U,EAAI64C,EACZ/jC,EAAEoa,EAAIA,EACNpa,EAAElR,EAAEk5C,KAAOh+C,GAGT4/C,GAAa,SAASrf,EAAIvqB,EAAGjU,GAC/B49C,GAAS3pC,EAAGumC,GAAQa,GAAIhB,GAAa7b,EAAGiX,GAAIz1C,KAG1C89C,GAAY,SAAStf,EAAIvqB,GAC3B4pC,GAAWrf,EAAIvqB,EAAG0pC,GAAcnf,KAW9Buf,GAAe,SAASvf,EAAIhgC,GAC9B,IAAIi3C,EAAKjX,EAAGiX,GACR1mB,EAAMyP,EAAGzP,IACT2E,EAXiB,SAAS8K,EAAIjjB,GAClC,IAAIk6B,EAAKjX,EAAGiX,GACRv+B,EAAIu+B,EAAGv+B,EAGX,OAFAA,EAAE4jB,QAAQ2a,EAAGkH,UAAY,IAAIn1B,GAAQlM,OACrCpE,EAAE4jB,QAAQ2a,EAAGkH,UAAUphC,QAAUA,EAC1Bk6B,EAAGkH,WAMAqB,CAAiBxf,EAAIhgC,GAC/B0+C,GAAWzH,EAAI1mB,EAAIkvB,OAAOv+C,EAAI,EAAI+1C,EAAGiH,WAxOzB,IAwO8C37C,EAAa,mBAAmB,IAC1FguB,EAAIkvB,OAAOn8B,IAAIiN,EAAIkvB,OAAOv+C,GAAK,IAAIm9C,GACnC9tB,EAAIkvB,OAAOn8B,IAAIiN,EAAIkvB,OAAOv+C,GAAG2iB,IAAMqR,EACnC3E,EAAIkvB,OAAOv+C,KAGTw+C,GAAsB,SAAS1f,EAAIhgC,GACrCu/C,GAAavf,EAAItM,GAAK2hB,eAAerV,EAAIz9B,EAAavC,GAAM,MAG1D2/C,GAAY,SAAS1I,EAAIx3C,GAC3B,IAAIokB,EAAMozB,EAAGjX,GAAGzP,IAAIkvB,OAAOn8B,IAAI2zB,EAAGiH,WAAaz+C,GAAGokB,IAElD,OADAnO,GAAWmO,EAAMozB,EAAGkH,UACblH,EAAGv+B,EAAE4jB,QAAQzY,IAGlB+7B,GAAkB,SAAS5f,EAAI6f,GACjC,IAAI5I,EAAKjX,EAAGiX,GAEZ,IADAA,EAAGsF,QAAUtF,EAAGsF,QAAUsD,EACnBA,EAAOA,IACVF,GAAU1I,EAAIA,EAAGsF,QAAUsD,GAAO7iC,QAAUi6B,EAAGviB,IAkBjDorB,GAAa,SAAS7I,EAAIj3C,EAAMoD,GAClC,IAAIsV,EAAIu+B,EAAGv+B,EAOX,OANAgmC,GAAWzH,EAAIA,EAAGjtC,KAAO,EAAG+e,GAAMqT,SAAU75B,EAAa,YAAY,IACrEmW,EAAEqY,SAASkmB,EAAGjtC,MAAQ,CAClB42B,QAASx9B,EAAEysB,IAAMmsB,GAAQiB,OACzBp5B,IAAKzgB,EAAEmB,EAAEk5C,KACTz9C,KAAMA,GAEHi3C,EAAGjtC,QA2BR+1C,GAAe,SAAfA,EAAwB9I,EAAI/1C,EAAG8+C,EAAI10B,GACrC,GAAW,OAAP2rB,EACAmI,GAASY,EAAIhE,GAAQS,MAAO,OAC3B,CACD,IAAIr5C,EA5BM,SAAS6zC,EAAI/1C,GAC3B,IAAK,IAAIzB,EAAIw3C,EAAGsF,QAAU,EAAG98C,GAAK,EAAGA,IACjC,GAAI08C,GAAMj7C,EAAGy+C,GAAU1I,EAAIx3C,GAAGsd,SAC1B,OAAOtd,EAGf,OAAQ,EAsBIwgD,CAAUhJ,EAAI/1C,GACtB,GAAIkC,GAAK,EACLg8C,GAASY,EAAIhE,GAAQiB,OAAQ75C,GACxBkoB,GAlBC,SAAS2rB,EAAIj3B,GAE3B,IADA,IAAI69B,EAAK5G,EAAG4G,GACLA,EAAGtB,QAAUv8B,GAChB69B,EAAKA,EAAGtzB,SACZszB,EAAGjc,MAAQ,EAeCse,CAAUjJ,EAAI7zC,OACf,CACH,IAAIygB,EAtDM,SAASozB,EAAIj3C,GAE/B,IADA,IAAImwC,EAAK8G,EAAGv+B,EAAEqY,SACLtxB,EAAI,EAAGA,EAAIw3C,EAAGjtC,KAAMvK,IACzB,GAAI08C,GAAMhM,EAAG1wC,GAAGO,KAAMA,GAClB,OAAOP,EAEf,OAAQ,EAgDU0gD,CAAclJ,EAAI/1C,GAC5B,GAAI2iB,EAAM,EAAG,CAET,GADAk8B,EAAa9I,EAAG/kB,KAAMhxB,EAAG8+C,EAAI,GACzBA,EAAGnwB,IAAMmsB,GAAQS,MACjB,OAEJ54B,EAAMi8B,GAAW7I,EAAI/1C,EAAG8+C,GAE5BZ,GAASY,EAAIhE,GAAQkB,OAAQr5B,MAKnCu8B,GAAY,SAASpgB,EAAIggB,GAC3B,IAAIjjC,EAAUoiC,GAAcnf,GACxBiX,EAAKjX,EAAGiX,GAEZ,GADA8I,GAAa9I,EAAIl6B,EAASijC,EAAI,GAC1BA,EAAGnwB,IAAMmsB,GAAQS,MAAO,CACxB,IAAIz7C,EAAM,IAAIs8C,GACdyC,GAAa9I,EAAIjX,EAAGkX,KAAM8I,EAAI,GAC9BtqC,GAAWsqC,EAAGnwB,IAAMmsB,GAAQS,OAC5B4C,GAAWrf,EAAIh/B,EAAK+b,GACpB29B,GAAazD,EAAI+I,EAAIh/C,KAIvBq/C,GAAgB,SAASrgB,EAAI6f,EAAOS,EAAO7qC,GAC7C,IAAIwhC,EAAKjX,EAAGiX,GACR5nB,EAAQwwB,EAAQS,EACpB,GAAIvE,GAAWtmC,EAAEoa,KACbR,EACY,IAAGA,EAAQ,GACvBssB,GAAgB1E,EAAIxhC,EAAG4Z,GACnBA,EAAQ,GAAGgsB,GAAiBpE,EAAI5nB,EAAQ,QAG5C,GADI5Z,EAAEoa,IAAMmsB,GAAQS,OAAOrC,EAAiBnD,EAAIxhC,GAC5C4Z,EAAQ,EAAG,CACX,IAAI6F,EAAM+hB,EAAGmH,QACb/C,GAAiBpE,EAAI5nB,GACrB0rB,GAAS9D,EAAI/hB,EAAK7F,GAGtBixB,EAAQT,IACR7f,EAAGiX,GAAGmH,SAAWkC,EAAQT,IAG3BU,GAAa,SAASvgB,GACxB,IAAIhqB,EAAIgqB,EAAGhqB,IACTA,EAAE6X,QACJ6wB,GAAW1e,EAAGiX,GAAIjhC,EAAE6X,QAAShY,GAAgBtT,EAAa,aAAa,KAGrEi+C,GAAa,SAASxgB,GACxB,OAAOA,EAAGhqB,EAAE6X,WAGV4yB,GAAY,SAASzgB,EAAI/R,EAAGyyB,GAC9B,IAAIzJ,EAAKjX,EAAGiX,GACR0J,EAAK3gB,EAAGzP,IAAIkgB,GACZA,EAAKkQ,EAAGr9B,IAAI2K,GAEhB,GADAvY,GAAWymC,GAAM1L,EAAGzwC,KAAM0gD,EAAM1gD,OAC5BywC,EAAG8L,QAAUmE,EAAMnE,QAAS,CAC5B,IAAIqE,EAAQjB,GAAU1I,EAAIxG,EAAG8L,SAASx/B,QAClCnH,EAAMoT,GAAQ1N,iBAAiB0kB,EAAGhqB,EAClCzT,EAAa,2DACbkuC,EAAGzwC,KAAKyX,SAAUg5B,EAAG/jB,KAAMk0B,EAAMnpC,UACrC+mC,GAASxe,EAAIpqB,GAEjBqlC,GAAehE,EAAIxG,EAAG/b,GAAIgsB,EAAMhsB,IAEhC,IAAK,IAAIj1B,EAAIwuB,EAAGxuB,EAAIkhD,EAAGz/C,EAAI,EAAGzB,IAC1BkhD,EAAGr9B,IAAI7jB,GAAKkhD,EAAGr9B,IAAI7jB,EAAI,GAC3BkhD,EAAGz/C,KAMD2/C,GAAY,SAAS7gB,EAAI/R,GAK3B,IAJA,IAAI4vB,EAAK7d,EAAGiX,GAAG4G,GACXttB,EAAMyP,EAAGzP,IACTkgB,EAAKlgB,EAAIkgB,GAAGntB,IAAI2K,GAEXxuB,EAAIo+C,EAAGxB,WAAY58C,EAAI8wB,EAAImwB,MAAMx/C,EAAGzB,IAAK,CAC9C,IAAIqhD,EAAKvwB,EAAImwB,MAAMp9B,IAAI7jB,GACvB,GAAI08C,GAAM2E,EAAG9gD,KAAMywC,EAAGzwC,MAIlB,OAHIywC,EAAG8L,QAAUuE,EAAGvE,UAAYsB,EAAGjc,OAASrR,EAAImwB,MAAMx/C,EAAI28C,EAAGxB,aACzDrB,GAAgBhb,EAAGiX,GAAIxG,EAAG/b,GAAIosB,EAAGvE,SACrCkE,GAAUzgB,EAAI/R,EAAG6yB,IACV,EAGf,OAAO,GAGLC,GAAgB,SAAS/gB,EAAItgC,EAAGM,EAAM0sB,EAAMgI,GAC9C,IAAIxzB,EAAIxB,EAAEwB,EAOV,OANAxB,EAAE4jB,IAAIpiB,GAAK,IAAIo9C,GACf5+C,EAAE4jB,IAAIpiB,GAAGlB,KAAOA,EAChBN,EAAE4jB,IAAIpiB,GAAGwrB,KAAOA,EAChBhtB,EAAE4jB,IAAIpiB,GAAGq7C,QAAUvc,EAAGiX,GAAGsF,QACzB78C,EAAE4jB,IAAIpiB,GAAGwzB,GAAKA,EACdh1B,EAAEwB,EAAIA,EAAI,EACHA,GAOL8/C,GAAY,SAAShhB,EAAI8gB,GAG3B,IAFA,IAAIH,EAAK3gB,EAAGzP,IAAIkgB,GACZhxC,EAAIugC,EAAGiX,GAAG4G,GAAGvB,UACV78C,EAAIkhD,EAAGz/C,GACNi7C,GAAMwE,EAAGr9B,IAAI7jB,GAAGO,KAAM8gD,EAAG9gD,MACzBygD,GAAUzgB,EAAIvgC,EAAGqhD,GAEjBrhD,KA2BNwhD,GAAa,SAAShK,EAAI4G,EAAIrB,GAChCqB,EAAGrB,OAASA,EACZqB,EAAGtB,QAAUtF,EAAGsF,QAChBsB,EAAGxB,WAAapF,EAAGjX,GAAGzP,IAAImwB,MAAMx/C,EAChC28C,EAAGvB,UAAYrF,EAAGjX,GAAGzP,IAAIkgB,GAAGvvC,EAC5B28C,EAAGjc,MAAQ,EACXic,EAAGtzB,SAAW0sB,EAAG4G,GACjB5G,EAAG4G,GAAKA,EACRnoC,GAAWuhC,EAAGmH,UAAYnH,EAAGsF,UA6C3B2E,GAAY,SAASlhB,EAAIiX,EAAI4G,GAC/B5G,EAAG/kB,KAAO8N,EAAGiX,GACbA,EAAGjX,GAAKA,EACRA,EAAGiX,GAAKA,EACRA,EAAGviB,GAAK,EACRuiB,EAAG6G,WAAa,EAChB7G,EAAG8G,IAAMvE,EACTvC,EAAGmH,QAAU,EACbnH,EAAG+G,GAAK,EACR/G,EAAGgH,GAAK,EACRhH,EAAGjtC,KAAO,EACVitC,EAAGkH,SAAW,EACdlH,EAAGsF,QAAU,EACbtF,EAAGiH,WAAale,EAAGzP,IAAIkvB,OAAOv+C,EAC9B+1C,EAAG4G,GAAK,KACR,IAAInlC,EAAIu+B,EAAGv+B,EACXA,EAAE9O,OAASo2B,EAAGp2B,OACd8O,EAAE8S,aAAe,EACjBy1B,GAAWhK,EAAI4G,GAAI,IAGjBsD,GAAa,SAASlK,GACxB,IAAI4G,EAAK5G,EAAG4G,GACR7d,EAAKiX,EAAGjX,GACZ,GAAI6d,EAAGtzB,UAAYszB,EAAGjc,MAAO,CAEzB,IAAIje,EAAIk3B,GAAU5D,GAClB+D,GAAgB/D,EAAItzB,EAAIk6B,EAAGtB,SAC3BrB,GAAiBjE,EAAItzB,GAGrBk6B,EAAGrB,QAtEQ,SAASxc,GACxB,IAAI9+B,EAAIioB,GAAgB6W,EAAGhqB,EAAG,SAC1BtW,EAAIqhD,GAAc/gB,EAAIA,EAAGzP,IAAImwB,MAAOx/C,EAAG,EAAG8+B,EAAGiX,GAAGviB,IACpDssB,GAAUhhB,EAAIA,EAAGzP,IAAImwB,MAAMp9B,IAAI5jB,IAoE3B0hD,CAAWphB,GAEfiX,EAAG4G,GAAKA,EAAGtzB,SAnSI,SAAS0sB,EAAIoK,GAE5B,IADApK,EAAGjX,GAAGzP,IAAIkvB,OAAOv+C,GAAK+1C,EAAGsF,QAAU8E,EAC5BpK,EAAGsF,QAAU8E,GAChB1B,GAAU1I,IAAMA,EAAGsF,SAASt/B,MAAQg6B,EAAGviB,GAiS3C4sB,CAAWrK,EAAI4G,EAAGtB,SAClB7mC,GAAWmoC,EAAGtB,UAAYtF,EAAGsF,SAC7BtF,EAAGmH,QAAUnH,EAAGsF,QAChBvc,EAAGzP,IAAImwB,MAAMx/C,EAAI28C,EAAGxB,WAChBwB,EAAGtzB,SA7GU,SAAS0sB,EAAI4G,GAK9B,IAJA,IAAIp+C,EAAIo+C,EAAGvB,UACPqE,EAAK1J,EAAGjX,GAAGzP,IAAIkgB,GAGZhxC,EAAIkhD,EAAGz/C,GAAG,CACb,IAAIuvC,EAAKkQ,EAAGr9B,IAAI7jB,GACZgxC,EAAG8L,QAAUsB,EAAGtB,UACZsB,EAAGjc,OACHoZ,GAAgB/D,EAAIxG,EAAG/b,GAAImpB,EAAGtB,SAClC9L,EAAG8L,QAAUsB,EAAGtB,SAEfsE,GAAU5J,EAAGjX,GAAIvgC,IAClBA,KAiGJ8hD,CAAatK,EAAI4G,GACZA,EAAGvB,UAAYtc,EAAGzP,IAAIkgB,GAAGvvC,GAtEpB,SAAS8+B,EAAIyQ,GAC3B,IAAI76B,EAAM8d,GAAKyjB,WAAW1G,EAAGzwC,MACvB,oCACA,8CACN4V,EAAMoT,GAAQ1N,iBAAiB0kB,EAAGhqB,EAAGzT,EAAaqT,GAAM66B,EAAGzwC,KAAKyX,SAAUg5B,EAAG/jB,MAC7E8xB,GAASxe,EAAIpqB,GAkET4rC,CAAUxhB,EAAIA,EAAGzP,IAAIkgB,GAAGntB,IAAIu6B,EAAGvB,aAGjCmF,GAAa,SAASzhB,GACxB,IAAIiX,EAAKjX,EAAGiX,GACZqE,GAASrE,EAAI,EAAG,GAChBkK,GAAWlK,GACXvhC,GAAqB,OAAVuhC,EAAG4G,IACd7d,EAAGiX,GAAKA,EAAG/kB,MAOTwvB,GAAe,SAAS1hB,EAAI2hB,GAC9B,OAAQ3hB,EAAGr/B,EAAEi0C,OACT,KAAKkH,GAAEvJ,QAAS,KAAKuJ,GAAEtJ,UACvB,KAAKsJ,GAAErJ,OAAQ,KAAKqJ,GAAE1H,OAClB,OAAO,EACX,KAAK0H,GAAEtI,SAAU,OAAOmO,EACxB,QAAS,OAAO,IAIlBC,GAAW,SAAS5hB,GAEtB,MAAQ0hB,GAAa1hB,EAAI,IAAI,CACzB,GAAIA,EAAGr/B,EAAEi0C,QAAUkH,GAAEzI,UAEjB,YADAwO,GAAU7hB,GAGd6hB,GAAU7hB,KAIZ8hB,GAAW,SAAS9hB,EAAI58B,GAE1B,IAAI6zC,EAAKjX,EAAGiX,GACRj2C,EAAM,IAAIs8C,GACdnD,EAAkBlD,EAAI7zC,GACtBswB,GAAK4jB,UAAUtX,GACfsf,GAAUtf,EAAIh/B,GACd05C,GAAazD,EAAI7zC,EAAGpC,IAGlB+gD,GAAS,SAAS/hB,EAAI58B,GAExBswB,GAAK4jB,UAAUtX,GACfgiB,GAAKhiB,EAAI58B,GACTi3C,EAAara,EAAGiX,GAAI7zC,GACpB27C,GAAU/e,EAAI,KASZiiB,GACF,SAAAA,IAAc34C,EAAAC,KAAA04C,GACV14C,KAAKnG,EAAI,IAAIk6C,GACb/zC,KAAK5I,EAAI,IAAI28C,GACb/zC,KAAK24C,GAAKz4C,IACVF,KAAK6lC,GAAK3lC,IACVF,KAAK44C,QAAU14C,KAIjB24C,GAAW,SAASpiB,EAAIqiB,GAE1B,IAAIpL,EAAKjX,EAAGiX,GACR/hB,EAAM8K,EAAGiX,GAAGmH,QACZp9C,EAAM,IAAIs8C,GACV9b,EAAM,IAAI8b,GAEVtd,EAAGr/B,EAAEi0C,QAAUkH,GAAEvH,SACjBmK,GAAWzH,EAAIoL,EAAGH,GAAIjsC,GAAS1T,EAAa,0BAA0B,IACtE+8C,GAAUtf,EAAIh/B,IAEd+gD,GAAO/hB,EAAIh/B,GACfqhD,EAAGH,KACHnD,GAAU/e,EAAI,IACd,IAAIsiB,EAAQrI,EAAYhD,EAAIj2C,GAC5BghD,GAAKhiB,EAAIwB,GACTmY,EAAa1C,EAAIrgB,GAAayrB,EAAG1hD,EAAE4D,EAAEk5C,KAAM6E,EAAOrI,EAAYhD,EAAIzV,IAClEyV,EAAGmH,QAAUlpB,GAGXqtB,GAAiB,SAAStL,EAAIoL,GAC5BA,EAAGj/C,EAAEysB,IAAMmsB,GAAQS,QACvBrC,EAAiBnD,EAAIoL,EAAGj/C,GACxBi/C,EAAGj/C,EAAEysB,EAAImsB,GAAQS,MACb4F,EAAGF,UAAYvkB,KACf4d,GAAavE,EAAIoL,EAAG1hD,EAAE4D,EAAEk5C,KAAM4E,EAAGjT,GAAIiT,EAAGF,SACxCE,EAAGF,QAAU,KAiBfK,GAAY,SAASxiB,EAAIqiB,GAE3BL,GAAKhiB,EAAIqiB,EAAGj/C,GACZs7C,GAAW1e,EAAGiX,GAAIoL,EAAGjT,GAAIn5B,GAAS1T,EAAa,0BAA0B,IACzE8/C,EAAGjT,KACHiT,EAAGF,WAGDM,GAAQ,SAASziB,EAAIqiB,GAEvB,OAAQriB,EAAGr/B,EAAEi0C,OACT,KAAKkH,GAAEvH,QAC6B,KAA5B7gB,GAAK2jB,eAAerX,GACpBwiB,GAAUxiB,EAAIqiB,GAEdD,GAASpiB,EAAIqiB,GACjB,MAEJ,KAAK,GACDD,GAASpiB,EAAIqiB,GACb,MAEJ,QACIG,GAAUxiB,EAAIqiB,KAMpBK,GAAc,SAAS1iB,EAAIr/B,GAG7B,IAAIs2C,EAAKjX,EAAGiX,GACRvqB,EAAOsT,EAAGwV,WACV9gB,EAAKilB,EAAa1C,EAAI/Y,GAAa,EAAG,EAAG,GACzCmkB,EAAK,IAAIJ,GACbI,EAAGjT,GAAKiT,EAAGH,GAAKG,EAAGF,QAAU,EAC7BE,EAAG1hD,EAAIA,EACPy+C,GAASz+C,EAAGq7C,GAAQqB,WAAY3oB,GAChC0qB,GAASiD,EAAGj/C,EAAG44C,GAAQS,MAAO,GAC9BrC,EAAiBpa,EAAGiX,GAAIt2C,GACxBo+C,GAAU/e,EAAI,KACd,EAAG,CAEC,GADAtqB,GAAW2sC,EAAGj/C,EAAEysB,IAAMmsB,GAAQS,OAAS4F,EAAGF,QAAU,GACjC,MAAfniB,EAAGr/B,EAAEi0C,MAAyC,MAClD2N,GAAetL,EAAIoL,GACnBI,GAAMziB,EAAIqiB,SACLxD,GAAS7e,EAAI,KAAiC6e,GAAS7e,EAAI,KACpEif,GAAYjf,EAAI,IAA+B,IAA+BtT,GA7D5D,SAASuqB,EAAIoL,GACZ,IAAfA,EAAGF,UACHpG,GAAWsG,EAAGj/C,EAAEysB,IAChB4rB,GAAgBxE,EAAIoL,EAAGj/C,GACvBo4C,GAAavE,EAAIoL,EAAG1hD,EAAE4D,EAAEk5C,KAAM4E,EAAGjT,GAAIpnC,GACrCq6C,EAAGjT,OAECiT,EAAGj/C,EAAEysB,IAAMmsB,GAAQS,OACnBrC,EAAiBnD,EAAIoL,EAAGj/C,GAC5Bo4C,GAAavE,EAAIoL,EAAG1hD,EAAE4D,EAAEk5C,KAAM4E,EAAGjT,GAAIiT,EAAGF,WAqD5CQ,CAAc1L,EAAIoL,GAClBnc,GAAS+Q,EAAGv+B,EAAEoT,KAAK4I,GAAK1L,GAAQ3K,YAAYgkC,EAAGjT,KAC/CjJ,GAAS8Q,EAAGv+B,EAAEoT,KAAK4I,GAAK1L,GAAQ3K,YAAYgkC,EAAGH,MAiC7CU,GAAO,SAAS5iB,EAAIvqB,EAAGotC,EAAUn2B,GAEnC,IAAIo2B,EAAS,IAAIlF,GACbC,EAAK,IAAIzB,GACb0G,EAAOpqC,EArQU,SAASsnB,GAC1B,IAAIhqB,EAAIgqB,EAAGhqB,EACP+sC,EAAM,IAAI1mB,GAAMrmB,GAChBihC,EAAKjX,EAAGiX,GAGZ,OAFQA,EAAGv+B,EACTnX,EAAE01C,EAAGgH,MAAQ8E,EACRA,EA+PIC,CAAahjB,GACxB8iB,EAAOpqC,EAAE5O,YAAc4iB,EACvBw0B,GAAUlhB,EAAI8iB,EAAQjF,GACtBkB,GAAU/e,EAAI,IACV6iB,IACAnD,GAAoB1f,EAAI,QACxB4f,GAAgB5f,EAAI,IAtCZ,SAASA,GAErB,IAAIiX,EAAKjX,EAAGiX,GACRv+B,EAAIu+B,EAAGv+B,EACPzO,EAAU,EAEd,GADAyO,EAAE+S,WAAY,EACK,KAAfuU,EAAGr/B,EAAEi0C,MACL,GACI,OAAQ5U,EAAGr/B,EAAEi0C,OACT,KAAKkH,GAAEvH,QACHgL,GAAavf,EAAImf,GAAcnf,IAC/B/1B,IACA,MAEJ,KAAK6xC,GAAElI,QACHlgB,GAAK4jB,UAAUtX,GACftnB,EAAE+S,WAAY,EACd,MAEJ,QAASiI,GAAK+jB,iBAAiBzX,EAAIz9B,EAAa,4BAA4B,YAE3EmW,EAAE+S,WAAaozB,GAAS7e,EAAI,KAEzC4f,GAAgB5f,EAAI/1B,GACpByO,EAAEiT,UAAYsrB,EAAGsF,QACjBlB,GAAiBpE,EAAIA,EAAGsF,SAexB0G,CAAQjjB,GACR+e,GAAU/e,EAAI,IACd4hB,GAAS5hB,GACT8iB,EAAOpqC,EAAE3O,gBAAkBi2B,EAAGwV,WAC9ByJ,GAAYjf,EAAI8b,GAAErJ,OAAQqJ,GAAElJ,YAAalmB,GArQzB,SAASsT,EAAI58B,GAC7B,IAAI6zC,EAAKjX,EAAGiX,GAAG/kB,KACfktB,GAASh8C,EAAG44C,GAAQqB,WAAYzD,EAAa3C,EAAIpZ,GAAY,EAAGoZ,EAAGgH,GAAI,IACvE7D,EAAiBnD,EAAI7zC,GAmQrB8/C,CAAYljB,EAAIvqB,GAChBgsC,GAAWzhB,IAGTmjB,GAAU,SAASnjB,EAAI58B,GAEzB,IAAIlC,EAAI,EAER,IADA8gD,GAAKhiB,EAAI58B,GACFy7C,GAAS7e,EAAI,KAChBoa,EAAiBpa,EAAGiX,GAAI7zC,GACxB4+C,GAAKhiB,EAAI58B,GACTlC,IAEJ,OAAOA,GAGLkiD,GAAW,SAASpjB,EAAItnB,EAAGgU,GAC7B,IA4BIziB,EA5BAgtC,EAAKjX,EAAGiX,GACRzN,EAAO,IAAI8T,GACf,OAAQtd,EAAGr/B,EAAEi0C,OACT,KAAK,GACDlhB,GAAK4jB,UAAUtX,GACI,KAAfA,EAAGr/B,EAAEi0C,MACLpL,EAAK3Z,EAAImsB,GAAQS,OAEjB0G,GAAQnjB,EAAIwJ,GACZiS,GAAgBxE,EAAIzN,IAExByV,GAAYjf,EAAI,GAA8B,GAA8BtT,GAC5E,MAEJ,KAAK,IACDg2B,GAAY1iB,EAAIwJ,GAChB,MAEJ,KAAKsS,GAAEtH,UACH6K,GAAWrf,EAAIwJ,EAAMxJ,EAAGr/B,EAAEk0C,QAAQ/8B,IAClC4b,GAAK4jB,UAAUtX,GACf,MAEJ,QACItM,GAAK+jB,iBAAiBzX,EAAIz9B,EAAa,+BAA+B,IAG9EmT,GAAWgD,EAAEmX,IAAMmsB,GAAQgB,WAE3B,IAAI1xB,EAAO5S,EAAEnU,EAAEk5C,KACX1B,GAAWvS,EAAK3Z,GAChB5lB,EAAUjC,GAENwhC,EAAK3Z,IAAMmsB,GAAQS,OACnBrC,EAAiBnD,EAAIzN,GACzBv/B,EAAUgtC,EAAGmH,SAAW9yB,EAAK,IAEjC8zB,GAAS1mC,EAAGsjC,GAAQC,MAAOtC,EAAa1C,EAAIzhB,GAASlK,EAAMrhB,EAAQ,EAAG,IACtEqwC,EAAarD,EAAIvqB,GACjBuqB,EAAGmH,QAAU9yB,EAAO,GA8BlB+3B,GAAc,SAASrjB,EAAI58B,GAG7B,IAAI6zC,EAAKjX,EAAGiX,GACRvqB,EAAOsT,EAAGwV,WAEd,KA3Be,SAASxV,EAAI58B,GAE5B,OAAQ48B,EAAGr/B,EAAEi0C,OACT,KAAK,GACD,IAAIloB,EAAOsT,EAAGwV,WAKd,OAJA9hB,GAAK4jB,UAAUtX,GACfgiB,GAAKhiB,EAAI58B,GACT67C,GAAYjf,EAAI,GAA8B,GAA8BtT,QAC5EstB,EAAmBha,EAAGiX,GAAI7zC,GAG9B,KAAK04C,GAAEvH,QAEH,YADA6L,GAAUpgB,EAAI58B,GAGlB,QACIswB,GAAK+jB,iBAAiBzX,EAAIz9B,EAAa,qBAAqB,KAUpE+gD,CAAWtjB,EAAI58B,KAEX,OAAQ48B,EAAGr/B,EAAEi0C,OACT,KAAK,GACDkN,GAAS9hB,EAAI58B,GACb,MAEJ,KAAK,GACD,IAAIpC,EAAM,IAAIs8C,GACdnD,EAAkBlD,EAAI7zC,GACtB2+C,GAAO/hB,EAAIh/B,GACX05C,GAAazD,EAAI7zC,EAAGpC,GACpB,MAEJ,KAAK,GACD,IAAIA,EAAM,IAAIs8C,GACd5pB,GAAK4jB,UAAUtX,GACfsf,GAAUtf,EAAIh/B,GACdu6C,GAAUtE,EAAI7zC,EAAGpC,GACjBoiD,GAASpjB,EAAI58B,EAAGspB,GAChB,MAEJ,KAAK,GAA8B,KAAKovB,GAAEtH,UAAW,KAAK,IACtD4F,EAAiBnD,EAAI7zC,GACrBggD,GAASpjB,EAAI58B,EAAGspB,GAChB,MAEJ,QAAS,SA+Ff62B,GAAW,CACb,CAACC,KAAM,GAAIC,MAAO,IAAK,CAACD,KAAM,GAAIC,MAAO,IACzC,CAACD,KAAM,GAAIC,MAAO,IAAK,CAACD,KAAM,GAAIC,MAAO,IACzC,CAACD,KAAM,GAAIC,MAAO,IAClB,CAACD,KAAM,GAAIC,MAAO,IAAK,CAACD,KAAM,GAAIC,MAAO,IACzC,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAC3D,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GACtC,CAACD,KAAM,EAAGC,MAAO,GACjB,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAC3D,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAC3D,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,IASpCC,GAAU,SAAVA,EAAmB1jB,EAAI58B,EAAGs/B,GAC5B6d,GAAWvgB,GACX,IAAI2jB,EA1DS,SAASrnC,GACtB,OAAQA,GACJ,KAAKw/B,GAAE5I,OAAQ,OAAOoG,EACtB,KAAK,GAA8B,OAAOD,EAC1C,KAAK,IAA+B,OAAOF,EAC3C,KAAK,GAA8B,OAAOC,EAC1C,QAAS,OAAOG,GAoDVqK,CAAS5jB,EAAGr/B,EAAEi0C,OACxB,GAAI+O,IAAQpK,EAAa,CACrB,IAAI7sB,EAAOsT,EAAGwV,WACd9hB,GAAK4jB,UAAUtX,GACf0jB,EAAQ1jB,EAAI58B,EAZG,IAafg4C,GAAYpb,EAAGiX,GAAI0M,EAAKvgD,EAAGspB,QApHjB,SAASsT,EAAI58B,GAG3B,OAAQ48B,EAAGr/B,EAAEi0C,OACT,KAAKkH,GAAEzH,OACH+K,GAASh8C,EAAG44C,GAAQc,MAAO,GAC3B15C,EAAEmB,EAAEi5C,KAAOxd,EAAGr/B,EAAEk0C,QAAQt0C,EACxB,MAEJ,KAAKu7C,GAAExH,OACH8K,GAASh8C,EAAG44C,GAAQe,MAAO,GAC3B35C,EAAEmB,EAAEg5C,KAAOvd,EAAGr/B,EAAEk0C,QAAQp1C,EACxB,MAEJ,KAAKq8C,GAAEtH,UACH6K,GAAWrf,EAAI58B,EAAG48B,EAAGr/B,EAAEk0C,QAAQ/8B,IAC/B,MAEJ,KAAKgkC,GAAE7I,OACHmM,GAASh8C,EAAG44C,GAAQU,KAAM,GAC1B,MAEJ,KAAKZ,GAAEvI,QACH6L,GAASh8C,EAAG44C,GAAQW,MAAO,GAC3B,MAEJ,KAAKb,GAAEpJ,SACH0M,GAASh8C,EAAG44C,GAAQY,OAAQ,GAC5B,MAEJ,KAAKd,GAAElI,QACH,IAAIqD,EAAKjX,EAAGiX,GACZ+H,GAAgBhf,EAAIiX,EAAGv+B,EAAE+S,UAAWlpB,EAAa,8CAA8C,IAC/F68C,GAASh8C,EAAG44C,GAAQE,QAASvC,EAAa1C,EAAIvY,GAAW,EAAG,EAAG,IAC/D,MAEJ,KAAK,IAED,YADAgkB,GAAY1iB,EAAI58B,GAGpB,KAAK04C,GAAElJ,YAGH,OAFAlf,GAAK4jB,UAAUtX,QACf4iB,GAAK5iB,EAAI58B,EAAG,EAAG48B,EAAGwV,YAGtB,QAEI,YADA6N,GAAYrjB,EAAI58B,GAIxBswB,GAAK4jB,UAAUtX,GAoEX6jB,CAAU7jB,EAAI58B,GAGlB,IADA,IAAIkZ,EAzDU,SAASA,GACvB,OAAQA,GACJ,KAAK,GAA8B,OAAOs7B,EAC1C,KAAK,GAA8B,OAAOqB,EAC1C,KAAK,GAA8B,OAAOP,EAC1C,KAAK,GAA8B,OAAOD,EAC1C,KAAK,GAA8B,OAAOK,EAC1C,KAAK,GAA8B,OAAOZ,EAC1C,KAAK4D,GAAEpI,QAAW,OAAO4E,EACzB,KAAK,GAA8B,OAAOR,EAC1C,KAAK,IAA+B,OAAOC,EAC3C,KAAK,IAA+B,OAAOC,EAC3C,KAAK8D,GAAE7H,OAAW,OAAO8E,EACzB,KAAK+C,GAAE5H,OAAW,OAAO8E,EACzB,KAAK8C,GAAEnI,UAAW,OAAOsE,EACzB,KAAK6D,GAAE9H,MAAW,OAAO2E,EACzB,KAAKmD,GAAEjI,MAAW,OAAOsE,EACzB,KAAK,GAA8B,OAAOK,EAC1C,KAAKsD,GAAE/H,MAAW,OAAOwE,EACzB,KAAK,GAA8B,OAAOF,EAC1C,KAAKyD,GAAEhI,MAAW,OAAOsE,EACzB,KAAK0D,GAAE3J,OAAW,OAAO0F,EACzB,KAAKiE,GAAE3I,MAAW,OAAO0F,EACzB,QAAkB,OAAOD,GAkCpBkL,CAAU9jB,EAAGr/B,EAAEi0C,OACjBt4B,IAAOs8B,GAAgB2K,GAASjnC,GAAIknC,KAAO9gB,GAAO,CACrD,IAAIlmB,EAAK,IAAI8gC,GACT5wB,EAAOsT,EAAGwV,WACd9hB,GAAK4jB,UAAUtX,GACf2a,GAAW3a,EAAGiX,GAAI36B,EAAIlZ,GAEtB,IAAI2gD,EAASL,EAAQ1jB,EAAIxjB,EAAI+mC,GAASjnC,GAAImnC,OAC1CtI,GAAYnb,EAAGiX,GAAI36B,EAAIlZ,EAAGoZ,EAAIkQ,GAC9BpQ,EAAKynC,EAGT,OADAvD,GAAWxgB,GACJ1jB,GAGL0lC,GAAO,SAAShiB,EAAI58B,GACtBsgD,GAAQ1jB,EAAI58B,EAAG,IAab4gD,GAAQ,SAAShkB,GAEnB,IAAIiX,EAAKjX,EAAGiX,GACR4G,EAAK,IAAIzB,GACb6E,GAAWhK,EAAI4G,EAAI,GACnB+D,GAAS5hB,GACTmhB,GAAWlK,IAOTgN,GACF,SAAAA,IAAc36C,EAAAC,KAAA06C,GACV16C,KAAK2oB,KAAO,KACZ3oB,KAAKnG,EAAI,IAAIk6C,IAqCf4G,GAAa,SAAbA,EAAsBlkB,EAAImkB,EAAItE,GAChC,IAvhCqBhwB,EAuhCjBpa,EAAI,IAAI6nC,GAEZ,GADA0B,GAAgBhf,GAxhCKnQ,EAwhCOs0B,EAAG/gD,EAAEysB,EAvhC1BmsB,GAAQiB,QAAUptB,GAAKA,GAAKmsB,GAAQmB,UAuhCN56C,EAAa,gBAAgB,IAC9Ds8C,GAAS7e,EAAI,IAA+B,CAC5C,IAAIokB,EAAK,IAAIH,GACbG,EAAGlyB,KAAOiyB,EACVd,GAAYrjB,EAAIokB,EAAGhhD,GACfghD,EAAGhhD,EAAEysB,IAAMmsB,GAAQmB,UAlCR,SAASnd,EAAImkB,EAAI/gD,GAIpC,IAHA,IAAI6zC,EAAKjX,EAAGiX,GACR5nB,EAAQ4nB,EAAGmH,QACXiG,GAAW,EACRF,EAAIA,EAAKA,EAAGjyB,KACXiyB,EAAG/gD,EAAEysB,IAAMmsB,GAAQmB,WAEfgH,EAAG/gD,EAAEmB,EAAEm5C,IAAIC,KAAOv6C,EAAEysB,GAAKs0B,EAAG/gD,EAAEmB,EAAEm5C,IAAI/8C,IAAMyC,EAAEmB,EAAEk5C,OAC9C4G,GAAW,EACXF,EAAG/gD,EAAEmB,EAAEm5C,IAAIC,GAAK3B,GAAQiB,OACxBkH,EAAG/gD,EAAEmB,EAAEm5C,IAAI/8C,EAAI0uB,GAGfjsB,EAAEysB,IAAMmsB,GAAQiB,QAAUkH,EAAG/gD,EAAEmB,EAAEm5C,IAAI75B,MAAQzgB,EAAEmB,EAAEk5C,OACjD4G,GAAW,EACXF,EAAG/gD,EAAEmB,EAAEm5C,IAAI75B,IAAMwL,IAI7B,GAAIg1B,EAAU,CAEV,IAAI/nC,EAAKlZ,EAAEysB,IAAMmsB,GAAQiB,OAASnnB,GAAUM,GAC5CujB,EAAa1C,EAAI36B,EAAI+S,EAAOjsB,EAAEmB,EAAEk5C,KAAM,GACtCpC,GAAiBpE,EAAI,IAYjBqN,CAAetkB,EAAImkB,EAAIC,EAAGhhD,GAC9Bs7C,GAAW1e,EAAGiX,GAAI4I,EAAQ7f,EAAGhqB,EAAE6X,QAAShY,GAAgBtT,EAAa,aAAa,IAClF2hD,EAAWlkB,EAAIokB,EAAIvE,EAAQ,OACxB,CACHd,GAAU/e,EAAI,IACd,IAAIsgB,EAAQ6C,GAAQnjB,EAAIvqB,GACxB,GAAI6qC,IAAUT,EAKV,OAFAnE,GAAe1b,EAAGiX,GAAIxhC,QACtBmmC,GAAc5b,EAAGiX,GAAIkN,EAAG/gD,EAAGqS,GAH3B4qC,GAAcrgB,EAAI6f,EAAOS,EAAO7qC,GAOxC2pC,GAAS3pC,EAAGumC,GAAQgB,UAAWhd,EAAGiX,GAAGmH,QAAQ,GAC7CxC,GAAc5b,EAAGiX,GAAIkN,EAAG/gD,EAAGqS,IAGzB4Q,GAAO,SAAS2Z,GAElB,IAAI58B,EAAI,IAAIk6C,GAIZ,OAHA0E,GAAKhiB,EAAI58B,GACLA,EAAEysB,IAAMmsB,GAAQU,OAAMt5C,EAAEysB,EAAImsB,GAAQY,QACxCnC,GAAcza,EAAGiX,GAAI7zC,GACdA,EAAEsV,GAGP6rC,GAAW,SAASvkB,EAAItL,GAC1B,IACIgsB,EADAh0B,EAAOsT,EAAGwV,WAEVqJ,GAAS7e,EAAI8b,GAAEjJ,SACf6N,EAAQvB,GAAcnf,IAEtBtM,GAAK4jB,UAAUtX,GACf0gB,EAAQv3B,GAAgB6W,EAAGhqB,EAAG,UAElC,IAAIiY,EAAI8yB,GAAc/gB,EAAIA,EAAGzP,IAAIkgB,GAAIiQ,EAAOh0B,EAAMgI,GAClDmsB,GAAU7gB,EAAI/R,IAqBZu2B,GAAY,SAASxkB,EAAI0gB,EAAOh0B,GAElC,IAEIhtB,EAFAu3C,EAAKjX,EAAGiX,GACRwN,EAAKzkB,EAAGzP,IAAImwB,OApBE,SAASzJ,EAAIwN,EAAI/D,GACnC,IAAK,IAAIjhD,EAAIw3C,EAAG4G,GAAGxB,WAAY58C,EAAIglD,EAAGvjD,EAAGzB,IACrC,GAAI08C,GAAMuE,EAAO+D,EAAGnhC,IAAI7jB,GAAGO,MAAO,CAC9B,IAAI4V,EAAMoT,GAAQ1N,iBAAiB27B,EAAGjX,GAAGhqB,EACrCzT,EAAa,yCAAyC,GACtDm+C,EAAMjpC,SAAUgtC,EAAGnhC,IAAI7jB,GAAGitB,MAC9B8xB,GAASvH,EAAGjX,GAAIpqB,IAgBxB8uC,CAAczN,EAAIwN,EAAI/D,GACtB3B,GAAU/e,EAAI8b,GAAE3H,YAEhBz0C,EAAIqhD,GAAc/gB,EAAIykB,EAAI/D,EAAOh0B,EAAM6tB,EAActD,IAbpC,SAASjX,GAC1B,KAAsB,KAAfA,EAAGr/B,EAAEi0C,OAA0C5U,EAAGr/B,EAAEi0C,QAAUkH,GAAE3H,YACnE0N,GAAU7hB,GAYd2kB,CAAa3kB,GACT0hB,GAAa1hB,EAAI,KAEjBykB,EAAGnhC,IAAI5jB,GAAG68C,QAAUtF,EAAG4G,GAAGtB,SAE9ByE,GAAUhhB,EAAIykB,EAAGnhC,IAAI5jB,KAsCnBoa,GAAO,SAASkmB,GAClB,IAAIvqB,EAAI,IAAI6nC,GAKZ,OAJA0E,GAAKhiB,EAAIvqB,GACT2kC,EAAiBpa,EAAGiX,GAAIxhC,GACxBC,GAAWD,EAAEoa,IAAMmsB,GAAQgB,WACjBvnC,EAAElR,EAAEk5C,MAIZmH,GAAU,SAAS5kB,EAAI1U,EAAMoB,EAAMmzB,EAAOgF,GAE5C,IAEIC,EAFAjH,EAAK,IAAIzB,GACTnF,EAAKjX,EAAGiX,GAEZ2I,GAAgB5f,EAAI,GACpB+e,GAAU/e,EAAI8b,GAAExJ,OAChB,IAAIyS,EAAOF,EAAQhL,EAAc5C,EAAIjZ,GAAY1S,EAAMkuB,GAAWqB,GAAU5D,GAC5EgK,GAAWhK,EAAI4G,EAAI,GACnB+B,GAAgB5f,EAAI6f,GACpBxE,GAAiBpE,EAAI4I,GACrBmE,GAAMhkB,GACNmhB,GAAWlK,GACXiE,GAAiBjE,EAAI8N,GACjBF,EACAC,EAASjL,EAAc5C,EAAIlZ,GAAYzS,EAAMkuB,IAE7CG,EAAa1C,EAAI1hB,GAAajK,EAAM,EAAGu0B,GACvCvF,EAAarD,EAAIvqB,GACjBo4B,EAASjL,EAAc5C,EAAIxY,GAAanT,EAAO,EAAGkuB,IAEtDyB,GAAehE,EAAI6N,EAAQC,EAAO,GAClCzK,EAAarD,EAAIvqB,IA+Cfs4B,GAAU,SAAShlB,EAAItT,GAEzB,IAAIuqB,EAAKjX,EAAGiX,GACR4G,EAAK,IAAIzB,GACb6E,GAAWhK,EAAI4G,EAAI,GACnBnqB,GAAK4jB,UAAUtX,GACf,IAAIjjB,EAAUoiC,GAAcnf,GAC5B,OAAQA,EAAGr/B,EAAEi0C,OACT,KAAK,IApDE,SAAS5U,EAAIjjB,EAAS2P,GAEjC,IAAIuqB,EAAKjX,EAAGiX,GACR3rB,EAAO2rB,EAAGmH,QACdsB,GAAoB1f,EAAI,eACxB0f,GAAoB1f,EAAI,eACxB0f,GAAoB1f,EAAI,cACxBuf,GAAavf,EAAIjjB,GACjBgiC,GAAU/e,EAAI,IACdlmB,GAAKkmB,GACL+e,GAAU/e,EAAI,IACdlmB,GAAKkmB,GACD6e,GAAS7e,EAAI,IACblmB,GAAKkmB,IAEL8Z,EAAW7C,EAAIA,EAAGmH,QAASxD,GAAU3D,EAAI,IACzCoE,GAAiBpE,EAAI,IAEzB2N,GAAQ5kB,EAAI1U,EAAMoB,EAAM,EAAG,GAkCYu4B,CAAOjlB,EAAIjjB,EAAS2P,GAAO,MAC9D,KAAK,GAA8B,KAAKovB,GAAE/I,OAhClC,SAAS/S,EAAIklB,GAEzB,IAAIjO,EAAKjX,EAAGiX,GACRxhC,EAAI,IAAI6nC,GACRuC,EAAQ,EACRv0B,EAAO2rB,EAAGmH,QAOd,IALAsB,GAAoB1f,EAAI,mBACxB0f,GAAoB1f,EAAI,eACxB0f,GAAoB1f,EAAI,iBAExBuf,GAAavf,EAAIklB,GACVrG,GAAS7e,EAAI,KAChBuf,GAAavf,EAAImf,GAAcnf,IAC/B6f,IAEJd,GAAU/e,EAAI8b,GAAE/I,OAChB,IAAIrmB,EAAOsT,EAAGwV,WACd6K,GAAcrgB,EAAI,EAAGmjB,GAAQnjB,EAAIvqB,GAAIA,GACrCikC,EAAgBzC,EAAI,GACpB2N,GAAQ5kB,EAAI1U,EAAMoB,EAAMmzB,EAAQ,EAAG,GAYkBsF,CAAQnlB,EAAIjjB,GAAU,MACvE,QAAS2W,GAAK+jB,iBAAiBzX,EAAIz9B,EAAa,wBAAwB,IAE5E08C,GAAYjf,EAAI8b,GAAErJ,OAAQqJ,GAAEnJ,OAAQjmB,GACpCy0B,GAAWlK,IAGTmO,GAAkB,SAASplB,EAAIqlB,GAEjC,IAGIC,EAHAzH,EAAK,IAAIzB,GACTnF,EAAKjX,EAAGiX,GACR7zC,EAAI,IAAIk6C,GAOZ,GAJA5pB,GAAK4jB,UAAUtX,GACfgiB,GAAKhiB,EAAI58B,GACT27C,GAAU/e,EAAI8b,GAAExI,SAEZtT,EAAGr/B,EAAEi0C,QAAUkH,GAAEjJ,SAAW7S,EAAGr/B,EAAEi0C,QAAUkH,GAAE1J,SAAU,CAIvD,IAHAoI,GAAexa,EAAGiX,GAAI7zC,GACtB69C,GAAWhK,EAAI4G,GAAI,GACnB0G,GAASvkB,EAAI58B,EAAEzC,GACRk+C,GAAS7e,EAAI,MACpB,GAAI0hB,GAAa1hB,EAAI,GAEjB,OADAmhB,GAAWlK,GACJoO,EAEPC,EAAKzK,GAAU5D,QAEnBwD,GAAcza,EAAGiX,GAAI7zC,GACrB69C,GAAWhK,EAAI4G,GAAI,GACnByH,EAAKliD,EAAEsV,EASX,OANAkpC,GAAS5hB,GACTmhB,GAAWlK,GACPjX,EAAGr/B,EAAEi0C,QAAUkH,GAAEvJ,SAAWvS,EAAGr/B,EAAEi0C,QAAUkH,GAAEtJ,YAC7C6S,EAAatL,EAAY9C,EAAIoO,EAAYxK,GAAU5D,KACvDiE,GAAiBjE,EAAIqO,GAEdD,GA0DLE,GAAW,SAASvlB,EAAItT,GAE1B,IAAItpB,EAAI,IAAIk6C,GACR94C,EAAI,IAAI84C,GACZ5pB,GAAK4jB,UAAUtX,GACf,IAAI6iB,EAlBS,SAAS7iB,EAAI58B,GAE1B,IAAIy/C,EAAW,EAEf,IADAzC,GAAUpgB,EAAI58B,GACQ,KAAf48B,EAAGr/B,EAAEi0C,OACRkN,GAAS9hB,EAAI58B,GAKjB,OAJmB,KAAf48B,EAAGr/B,EAAEi0C,QACLiO,EAAW,EACXf,GAAS9hB,EAAI58B,IAEVy/C,EAQQvuB,CAAS0L,EAAI58B,GAC5Bw/C,GAAK5iB,EAAIx7B,EAAGq+C,EAAUn2B,GACtBkvB,GAAc5b,EAAGiX,GAAI7zC,EAAGoB,GACxB81C,EAAata,EAAGiX,GAAIvqB,IAiDlBm1B,GAAY,SAAS7hB,GACvB,IAAItT,EAAOsT,EAAGwV,WAEd,OADA+K,GAAWvgB,GACJA,EAAGr/B,EAAEi0C,OACR,KAAK,GACDlhB,GAAK4jB,UAAUtX,GACf,MAEJ,KAAK8b,GAAEhJ,OAxHA,SAAS9S,EAAItT,GAExB,IAAIuqB,EAAKjX,EAAGiX,GACRoO,EAAa7L,EAEjB,IADA6L,EAAaD,GAAgBplB,EAAIqlB,GAC1BrlB,EAAGr/B,EAAEi0C,QAAUkH,GAAEtJ,WACpB6S,EAAaD,GAAgBplB,EAAIqlB,GACjCxG,GAAS7e,EAAI8b,GAAEvJ,UACfyR,GAAMhkB,GACVif,GAAYjf,EAAI8b,GAAErJ,OAAQqJ,GAAEhJ,MAAOpmB,GACnCwuB,GAAiBjE,EAAIoO,GA+GbG,CAAOxlB,EAAItT,GACX,MAEJ,KAAKovB,GAAErI,UAjSG,SAASzT,EAAItT,GAE3B,IAAIuqB,EAAKjX,EAAGiX,GACR4G,EAAK,IAAIzB,GACb1oB,GAAK4jB,UAAUtX,GACf,IAAIylB,EAAYlL,EAActD,GAC1ByO,EAAWr/B,GAAK2Z,GACpBihB,GAAWhK,EAAI4G,EAAI,GACnBkB,GAAU/e,EAAI8b,GAAExJ,OAChB0R,GAAMhkB,GACN8a,GAAY7D,EAAIwO,GAChBxG,GAAYjf,EAAI8b,GAAErJ,OAAQqJ,GAAErI,SAAU/mB,GACtCy0B,GAAWlK,GACXiE,GAAiBjE,EAAIyO,GAqRbC,CAAU3lB,EAAItT,GACd,MAEJ,KAAKovB,GAAExJ,MACH5e,GAAK4jB,UAAUtX,GACfgkB,GAAMhkB,GACNif,GAAYjf,EAAI8b,GAAErJ,OAAQqJ,GAAExJ,MAAO5lB,GACnC,MAEJ,KAAKovB,GAAEnJ,OACHqS,GAAQhlB,EAAItT,GACZ,MAEJ,KAAKovB,GAAE1I,WA/RI,SAASpT,EAAItT,GAE5B,IAAIuqB,EAAKjX,EAAGiX,GACR2O,EAAcrL,EAActD,GAC5B4O,EAAM,IAAIzJ,GACV0J,EAAM,IAAI1J,GACd6E,GAAWhK,EAAI4O,EAAK,GACpB5E,GAAWhK,EAAI6O,EAAK,GACpBpyB,GAAK4jB,UAAUtX,GACf4hB,GAAS5hB,GACTif,GAAYjf,EAAI8b,GAAEtI,SAAUsI,GAAE1I,UAAW1mB,GACzC,IAAIg5B,EAAWr/B,GAAK2Z,GAChB8lB,EAAIlkB,OACJoZ,GAAgB/D,EAAIyO,EAAUI,EAAIvJ,SACtC4E,GAAWlK,GACXgE,GAAehE,EAAIyO,EAAUE,GAC7BzE,GAAWlK,GAgRH8O,CAAW/lB,EAAItT,GACf,MAEJ,KAAKovB,GAAElJ,YACH2S,GAASvlB,EAAItT,GACb,MAEJ,KAAKovB,GAAE9I,SACHtf,GAAK4jB,UAAUtX,GACX6e,GAAS7e,EAAI8b,GAAElJ,aAvIb,SAAS5S,GACvB,IAAIx7B,EAAI,IAAI84C,GACRrG,EAAKjX,EAAGiX,GACZsI,GAAavf,EAAImf,GAAcnf,IAC/B4f,GAAgB5f,EAAI,GACpB4iB,GAAK5iB,EAAIx7B,EAAG,EAAGw7B,EAAGwV,YAElBmK,GAAU1I,EAAIzyC,EAAED,EAAEk5C,MAAMzgC,QAAUi6B,EAAGviB,GAiIzBsxB,CAAUhmB,GA9HR,SAASA,GAEvB,IACIsgB,EADAT,EAAQ,EAERpqC,EAAI,IAAI6nC,GACZ,GACIiC,GAAavf,EAAImf,GAAcnf,IAC/B6f,UACKhB,GAAS7e,EAAI,KAClB6e,GAAS7e,EAAI,IACbsgB,EAAQ6C,GAAQnjB,EAAIvqB,IAEpBA,EAAEoa,EAAImsB,GAAQS,MACd6D,EAAQ,GAEZD,GAAcrgB,EAAI6f,EAAOS,EAAO7qC,GAChCmqC,GAAgB5f,EAAI6f,GAgHRoG,CAAUjmB,GACd,MAEJ,KAAK8b,GAAE3H,WACHzgB,GAAK4jB,UAAUtX,GACfwkB,GAAUxkB,EAAImf,GAAcnf,GAAKtT,GACjC,MAEJ,KAAKovB,GAAEzI,UACH3f,GAAK4jB,UAAUtX,GA/EX,SAASA,GAErB,IAEIgN,EAAOkZ,EAFPjP,EAAKjX,EAAGiX,GACRxhC,EAAI,IAAI6nC,GAERoE,GAAa1hB,EAAI,IAAqB,KAAfA,EAAGr/B,EAAEi0C,MAC5B5H,EAAQkZ,EAAO,GAEfA,EAAO/C,GAAQnjB,EAAIvqB,GACfsmC,GAAWtmC,EAAEoa,IACb4rB,GAAgBxE,EAAIxhC,GAChBA,EAAEoa,IAAMmsB,GAAQC,OAAkB,IAATiK,IACzB7f,GAAWoT,EAAexC,EAAIxhC,GAAIwX,IAClCvX,GAAW+jC,EAAexC,EAAIxhC,GAAG4f,IAAM4hB,EAAGsF,UAE9CvP,EAAQiK,EAAGsF,QACX2J,EAAOl+C,GAEM,IAATk+C,EACAlZ,EAAQkN,EAAgBjD,EAAIxhC,IAE5B2kC,EAAiBnD,EAAIxhC,GACrBu3B,EAAQiK,EAAGsF,QACX7mC,GAAWwwC,IAASjP,EAAGmH,QAAUpR,KAI7CsO,GAASrE,EAAIjK,EAAOkZ,GACpBrH,GAAS7e,EAAI,IAoDLmmB,CAAQnmB,GACR,MAEJ,KAAK8b,GAAE1J,SACP,KAAK0J,GAAEjJ,QACH0R,GAASvkB,EAAI6a,GAAU7a,EAAGiX,KAC1B,MAEJ,SAvGQ,SAASjX,GAErB,IAAIiX,EAAKjX,EAAGiX,GACR7zC,EAAI,IAAI6gD,GACZZ,GAAYrjB,EAAI58B,EAAEA,GACC,KAAf48B,EAAGr/B,EAAEi0C,OAAyD,KAAf5U,EAAGr/B,EAAEi0C,OACpDxxC,EAAE8uB,KAAO,KACTgyB,GAAWlkB,EAAI58B,EAAG,KAGlB47C,GAAgBhf,EAAI58B,EAAEA,EAAEysB,IAAMmsB,GAAQC,MAAO15C,EAAa,gBAAgB,IAC1E4jC,GAASsT,EAAexC,EAAI7zC,EAAEA,GAAI,IA6F9BgjD,CAASpmB,GAIjBtqB,GAAWsqB,EAAGiX,GAAGv+B,EAAE8S,cAAgBwU,EAAGiX,GAAGmH,SAAWpe,EAAGiX,GAAGmH,SAAWpe,EAAGiX,GAAGsF,SAC3Evc,EAAGiX,GAAGmH,QAAUpe,EAAGiX,GAAGsF,QACtBiE,GAAWxgB,IA4Cf9gC,EAAOD,QAAQuxB,QAx5CX,SAAAA,IAAclnB,EAAAC,KAAAinB,GACVjnB,KAAKk2C,OAAS,CACVn8B,IAAK,GACLpiB,EAAGuI,IACHoP,KAAMpP,KAEVF,KAAKknC,GAAK,IAAI8N,GACdh1C,KAAKm3C,MAAQ,IAAInC,IAk5CzBr/C,EAAOD,QAAQ+8C,QAAcA,GAC7B98C,EAAOD,QAAQq+C,QAAcA,GAC7Bp+C,EAAOD,QAAQ6xB,YA3BK,SAAS9a,EAAGsa,EAAGjX,EAAMkX,EAAKvwB,EAAMw3C,GAChD,IAdsBxX,EAAIiX,EACtB4G,EACAz6C,EAYAijD,EAAW,IAAI3yB,GAAKojB,SACpBwP,EAAY,IAAI1I,GAChBjtB,EAAK5H,GAAM2T,iBAAiB1mB,EAAG,GAiBnC,OAhBA9K,GAAI8P,YAAYhF,GAChBA,EAAE+B,MAAM/B,EAAEiF,IAAI,GAAG8lB,YAAYpQ,GAC7B01B,EAAShmB,EAAI5pB,GAAOwc,SAASjd,GAC7B9K,GAAI8P,YAAYhF,GAChBA,EAAE+B,MAAM/B,EAAEiF,IAAI,GAAG4gB,UAAUwqB,EAAShmB,GACpCimB,EAAU5tC,EAAIiY,EAAGpvB,EAAI,IAAI86B,GAAMrmB,GAC/BswC,EAAU5tC,EAAE9O,OAAS4M,GAASR,EAAGhW,GACjCqmD,EAAShtC,KAAOA,EAChBgtC,EAAS91B,IAAMA,EACfA,EAAIkvB,OAAOv+C,EAAIqvB,EAAIkgB,GAAGvvC,EAAIqvB,EAAImwB,MAAMx/C,EAAI,EACxCwyB,GAAK6jB,cAAcvhC,EAAGqwC,EAAU/1B,EAAGg2B,EAAU5tC,EAAE9O,OAAQ4tC,GA3BjCxX,EA4BbqmB,EA5BiBpP,EA4BPqP,EA3BfzI,EAAK,IAAIzB,GACTh5C,EAAI,IAAIk6C,GACZ4D,GAAUlhB,EAAIiX,EAAI4G,GAClB5G,EAAGv+B,EAAE+S,WAAY,EACjB2zB,GAASh8C,EAAG44C,GAAQiB,OAAQ,GAC5B6C,GAAW7I,EAAIjX,EAAGkX,KAAM9zC,GACxBswB,GAAK4jB,UAAUtX,GACf4hB,GAAS5hB,GACT8e,GAAM9e,EAAI8b,GAAE1H,QACZqN,GAAWzhB,GAmBXtqB,IAAY4wC,EAAUp0B,MAA2B,IAAnBo0B,EAAUt8C,OAAeq8C,EAASpP,IAEhEvhC,GAA4B,IAAjB6a,EAAIkvB,OAAOv+C,GAAwB,IAAbqvB,EAAIkgB,GAAGvvC,GAA2B,IAAhBqvB,EAAImwB,MAAMx/C,UACtD8U,EAAE+B,QAAQ/B,EAAEiF,KACZ0V,GAQXzxB,EAAOD,QAAQsnD,UA1+CG,SAAS12B,GACvB,OAAOA,IAAMmsB,GAAQgB,WAAantB,IAAMmsB,GAAQiB,0CCzFhDuJ,EACAC,IAzBA/kD,EAAQ,GAnDRsG,gBACAwC,WACA/D,kBACAN,aACAD,cACAI,gBACAC,gBACAC,eACAX,gBACA4E,cACAe,aACAC,cACAI,eACAI,cACAK,kBACAI,aACAG,qBACAG,eACAG,eACAM,cACAC,eACAI,iBACAM,aACAK,aACAE,eACAC,YACAC,oBACAE,sBACAE,wBACAC,oBACAI,oBACAE,gBACAE,mBACAE,kBACAE,iBACAC,eACAG,eACAC,eACAI,eACAC,gBACAE,eACAE,iBACAK,qBACAE,eACAC,mBACAG,uBACAC,kBACAK,kBACAK,kBACAG,cACAC,qBAmBA5Q,EAAQ,GAhBR0kB,oBACAG,oBACA1E,wBACA2E,uBACAvC,sBACAyC,qBACApG,iBACAI,wBACAoC,uBACA+C,oBACAzG,qBACAoI,sBACA7F,qBACAmC,oBACAqE,qBACAvH,oBAKAlf,EAAQ,GAFRY,kBACAC,mBAMA,GAA2B,mBAAhBmkD,YAA4B,CACnC,IAAIrtC,GAAO,GACPstC,GAAU,IAAID,YAAY,SAC9BF,EAAkB,SAAShlD,GACvB6X,IAAQstC,GAAQC,OAAOplD,EAAG,CAACqlD,QAAQ,KAEvC,IAAIroC,GAAQ,IAAI1b,WAAW,GAC3B2jD,EAAgB,WACZptC,IAAQstC,GAAQC,OAAOpoC,IACvBsK,QAAQg+B,IAAIztC,IACZA,GAAO,QAER,CACH,IAAIA,GAAO,GACXmtC,EAAkB,SAAShlD,GACvB,IAEIA,EAAIc,GAAYd,GAClB,MAAMiU,GAEJ,IAAIsxC,EAAO,IAAIjkD,WAAWtB,EAAE0B,QAC5B6jD,EAAKhrC,IAAIva,GACTA,EAAIulD,EAER1tC,GAAKowB,KAAKjoC,IAEdilD,EAAgB,WACZ39B,QAAQg+B,IAAIpe,MAAM5f,QAAQg+B,IAAKztC,IAC/BA,GAAO,IAWnB,IA6EM2tC,GAAO,CACT,OAAQ,UAAW,UACnB,QAAS,OAAQ,WAAY,aAC7B,aACFpqB,IAAI,SAACnnB,GAAD,OAAOlT,GAAakT,KA4BpBwxC,GAAY,SAASjxC,GAGvB,OAFA0Q,GAAe1Q,EAAG,EAAGxP,GACrB2K,EAAW6E,EAAG,GACVvH,EAASuH,EAAG,GACL,GAEPxG,EAAYwG,GACL,IAWTkxC,GAAY,SAASlxC,GACvB,IAAIvW,EAAIoiB,GAAkB7L,EAAG,GAAK,EAElC,OADA9G,EAAgB8G,EAAGvW,GACZiN,EAASsJ,EAAG,EAAGvW,KAAO0G,EAAW,EAAI,GA0D1CghD,GAAa,SAASnxC,GACxB,IAAIgK,EAAQwH,GAAgBxR,EAAG,EAAG,GAOlC,OANA7E,EAAW6E,EAAG,GACV3D,GAAS2D,EAAG,KAAOzP,GAAeyZ,EAAQ,IAC1CY,GAAW5K,EAAGgK,GACdpQ,EAAcoG,EAAG,GACjBnK,EAAWmK,EAAG,IAEX/J,EAAU+J,IAoCfoxC,GAAc,SAASpxC,EAAGwP,EAAQ6J,GACpC,OAAI7J,IAAWhb,GAAUgb,IAAW/a,GAChCoE,EAAgBmH,EAAG,GACnBpG,EAAcoG,GAAI,GACX,GAEAhJ,EAAWgJ,GAAKqZ,GA0BzBg4B,GAAW,SAASrxC,EAAGwP,EAAQ8hC,GACjC,OAAI9hC,IAAWhb,GACI,IAAX88C,IACA13C,EAAcoG,EAAGsxC,GACZl2C,EAAe4E,GAAI,EAAG,IACvBpH,EAAQoH,EAAG,IAEZ,IAEPxG,EAAYwG,GACZ7I,EAAW6I,GAAI,GACR,IAiBTuxC,GAAiB,SAASvxC,EAAGoL,GAI/B,OAHA6C,GAAgBjO,EAAG,EAAG,6BACtBpG,EAAcoG,EAAG,GACjBxK,EAASwK,EAAG,EAAG,GACXvI,EAAUuI,GAAI,IACdpH,EAAQoH,EAAG,GACJ,OACClI,EAAakI,GAAI,IACzBsK,GAAWtK,EAAGzT,GAAa,yCAC/BiO,EAAYwF,EAjBK,GAkBV9D,GAAa8D,EAlBH,KA8CfwxC,GAAa,SAASxxC,EAAGyxC,EAAIC,GAC/B,OAAO16C,EAAWgJ,GAAK,GAYrB2xC,GAAa,CACfC,OAjJgB,SAAS5xC,GACzB,OAAIxE,EAAcwE,EAAG,GACVhJ,EAAWgJ,IAElBuQ,GAAcvQ,EAAG,GACjBzF,EAAWyF,EAAG,GACd1G,EAAgB0G,EAAG,qBACnB7E,EAAW6E,EAAG,GACPmxC,GAAWnxC,KA0ItB6xC,eAvQwB,SAAS7xC,GACjCwQ,GAAiBxQ,EAAG,EAAG,UAAWgxC,IAClCx/B,GAAgBxR,EAAG,EAAG,GACtBsK,GAAWtK,EAAGzT,GAAa,4BAqQ3BulD,OAZgB,SAAS9xC,GACzB,IAAI+K,EAAQY,GAAe3L,EAAG,EAAG,MAEjC,OADA7E,EAAW6E,EAAG,GACV6P,GAAc7P,EAAG+K,KAAWvW,EACrByB,EAAU+J,IACrBvK,EAAUuK,EAAG,EAAGhO,EAAa,EAAGw/C,IACzBA,GAAWxxC,KAOlBqO,MAAkB8iC,GAClBY,aAnUsB,SAAS/xC,GAE/B,OADAuQ,GAAcvQ,EAAG,GACZnJ,EAAiBmJ,EAAG,IAIzB0K,GAAkB1K,EAAG,EAAGzT,GAAa,eAAe,IAC7C,IAJHiN,EAAYwG,GACL,IAgUXgyC,OApNgB,SAAShyC,GAQzB,OAJAuQ,GAAcvQ,EAAG,GACjBjH,EAAkBiH,EAAGkxC,IACrBt3C,EAAcoG,EAAG,GACjB9G,EAAgB8G,EAAG,GACZ,GA6MPiyC,KA7Cc,SAASjyC,GACvB,IAGIwP,EAHAhkB,EAAI0Q,GAAa8D,EAAG,GACpBpV,EAAO+gB,GAAe3L,EAAG,EAAG,MAC5BkyC,EAAOx6C,EAAWsI,EAAG,GAAS,EAAJ,EAE9B,GAAU,OAANxU,EAAY,CACZ,IAAIgvC,EAAY7uB,GAAe3L,EAAG,EAAGxU,GACrCgkB,EAAS1C,GAAiB9M,EAAGxU,EAAGA,EAAE0B,OAAQstC,EAAW5vC,OAClD,CACH,IAAI4vC,EAAY7uB,GAAe3L,EAAG,EAAG,WACrC0Q,GAAe1Q,EAAG,EAAGvP,GACrB0K,EAAW6E,EAhCE,GAiCbwP,EAASpX,EAAS4H,EAAGuxC,GAAgB,KAAM/W,EAAW5vC,GAE1D,OAAOymD,GAASrxC,EAAGwP,EAAQ0iC,IAgC3BC,SA7BkB,SAASnyC,GAC3B,IAAI+K,EAAQY,GAAe3L,EAAG,EAAG,MAC7BpV,EAAO+gB,GAAe3L,EAAG,EAAG,MAC5BkyC,EAAOx6C,EAAWsI,EAAG,GAAS,EAAJ,EAC1BwP,EAASpG,GAAepJ,EAAG+K,EAAOngB,GACtC,OAAOymD,GAASrxC,EAAGwP,EAAQ0iC,IAyB3B37B,KAAkB06B,GAClBmB,MAzOe,SAASpyC,GACxB,OA1Bc,SAASA,EAAGqyC,EAAQC,EAAQzd,GAW1C,OAVAtkB,GAAcvQ,EAAG,GACb0K,GAAkB1K,EAAG,EAAGqyC,KAAYliD,GACpC4I,EAAkBiH,EAAG60B,GACrBj7B,EAAcoG,EAAG,GACbsyC,EAAQp5C,EAAgB8G,EAAG,GAC1BxG,EAAYwG,KAEjBpG,EAAcoG,EAAG,GACjBxK,EAASwK,EAAG,EAAG,IAEZ,EAeAuyC,CAAUvyC,EAAGzT,GAAa,WAAW,GAAO,EAAG0kD,KAyOtDuB,MAjHe,SAASxyC,GACxBuQ,GAAcvQ,EAAG,GACjBnH,EAAgBmH,EAAG,GACnB7I,EAAW6I,EAAG,GACd,IAAIwP,EAAS7W,EAAWqH,EAAGhJ,EAAWgJ,GAAK,EAAGhO,EAAa,EAAG,EAAGo/C,IACjE,OAAOA,GAAYpxC,EAAGwP,EAAQ,IA6G9BijC,MAnWe,SAASzyC,GACxB,IAAI9U,EAAI8L,EAAWgJ,GACnB1J,EAAc0J,EAAGzT,GAAa,YAAY,IAC1C,IAAK,IAAI9C,EAAI,EAAGA,GAAKyB,EAAGzB,IAAK,CACzBmQ,EAAcoG,GAAI,GAClBpG,EAAcoG,EAAGvW,GACjB+L,EAASwK,EAAG,EAAG,GACf,IAAIxU,EAAIqQ,EAAcmE,GAAI,GAC1B,GAAU,OAANxU,EACA,OAAO8e,GAAWtK,EAAGzT,GAAa,+CAClC9C,EAAI,GAAG+mD,EAAgBjkD,GAAa,OACxCikD,EAAgBhlD,GAChBoN,EAAQoH,EAAG,GAGf,OADAywC,IACO,GAqVPiC,SAtTkB,SAAS1yC,GAI3B,OAHAuQ,GAAcvQ,EAAG,GACjBuQ,GAAcvQ,EAAG,GACjBnH,EAAgBmH,EAAGlG,EAAakG,EAAG,EAAG,IAC/B,GAmTP2yC,OAzSgB,SAAS3yC,GAKzB,OAJA0Q,GAAe1Q,EAAG,EAAGxP,GACrB+f,GAAcvQ,EAAG,GACjB7E,EAAW6E,EAAG,GACdjG,EAAWiG,EAAG,GACP,GAqSP4yC,OAjTgB,SAAS5yC,GACzB,IAAIrV,EAAI0R,GAAS2D,EAAG,GAGpB,OAFAoQ,GAAcpQ,EAAGrV,IAAM6F,GAAc7F,IAAM4F,EAAa,EAAG,4BAC3D2I,EAAgB8G,EAAG9F,EAAW8F,EAAG,IAC1B,GA8SP6yC,OAnSgB,SAAS7yC,GAMzB,OALA0Q,GAAe1Q,EAAG,EAAGxP,GACrB+f,GAAcvQ,EAAG,GACjBuQ,GAAcvQ,EAAG,GACjB7E,EAAW6E,EAAG,GACd7F,EAAW6F,EAAG,GACP,GA8RP8yC,OArJgB,SAAS9yC,GACzB,IAAI9U,EAAI8L,EAAWgJ,GACnB,GAAI3D,GAAS2D,EAAG,KAAOzP,GAAyC,KAA1B2L,GAAa8D,EAAG,GAAG,GAErD,OADA9G,EAAgB8G,EAAG9U,EAAI,GAChB,EAEP,IAAIzB,EAAIoiB,GAAkB7L,EAAG,GAI7B,OAHIvW,EAAI,EAAGA,EAAIyB,EAAIzB,EACVA,EAAIyB,IAAGzB,EAAIyB,GACpBklB,GAAcpQ,EAAG,GAAKvW,EAAG,EAAG,sBACrByB,EAAIzB,GA4IfspD,aAtUsB,SAAS/yC,GAC/B,IAAIrV,EAAI0R,GAAS2D,EAAG,GAGpB,OAFA0Q,GAAe1Q,EAAG,EAAGxP,GACrB4f,GAAcpQ,EAAGrV,IAAMwF,GAAYxF,IAAM6F,EAAY,EAAG,yBACpDka,GAAkB1K,EAAG,EAAGzT,GAAa,eAAe,MAAW4D,EACxDma,GAAWtK,EAAGzT,GAAa,yCACtC4O,EAAW6E,EAAG,GACd/E,EAAiB+E,EAAG,GACb,IA+TP4H,SAzMkB,SAAS5H,GAC3B,GAAI3D,GAAS2D,EAAG,IAAM,EAAG,CAErB,GADAuQ,GAAcvQ,EAAG,GACb3D,GAAS2D,EAAG,KAAO1P,EAEnB,OADA6K,EAAW6E,EAAG,GACP,EAEP,IAAIxU,EAAI0Q,GAAa8D,EAAG,GACxB,GAAU,OAANxU,GAAc+P,EAAmByE,EAAGxU,KAAOA,EAAE0B,OAAO,EACpD,OAAO,MAEZ,CACH,IAAIooB,EAAOzJ,GAAkB7L,EAAG,GAChC0Q,GAAe1Q,EAAG,EAAGzP,GACrB,IAAI/E,EAAI0Q,GAAa8D,EAAG,GACxBoQ,GAAcpQ,EAAG,GAAKsV,GAAQA,GAAQ,GAAI,EAAG,qBAC7C,IAAIpqB,EA7BM,SAASM,EAAG8pB,GAC1B,IACI9pB,EAAIc,GAAYd,GAClB,MAAOiU,GACL,OAAO,KAEX,IAAIlV,EAAI,wDAAwDyZ,KAAKxY,GACrE,IAAKjB,EAAG,OAAO,KACf,IAAI6C,EAAI4lD,SAASzoD,EAAE,GAAGA,EAAE,GAAI+qB,GAC5B,OAAInR,MAAM/W,GAAW,KACZ,EAAFA,EAmBK6lD,CAAUznD,EAAG8pB,GACrB,GAAU,OAANpqB,EAEA,OADAgO,EAAgB8G,EAAG9U,GACZ,EAKf,OADAsO,EAAYwG,GACL,GAkLPgrB,SAzVkB,SAAShrB,GAI3B,OAHAuQ,GAAcvQ,EAAG,GACjBmS,GAAenS,EAAG,GAEX,GAsVPe,KApRc,SAASf,GACvB,IAAIrV,EAAI0R,GAAS2D,EAAG,GAGpB,OAFAoQ,GAAcpQ,EAAGrV,IAAMuF,EAAW,EAAG,kBACrCwJ,EAAesG,EAAG1D,GAAa0D,EAAGrV,IAC3B,GAiRPuoD,OA/GgB,SAASlzC,GACzB,IAAI9U,EAAI8L,EAAWgJ,GACnB0Q,GAAe1Q,EAAG,EAAGvP,GACrBoI,EAAgBmH,EAAG,GACnBpG,EAAcoG,EAAG,GACjBtF,EAAWsF,EAAG,EAAG,GACjB,IAAIwP,EAAS7W,EAAWqH,EAAG9U,EAAI,EAAG8G,EAAa,EAAG,EAAGo/C,IACrD,OAAOA,GAAYpxC,EAAGwP,EAAQ,KAwHlCtmB,EAAOD,QAAQmoC,aAbM,SAASpxB,GAU1B,OARA/G,EAAoB+G,GACpB8N,GAAc9N,EAAG2xC,GAAY,GAE7B/3C,EAAcoG,GAAI,GAClBpF,EAAaoF,GAAI,EAAGzT,GAAa,OAEjC+M,EAAgB0G,EAAGnQ,GACnB+K,EAAaoF,GAAI,EAAGzT,GAAa,aAC1B,uCCrdPb,EAAQ,GA1BR8I,WACA/D,kBACAF,gBACAkE,cACApB,cACAqC,mBACAG,eACAI,cACAa,iBACAE,eACAG,eACAe,oBACAK,kBACAK,YACAC,oBACAC,qBACAQ,oBACAK,mBACAC,kBACAa,eACAa,eACAa,iBACAE,aACA/H,qBACAoI,cACAC,gBAOAjR,EAAQ,GAJR0kB,kBACAM,mBACAU,gBACAxG,eAGEuoC,EAAQ,SAASnzC,GACnB,IAAIozC,EAAKj3C,EAAa6D,EAAG,GAEzB,OADAoQ,EAAcpQ,EAAGozC,EAAI,EAAG,mBACjBA,GAGLC,EAAY,SAASrzC,EAAGozC,EAAI35B,GAC9B,IAAK/jB,EAAe09C,EAAI35B,GAEpB,OADAngB,EAAgB0G,EAAG,iCACX,EAGZ,GAAI1E,EAAW83C,KAAQ5+C,GAA6B,IAAnBwC,EAAWo8C,GAExC,OADA95C,EAAgB0G,EAAG,iCACX,EAGZtD,EAAUsD,EAAGozC,EAAI35B,GACjB,IAAIjK,EAAS/U,EAAW24C,EAAIpzC,EAAGyZ,GAC/B,GAAIjK,IAAWhb,GAAUgb,IAAW/a,EAAW,CAC3C,IAAI2hB,EAAOpf,EAAWo8C,GACtB,OAAK19C,EAAesK,EAAGoW,EAAO,IAM9B1Z,EAAU02C,EAAKpzC,EAAGoW,GACXA,IANHxd,EAAQw6C,EAAIh9B,GACZ9c,EAAgB0G,EAAG,+BACX,GAOZ,OADAtD,EAAU02C,EAAIpzC,EAAG,IACT,GAkBVszC,EAAe,SAAStzC,GAC1B,IAAIozC,EAAKj3C,EAAa6D,EAAG1L,EAAiB,IACtC/J,EAAI8oD,EAAUrzC,EAAGozC,EAAIp8C,EAAWgJ,IACpC,OAAIzV,EAAI,GACA8R,EAAS2D,GAAI,KAAOzP,IACpBqa,EAAW5K,EAAG,GACd7I,EAAW6I,GAAI,GACfnK,EAAWmK,EAAG,IAGX/J,EAAU+J,IAGdzV,GAGLgpD,EAAgB,SAASvzC,GAC3B0Q,EAAe1Q,EAAG,EAAGvP,GACrB,IAAI+iD,EAAKj7C,EAAcyH,GAGvB,OAFApG,EAAcoG,EAAG,GACjBtD,EAAUsD,EAAGwzC,EAAI,GACV,GAkDLC,EAAW,CACb1oD,OAAewoD,EACfG,YAZmB,SAAS1zC,GAE5B,OADAnH,EAAgBmH,EAAG9H,EAAgB8H,IAC5B,GAWP0Z,OAxFkB,SAAS1Z,GAC3B,IAAIozC,EAAKD,EAAMnzC,GACXzV,EAAI8oD,EAAUrzC,EAAGozC,EAAIp8C,EAAWgJ,GAAK,GACzC,OAAIzV,EAAI,GACJsO,EAAgBmH,EAAG,GACnB7I,EAAW6I,GAAI,GACR,IAEPnH,EAAgBmH,EAAG,GACnB7I,EAAW6I,IAAKzV,EAAI,IACbA,EAAI,IA+EfopD,QATmB,SAAS3zC,GAE5B,OADAnH,EAAgBmH,EAAGrG,EAAeqG,IAC3B,GAQPwP,OA1CkB,SAASxP,GAC3B,IAAIozC,EAAKD,EAAMnzC,GACf,GAAIA,IAAMozC,EAAI95C,EAAgB0G,EAAG,gBAE7B,OAAQ1E,EAAW83C,IACf,KAAK3+C,EACD6E,EAAgB0G,EAAG,aACnB,MACJ,KAAKxL,EACD,IAAIqV,EAAK,IAAIxW,EACTyD,EAAas8C,EAAI,EAAGvpC,GAAM,EAC1BvQ,EAAgB0G,EAAG,UACK,IAAnBhJ,EAAWo8C,GAChB95C,EAAgB0G,EAAG,QAEnB1G,EAAgB0G,EAAG,aACvB,MAEJ,QACI1G,EAAgB0G,EAAG,QAK/B,OAAO,GAmBPo0B,KArDgB,SAASp0B,GAGzB,OAFAuzC,EAAcvzC,GACdlH,EAAiBkH,EAAGszC,EAAc,GAC3B,GAmDPM,MAhDe,SAAS5zC,GACxB,OAAOrD,EAAUqD,EAAGhJ,EAAWgJ,MAuDnC9W,EAAOD,QAAQqoC,kBALW,SAAStxB,GAE/B,OADAoR,EAAYpR,EAAGyzC,GACR,qCCvKHl1C,EAAmB7S,EAAQ,GAA3B6S,iBA6BJ7S,EAAQ,GA3BR6G,aACAG,aACAjC,kBACAN,aACAK,eACAgF,aACAE,mBACAE,gBACAG,oBACAW,aACAG,qBACAG,eACAG,eACAM,cACAE,oBACAG,iBACAc,YACAM,oBACAM,gBACAE,mBACAE,kBACAG,eACAa,iBACAG,aACAI,eACAK,kBACAa,eAkBA3Q,EAAQ,GAfRie,gBACA4C,oBACA4D,kBACAC,kBACA9D,kBACAT,sBACA6E,mBACApG,eACA6G,aACAC,gBACAzE,aACA6E,oBACA/F,oBACAiB,oBACA/B,kBAEE/d,EAASlB,EAAQ,IACfa,EAAiBb,EAAQ,GAAzBa,aAWFsnD,EAAa,SAAS7zC,EAAGhV,EAAKE,GAEhC,OADAwO,EAAesG,EAAGhV,GACX+O,EAAWiG,GAAI9U,KAAOiF,GAO3B2jD,EAAW,SAAS9zC,EAAGoK,EAAKzW,GAC9B,GAAI0I,EAAS2D,EAAGoK,KAAS5Z,EAAY,CACjC,IAAItF,EAAI,GACJ2L,EAAiBmJ,EAAGoK,IAjBjB,EAkBAzW,IAAiBkgD,EAAW7zC,EAAGzT,EAAa,WAAW,KAASrB,IAjBhE,EAkBAyI,IAAiBkgD,EAAW7zC,EAAGzT,EAAa,cAAc,KAASrB,IAjBnE,EAkBAyI,IAAiBkgD,EAAW7zC,EAAGzT,EAAa,SAAS,KAASrB,GAIjEwlB,EAAe1Q,EAAGoK,EAAK5Z,GAHvBoI,EAAQoH,EAAG9U,KAOjB6oD,EAAW,SAAS/zC,EAAG9U,EAAGk2C,GAE5B,OADA0S,EAAS9zC,EAAG9U,EA3BD,EA2BIk2C,GACRjwB,EAASnR,EAAG9U,IAGjB8oD,EAAW,SAASh0C,EAAGxR,EAAG/E,GAC5BiN,EAASsJ,EAAG,EAAGvW,GACVqO,EAAakI,GAAI,IAClBsK,EAAWtK,EAAGzT,EAAa,wDACvBoe,EAAc3K,GAAI,GAAIvW,GAE9B0mB,EAAc3hB,IAmIZylD,GAAO,SAASj0C,EAAGvW,EAAGkkB,GACxB5S,EAASiF,EAAG,EAAGvW,GACfsR,EAASiF,EAAG,EAAG2N,IAGbumC,GAAY,SAASl0C,EAAGhT,EAAGwB,GAC7B,GAAIiJ,EAAUuI,EAAG,GACb,OAAOpK,EAAYoK,EAAGhT,EAAGwB,EAAGkE,GAE5BkH,EAAcoG,EAAG,GACjBpG,EAAcoG,EAAGhT,EAAE,GACnB4M,EAAcoG,EAAGxR,EAAE,GACnBgH,EAASwK,EAAG,EAAG,GACf,IAAIsH,EAAM9L,EAAcwE,GAAI,GAE5B,OADApH,EAAQoH,EAAG,GACJsH,GAIT6sC,GAAY,SAASn0C,EAAGo0C,EAAIja,GAI9B,IAHA,IAAI1wC,EAAI2qD,EACJzmC,EAAIwsB,EAAK,IAEJ,CAEL,KAAOzjC,EAASsJ,EAAG,IAAKvW,GAAIyqD,GAAUl0C,GAAI,GAAI,IACtCvW,GAAK0wC,EAAK,GACV7vB,EAAWtK,EAAGzT,EAAa,uCAC/BqM,EAAQoH,EAAG,GAIf,KAAOtJ,EAASsJ,EAAG,IAAK2N,GAAIumC,GAAUl0C,GAAI,GAAI,IACtC2N,EAAIlkB,GACJ6gB,EAAWtK,EAAGzT,EAAa,uCAC/BqM,EAAQoH,EAAG,GAGf,GAAI2N,EAAIlkB,EAKJ,OAHAmP,EAAQoH,EAAG,GAEXi0C,GAAKj0C,EAAGm6B,EAAK,EAAG1wC,GACTA,EAGXwqD,GAAKj0C,EAAGvW,EAAGkkB,KAIb0mC,GAAc,SAASD,EAAIja,EAAIma,GACjC,IAAIC,EAAK5lD,KAAK0P,OAAO87B,EAAKia,GAAM,GAC5B7oD,EAAI+oD,GAAY,EAALC,IAAWH,EAAKG,GAE/B,OADA3nD,EAAO8S,WAAW00C,EAAKG,GAAMhpD,GAAKA,GAAK4uC,EAAKoa,GACrChpD,GAkELipD,GAAY,CACd72C,OA9KY,SAASqC,GACrB,IAAIuS,EAAOwhC,EAAS/zC,EAAG,EAtHZ,GAuHPggC,EAAMv0B,EAAgBzL,EAAG,EAAG,IAC5By0C,EAAOzU,EAAI9yC,OACXzD,EAAI+nB,EAAgBxR,EAAG,EAAG,GAC9BuS,EAAOf,EAAgBxR,EAAG,EAAGuS,GAE7B,IAAI/jB,EAAI,IAAImb,EAGZ,IAFA2C,EAActM,EAAGxR,GAEV/E,EAAI8oB,EAAM9oB,IACbuqD,EAASh0C,EAAGxR,EAAG/E,GACf8iB,EAAgB/d,EAAGwxC,EAAKyU,GAQ5B,OALIhrD,IAAM8oB,GACNyhC,EAASh0C,EAAGxR,EAAG/E,GAEnBijB,EAAgBle,GAET,GA2JPkmD,OA1PY,SAAS10C,GACrB,IACI8O,EADArP,EAAIs0C,EAAS/zC,EAAG,EAxCR20C,GAwCqB,EAEjC,OAAQ39C,EAAWgJ,IACf,KAAK,EACD8O,EAAMrP,EACN,MACJ,KAAK,EACDqP,EAAMjD,EAAkB7L,EAAG,GAC3BoQ,EAAcpQ,EAAG,GAAK8O,GAAOA,GAAOrP,EAAG,EAAG,0BAC1C,IAAK,IAAIhW,EAAIgW,EAAGhW,EAAIqlB,EAAKrlB,IACrBiN,EAASsJ,EAAG,EAAGvW,EAAI,GACnBsR,EAASiF,EAAG,EAAGvW,GAEnB,MAEJ,QACI,OAAO6gB,EAAWtK,EAAG,yCAK7B,OADAjF,EAASiF,EAAG,EAAG8O,GACR,GAqOP8lC,KA7MU,SAAS50C,GACnB,IAAI0C,EAAImJ,EAAkB7L,EAAG,GACzBP,EAAIoM,EAAkB7L,EAAG,GACzBrV,EAAIkhB,EAAkB7L,EAAG,GACzBiN,EAAMtV,EAAgBqI,EAAG,GAAS,EAAJ,EAGlC,GAFA8zC,EAAS9zC,EAAG,EA7FD,GA8FX8zC,EAAS9zC,EAAGiN,EA7FD,GA8FPxN,GAAKiD,EAAG,CACR0N,EAAcpQ,EAAG0C,EAAI,GAAKjD,EAAIlB,EAAiBmE,EAAG,EAAG,6BACrD,IAAIxX,EAAIuU,EAAIiD,EAAI,EAGhB,GAFA0N,EAAcpQ,EAAGrV,GAAK4T,EAAiBrT,EAAI,EAAG,EAAG,2BAE7CP,EAAI8U,GAAK9U,GAAK+X,GAAa,IAAPuK,GAAgD,IAApCrX,EAAYoK,EAAG,EAAGiN,EAAI1a,GACtD,IAAK,IAAI9I,EAAI,EAAGA,EAAIyB,EAAGzB,IACnBiN,EAASsJ,EAAG,EAAG0C,EAAIjZ,GACnBsR,EAASiF,EAAGiN,EAAItiB,EAAIlB,QAGxB,IAAK,IAAIA,EAAIyB,EAAI,EAAGzB,GAAK,EAAGA,IACxBiN,EAASsJ,EAAG,EAAG0C,EAAIjZ,GACnBsR,EAASiF,EAAGiN,EAAItiB,EAAIlB,GAMhC,OADAmQ,EAAcoG,EAAGiN,GACV,GAoLP4nC,KA1JS,SAAS70C,GAClB,IAAI9U,EAAI8L,EAAWgJ,GACnBjK,EAAgBiK,EAAG9U,EAAG,GACtBiM,EAAW6I,EAAG,GACd,IAAK,IAAIvW,EAAIyB,EAAGzB,GAAK,EAAGA,IACpBsR,EAASiF,EAAG,EAAGvW,GAGnB,OAFAyP,EAAgB8G,EAAG9U,GACnB0P,EAAaoF,EAAG,EAAGzT,EAAa,MACzB,GAmJPuoD,OApOY,SAAS90C,GACrB,IAAI6C,EAAOkxC,EAAS/zC,EAAG,EAjEX20C,GAkER7lC,EAAM0C,EAAgBxR,EAAG,EAAG6C,GAIhC,IAHIiM,IAAQjM,GACRuN,EAAcpQ,EAAG,GAAK8O,GAAOA,GAAOjM,EAAO,EAAG,EAAG,0BACrDnM,EAASsJ,EAAG,EAAG8O,GACRA,EAAMjM,EAAMiM,IACfpY,EAASsJ,EAAG,EAAG8O,EAAM,GACrB/T,EAASiF,EAAG,EAAG8O,GAInB,OAFAtV,EAAYwG,GACZjF,EAASiF,EAAG,EAAG8O,GACR,GAyNPimC,KAlBS,SAAS/0C,GAClB,IAAI9U,EAAI6oD,EAAS/zC,EAAG,EApRR20C,GA4RZ,OAPIzpD,EAAI,IACJklB,EAAcpQ,EAAG9U,EAAIqT,EAAgB,EAAG,iBACnC5G,EAAgBqI,EAAG,IACpB0Q,EAAe1Q,EAAG,EAAGvP,GACzB0K,EAAW6E,EAAG,GAzDN,SAAVg1C,EAAmBh1C,EAAGo0C,EAAIja,EAAIma,GAChC,KAAOF,EAAKja,GAAI,CAQZ,GANAzjC,EAASsJ,EAAG,EAAGo0C,GACf19C,EAASsJ,EAAG,EAAGm6B,GACX+Z,GAAUl0C,GAAI,GAAI,GAClBi0C,GAAKj0C,EAAGo0C,EAAIja,GAEZvhC,EAAQoH,EAAG,GACXm6B,EAAKia,GAAM,EACX,OACJ,IAAI7oD,OAAC,EAiBL,GAfIA,EADA4uC,EAAKia,EAvEA,KAuEyB,IAARE,EAClB3lD,KAAK0P,OAAO+1C,EAAKja,GAAI,GAErBka,GAAYD,EAAIja,EAAIma,GAC5B59C,EAASsJ,EAAG,EAAGzU,GACfmL,EAASsJ,EAAG,EAAGo0C,GACXF,GAAUl0C,GAAI,GAAI,GAClBi0C,GAAKj0C,EAAGzU,EAAG6oD,IAEXx7C,EAAQoH,EAAG,GACXtJ,EAASsJ,EAAG,EAAGm6B,GACX+Z,GAAUl0C,GAAI,GAAI,GAClBi0C,GAAKj0C,EAAGzU,EAAG4uC,GAEXvhC,EAAQoH,EAAG,IAEfm6B,EAAKia,GAAM,EACX,OACJ19C,EAASsJ,EAAG,EAAGzU,GACfqO,EAAcoG,GAAI,GAClBtJ,EAASsJ,EAAG,EAAGm6B,EAAK,GACpB8Z,GAAKj0C,EAAGzU,EAAG4uC,EAAK,GAEhB,IAAIjvC,OAAC,GADLK,EAAI4oD,GAAUn0C,EAAGo0C,EAAIja,IAGbia,EAAKja,EAAK5uC,GACdypD,EAAQh1C,EAAGo0C,EAAI7oD,EAAI,EAAG+oD,GACtBppD,EAAIK,EAAI6oD,EACRA,EAAK7oD,EAAI,IAETypD,EAAQh1C,EAAGzU,EAAI,EAAG4uC,EAAIma,GACtBppD,EAAIivC,EAAK5uC,EACT4uC,EAAK5uC,EAAI,IAER4uC,EAAKia,GAAM,IAAMlpD,IAClBopD,EA7GD3lD,KAAK0P,MAAoB,WAAd1P,KAAKsmD,YAwHnBD,CAAQh1C,EAAG,EAAG9U,EAAG,IAEd,GAUPgqD,OAlJW,SAASl1C,GACpB,IAAIvW,EAAI+nB,EAAgBxR,EAAG,EAAG,GAC1BP,EAAIkN,EAAS3M,EAAG6L,EAAmB,EAAGsF,EAASnR,EAAG,IACtD,GAAIvW,EAAIgW,EAAG,OAAO,EAClB,IAAIvU,EAAIuU,EAAIhW,EACZ,GAAIyB,GAAKmU,OAAO81C,mBAAqBz/C,EAAesK,IAAK9U,GACrD,OAAOof,EAAWtK,EAAGzT,EAAa,+BACtC,KAAO9C,EAAIgW,EAAGhW,IACViN,EAASsJ,EAAG,EAAGvW,GAEnB,OADAiN,EAASsJ,EAAG,EAAGP,GACRvU,IAgJXhC,EAAOD,QAAQuoC,cALO,SAASxxB,GAE3B,OADAoR,EAAYpR,EAAGw0C,IACR,uCChVP9oD,EAAQ,GAnBRyE,aACAK,eAEAuF,KADAJ,YACAI,iBACAM,iBAEAsB,KADAP,gBACAO,iBACAiB,YAEAI,KADAH,kBACAG,iBACAE,oBAGAO,KAFAH,kBACAE,cACAC,gBAEAmB,KADAlB,iBACAkB,cACAO,eAEAQ,KADAH,gBACAG,kBAoBAjQ,EAAQ,GAjBRie,gBACAuG,iBACAzD,mBAEAtC,kBACAmC,kBACAT,sBAEA6E,KADAlF,mBACAkF,gBACApG,eAGA8G,KAFAL,kBACAlG,kBACAuG,aAEA3F,KADA+F,kBACA/F,iBAEAiB,KADAf,iBACAe,mBAMAhhB,EAAQ,GAHRS,iBAEAI,KADAD,cACAC,cAyBE6oD,EAAsB7oD,EAAa,yCAGnC8oD,EAAW,SAASr1C,EAAGhV,EAAKN,GAC9BwO,EAAgB8G,EAAGtV,GACnBkQ,EAAaoF,GAAI,EAAGzT,EAAavB,GAAK,KAGpCsqD,EAAe,SAASt1C,EAAGu1C,EAAMC,GACnCH,EAASr1C,EAAG,MAASw1C,EAAMD,EAAKE,gBAAmBF,EAAKG,cACxDL,EAASr1C,EAAG,MAASw1C,EAAMD,EAAKI,gBAAmBJ,EAAKK,cACxDP,EAASr1C,EAAG,OAASw1C,EAAMD,EAAKM,cAAmBN,EAAKO,YACxDT,EAASr1C,EAAG,MAASw1C,EAAMD,EAAKQ,aAAmBR,EAAKS,WACxDX,EAASr1C,EAAG,SAAUw1C,EAAMD,EAAKU,cAAkBV,EAAKW,YAAc,GACtEb,EAASr1C,EAAG,OAASw1C,EAAMD,EAAKY,iBAAmBZ,EAAKa,eACxDf,EAASr1C,EAAG,QAAUw1C,EAAMD,EAAKc,YAAkBd,EAAKe,UAAY,GACpEjB,EAASr1C,EAAG,OAAQrR,KAAK0P,OAAOk3C,EAAQ,IAAIgB,KAAKhB,EAAKa,cAAe,EAAG,IAA4C,SAIlHI,EAAkBn3C,OAAO81C,iBAAmB,EAE5CsB,EAAW,SAASz2C,EAAGhV,EAAKjB,EAAG2sD,GACjC,IAAI/rD,EAAI0L,EAAa2J,GAAI,EAAGzT,EAAavB,GAAK,IAC1Csc,EAAM3L,EAAeqE,GAAI,GAC7B,IAAY,IAARsH,EAAe,CACf,GAAI3c,IAAMwF,EACN,OAAOma,EAAWtK,EAAGzT,EAAa,gCAAiCvB,GAClE,GAAIjB,EAAI,EACT,OAAOugB,EAAWtK,EAAGzT,EAAa,oCAAqCvB,GAC3Esc,EAAMvd,MAEL,CACD,MAAOysD,GAAkBlvC,GAAOA,GAAOkvC,GACnC,OAAOlsC,EAAWtK,EAAGzT,EAAa,8BAA+BvB,GACrEsc,GAAOovC,EAGX,OADA99C,EAAQoH,EAAG,GACJsH,GAILqvC,EAAS,CACXC,KAAM,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAAahwB,IAAI,SAACp7B,GAAD,OAAOe,EAAaf,KAC9GqrD,UAAW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOjwB,IAAI,SAACp7B,GAAD,OAAOe,EAAaf,KACrFsrD,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAAYlwB,IAAI,SAACp7B,GAAD,OAAOe,EAAaf,KAC3JurD,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOnwB,IAAI,SAACp7B,GAAD,OAAOe,EAAaf,KAC1HwrD,GAAIzqD,EAAa,MACjB0qD,GAAI1qD,EAAa,MACjB2qD,GAAI3qD,EAAa,MACjB4qD,GAAI5qD,EAAa,MACjB6qD,QAAS,CACLttD,EAAGyC,EAAa,wBAChB8qD,EAAG9qD,EAAa,YAChB+qD,EAAG/qD,EAAa,YAChBu5C,EAAGv5C,EAAa,SAChBhC,EAAGgC,EAAa,eAChBgrD,EAAGhrD,EAAa,YAChBirD,EAAGjrD,EAAa,MAChB8U,EAAG9U,EAAa,QAIlBkrD,EAAc,SAASC,EAAMC,GAG/B,IAAIC,EAAUF,EAAKpB,SACG,WAAlBqB,IACgB,IAAZC,EACAA,EAAU,EAEVA,KAER,IAAIC,GAAQH,EAAO,IAAInB,KAAKmB,EAAKtB,cAAe,EAAG,IAAM,MACzD,OAAOznD,KAAK0P,OAAOw5C,EAAO,EAAID,GAAW,IAGvCE,EAAa,SAAStpD,EAAGtD,EAAG6sD,GAC1B7sD,EAAI,IACJglB,EAAa1hB,EAAGupD,GACpBtrC,EAAeje,EAAGjC,EAAauC,OAAO5D,MAkOpC8sD,EAAc,SAASh4C,EAAGi4C,EAAMxuD,GAIlC,IAHA,IAAIyuD,EAAS9C,EACTlrD,EAAI,EACJiuD,EAAQ,EACLjuD,EAAIguD,EAAOhrD,QAAUirD,GAAUF,EAAK/qD,OAASzD,EAAIS,GAAKiuD,EACzD,GAAID,EAAOhuD,KAAO,IAAI4D,WAAW,GAC7BqqD,SACC,GAAIhsD,EAAa8rD,EAAK5yC,SAAS5b,EAAGA,EAAE0uD,GAAQD,EAAO7yC,SAASnb,EAAGA,EAAEiuD,IAClE,OAAOA,EAGfhuC,EAAcnK,EAAG,EACbhH,EAAgBgH,EAAGzT,EAAa,uCAAwC0rD,KAoD1EG,EAAc,SAASp4C,EAAGoK,GAG5B,OAFQyB,EAAkB7L,EAAGoK,IAY3BiuC,EAAS,CACXX,KA3DY,SAAS13C,GACrB,IAAIxU,EAAIigB,EAAgBzL,EAAG,EAAG,MAC1Bs4C,EAAM3gD,EAAgBqI,EAAG,GAAK,IAAIu2C,KAAS,IAAIA,KAAyB,IAApB6B,EAAYp4C,EAAG,IACnEw1C,GAAM,EACN/rD,EAAI,EAKR,GAJI+B,EAAE/B,KAAO,IAAIqE,WAAW,KACxB0nD,GAAM,EACN/rD,KAEA+B,EAAE/B,KAAO,IAAIqE,WAAW,IAAMtC,EAAE/B,EAAE,KAAO,IAAIqE,WAAW,GACxDiI,EAAgBiK,EAAG,EAAG,GACtBs1C,EAAat1C,EAAGs4C,EAAK9C,OAClB,CACM,IAAI1oD,WAAW,GACrB,GAAK,IAAIgB,WAAW,GACvB,IAAIU,EAAI,IAAImb,EACZ2C,EAActM,EAAGxR,GAlQR,SAAX+pD,EAAoBv4C,EAAGxR,EAAGhD,EAAGksD,GAE/B,IADA,IAAIjuD,EAAI,EACDA,EAAI+B,EAAE0B,QACT,GAAa,KAAT1B,EAAE/B,GACFymB,EAAa1hB,EAAGhD,EAAE/B,UACf,CAEH,IAAIwD,EAAM+qD,EAAYh4C,EAAGxU,IADzB/B,GAGA,OAAO+B,EAAE/B,IAEL,KAAK,GACDymB,EAAa1hB,EAAG,IAChB,MAGJ,KAAK,GACDie,EAAeje,EAAGmoD,EAAOC,KAAKc,EAAKpB,WACnC,MAGJ,KAAK,GACD7pC,EAAeje,EAAGmoD,EAAOG,OAAOY,EAAKxB,aACrC,MAGJ,KAAK,GACD4B,EAAWtpD,EAAGG,KAAK0P,MAAMq5C,EAAKtB,cAAgB,KAAM,IACpD,MAGJ,KAAK,GACDmC,EAASv4C,EAAGxR,EAAGmoD,EAAOS,QAAQC,EAAGK,GACjC,MAGJ,KAAK,GACDa,EAASv4C,EAAGxR,EAAGmoD,EAAOS,QAAQE,EAAGI,GACjC,MAGJ,KAAK,GACDI,EAAWtpD,EAAGkpD,EAAK5B,WAAY,IAC/B,MAGJ,KAAK,GACDgC,EAAWtpD,GAAIkpD,EAAK5B,WAAa,IAAM,GAAK,EAAG,IAC/C,MAGJ,KAAK,GACDgC,EAAWtpD,EAAGkpD,EAAK9B,aAAc,IACjC,MAGJ,KAAK,GACDnpC,EAAeje,EAAGkpD,EAAK5B,WAAa,GAAKa,EAAOO,GAAKP,EAAOQ,IAC5D,MAGJ,KAAK,GACDoB,EAASv4C,EAAGxR,EAAGmoD,EAAOS,QAAQtR,EAAG4R,GACjC,MAGJ,KAAK,GACDI,EAAWtpD,EAAGkpD,EAAKhC,aAAc,IACjC,MAGJ,KAAK,GACD6C,EAASv4C,EAAGxR,EAAGmoD,EAAOS,QAAQG,EAAGG,GACjC,MAGJ,KAAK,GACDI,EAAWtpD,EAAGipD,EAAYC,EAAM,UAAW,IAC3C,MAGJ,KAAK,GACDI,EAAWtpD,EAAGipD,EAAYC,EAAM,UAAW,IAC3C,MAGJ,KAAK,GACDa,EAASv4C,EAAGxR,EAAGmoD,EAAOS,QAAQI,EAAGE,GACjC,MAGJ,KAAK,GACDjrC,EAAeje,EAAGjC,EAAauC,OAAO4oD,EAAKtB,iBAC3C,MAGJ,KAAK,GACD,IAAIoC,EAAWd,EAAKpoD,WAAWmpD,MAAM,iBACjCD,GACA/rC,EAAeje,EAAGjC,EAAaisD,EAAS,KAC5C,MAIJ,KAAK,GACD/rC,EAAeje,EAAGmoD,EAAOE,UAAUa,EAAKpB,WACxC,MAGJ,KAAK,GACL,KAAK,IACD7pC,EAAeje,EAAGmoD,EAAOI,YAAYW,EAAKxB,aAC1C,MAGJ,KAAK,GACDqC,EAASv4C,EAAGxR,EAAGmoD,EAAOS,QAAQttD,EAAG4tD,GACjC,MAGJ,KAAK,IACDI,EAAWtpD,EAAGkpD,EAAK1B,UAAW,IAC9B,MAGJ,KAAK,IACD8B,EAAWtpD,EAAGkpD,EAAK1B,UAAW,IAC9B,MAGJ,KAAK,IACD,IAAI6B,EAAOlpD,KAAK0P,OAAOq5C,EAAO,IAAInB,KAAKmB,EAAKtB,cAAe,EAAG,IAAM,OAChEyB,EAAO,MACHA,EAAO,IACP3nC,EAAa1hB,EAAG,IACpB0hB,EAAa1hB,EAAG,KAEpBie,EAAeje,EAAGjC,EAAauC,OAAO+oD,KACtC,MAIJ,KAAK,IACDC,EAAWtpD,EAAGkpD,EAAK5B,WAAY,IAC/B,MAGJ,KAAK,IACDgC,EAAWtpD,GAAIkpD,EAAK5B,WAAa,IAAM,GAAK,EAAG,IAC/C,MAGJ,KAAK,IACDgC,EAAWtpD,EAAGkpD,EAAKxB,WAAa,EAAG,IACnC,MAGJ,KAAK,IACDhmC,EAAa1hB,EAAG,IAChB,MAGJ,KAAK,IACDie,EAAeje,EAAGkpD,EAAK5B,WAAa,GAAKa,EAAOK,GAAKL,EAAOM,IAC5D,MAGJ,KAAK,IACDsB,EAASv4C,EAAGxR,EAAGmoD,EAAOS,QAAQ7sD,EAAGmtD,GACjC,MAGJ,KAAK,IACDjrC,EAAeje,EAAGjC,EAAauC,OAAOH,KAAK0P,MAAMq5C,EAAO,QACxD,MAGJ,KAAK,IACDxnC,EAAa1hB,EAAG,GAChB,MAGJ,KAAK,IACD,IAAIkqD,EAAMhB,EAAKpB,SACf7pC,EAAeje,EAAGjC,EAAauC,OAAe,IAAR4pD,EAAY,EAAIA,KACtD,MAIJ,KAAK,IACDjsC,EAAeje,EAAGjC,EAAauC,OAAO4oD,EAAKpB,YAC3C,MAGJ,KAAK,IACDiC,EAASv4C,EAAGxR,EAAGmoD,EAAOS,QAAQ/1C,EAAGq2C,GACjC,MAGJ,KAAK,IACDI,EAAWtpD,EAAGkpD,EAAKtB,cAAgB,IAAK,IACxC,MAGJ,KAAK,IACD,IAAIxhC,EAAM8iC,EAAKiB,oBACX/jC,EAAM,EACN1E,EAAa1hB,EAAG,KAEhBomB,GAAOA,EACP1E,EAAa1hB,EAAG,KAEpBspD,EAAWtpD,EAAGG,KAAK0P,MAAMuW,EAAI,IAAK,IAClCkjC,EAAWtpD,EAAGomB,EAAM,GAAI,IAIhCnrB,GAAKwD,GA0CTsrD,CAASv4C,EAAGxR,EAAGhD,EAAG8sD,GAClB5rC,EAAgBle,GAEpB,OAAO,GAwCPoqD,SATgB,SAAS54C,GACzB,IAAIgkB,EAAKo0B,EAAYp4C,EAAG,GACpBikB,EAAKm0B,EAAYp4C,EAAG,GAExB,OADAvG,EAAeuG,EAAGgkB,EAAKC,GAChB,GAMPsxB,KAtCY,SAASv1C,GACrB,IAAIrV,EAkBJ,OAjBIgN,EAAgBqI,EAAG,GACnBrV,EAAI,IAAI4rD,MAER7lC,EAAe1Q,EAAG,EAAGxP,GACrB2K,EAAW6E,EAAG,GACdrV,EAAI,IAAI4rD,KACJE,EAASz2C,EAAG,QAAS,EAAG,GACxBy2C,EAASz2C,EAAG,SAAU,EAAG,GACzBy2C,EAASz2C,EAAG,OAAQ,EAAG,GACvBy2C,EAASz2C,EAAG,OAAQ,GAAI,GACxBy2C,EAASz2C,EAAG,MAAO,EAAG,GACtBy2C,EAASz2C,EAAG,MAAO,EAAG,IAE1Bs1C,EAAat1C,EAAGrV,IAGpBuO,EAAgB8G,EAAGrR,KAAK0P,MAAM1T,EAAI,MAC3B,IAuBP0tD,EAAOQ,MAAQ,SAAS74C,GAEpB,OADAvG,EAAeuG,EAAG84C,YAAYC,MAAM,KAC7B,GA4Gf7vD,EAAOD,QAAQyoC,WALI,SAAS1xB,GAExB,OADAoR,EAAYpR,EAAGq4C,GACR,mICrjBHW,EAAYttD,EAAQ,IAApBstD,UAUJttD,EAAQ,GAPRgS,oBACAY,uBACAE,mBACAC,mBACAC,sBACAC,UACAO,4BAqCAxT,EAAQ,GAlCR0E,iBACAK,kBACAN,aACAG,gBACAC,gBACAC,eACAgF,aACAO,oBACAC,aACAe,iBACAC,eACAO,kBACAO,iBACAc,YACAE,qBACAI,oBACAG,0BACAC,oBACAC,oBACAC,gBACAC,mBACAC,mBACAE,kBACAW,eACAK,iBACAK,qBACAE,eACAK,kBACAE,kBACAI,iBACAI,iBACAE,mBACAC,aACA/H,uBA2BA5I,EAAQ,GAxBRie,gBACAuG,iBACA3D,oBACAC,iBACAC,mBACA0D,mBACAC,mBACAjG,mBACAmC,mBACAgE,uBACAzE,uBACAD,sBACAqC,qBACAzC,sBACAkF,oBACApG,gBACA8G,iBACAI,qBACA7F,oBACAI,uBACAW,qBACAiF,yBACAQ,oBACAxH,mBAEE/d,GAASlB,EAAQ,OAMnBA,EAAQ,GAJRS,mBACAC,wBACAE,kBACAC,mBAIE0sD,GADU,IACOnrD,WAAW,GAa5BorD,GAAS,SAAS1tD,GACpB,IAAIyB,EAAMb,GAAkBZ,EAAG,GAC/B,OAAOyB,GAAO,EAAIA,EAAMzB,EAAE0B,QAIxBisD,GAAW,SAASrqC,EAAK7hB,GAC3B,OAAI6hB,GAAO,EAAUA,EACZ,EAAIA,EAAM7hB,EAAY,EACnBA,EAAM6hB,EAAM,GAkCtBgrB,GAAS,SAAS95B,EAAGxR,EAAGqU,EAAMmJ,GAEhC,OADAO,EAAgBP,EAAGxd,EAAGqU,GACf,GAeLu2C,GAAa16C,EAAkBxR,OAAS,EAmCxCmsD,GAAkB,SAASr5C,EAAGmF,EAAK9D,GACrC,IAAIgC,EAhCW,SAAShC,GAExB,GAAIlX,OAAOmvD,GAAGj4C,EAAGk4C,KACb,OAAOhtD,GAAa,OACnB,GAAIpC,OAAOmvD,GAAGj4C,GAAG,KAClB,OAAO9U,GAAa,QACnB,GAAI8S,OAAO8E,MAAM9C,GAClB,OAAO9U,GAAa,OACnB,GAAU,IAAN8U,EAAS,CAEd,IAAIm4C,EAAOR,EAAQv6C,EAAiB,QAAS4C,GAG7C,OAFIlX,OAAOmvD,GAAGj4C,GAAI,KACdm4C,EAAO,IAAMA,GACVjtD,GAAaitD,GAEpB,IAAIn2C,EAAO,GACPo2C,EAAK96C,EAAM0C,GACXxX,EAAI4vD,EAAG,GACPh6C,EAAIg6C,EAAG,GASX,OARI5vD,EAAI,IACJwZ,GAAQ,IACRxZ,GAAKA,GAETwZ,GAAQ,KACRA,IAAU,EAADxZ,GAAiByF,SAAS,IAEnC+T,GAAQ21C,EAAQ,OADhBv5C,GA3BO,GA6BAlT,GAAa8W,GAKbq2C,CAAWr4C,GACtB,GAAwB,KAApB8D,EAAIi0C,IACJ,IAAK,IAAI3vD,EAAI,EAAGA,EAAI4Z,EAAKnW,OAAQzD,IAAK,CAClC,IAAIK,EAAIuZ,EAAK5Z,GACTK,GAAK,KACLuZ,EAAK5Z,GAAS,IAAJK,QAES,KAApBqb,EAAIi0C,KACX9uC,GAAWtK,EAAGzT,GAAa,qDAC/B,OAAO8W,GAcLs2C,GAAQptD,GAAa,SAOrBqtD,GAAU,SAAAn6C,GAAC,OAAK,IAAMA,GAAKA,GAAK,KAAS,IAAMA,GAAKA,GAAK,IACzDo6C,GAAU,SAAAp6C,GAAC,OAAI,IAAMA,GAAKA,GAAK,IAC/Bq6C,GAAU,SAAAr6C,GAAC,OAAK,GAAQA,GAAKA,GAAK,IAAe,MAANA,GAC3Cs6C,GAAU,SAAAt6C,GAAC,OAAI,IAAMA,GAAKA,GAAK,KAC/Bu6C,GAAU,SAAAv6C,GAAC,OAAI,IAAMA,GAAKA,GAAK,KAC/Bw6C,GAAU,SAAAx6C,GAAC,OAAI,IAAMA,GAAKA,GAAK,IAC/By6C,GAAU,SAAAz6C,GAAC,OAAK,IAAMA,GAAKA,GAAK,KAAS,IAAMA,GAAKA,GAAK,IAAQ,IAAMA,GAAKA,GAAK,IACjF06C,GAAU,SAAA16C,GAAC,OAAIs6C,GAAQt6C,KAAOy6C,GAAQz6C,IACtC26C,GAAU,SAAA36C,GAAC,OAAU,KAANA,GAAaA,GAAK,GAAKA,GAAK,IAC3C46C,GAAW,SAAA56C,GAAC,OAAK,IAAMA,GAAKA,GAAK,IAAQ,IAAMA,GAAKA,GAAK,IAAQ,IAAMA,GAAKA,GAAK,KAkCjF66C,GAAa,SAASt6C,EAAGxR,EAAG4b,GAC9B,OAAO/N,EAAS2D,EAAGoK,IACf,KAAK7Z,EACD,IAAI/E,EAAI0Q,EAAa8D,EAAGoK,IAnClB,SAAS5b,EAAGhD,EAAGyB,GAC7BijB,EAAa1hB,EAAG,IAEhB,IADA,IAAI/E,EAAI,EACDwD,KAAO,CACV,GAAa,KAATzB,EAAE/B,IACO,KAAT+B,EAAE/B,IACO,KAAT+B,EAAE/B,GACFymB,EAAa1hB,EAAG,IAChB0hB,EAAa1hB,EAAGhD,EAAE/B,SACf,GAAIqwD,GAAQtuD,EAAE/B,IAAK,CACtB,IAAI4Z,EAAO,GAAG7X,EAAE/B,GACZowD,GAAQruD,EAAE/B,EAAE,MACZ4Z,EAAO,IAAIk3C,OAAO,EAAEl3C,EAAKnW,QAAUmW,GACvCoJ,EAAeje,EAAGjC,GAAa,KAAO8W,SAEtC6M,EAAa1hB,EAAGhD,EAAE/B,IACtBA,IAEJymB,EAAa1hB,EAAG,IAkBRgsD,CAAUhsD,EAAGhD,EAAGA,EAAE0B,QAClB,MAEJ,KAAKoD,EACD,IAAI+S,EACJ,GAAK9L,EAAcyI,EAAGoK,GAIf,CACH,IAAIlf,EAAIwQ,EAAcsE,EAAGoK,GAIzB/G,EAAO9W,GAAaysD,EAHN9tD,IAAMsT,EACd,MAAQF,EAAqB,IAC7BZ,EAC8BxS,QATZ,CACxB,IAAIA,EAAI4Q,EAAakE,EAAGoK,IAlBxB,SAAS/G,GACrB,GAAIjX,GAAkBiX,EAAM,IAAgC,EAAG,CAC3D,IAAIo3C,EAAQv7C,IACRw7C,EAAStuD,GAAkBiX,EAAMo3C,GACjCC,IAAQr3C,EAAKq3C,GAAU,MAgBnBC,CADAt3C,EAAOg2C,GAAgBr5C,EAAGzT,GAAY,IAAAoR,OAAKW,EAAL,MAA6BpT,IASvEuhB,EAAeje,EAAG6U,GAClB,MAEJ,KAAKlT,EAAU,KAAKC,EAChB+hB,GAAenS,EAAGoK,GAClB+F,GAAc3hB,GACd,MAEJ,QACI2b,GAAcnK,EAAGoK,EAAK7d,GAAa,gCAKzCquD,GAAa,SAAS56C,EAAG66C,EAASpxD,EAAGqxD,GAEvC,IADA,IAAIvvD,EAAI9B,EACc,IAAfoxD,EAAQtvD,IAAYa,GAAkButD,GAAOkB,EAAQtvD,KAAO,GAAGA,IAClEA,EAAI9B,GAAKkwD,GAAMzsD,QACfod,GAAWtK,EAAGzT,GAAa,oCAC3BstD,GAAQgB,EAAQtvD,KAAKA,IACrBsuD,GAAQgB,EAAQtvD,KAAKA,IACN,KAAfsvD,EAAQtvD,KAEJsuD,GAAQgB,IADZtvD,KACyBA,IACrBsuD,GAAQgB,EAAQtvD,KAAKA,KAEzBsuD,GAAQgB,EAAQtvD,KAChB+e,GAAWtK,EAAGzT,GAAa,iDAC/BuuD,EAAK,GAAK,GACV,IAAK,IAAIntC,EAAI,EAAGA,EAAIpiB,EAAI9B,EAAI,EAAGkkB,IAC3BmtC,EAAKntC,EAAE,GAAKktC,EAAQpxD,EAAEkkB,GAC1B,OAAOpiB,GAMLwvD,GAAY,SAASD,EAAME,GAI7B,IAHA,IAAItxD,EAAIoxD,EAAK5tD,OACT+tD,EAAKD,EAAO9tD,OACZguD,EAAOJ,EAAKpxD,EAAI,GACXD,EAAI,EAAGA,EAAIwxD,EAAIxxD,IACpBqxD,EAAKrxD,EAAIC,EAAI,GAAKsxD,EAAOvxD,GAC7BqxD,EAAKpxD,EAAIuxD,EAAK,GAAKC,GAgGjBC,GACF,SAAAA,EAAYn7C,GAAG1M,EAAAC,KAAA4nD,GACX5nD,KAAKyM,EAAIA,EACTzM,KAAK6nD,UAAW,EAChB7nD,KAAK8nD,SAAW,GAiBlBC,GAAQzB,GAER0B,GAAS,SAASp2C,EAAKq2C,GACzB,GAAIr2C,EAAIyP,KAAOzP,EAAI3Z,EAAE0B,SAAWouD,GAAMn2C,EAAI3Z,EAAE2Z,EAAIyP,MAC5C,OAAO4mC,EAEP,IAAIxuD,EAAI,EACR,GACIA,EAAQ,GAAJA,GAAUmY,EAAI3Z,EAAE2Z,EAAIyP,OAAS,UAC5BzP,EAAIyP,IAAMzP,EAAI3Z,EAAE0B,QAAUouD,GAAMn2C,EAAI3Z,EAAE2Z,EAAIyP,OAAS5nB,GAAK,aACjE,OAAOA,GAQTyuD,GAAc,SAASpxB,EAAGllB,EAAKq2C,GACjC,IAAIvvC,EAAKsvC,GAAOp2C,EAAKq2C,GAGrB,OAFIvvC,EAxDW,IAwDQA,GAAM,IACzB3B,GAAW+f,EAAErqB,EAAGzT,GAAa,2CAA4C0f,EAzD9D,IA0DRA,GAMLyvC,GAAY,SAASrxB,EAAGllB,GAC1B,IAAI5a,EAAI,CACJoxD,IAAKx2C,EAAI3Z,EAAE2Z,EAAIyP,OACf/R,KAAM,GAEV,OAAQtY,EAAEoxD,KACN,KAAK,GAAyC,OAA5BpxD,EAAEsY,KAAO,EAAGtY,EAAEoxD,IA5CrB,EA4C0CpxD,EACrD,KAAK,GAAyC,OAA5BA,EAAEsY,KAAO,EAAGtY,EAAEoxD,IA5CrB,EA4C0CpxD,EACrD,KAAK,IAAyC,OAA5BA,EAAEsY,KAAO,EAAGtY,EAAEoxD,IA9CrB,EA8C0CpxD,EACrD,KAAK,GAAyC,OAA5BA,EAAEsY,KAAO,EAAGtY,EAAEoxD,IA9CrB,EA8C0CpxD,EACrD,KAAK,IAAyC,OAA5BA,EAAEsY,KAAO,EAAGtY,EAAEoxD,IAhDrB,EAgD0CpxD,EACrD,KAAK,GAAyC,OAA5BA,EAAEsY,KAAO,EAAGtY,EAAEoxD,IAhDrB,EAgD0CpxD,EACrD,KAAK,IAAyC,OAA5BA,EAAEsY,KAAO,EAAGtY,EAAEoxD,IAlDrB,EAkD0CpxD,EACrD,KAAK,GACL,KAAK,GAAyC,OAA5BA,EAAEsY,KAAO,EAAGtY,EAAEoxD,IAnDrB,EAmD0CpxD,EACrD,KAAK,IAAyC,OAA5BA,EAAEsY,KAAO,EAAGtY,EAAEoxD,IAnDrB,EAmD0CpxD,EACrD,KAAK,IACL,KAAK,IAAyC,OAA5BA,EAAEsY,KAAO,EAAGtY,EAAEoxD,IArDrB,EAqD0CpxD,EACrD,KAAK,IAA+D,OAAlDA,EAAEsY,KAAO44C,GAAYpxB,EAAGllB,EAAK,GAAI5a,EAAEoxD,IAxD1C,EAwDgEpxD,EAC3E,KAAK,GAA+D,OAAlDA,EAAEsY,KAAO44C,GAAYpxB,EAAGllB,EAAK,GAAI5a,EAAEoxD,IAxD1C,EAwDgEpxD,EAC3E,KAAK,IAA+D,OAAlDA,EAAEsY,KAAO44C,GAAYpxB,EAAGllB,EAAK,GAAI5a,EAAEoxD,IAtD1C,EAsDgEpxD,EAC3E,KAAK,GAKD,OAJAA,EAAEsY,KAAO04C,GAAOp2C,GAAM,IACN,IAAZ5a,EAAEsY,MACFyH,GAAW+f,EAAErqB,EAAGzT,GAAa,uCACjChC,EAAEoxD,IA5DK,EA6DApxD,EAEX,KAAK,IAA6C,OAApBA,EAAEoxD,IA7DrB,EA6D8CpxD,EACzD,KAAK,IAA6C,OAAhCA,EAAEsY,KAAO,EAAGtY,EAAEoxD,IA7DrB,EA6D8CpxD,EACzD,KAAK,GAA6C,OAApBA,EAAEoxD,IA7DrB,EA6D8CpxD,EACzD,KAAK,GAAa,MAClB,KAAK,GAAa8/B,EAAE+wB,UAAW,EAAM,MACrC,KAAK,GAAa/wB,EAAE+wB,UAAW,EAAO,MACtC,KAAK,GAAa/wB,EAAE+wB,UAAW,EAAM,MACrC,KAAK,GAAa/wB,EAAEgxB,SAAWI,GAAYpxB,EAAGllB,EAzFrC,GAyFqD,MAC9D,QAASmF,GAAW+f,EAAErqB,EAAGzT,GAAa,8BAA+BhC,EAAEoxD,KAG3E,OADApxD,EAAEoxD,IApEa,EAqERpxD,GAYLqxD,GAAa,SAASvxB,EAAGwxB,EAAW12C,GACtC,IAAI5a,EAAI,CACJoxD,IAAKloD,IACLoP,KAAMpP,IACNqoD,SAAUroD,KAGVkoD,EAAMD,GAAUrxB,EAAGllB,GACvB5a,EAAEsY,KAAO84C,EAAI94C,KACbtY,EAAEoxD,IAAMA,EAAIA,IACZ,IAAII,EAAQxxD,EAAEsY,KACd,GA7Fe,IA6FXtY,EAAEoxD,IACF,GAAIx2C,EAAIyP,KAAOzP,EAAI3Z,EAAE0B,QAA6B,IAAnBiY,EAAI3Z,EAAE2Z,EAAIyP,KACrCzK,GAAckgB,EAAErqB,EAAG,EAAGzT,GAAa,2CAClC,CACD,IAAIrC,EAAIwxD,GAAUrxB,EAAGllB,GACrB42C,EAAQ7xD,EAAE2Y,KAtGH,KAuGP3Y,EAAIA,EAAEyxD,MACuB,IAAVI,GACf5xC,GAAckgB,EAAErqB,EAAG,EAAGzT,GAAa,uCAY/C,OATIwvD,GAAS,GA5GE,IA4GGxxD,EAAEoxD,IAChBpxD,EAAEuxD,SAAW,GAETC,EAAQ1xB,EAAEgxB,WACVU,EAAQ1xB,EAAEgxB,UACe,IAAxBU,EAASA,EAAO,IACjB5xC,GAAckgB,EAAErqB,EAAG,EAAGzT,GAAa,6CACvChC,EAAEuxD,SAAYC,GAASF,EAAaE,EAAQ,GAAQA,EAAQ,GAEzDxxD,GASLyxD,GAAU,SAASxtD,EAAGtD,EAAGkwD,EAAUv4C,EAAMY,GAC3C,IAAIJ,EAAO0I,GAAkBvd,EAAGqU,GAChCQ,EAAK+3C,EAAW,EAAIv4C,EAAO,GArJnB,IAqJwB3X,EAChC,IAAK,IAAIzB,EAAI,EAAGA,EAAIoZ,EAAMpZ,IACtByB,IA1JG,EA2JHmY,EAAK+3C,EAAW3xD,EAAIoZ,EAAO,EAAIpZ,GAxJ3B,IAwJgCyB,EAExC,GAAIuY,GAAOZ,EAhKD,EAiKN,IAAK,IAAIpZ,EAjKH,EAiKcA,EAAIoZ,EAAMpZ,IAC1B4Z,EAAK+3C,EAAW3xD,EAAIoZ,EAAO,EAAIpZ,GA5J/B,IA8JR+iB,EAAahe,EAAGqU,IAgNdo5C,GAAY,SAASj8C,EAAGhS,EAAKotD,EAAUv4C,EAAMq5C,GAG/C,IAFA,IAAI50C,EAAM,EACNolB,EAAQ7pB,GAtXF,EAsXkBA,EAtXlB,EAuXDpZ,EAAIijC,EAAQ,EAAGjjC,GAAK,EAAGA,IAC5B6d,IArXG,EAsXHA,GAAOtZ,EAAIotD,EAAW3xD,EAAIoZ,EAAO,EAAIpZ,GAEzC,GAAIoZ,EA3XM,GA4XN,GAAIq5C,EAAU,CACV,IAAI93B,EAAO,GA1XZ,EA0XkBvhB,EAAY,EAC7ByE,GAAQA,EAAM8c,GAAQA,QAEvB,GAAIvhB,EAhYD,EAkYN,IADA,IAAIuhB,GAAQ83B,GAAY50C,GAAO,EAAI,EA3X/B,IA4XK7d,EAAIijC,EAAOjjC,EAAIoZ,EAAMpZ,IACtBuE,EAAIotD,EAAW3xD,EAAIoZ,EAAO,EAAIpZ,KAAO26B,GACrC9Z,GAAWtK,EAAGzT,GAAa,iDAAkDsW,GAGzF,OAAOyE,GAGL60C,GAAY,SAASn8C,EAAGxR,EAAG4sD,EAAUv4C,GACvCjW,GAAO8S,WAAWlR,EAAEtB,QAAU2V,GAG9B,IADA,IAAIu5C,EAAK,IAAIv9C,SAAS,IAAIC,YAAY+D,IAC7BpZ,EAAI,EAAGA,EAAIoZ,EAAMpZ,IACtB2yD,EAAGC,SAAS5yD,EAAG+E,EAAE/E,GAAI2xD,GAEzB,OAAY,GAARv4C,EAAkBu5C,EAAGE,WAAW,EAAGlB,GAC3BgB,EAAGG,WAAW,EAAGnB,IAoE3BoB,GAAiBjwD,GAAa,cAE9BkwD,GACF,SAAAA,EAAYz8C,GAAG1M,EAAAC,KAAAkpD,GACXlpD,KAAKmwB,IAAM,KACXnwB,KAAKmpD,SAAW,KAChBnpD,KAAKopD,QAAU,KACfppD,KAAKhI,EAAI,KACTgI,KAAKqpD,MAAQ,KACbrpD,KAAKyM,EAAIA,EACTzM,KAAKspD,WAAappD,IAClBF,KAAKyW,MAAQvW,IACbF,KAAKupD,QAAU,IAkBjBC,GAAW,SAASC,EAAIzxD,GAC1B,OAAOyxD,EAAGzxD,EAAEA,MACR,KAAK0tD,GAGD,OAFI1tD,IAAMyxD,EAAGJ,OACTtyC,GAAW0yC,EAAGh9C,EAAGzT,GAAa,uCAC3BhB,EAAI,EAEf,KAAK,GACe,KAAZyxD,EAAGzxD,EAAEA,IAAmCA,IAC5C,GACQA,IAAMyxD,EAAGJ,OACTtyC,GAAW0yC,EAAGh9C,EAAGzT,GAAa,oCAC9BywD,EAAGzxD,EAAEA,OAAS0tD,IAAS1tD,EAAIyxD,EAAGJ,OAC9BrxD,UACa,KAAZyxD,EAAGzxD,EAAEA,IACd,OAAOA,EAAI,EAEf,QACI,OAAOA,IAKb0xD,GAAc,SAASnzD,EAAG6wB,GAC5B,OAAQA,GACJ,KAAK,GAA6B,OAAQi/B,GAAQ9vD,GAClD,KAAK,GAA6B,OAAQ8vD,GAAQ9vD,GAClD,KAAK,GAA6B,OAAQgwD,GAAQhwD,GAClD,KAAK,GAA6B,OAAQgwD,GAAQhwD,GAClD,KAAK,IAA6B,OAAQ+vD,GAAQ/vD,GAClD,KAAK,GAA6B,OAAQ+vD,GAAQ/vD,GAClD,KAAK,IAA6B,OAAQiwD,GAAQjwD,GAClD,KAAK,GAA6B,OAAQiwD,GAAQjwD,GAClD,KAAK,IAA6B,OAAQkwD,GAAQlwD,GAClD,KAAK,GAA6B,OAAQkwD,GAAQlwD,GAClD,KAAK,IAA6B,OAAQqwD,GAAQrwD,GAClD,KAAK,GAA6B,OAAQqwD,GAAQrwD,GAClD,KAAK,IAA6B,OAAQswD,GAAQtwD,GAClD,KAAK,GAA6B,OAAQswD,GAAQtwD,GAClD,KAAK,IAA6B,OAAQmwD,GAAQnwD,GAClD,KAAK,GAA6B,OAAQmwD,GAAQnwD,GAClD,KAAK,IAA6B,OAAQowD,GAAQpwD,GAClD,KAAK,GAA6B,OAAQowD,GAAQpwD,GAClD,KAAK,IAA6B,OAAQuwD,GAASvwD,GACnD,KAAK,GAA6B,OAAQuwD,GAASvwD,GACnD,KAAK,IAA6B,OAAc,IAANA,EAC1C,KAAK,GAA6B,OAAc,IAANA,EAC1C,QAAS,OAAQ6wB,IAAO7wB,IAI1BozD,GAAoB,SAASF,EAAIlzD,EAAGyB,EAAG4xD,GACzC,IAAIC,GAAM,EAKV,IAJoB,KAAhBJ,EAAGzxD,EAAEA,EAAI,KACT6xD,GAAM,EACN7xD,OAEKA,EAAI4xD,GACT,GAAIH,EAAGzxD,EAAEA,KAAO0tD,IAEZ,GADA1tD,IACI0xD,GAAYnzD,EAAGkzD,EAAGzxD,EAAEA,IACpB,OAAO6xD,OACR,GAAoB,KAAhBJ,EAAGzxD,EAAEA,EAAI,IAAqCA,EAAI,EAAI4xD,GAE7D,GADA5xD,GAAK,EACDyxD,EAAGzxD,EAAEA,EAAI,IAAMzB,GAAKA,GAAKkzD,EAAGzxD,EAAEA,GAC9B,OAAO6xD,OACR,GAAIJ,EAAGzxD,EAAEA,KAAOzB,EAAG,OAAOszD,EAErC,OAAQA,GAGNC,GAAc,SAASL,EAAIxxD,EAAGD,EAAG+xD,GACnC,GAAI9xD,GAAKwxD,EAAGL,QACR,OAAO,EAEP,IAAI7yD,EAAIkzD,EAAGt5B,IAAIl4B,GACf,OAAQwxD,EAAGzxD,EAAEA,IACT,KAAK,GAA4B,OAAO,EACxC,KAAK0tD,GAAO,OAAOgE,GAAYnzD,EAAGkzD,EAAGzxD,EAAEA,EAAI,IAC3C,KAAK,GAA4B,OAAO2xD,GAAkBF,EAAIlzD,EAAGyB,EAAG+xD,EAAK,GACzE,QAAS,OAAON,EAAGzxD,EAAEA,KAAOzB,IAKlCyzD,GAAe,SAASP,EAAIxxD,EAAGD,GAGjC,GAFIA,GAAKyxD,EAAGJ,MAAQ,GAChBtyC,GAAW0yC,EAAGh9C,EAAGzT,GAAa,kDAC9BywD,EAAGt5B,IAAIl4B,KAAOwxD,EAAGzxD,EAAEA,GACnB,OAAO,KAKP,IAHA,IAAIiD,EAAIwuD,EAAGzxD,EAAEA,GACTkU,EAAIu9C,EAAGzxD,EAAEA,EAAI,GACbiyD,EAAO,IACFhyD,EAAIwxD,EAAGL,SACZ,GAAIK,EAAGt5B,IAAIl4B,KAAOiU,GACd,GAAe,KAAT+9C,EAAY,OAAOhyD,EAAI,OAExBwxD,EAAGt5B,IAAIl4B,KAAOgD,GAAGgvD,IAGlC,OAAO,MAGLC,GAAa,SAAST,EAAIxxD,EAAGD,EAAG+xD,GAElC,IADA,IAAI7zD,EAAI,EACD4zD,GAAYL,EAAIxxD,EAAI/B,EAAG8B,EAAG+xD,IAC7B7zD,IAEJ,KAAOA,GAAK,GAAG,CACX,IAAI6d,EAAMmxC,GAAMuE,EAAIxxD,EAAI/B,EAAG6zD,EAAK,GAChC,GAAIh2C,EAAK,OAAOA,EAChB7d,IAEJ,OAAO,MAGLi0D,GAAa,SAASV,EAAIxxD,EAAGD,EAAG+xD,GAClC,OAAS,CACL,IAAIh2C,EAAMmxC,GAAMuE,EAAIxxD,EAAG8xD,EAAK,GAC5B,GAAY,OAARh2C,EACA,OAAOA,EACN,IAAI+1C,GAAYL,EAAIxxD,EAAGD,EAAG+xD,GAE1B,OAAO,KADR9xD,MAKNmyD,GAAgB,SAASX,EAAIxxD,EAAGD,EAAGoI,GACrC,IAMI2T,EANA0C,EAAQgzC,EAAGhzC,MASf,OARIA,GAv7BgB,IAu7BUM,GAAW0yC,EAAGh9C,EAAGzT,GAAa,sBAC5DywD,EAAGF,QAAQ9yC,GAASgzC,EAAGF,QAAQ9yC,GAASgzC,EAAGF,QAAQ9yC,GAAS,GAC5DgzC,EAAGF,QAAQ9yC,GAAO6iB,KAAOrhC,EACzBwxD,EAAGF,QAAQ9yC,GAAO/c,IAAM0G,EACxBqpD,EAAGhzC,MAAQA,EAAQ,EAEa,QAA3B1C,EAAMmxC,GAAMuE,EAAIxxD,EAAGD,KACpByxD,EAAGhzC,QACA1C,GAGLs2C,GAAc,SAASZ,EAAIxxD,EAAGD,GAChC,IAEI+b,EAFA5d,EArJiB,SAASszD,GAC9B,IAAIhzC,EAAQgzC,EAAGhzC,MACf,IAAKA,IAASA,GAAS,EAAGA,IACtB,IA7Be,IA6BXgzC,EAAGF,QAAQ9yC,GAAO/c,IAAwB,OAAO+c,EACzD,OAAOM,GAAW0yC,EAAGh9C,EAAGzT,GAAa,4BAiJ7BsxD,CAAiBb,GAKzB,OAJAA,EAAGF,QAAQpzD,GAAGuD,IAAMzB,EAAIwxD,EAAGF,QAAQpzD,GAAGmjC,KAEN,QAA3BvlB,EAAMmxC,GAAMuE,EAAIxxD,EAAGD,MACpByxD,EAAGF,QAAQpzD,GAAGuD,KAnLC,GAoLZqa,GAQLw2C,GAAgB,SAASd,EAAIxxD,EAAG9B,GAClCA,EA1KkB,SAASszD,EAAItzD,GAE/B,OADAA,GAAQ,IACA,GAAKA,GAAKszD,EAAGhzC,QArBF,IAqBWgzC,EAAGF,QAAQpzD,GAAGuD,IACjCqd,GAAW0yC,EAAGh9C,EAAGzT,GAAa,8BAA+B7C,EAAI,GACrEA,EAsKHq0D,CAAcf,EAAItzD,GACtB,IAAIuD,EAAM+vD,EAAGF,QAAQpzD,GAAGuD,IACxB,OAAK+vD,EAAGL,QAAQnxD,GAAMyB,GAPR,SAASD,EAAGgxD,EAAIxvD,EAAGyvD,EAAIhxD,GACrC,OAAOd,GAAaa,EAAEqY,SAAS24C,EAAIA,EAAG/wD,GAAMuB,EAAE6W,SAAS44C,EAAIA,EAAGhxD,IAMjCixD,CAAUlB,EAAGt5B,IAAKs5B,EAAGF,QAAQpzD,GAAGmjC,KAAMmwB,EAAGt5B,IAAKl4B,EAAGyB,GACnEzB,EAAEyB,EACD,MAGVwrD,GAAQ,SAARA,EAAiBuE,EAAIxxD,EAAGD,GAC1B,IAAI4yD,GAAc,EACdC,GAAW,EAKf,IAHwB,GAApBpB,EAAGH,cACHvyC,GAAW0yC,EAAGh9C,EAAGzT,GAAa,wBAE3B6xD,GAAYD,GAEf,GADAC,GAAW,EACP7yD,IAAMyxD,EAAGJ,MACT,OAAQuB,OAAc,EAASnB,EAAGzxD,EAAEA,IAChC,KAAK,GAEGC,EADgB,KAAhBwxD,EAAGzxD,EAAEA,EAAI,GACLoyD,GAAcX,EAAIxxD,EAAGD,EAAI,GAhN9B,GAkNKoyD,GAAcX,EAAIxxD,EAAGD,EAAI,GAnN9B,GAoNH,MAEJ,KAAK,GACDC,EAAIoyD,GAAYZ,EAAIxxD,EAAGD,EAAI,GAC3B,MAEJ,KAAK,GACD,GAAIA,EAAI,IAAMyxD,EAAGJ,MAAO,CACpBuB,GAAc,EACd,MAEJ3yD,EAAKwxD,EAAGt5B,IAAIx2B,OAAS1B,GAAO,EAAIA,EAAI,KACpC,MAEJ,KAAKytD,GACD,OAAQ+D,EAAGzxD,EAAEA,EAAI,IACb,KAAK,GAES,QADVC,EAAI+xD,GAAaP,EAAIxxD,EAAGD,EAAI,MAExBA,GAAK,EACL6yD,GAAW,GAEf,MAEJ,KAAK,IACD7yD,GAAK,EACW,KAAZyxD,EAAGzxD,EAAEA,IACL+e,GAAW0yC,EAAGh9C,EAAGzT,GAAa,uCAClC,IAAI+wD,EAAKP,GAASC,EAAIzxD,GAClBgpB,EAAW/oB,IAAMwxD,EAAGN,SAAW,EAAIM,EAAGt5B,IAAIl4B,EAAE,GAChD,IAAK0xD,GAAkBF,EAAIzoC,EAAUhpB,EAAG+xD,EAAK,IAAMJ,GAAkBF,EAAKxxD,IAAIwxD,EAAGL,QAAS,EAAEK,EAAGt5B,IAAIl4B,GAAID,EAAG+xD,EAAK,GAAI,CAC/G/xD,EAAI+xD,EAAIc,GAAW,EAAM,MAE7B5yD,EAAI,KACJ,MAEJ,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GACzC,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAE3B,QADVA,EAAIsyD,GAAcd,EAAIxxD,EAAGwxD,EAAGzxD,EAAEA,EAAI,OAE9BA,GAAK,EAAG6yD,GAAW,GAEvB,MAEJ,QAASD,GAAc,EAE3B,MAEJ,QACIA,GAAc,EACd,IAAIb,EAAKP,GAASC,EAAIzxD,GAEtB,GAAK8xD,GAAYL,EAAIxxD,EAAGD,EAAG+xD,GASvB,OAAQN,EAAGzxD,EAAE+xD,IACT,KAAK,GACD,IAAIh2C,EACqC,QAApCA,EAAMmxC,EAAMuE,EAAIxxD,EAAI,EAAG8xD,EAAK,IAC7B9xD,EAAI8b,GAEJ/b,EAAI+xD,EAAK,EAAGc,GAAW,GAE3B,MAEJ,KAAK,GACD5yD,IAEJ,KAAK,GACDA,EAAIiyD,GAAWT,EAAIxxD,EAAGD,EAAG+xD,GACzB,MACJ,KAAK,GACD9xD,EAAIkyD,GAAWV,EAAIxxD,EAAGD,EAAG+xD,GACzB,MACJ,QACI9xD,IAAKD,EAAI+xD,EAAIc,GAAW,MA7BJ,CAC5B,GAAiB,KAAbpB,EAAGzxD,EAAE+xD,IACQ,KAAbN,EAAGzxD,EAAE+xD,IACQ,KAAbN,EAAGzxD,EAAE+xD,GACP,CACE/xD,EAAI+xD,EAAK,EAAGc,GAAW,EAAM,MAE7B5yD,EAAI,MA+B5B,OADAwxD,EAAGH,aACIrxD,GAGL6yD,GAAkB,SAASrB,EAAIvzD,EAAG+B,EAAGiU,GACvC,GAAIhW,GAAKuzD,EAAGhzC,MACE,IAANvgB,EACA8P,EAAgByjD,EAAGh9C,EAAGg9C,EAAGt5B,IAAIre,SAAS7Z,EAAGiU,GAAIA,EAAIjU,GAEjD8e,GAAW0yC,EAAGh9C,EAAGzT,GAAa,8BAA+B9C,EAAI,OAClE,CACH,IAAIC,EAAIszD,EAAGF,QAAQrzD,GAAGwD,KAxTP,IAyTXvD,GAAsB4gB,GAAW0yC,EAAGh9C,EAAGzT,GAAa,wBAxTzC,IAyTX7C,EACAwP,EAAgB8jD,EAAGh9C,EAAGg9C,EAAGF,QAAQrzD,GAAGojC,KAAOmwB,EAAGN,SAAW,GAEzDnjD,EAAgByjD,EAAGh9C,EAAGg9C,EAAGt5B,IAAIre,SAAS23C,EAAGF,QAAQrzD,GAAGojC,MAAOnjC,KAIjE40D,GAAgB,SAAStB,EAAIxxD,EAAGiU,GAClC,IAAI8+C,EAAuB,IAAbvB,EAAGhzC,OAAegzC,EAAGt5B,IAAIre,SAAS7Z,GAAK,EAAIwxD,EAAGhzC,MAC5DiE,GAAgB+uC,EAAGh9C,EAAGu+C,EAAS,qBAC/B,IAAK,IAAI90D,EAAI,EAAGA,EAAI80D,EAAS90D,IACzB40D,GAAgBrB,EAAIvzD,EAAG+B,EAAGiU,GAC9B,OAAO8+C,GAWLC,GAAY,SAASxB,EAAIh9C,EAAGxU,EAAGw+B,EAAIz+B,EAAGkzD,GACxCzB,EAAGh9C,EAAIA,EACPg9C,EAAGH,WAjVgB,IAkVnBG,EAAGt5B,IAAMl4B,EACTwxD,EAAGN,SAAW,EACdM,EAAGL,QAAU3yB,EACbgzB,EAAGzxD,EAAIA,EACPyxD,EAAGJ,MAAQ6B,GAGTC,GAAc,SAAS1B,GACzBA,EAAGhzC,MAAQ,EACXpd,GAAO8S,WA3VY,MA2VDs9C,EAAGH,aAkBnB8B,GAAe,SAAS3+C,EAAG4+C,GAC7B,IAAIpzD,EAAIggB,GAAiBxL,EAAG,GACxBzU,EAAIigB,GAAiBxL,EAAG,GACxBgqB,EAAKx+B,EAAE0B,OACPuxD,EAAKlzD,EAAE2B,OACP2/B,EAAOssB,GAAS3nC,GAAgBxR,EAAG,EAAG,GAAIgqB,GAC9C,GAAI6C,EAAO,EAAGA,EAAO,OAChB,GAAIA,EAAO7C,EAAK,EAEjB,OADAxwB,EAAYwG,GACL,EAGX,GAAI4+C,IAASpjD,EAAcwE,EAAG,IAlDf,SAASzU,EAAG7B,GAC3B,IAAK,IAAID,EAAE,EAAGA,EAAEC,EAAGD,IACf,IAA2C,IAAvC2C,GAAkBowD,GAAUjxD,EAAE9B,IAC9B,OAAO,EAEf,OAAO,EA6C6Bo1D,CAAWtzD,EAAGkzD,IAAM,CAEpD,IAAI/7C,EA7BU,SAAS4K,EAAKC,EAAQC,GACxC,IAAI/jB,EAAI+jB,IAAe,EACnBC,EAAKF,EAAOrgB,OAEhB,GAAW,IAAPugB,EACA,OAAOhkB,EAEX,MAA4C,KAApCA,EAAI6jB,EAAIngB,QAAQogB,EAAO,GAAI9jB,IAAYA,IAC3C,GAAI0C,GAAamhB,EAAIjI,SAAS5b,EAAGA,EAAEgkB,GAAKF,GACpC,OAAO9jB,EAGf,OAAQ,EAiBI4jB,CAAc7hB,EAAE6Z,SAASwnB,EAAO,GAAIthC,EAAG,GAC/C,GAAImX,GAAK,EAGL,OAFAxJ,EAAgB8G,EAAG6sB,EAAOnqB,GAC1BxJ,EAAgB8G,EAAG6sB,EAAOnqB,EAAI+7C,EAAK,GAC5B,MAER,CACH,IAAIzB,EAAK,IAAIP,GAAWz8C,GACpB7Q,EAAK09B,EAAO,EACZiyB,EAAkB,KAATvzD,EAAE,GACXuzD,IACAvzD,EAAIA,EAAE8Z,SAAS,GAAIo5C,KAEvBD,GAAUxB,EAAIh9C,EAAGxU,EAAGw+B,EAAIz+B,EAAGkzD,GAC3B,EAAG,CACC,IAAIn3C,EAEJ,GADAo3C,GAAY1B,GACqB,QAA5B11C,EAAMmxC,GAAMuE,EAAI7tD,EAAI,IACrB,OAAIyvD,GACA1lD,EAAgB8G,EAAG7Q,EAAK,GACxB+J,EAAgB8G,EAAGsH,GACZg3C,GAActB,EAAI,KAAM,GAAK,GAE7BsB,GAActB,EAAI7tD,EAAImY,SAEhCnY,IAAO6tD,EAAGL,UAAYmC,GAGnC,OADAtlD,EAAYwG,GACL,GAYL++C,GACF,SAAAA,IAAczrD,EAAAC,KAAAwrD,GACVxrD,KAAKmwB,IAAMjwB,IACXF,KAAKhI,EAAIkI,IACTF,KAAKyrD,UAAYvrD,IACjBF,KAAKypD,GAAK,IAAIP,IAIhBwC,GAAa,SAASj/C,GACxB,IAAIk/C,EAAK9iD,EAAe4D,EAAG1L,EAAiB,IAC5C4qD,EAAGlC,GAAGh9C,EAAIA,EACV,IAAK,IAAI0jB,EAAMw7B,EAAGx7B,IAAKA,GAAOw7B,EAAGlC,GAAGL,QAASj5B,IAAO,CAChDg7B,GAAYQ,EAAGlC,IACf,IAAIv9C,EACJ,GAAsC,QAAjCA,EAAIg5C,GAAMyG,EAAGlC,GAAIt5B,EAAKw7B,EAAG3zD,KAAgBkU,IAAMy/C,EAAGF,UAEnD,OADAE,EAAGx7B,IAAMw7B,EAAGF,UAAYv/C,EACjB6+C,GAAcY,EAAGlC,GAAIt5B,EAAKjkB,GAGzC,OAAO,GA4CL0/C,GAAY,SAASnC,EAAIxuD,EAAGhD,EAAGiU,EAAG2/C,GACpC,IAAIp/C,EAAIg9C,EAAGh9C,EACX,OAAQo/C,GACJ,KAAK3uD,EACDmJ,EAAcoG,EAAG,GACjB,IAAI9U,EAAIozD,GAActB,EAAIxxD,EAAGiU,GAC7BjK,EAASwK,EAAG9U,EAAG,GACf,MAEJ,KAAKsF,EACD6tD,GAAgBrB,EAAI,EAAGxxD,EAAGiU,GAC1B1I,EAAaiJ,EAAG,GAChB,MAEJ,QAEI,YAzCE,SAASg9C,EAAIxuD,EAAGhD,EAAGiU,GAI7B,IAHA,IAAIO,EAAIg9C,EAAGh9C,EACPq/C,EAAOnjD,EAAa8D,EAAG,GACvBtW,EAAI21D,EAAKnyD,OACJzD,EAAI,EAAGA,EAAIC,EAAGD,IACf41D,EAAK51D,KAAOwvD,GACZ/oC,EAAa1hB,EAAG6wD,EAAK51D,IAGhBowD,GAAQwF,IADb51D,IAKuB,KAAZ41D,EAAK51D,GACZ8iB,EAAgB/d,EAAGwuD,EAAGt5B,IAAIre,SAAS7Z,EAAGiU,GAAIA,EAAIjU,IAE9C6yD,GAAgBrB,EAAIqC,EAAK51D,GAAK,GAA4B+B,EAAGiU,GAC7D0S,GAAenS,GAAI,GACnBzF,EAAWyF,GAAI,GACfmQ,GAAc3hB,KATV6wD,EAAK51D,KAAOwvD,IACZ3uC,GAAWtK,EAAGzT,GAAa,6CAA8C0sD,IAC7E/oC,EAAa1hB,EAAG6wD,EAAK51D,KA4BzB61D,CAAMtC,EAAIxuD,EAAGhD,EAAGiU,GAInBjE,EAAcwE,GAAI,GAGXlI,EAAakI,GAAI,IACzBsK,GAAWtK,EAAGzT,GAAa,oCAAqCoe,GAAc3K,GAAI,KAHlFpH,EAAQoH,EAAG,GACXzG,EAAgByG,EAAGg9C,EAAGt5B,IAAIre,SAAS7Z,EAAGiU,GAAIA,EAAIjU,IAGlD2kB,GAAc3hB,IAyCZ+wD,GAAS,CACXC,KA5rBa,SAASx/C,GACtB,IAAIxU,EAAIggB,GAAiBxL,EAAG,GACxBtW,EAAI8B,EAAE0B,OACNuyD,EAAOtG,GAAS3nC,GAAgBxR,EAAG,EAAG,GAAItW,GAC1Cg2D,EAAOvG,GAAS3nC,GAAgBxR,EAAG,EAAGy/C,GAAO/1D,GAIjD,GAFI+1D,EAAO,IAAGA,EAAO,GACjBC,EAAOh2D,IAAGg2D,EAAOh2D,GACjB+1D,EAAOC,EAAM,OAAO,EACxB,GAAIA,EAAOD,GAAQpgD,OAAO81C,iBACtB,OAAO7qC,GAAWtK,EAAG,yBAEzB,IAAI9U,EAAKw0D,EAAOD,EAAQ,EACxBxxC,GAAgBjO,EAAG9U,EAAG,yBACtB,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,EAAGzB,IACnByP,EAAgB8G,EAAGxU,EAAEi0D,EAAOh2D,EAAI,IACpC,OAAOyB,GA6qBPy0D,KAxxCa,SAAS3/C,GAItB,IAHA,IAAI9U,EAAI8L,EAAWgJ,GACfxR,EAAI,IAAImb,EACRpe,EAAI+kB,GAAkBtQ,EAAGxR,EAAGtD,GACvBzB,EAAI,EAAGA,GAAKyB,EAAGzB,IAAK,CACzB,IAAIK,EAAI+hB,GAAkB7L,EAAGvW,GAC7B2mB,GAAcpQ,EAAGlW,GAAK,GAAKA,GAAK,IAAK,sBACrCyB,EAAE9B,EAAE,GAAKK,EAGb,OADA6nB,GAAoBnjB,EAAGtD,GAChB,GA+wCP00D,KAvwCa,SAAS5/C,GACtB,IAAIxR,EAAI,IAAImb,EACRowB,EAAQv+B,EAAcwE,EAAG,GAI7B,OAHA0Q,GAAe1Q,EAAG,EAAGvP,GACrB0K,EAAW6E,EAAG,GACdsM,GAActM,EAAGxR,GACqB,IAAlCwH,EAASgK,EAAG85B,GAAQtrC,EAAGurC,GAChBzvB,GAAWtK,EAAGzT,GAAa,mCACtCmgB,GAAgBle,GACT,IA+vCPowD,KA9Ia,SAAS5+C,GACtB,OAAO2+C,GAAa3+C,EAAG,IA8IvB6/C,OA7kCe,SAAS7/C,GACxB,IAAIiF,EAAMjO,EAAWgJ,GACjBoK,EAAM,EACNywC,EAAUrvC,GAAiBxL,EAAGoK,GAC9B3gB,EAAI,EACJ+E,EAAI,IAAImb,EAEZ,IADA2C,GAActM,EAAGxR,GACV/E,EAAIoxD,EAAQ3tD,QACf,GAAI2tD,EAAQpxD,KAAOwvD,GACf/oC,EAAa1hB,EAAGqsD,EAAQpxD,WACrB,GAAIoxD,IAAUpxD,KAAOwvD,GACxB/oC,EAAa1hB,EAAGqsD,EAAQpxD,UACrB,CACH,IAAIqxD,EAAO,GAIX,SAHM1wC,EAAMnF,GACRkF,GAAcnK,EAAGoK,EAAK7d,GAAa,aACvC9C,EAAImxD,GAAW56C,EAAG66C,EAASpxD,EAAGqxD,GACtBhsD,OAAOC,aAAa8rD,EAAQpxD,OAChC,IAAK,IAEDymB,EAAa1hB,EAAGqd,GAAkB7L,EAAGoK,IACrC,MAEJ,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC/B,IAAIlf,EAAI2gB,GAAkB7L,EAAGoK,GAC7B2wC,GAAUD,EAAMvuD,GAAa+R,GAAoB,IACjDmO,EAAeje,EAAGjC,GAAaysD,EAAQlqD,OAAOC,aAAP2jC,MAAA5jC,OAAuBgsD,GAAO5vD,KACrE,MAEJ,IAAK,IAAK,IAAK,IACX6vD,GAAUD,EAAMvuD,GAAa+R,GAAoB,IACjDmO,EAAeje,EAAG6qD,GAAgBr5C,EAAG86C,EAAMlvC,GAAiB5L,EAAGoK,KAC/D,MAEJ,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IACX,IAAIlf,EAAI0gB,GAAiB5L,EAAGoK,GAC5B2wC,GAAUD,EAAMvuD,GAAa+R,GAAoB,IACjDmO,EAAeje,EAAGjC,GAAaysD,EAAQlqD,OAAOC,aAAP2jC,MAAA5jC,OAAuBgsD,GAAO5vD,KACrE,MAEJ,IAAK,IACDovD,GAAWt6C,EAAGxR,EAAG4b,GACjB,MAEJ,IAAK,IACD,IAAI5e,EAAI2mB,GAAenS,EAAGoK,GACtB0wC,EAAK5tD,QAAU,GAAiB,IAAZ4tD,EAAK,GACzB3qC,GAAc3hB,IAEd4hB,GAAcpQ,EAAGxU,EAAE0B,SAAWgsD,GAAO1tD,GAAI4e,EAAK,yBAC1Che,GAAkB0uD,EAAM,IAA8B,GAAKtvD,EAAE0B,QAAU,IAEvEijB,GAAc3hB,IAGdie,EAAeje,EAAGjC,GAAaysD,EAAQlqD,OAAOC,aAAP2jC,MAAA5jC,OAAuBgsD,GAAOxuD,GAAYd,MACjFoN,EAAQoH,EAAG,KAGnB,MAEJ,QACI,OAAOsK,GAAWtK,EAAGzT,GAAa,qCAAsCsuD,EAAQpxD,EAAE,KAMlG,OADAijB,GAAgBle,GACT,GAwgCPsxD,OAhHe,SAAS9/C,GACxB,IAAIxU,EAAIggB,GAAiBxL,EAAG,GACxBzU,EAAIigB,GAAiBxL,EAAG,GACxBgqB,EAAKx+B,EAAE0B,OACPuxD,EAAKlzD,EAAE2B,OACXiO,EAAW6E,EAAG,GACd,IAAIk/C,EAAK,IAAIH,GAOb,OANA1lD,EAAsB2G,EAAGk/C,GACzBV,GAAUU,EAAGlC,GAAIh9C,EAAGxU,EAAGw+B,EAAIz+B,EAAGkzD,GAC9BS,EAAGx7B,IAAM,EACTw7B,EAAG3zD,EAAI,EACP2zD,EAAGF,UAAY,KACflmD,EAAiBkH,EAAGi/C,GAAY,GACzB,GAoGPc,KA7Ca,SAAS//C,GACtB,IAAI0jB,EAAMlY,GAAiBxL,EAAG,GAC1BggD,EAAOt8B,EAAIx2B,OACX3B,EAAIigB,GAAiBxL,EAAG,GACxBy+C,EAAKlzD,EAAE2B,OACP8xD,EAAY,KACZI,EAAK/iD,EAAS2D,EAAG,GACjBigD,EAAQzuC,GAAgBxR,EAAG,EAAGggD,EAAO,GACrClB,EAAkB,KAATvzD,EAAE,GACXL,EAAI,EACJ8xD,EAAK,IAAIP,GAAWz8C,GACpBxR,EAAI,IAAImb,EASZ,IARAyG,GAAcpQ,EAAGo/C,IAAO9uD,GAAe8uD,IAAO7uD,GAAe6uD,IAAO3uD,GAAiB2uD,IAAO5uD,EAAY,EACpG,kCACJ8b,GAActM,EAAGxR,GACbswD,IACAvzD,EAAIA,EAAE8Z,SAAS,GAAIo5C,KAEvBD,GAAUxB,EAAIh9C,EAAG0jB,EAAKs8B,EAAMz0D,EAAGkzD,GAC/B/6B,EAAM,EAAGn4B,EAAI,EACNL,EAAI+0D,GAAO,CACd,IAAIxgD,EAEJ,GADAi/C,GAAY1B,GACoB,QAA3Bv9C,EAAIg5C,GAAMuE,EAAIt5B,EAAKn4B,KAAgBkU,IAAMu/C,EAC1C9zD,IACAi0D,GAAUnC,EAAIxuD,EAAGk1B,EAAKjkB,EAAG2/C,GACzB17B,EAAMs7B,EAAYv/C,MACf,MAAIikB,EAAMs5B,EAAGL,SAEf,MADDzsC,EAAa1hB,EAAGwuD,EAAGt5B,IAAIA,MAE3B,GAAIo7B,EAAQ,MAKhB,OAHAvyC,EAAgB/d,EAAGwuD,EAAGt5B,IAAIre,SAASqe,EAAKs5B,EAAGL,SAAUK,EAAGL,QAAUj5B,GAClEhX,GAAgBle,GAChB0K,EAAgB8G,EAAG9U,GACZ,GAWP+B,IAnyCY,SAAS+S,GAErB,OADA9G,EAAgB8G,EAAGwL,GAAiBxL,EAAG,GAAG9S,QACnC,GAkyCPgzD,MA5vBc,SAASlgD,GAIvB,IAHA,IAAIxU,EAAIggB,GAAiBxL,EAAG,GACxBtW,EAAI8B,EAAE0B,OACN3C,EAAI,IAAIuC,WAAWpD,GACdD,EAAE,EAAGA,EAAEC,EAAGD,IAAK,CACpB,IAAIK,EAAI0B,EAAE/B,GACNwwD,GAAQnwD,KACRA,GAAQ,IACZS,EAAEd,GAAKK,EAGX,OADA4P,EAAesG,EAAGzV,GACX,GAkvBPkuD,MAhJc,SAASz4C,GACvB,OAAO2+C,GAAa3+C,EAAG,IAgJvB60C,KA71Ba,SAAS70C,GACtB,IAAIxR,EAAI,IAAImb,EACR0gB,EAAI,IAAI8wB,GAAOn7C,GACfmF,EAAM,CACN3Z,EAAGggB,GAAiBxL,EAAG,GACvB4U,IAAK,GAELxK,EAAM,EACNyxC,EAAY,EAGhB,IAFAriD,EAAYwG,GACZsM,GAActM,EAAGxR,GACV2W,EAAIyP,IAAMzP,EAAI3Z,EAAE0B,QAAQ,CAC3B,IAAIizD,EAAUvE,GAAWvxB,EAAGwxB,EAAW12C,GACnCw2C,EAAMwE,EAAQxE,IACd94C,EAAOs9C,EAAQt9C,KACfi5C,EAAWqE,EAAQrE,SAEvB,IADAD,GAAaC,EAAWj5C,EACjBi5C,KAAa,GAChB5rC,EAAa1hB,EA9LA,GAgMjB,OADA4b,IACQuxC,GACJ,KApKO,EAqKH,IAAIzwD,EAAI2gB,GAAkB7L,EAAGoK,GAC7B,GAAIvH,EA9LN,EA8LoB,CACd,IAAIwR,EAAM,GAAa,EAAPxR,EAAY,EAC5BuN,GAAcpQ,GAAIqU,GAAOnpB,GAAKA,EAAImpB,EAAKjK,EAAK,oBAEhD4xC,GAAQxtD,EAAGtD,EAAGm/B,EAAE+wB,SAAUv4C,EAAM3X,EAAI,GACpC,MAEJ,KA5KO,EA6KH,IAAIA,EAAI2gB,GAAkB7L,EAAGoK,GACzBvH,EAvMN,GAwMMuN,GAAcpQ,EAAI9U,IAAI,EAAM,GArMrC,EAqM2C2X,EAAauH,EAAK,qBACxD4xC,GAAQxtD,EAAGtD,IAAI,EAAGm/B,EAAE+wB,SAAUv4C,GAAM,GACpC,MAEJ,KAlLO,EAmLH,IAAIQ,EAAO0I,GAAkBvd,EAAGqU,GAC5B3X,EAAI0gB,GAAiB5L,EAAGoK,GACxBgyC,EAAK,IAAIv9C,SAASwE,EAAKw3B,OAAQx3B,EAAKy3B,WAAYz3B,EAAK03B,YAC5C,IAATl4B,EAAYu5C,EAAGgE,WAAW,EAAGl1D,EAAGm/B,EAAE+wB,UACjCgB,EAAGr9C,WAAW,EAAG7T,EAAGm/B,EAAE+wB,UAC3B5uC,EAAahe,EAAGqU,GAChB,MAEJ,KA1LO,EA2LH,IAAIrX,EAAIggB,GAAiBxL,EAAGoK,GACxBnd,EAAMzB,EAAE0B,OAGZ,IAFAkjB,GAAcpQ,EAAG/S,GAAO4V,EAAMuH,EAAK,iCACnCmC,EAAgB/d,EAAGhD,EAAGyB,GACfA,IAAQ4V,GACXqN,EAAa1hB,EAhOR,GAiOT,MAEJ,KAlMO,EAmMH,IAAIhD,EAAIggB,GAAiBxL,EAAGoK,GACxBnd,EAAMzB,EAAE0B,OACZkjB,GAAcpQ,EACV6C,GAAQ,GAA0B5V,EAAO,GA/NlD,EA+NwD4V,EAC/CuH,EAAK,4CACT4xC,GAAQxtD,EAAGvB,EAAKo9B,EAAE+wB,SAAUv4C,EAAM,GAClC0J,EAAgB/d,EAAGhD,EAAGyB,GACtB4uD,GAAa5uD,EACb,MAEJ,KA5MO,EA6MH,IAAIzB,EAAIggB,GAAiBxL,EAAGoK,GACxBnd,EAAMzB,EAAE0B,OACZkjB,GAAcpQ,EAAG5T,GAAkBZ,EAAG,GAAK,EAAG4e,EAAK,0BACnDmC,EAAgB/d,EAAGhD,EAAGyB,GACtBijB,EAAa1hB,EAAG,GAChBqtD,GAAa5uD,EAAM,EACnB,MAEJ,KApNO,EAoNQijB,EAAa1hB,EAvPf,GAwPb,KApNO,EAoNU,KAnNV,EAoNH4b,KAKZ,OADAsC,GAAgBle,GACT,GA4wBP6xD,SAprBiB,SAASrgD,GAO1B,IANA,IAAIqqB,EAAI,IAAI8wB,GAAOn7C,GACfmF,EAAM,CACN3Z,EAAGggB,GAAiBxL,EAAG,GACvB4U,IAAK,GAELinC,EAAY,EACT12C,EAAIyP,IAAMzP,EAAI3Z,EAAE0B,QAAQ,CAC3B,IAAIizD,EAAUvE,GAAWvxB,EAAGwxB,EAAW12C,GACnCw2C,EAAMwE,EAAQxE,IACd94C,EAAOs9C,EAAQt9C,KACfi5C,EAAWqE,EAAQrE,SAIvB,OAFA1rC,GAAcpQ,EAAG67C,GA5pBT,YA2pBRh5C,GAAQi5C,GACsC,EAAG,2BACjDD,GAAah5C,EACL84C,GACJ,KArUO,EAsUP,KArUO,EAsUHxxC,GAAcnK,EAAG,EAAG,2BAMhC,OADA9G,EAAgB8G,EAAG67C,GACZ,GA6pBPyE,IApuBY,SAAStgD,GACrB,IAAIxU,EAAIggB,GAAiBxL,EAAG,GACxBtW,EAAI8B,EAAE0B,OACNhC,EAAI2gB,GAAkB7L,EAAG,GACzBggC,EAAMr0B,GAAe3L,EAAG,EAAG,IAC3By0C,EAAOzU,EAAI9yC,OACf,GAAIhC,GAAK,EAAGoO,EAAgB0G,EAAG,QAC1B,IAAItW,EAAI+qD,EAAO/qD,GAAKA,EAAI+qD,EAvmBjB,WAumBkCvpD,EAC1C,OAAOof,GAAWtK,EAAGzT,GAAa,+BAMlC,IAJA,IAAIg0D,EAAWr1D,EAAIxB,GAAKwB,EAAI,GAAKupD,EAC7BjmD,EAAI,IAAImb,EACRpe,EAAI+kB,GAAkBtQ,EAAGxR,EAAG+xD,GAC5BC,EAAK,EACFt1D,KAAM,GACTK,EAAEwa,IAAIva,EAAGg1D,GACTA,GAAM92D,EACF+qD,EAAO,IACPlpD,EAAEwa,IAAIi6B,EAAKwgB,GACXA,GAAM/L,GAGdlpD,EAAEwa,IAAIva,EAAGg1D,GACT7uC,GAAoBnjB,EAAG+xD,GAE3B,OAAO,GA4sBPpoB,QA3wBgB,SAASn4B,GAIzB,IAHA,IAAIxU,EAAIggB,GAAiBxL,EAAG,GACxBtW,EAAI8B,EAAE0B,OACN3C,EAAI,IAAIuC,WAAWpD,GACdD,EAAE,EAAGA,EAAEC,EAAGD,IACfc,EAAEd,GAAK+B,EAAE9B,EAAE,EAAED,GAEjB,OADAiQ,EAAesG,EAAGzV,GACX,GAqwBPk2D,IAvzCY,SAASzgD,GACrB,IAAIxU,EAAIggB,GAAiBxL,EAAG,GACxBtW,EAAI8B,EAAE0B,OACNwzD,EAAQvH,GAASttC,GAAkB7L,EAAG,GAAItW,GAC1Ci3D,EAAMxH,GAAS3nC,GAAgBxR,EAAG,GAAI,GAAItW,GAM9C,OALIg3D,EAAQ,IAAGA,EAAQ,GACnBC,EAAMj3D,IAAGi3D,EAAMj3D,GACfg3D,GAASC,EACTjnD,EAAesG,EAAGxU,EAAE6Z,SAASq7C,EAAQ,EAAIA,EAAQ,GAAMC,EAAMD,EAAQ,KACpEpnD,EAAgB0G,EAAG,IACjB,GA8yCPk1C,OApnBe,SAASl1C,GACxB,IAAIqqB,EAAI,IAAI8wB,GAAOn7C,GACfmF,EAAM,CACN3Z,EAAGggB,GAAiBxL,EAAG,GACvB4U,IAAK,GAELhW,EAAO4M,GAAiBxL,EAAG,GAC3B4gD,EAAKhiD,EAAK1R,OACV4hB,EAAMqqC,GAAS3nC,GAAgBxR,EAAG,EAAG,GAAI4gD,GAAM,EAC/C11D,EAAI,EAER,IADAklB,GAAcpQ,EAAG8O,GAAO8xC,GAAM9xC,GAAO,EAAG,EAAG,kCACpC3J,EAAIyP,IAAMzP,EAAI3Z,EAAE0B,QAAQ,CAC3B,IAAIizD,EAAUvE,GAAWvxB,EAAGvb,EAAK3J,GAC7Bw2C,EAAMwE,EAAQxE,IACd94C,EAAOs9C,EAAQt9C,KACfi5C,EAAWqE,EAAQrE,SAOvB,OANkChtC,EAAMgtC,EAAWj5C,EAAO+9C,GACtDz2C,GAAcnK,EAAG,EAAGzT,GAAa,0BACrCuiB,GAAOgtC,EAEP7tC,GAAgBjO,EAAG,EAAG,oBACtB9U,IACQywD,GACJ,KApZO,EAqZP,KApZO,EAqZH,IAAIr0C,EAAM20C,GAAUj8C,EAAGpB,EAAKyG,SAASyJ,GAAMub,EAAE+wB,SAAUv4C,EAtZpD,IAsZ0D84C,GAC7DziD,EAAgB8G,EAAGsH,GACnB,MAEJ,KAxZO,EAyZH,IAAIA,EAAM60C,GAAUn8C,EAAGpB,EAAKyG,SAASyJ,GAAMub,EAAE+wB,SAAUv4C,GACvDpJ,EAAeuG,EAAGsH,GAClB,MAEJ,KA5ZO,EA6ZH5N,EAAesG,EAAGpB,EAAKyG,SAASyJ,EAAKA,EAAMjM,IAC3C,MAEJ,KA/ZO,EAgaH,IAAI5V,EAAMgvD,GAAUj8C,EAAGpB,EAAKyG,SAASyJ,GAAMub,EAAE+wB,SAAUv4C,EAAM,GAC7DuN,GAAcpQ,EAAG8O,EAAM7hB,EAAM4V,GAAQ+9C,EAAI,EAAG,yBAC5ClnD,EAAesG,EAAGpB,EAAKyG,SAASyJ,EAAMjM,EAAMiM,EAAMjM,EAAO5V,IACzD6hB,GAAO7hB,EACP,MAEJ,KAraO,EAsaH,IAAIwS,EAAIrT,GAAkBwS,EAAM,EAAGkQ,IACxB,IAAPrP,IAAUA,EAAIb,EAAK1R,OAAS4hB,GAChCpV,EAAesG,EAAGpB,EAAKyG,SAASyJ,EAAKrP,IACrCqP,EAAMrP,EAAI,EACV,MAEJ,KA1aO,EA0aU,KA3aV,EA2ayB,KAzazB,EA0aHvU,IAGR4jB,GAAOjM,EAGX,OADA3J,EAAgB8G,EAAG8O,EAAM,GAClB5jB,EAAI,GA0jBX21D,MAtvBc,SAAS7gD,GAIvB,IAHA,IAAIxU,EAAIggB,GAAiBxL,EAAG,GACxBtW,EAAI8B,EAAE0B,OACN3C,EAAI,IAAIuC,WAAWpD,GACdD,EAAE,EAAGA,EAAEC,EAAGD,IAAK,CACpB,IAAIK,EAAI0B,EAAE/B,GACNuwD,GAAQlwD,KACRA,GAAQ,KACZS,EAAEd,GAAKK,EAGX,OADA4P,EAAesG,EAAGzV,GACX,IA+vBXrB,EAAOD,QAAQ2oC,eANQ,SAAS5xB,GAG5B,OAFAoR,GAAYpR,EAAGu/C,IAZK,SAASv/C,GAC7BjK,EAAgBiK,EAAG,EAAG,GACtB1G,EAAgB0G,EAAG,IACnBpG,EAAcoG,GAAI,GAClB/E,EAAiB+E,GAAI,GACrBpH,EAAQoH,EAAG,GACXpG,EAAcoG,GAAI,GAClBpF,EAAaoF,GAAI,EAAGzT,GAAa,WAAW,IAC5CqM,EAAQoH,EAAG,GAKX8gD,CAAgB9gD,GACT,uCC36CPtU,EAAQ,GATRsL,eACA+B,sBACAC,oBACAE,oBACAM,gBACAE,mBACAE,kBACAgB,iBACAc,oBAcAhQ,EAAQ,GAXRie,gBACAwG,kBACAC,kBACA9D,kBACAT,sBACAoC,oBACAzC,qBACAlB,eACA8G,gBACAI,oBACA9E,sBAKAhhB,EAAQ,GAFRW,iBACAE,iBAKEw0D,EAAS,SAASx1D,GAEpB,OAAa,OADD,IAAJA,IAKNy1D,EAAa,SAASlyC,EAAK7hB,GAC7B,OAAI6hB,GAAO,EAAUA,EACZ,EAAIA,EAAM7hB,EAAY,EACnBA,EAAM6hB,EAAM,GAMtBmyC,EAAS,CAAC,IAAM,IAAM,KAAO,OAC7BC,EAAc,SAAS11D,EAAGsjB,GAC5B,IAAIhlB,EAAI0B,EAAEsjB,GACNxH,EAAM,EACV,GAAIxd,EAAI,IACJwd,EAAMxd,MACL,CAED,IADA,IAAIm7B,EAAQ,EACD,GAAJn7B,GAAU,CACb,IAAIuiD,EAAK7gD,EAAEsjB,KAASmW,GACpB,GAAoB,MAAV,IAALonB,GACD,OAAO,KACX/kC,EAAOA,GAAO,EAAW,GAAL+kC,EACpBviD,IAAM,EAGV,GADAwd,IAAa,IAAJxd,IAAsB,EAARm7B,EACnBA,EAAQ,GAAK3d,EAjCN,SAiC0BA,GAAO25C,EAAOh8B,GAC/C,OAAO,KACXnW,GAAOmW,EAGX,MAAO,CACHnP,KAAMxO,EACNwH,IAAKA,EAAM,IAiCbqyC,EAAM50D,EAAa,MACnB60D,EAAc,SAASphD,EAAGoK,GAC5B,IAAI0L,EAAOjK,EAAkB7L,EAAGoK,GAChCgG,EAAcpQ,EAAG,GAAK8V,GAAQA,GA5Ef,QA4EmC1L,EAAK,sBACvDpR,EAAgBgH,EAAGmhD,EAAKrrC,IAgGtBurC,EAAW,SAASrhD,GACtB,IAAIxU,EAAIggB,EAAiBxL,EAAG,GACxB/S,EAAMzB,EAAE0B,OACRhC,EAAIwQ,EAAcsE,EAAG,GAAK,EAE9B,GAAI9U,EAAI,EACJA,EAAI,OACH,GAAIA,EAAI+B,EAET,IADA/B,IACO61D,EAAOv1D,EAAEN,KAAKA,IAGzB,GAAIA,GAAK+B,EACL,OAAO,EAEP,IAAIq0D,EAAMJ,EAAY11D,EAAGN,GACzB,OAAY,OAARo2D,GAAgBP,EAAOv1D,EAAE81D,EAAIxyC,MACtBxE,EAAWtK,EAAGzT,EAAa,wBACtC2M,EAAgB8G,EAAG9U,EAAI,GACvBgO,EAAgB8G,EAAGshD,EAAIxrC,MAChB,IAYTyrC,EAAQ,CACV5B,KA3HY,SAAS3/C,GACrB,IAAI9U,EAAI8L,EAAWgJ,GACnB,GAAU,IAAN9U,EACAk2D,EAAYphD,EAAG,OACd,CACD,IAAIxR,EAAI,IAAImb,EACZ2C,EAActM,EAAGxR,GACjB,IAAK,IAAI/E,EAAI,EAAGA,GAAKyB,EAAGzB,IACpB23D,EAAYphD,EAAGvW,GACf0mB,EAAc3hB,GAElBke,EAAgBle,GAEpB,OAAO,GA+GPgzD,UA3Dc,SAASxhD,GACvB,IAAIxU,EAAIggB,EAAiBxL,EAAG,GACxBy/C,EAAOuB,EAAWxvC,EAAgBxR,EAAG,EAAG,GAAIxU,EAAE0B,QAC9CwyD,EAAOsB,EAAWxvC,EAAgBxR,EAAG,EAAGy/C,GAAOj0D,EAAE0B,QAKrD,GAHAkjB,EAAcpQ,EAAGy/C,GAAQ,EAAG,EAAG,gBAC/BrvC,EAAcpQ,EAAG0/C,GAAQl0D,EAAE0B,OAAQ,EAAG,gBAElCuyD,EAAOC,EAAM,OAAO,EACxB,GAAIA,EAAOD,GAAQpgD,OAAO81C,iBACtB,OAAO7qC,EAAWtK,EAAG,yBACzB,IAAI9U,EAAKw0D,EAAOD,EAAQ,EAGxB,IAFAxxC,EAAgBjO,EAAG9U,EAAG,yBACtBA,EAAI,EACCu0D,GAAQ,EAAGA,EAAOC,GAAO,CAC1B,IAAI4B,EAAMJ,EAAY11D,EAAGi0D,GACzB,GAAY,OAAR6B,EACA,OAAOh3C,EAAWtK,EAAG,sBACzB9G,EAAgB8G,EAAGshD,EAAIxrC,MACvB2pC,EAAO6B,EAAIxyC,IACX5jB,IAEJ,OAAOA,GAsCPu2D,MAXe,SAASzhD,GAKxB,OAJAwL,EAAiBxL,EAAG,GACpBjH,EAAkBiH,EAAGqhD,GACrBznD,EAAcoG,EAAG,GACjB9G,EAAgB8G,EAAG,GACZ,GAOP/S,IAhKW,SAAS+S,GACpB,IAAI9U,EAAI,EACJM,EAAIggB,EAAiBxL,EAAG,GACxB/S,EAAMzB,EAAE0B,OACRuyD,EAAOuB,EAAWxvC,EAAgBxR,EAAG,EAAG,GAAI/S,GAC5Cy0D,EAAOV,EAAWxvC,EAAgBxR,EAAG,GAAI,GAAI/S,GAKjD,IAHAmjB,EAAcpQ,EAAG,GAAKy/C,KAAUA,GAAQxyD,EAAK,EAAG,kCAChDmjB,EAAcpQ,IAAK0hD,EAAOz0D,EAAK,EAAG,gCAE3BwyD,GAAQiC,GAAM,CACjB,IAAIJ,EAAMJ,EAAY11D,EAAGi0D,GACzB,GAAY,OAAR6B,EAGA,OAFA9nD,EAAYwG,GACZ9G,EAAgB8G,EAAGy/C,EAAO,GACnB,EAEXA,EAAO6B,EAAIxyC,IACX5jB,IAGJ,OADAgO,EAAgB8G,EAAG9U,GACZ,GA4IPy2D,OA3Ge,SAAS3hD,GACxB,IAAIxU,EAAIggB,EAAiBxL,EAAG,GACxB9U,EAAI2gB,EAAkB7L,EAAG,GACzBy/C,EAAOv0D,GAAK,EAAI,EAAIM,EAAE0B,OAAS,EAKnC,GAJAuyD,EAAOuB,EAAWxvC,EAAgBxR,EAAG,EAAGy/C,GAAOj0D,EAAE0B,QAEjDkjB,EAAcpQ,EAAG,GAAKy/C,KAAUA,GAAQj0D,EAAE0B,OAAQ,EAAG,yBAE3C,IAANhC,EAEA,KAAOu0D,EAAO,GAAKsB,EAAOv1D,EAAEi0D,KAAQA,SAKpC,GAHIsB,EAAOv1D,EAAEi0D,KACTn1C,EAAWtK,EAAG,2CAEd9U,EAAI,EACJ,KAAOA,EAAI,GAAKu0D,EAAO,GAAG,CACtB,GACIA,UACKA,EAAO,GAAKsB,EAAOv1D,EAAEi0D,KAC9Bv0D,SAIJ,IADAA,IACOA,EAAI,GAAKu0D,EAAOj0D,EAAE0B,QAAQ,CAC7B,GACIuyD,UACKsB,EAAOv1D,EAAEi0D,KAClBv0D,IAUZ,OALU,IAANA,EACAgO,EAAgB8G,EAAGy/C,EAAO,GAE1BjmD,EAAYwG,GAET,IAyEL4hD,EAAWv1D,EAAa,GAAI,EAAG,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAStFnD,EAAOD,QAAQ6oC,aAPM,SAAS9xB,GAI1B,OAHAoR,EAAYpR,EAAGuhD,GACf7nD,EAAesG,EAAG4hD,GAClBhnD,EAAaoF,GAAI,EAAGzT,EAAa,eAAe,IACzC,qCCrNPs1D,IAlBAn2D,EAAQ,GAjBRgH,aACApC,gBACAsF,gBACAoB,eACAO,kBACAI,oBACAkB,oBACAK,oBACAI,oBACAE,gBACAC,mBACAG,kBACAgB,iBACAO,eACAO,kBACAC,mBACAU,eAWA3Q,EAAQ,GARR0kB,kBACAjG,kBACAoG,kBACA1E,sBACAD,qBACAtB,eACA8G,gBACAK,qBAMA/lB,EAAQ,GAHR6S,mBACAC,mBACAe,wBAEIhT,EAAiBb,EAAQ,GAAzBa,aAIFu1D,EAAS,WAEX,OADAD,EAAc,WAAaA,EAAa,MAAS,YAoG/CE,EAAa,SAAS/hD,EAAGjW,GAC3B,IAAImB,EAAIqU,EAAoBxV,IAClB,IAANmB,EACAgO,EAAgB8G,EAAG9U,GAEnBuO,EAAeuG,EAAGjW,IAoIpBi4D,EAAU,CACZ9jD,IAhMa,SAAS8B,GACtB,GAAIzI,EAAcyI,EAAG,GAAI,CACrB,IAAI9U,EAAIwQ,EAAcsE,EAAG,GACrB9U,EAAI,IAAGA,EAAS,GAAHA,GACjBgO,EAAgB8G,EAAG9U,QAGnBuO,EAAeuG,EAAGrR,KAAKuP,IAAI0N,EAAiB5L,EAAG,KACnD,OAAO,GAyLPiiD,KAlKc,SAASjiD,GAEvB,OADAvG,EAAeuG,EAAGrR,KAAKszD,KAAKr2C,EAAiB5L,EAAG,KACzC,GAiKPkiD,KAxKc,SAASliD,GAEvB,OADAvG,EAAeuG,EAAGrR,KAAKuzD,KAAKt2C,EAAiB5L,EAAG,KACzC,GAuKPmiD,KA/Jc,SAASniD,GACvB,IAAIyqB,EAAI7e,EAAiB5L,EAAG,GACxBqB,EAAIoQ,EAAezR,EAAG,EAAG,GAE7B,OADAvG,EAAeuG,EAAGrR,KAAKyzD,MAAM33B,EAAGppB,IACzB,GA4JPpD,KA7Hc,SAAS+B,GAMvB,OALIzI,EAAcyI,EAAG,GACjB7E,EAAW6E,EAAG,GAEd+hD,EAAW/hD,EAAGrR,KAAKsP,KAAK2N,EAAiB5L,EAAG,KAEzC,GAwHPqiD,IArLa,SAASriD,GAEtB,OADAvG,EAAeuG,EAAGrR,KAAK0zD,IAAIz2C,EAAiB5L,EAAG,KACxC,GAoLPsiD,IAnFa,SAAStiD,GAEtB,OADAvG,EAAeuG,EAAG4L,EAAiB5L,EAAG,IAAM,IAAMrR,KAAK4zD,KAChD,GAkFPC,IAzFa,SAASxiD,GAEtB,OADAvG,EAAeuG,EAAGrR,KAAK6zD,IAAI52C,EAAiB5L,EAAG,KACxC,GAwFP3B,MA1Ie,SAAS2B,GAMxB,OALIzI,EAAcyI,EAAG,GACjB7E,EAAW6E,EAAG,GAEd+hD,EAAW/hD,EAAGrR,KAAK0P,MAAMuN,EAAiB5L,EAAG,KAE1C,GAqIPyiD,KAvCc,SAASziD,GACvB,GAAIzI,EAAcyI,EAAG,IAAMzI,EAAcyI,EAAG,GAAI,CAC5C,IAAIjW,EAAI2R,EAAcsE,EAAG,GAEf,IAANjW,EACAogB,EAAcnK,EAAG,EAAG,QAEpB9G,EAAgB8G,EAAItE,EAAcsE,EAAG,GAAKjW,EAAG,OAC9C,CACH,IAAIiD,EAAI4e,EAAiB5L,EAAG,GACxBxR,EAAIod,EAAiB5L,EAAG,GAC5BvG,EAAeuG,EAAGhT,EAAEwB,GAExB,OAAO,GA2BPsiD,IA9Ga,SAAS9wC,GACtB,IACIsH,EADAjG,EAAIuK,EAAiB5L,EAAG,GAE5B,GAAIrI,EAAgBqI,EAAG,GACnBsH,EAAM3Y,KAAKmiD,IAAIzvC,OACd,CACD,IAAIiU,EAAO1J,EAAiB5L,EAAG,GAE3BsH,EADS,IAATgO,EACM3mB,KAAK+zD,KAAKrhD,GACF,KAATiU,EACC3mB,KAAKg0D,MAAMthD,GAEX1S,KAAKmiD,IAAIzvC,GAAG1S,KAAKmiD,IAAIx7B,GAGnC,OADA7b,EAAeuG,EAAGsH,GACX,GAgGP8E,IAlEa,SAASpM,GACtB,IAAI9U,EAAI8L,EAAWgJ,GACf4iD,EAAO,EACXxyC,EAAcpQ,EAAG9U,GAAK,EAAG,EAAG,kBAC5B,IAAK,IAAIzB,EAAI,EAAGA,GAAKyB,EAAGzB,IAChBmM,EAAYoK,EAAG4iD,EAAMn5D,EAAGiJ,KACxBkwD,EAAOn5D,GAGf,OADAmQ,EAAcoG,EAAG4iD,GACV,GA0DPh0D,IA/Ea,SAASoR,GACtB,IAAI9U,EAAI8L,EAAWgJ,GACf6iD,EAAO,EACXzyC,EAAcpQ,EAAG9U,GAAK,EAAG,EAAG,kBAC5B,IAAK,IAAIzB,EAAI,EAAGA,GAAKyB,EAAGzB,IAChBmM,EAAYoK,EAAGvW,EAAGo5D,EAAMnwD,KACxBmwD,EAAOp5D,GAGf,OADAmQ,EAAcoG,EAAG6iD,GACV,GAuEPC,KA3Bc,SAAS9iD,GACvB,GAAIzI,EAAcyI,EAAG,GACjB7E,EAAW6E,EAAG,GACdvG,EAAeuG,EAAG,OACf,CACH,IAAI9U,EAAI0gB,EAAiB5L,EAAG,GACxB+iD,EAAK73D,EAAI,EAAIyD,KAAKsP,KAAK/S,GAAKyD,KAAK0P,MAAMnT,GAC3C62D,EAAW/hD,EAAG+iD,GACdtpD,EAAeuG,EAAG9U,IAAM63D,EAAK,EAAI73D,EAAI63D,GAEzC,OAAO,GAkBPC,IAtFa,SAAShjD,GAEtB,OADAvG,EAAeuG,EAAG4L,EAAiB5L,EAAG,IAAMrR,KAAK4zD,GAAK,MAC/C,GAqFPtN,OApPgB,SAASj1C,GACzB,IAAIijD,EAAK9oB,EAEL5vC,OAAoB,IAAfs3D,EAAuBlzD,KAAKsmD,SAAU6M,IAAW,WAC1D,OAAQ9qD,EAAWgJ,IACf,KAAK,EAED,OADAvG,EAAeuG,EAAGzV,GACX,EACX,KAAK,EACD04D,EAAM,EACN9oB,EAAKtuB,EAAkB7L,EAAG,GAC1B,MAEJ,KAAK,EACDijD,EAAMp3C,EAAkB7L,EAAG,GAC3Bm6B,EAAKtuB,EAAkB7L,EAAG,GAC1B,MAEJ,QAAS,OAAOsK,EAAWtK,EAAG,6BAUlC,OANAoQ,EAAcpQ,EAAGijD,GAAO9oB,EAAI,EAAG,qBAC/B/pB,EAAcpQ,EAAGijD,GAAO,GAAK9oB,GAAM57B,EAAiB0kD,EAAK,EACrD,sBAEJ14D,GAAM4vC,EAAK8oB,EAAO,EAClB/pD,EAAgB8G,EAAGrR,KAAK0P,MAAM9T,GAAK04D,GAC5B,GAyNPC,WAtNoB,SAASljD,GArCjB,IAASqB,EAwCrB,OAxCqBA,EAsCbuK,EAAiB5L,EAAG,GApCT,IADnB6hD,EAAe,EAAFxgD,KAETwgD,EAAa,GAoCjBC,IACO,GAoNPqB,IAtMa,SAASnjD,GAEtB,OADAvG,EAAeuG,EAAGrR,KAAKw0D,IAAIv3C,EAAiB5L,EAAG,KACxC,GAqMPojD,KAlIc,SAASpjD,GAEvB,OADAvG,EAAeuG,EAAGrR,KAAKy0D,KAAKx3C,EAAiB5L,EAAG,KACzC,GAiIPqjD,IA9La,SAASrjD,GAEtB,OADAvG,EAAeuG,EAAGrR,KAAK00D,IAAIz3C,EAAiB5L,EAAG,KACxC,GA6LPyH,UAzKe,SAASzH,GACxB,IAAI9U,EAAIyQ,EAAeqE,EAAG,GAO1B,OANU,IAAN9U,EACAgO,EAAgB8G,EAAG9U,IAEnBqlB,EAAcvQ,EAAG,GACjBxG,EAAYwG,IAET,GAkKPe,KAhEc,SAASf,GAUvB,OATI3D,EAAS2D,EAAG,KAAO1P,EACfiH,EAAcyI,EAAG,GACjB1G,EAAgB0G,EAAG,WAEnB1G,EAAgB0G,EAAG,UAEvBuQ,EAAcvQ,EAAG,GACjBxG,EAAYwG,IAET,GAuDPsjD,IAjIa,SAAStjD,GACtB,IAAIhT,EAAI6e,EAAkB7L,EAAG,GACzBxR,EAAIqd,EAAkB7L,EAAG,GAE7B,OADAnH,EAAgBmH,EAAIhT,GAAK,EAAIwB,EAAE,GAAKxB,EAAEwB,EAAIA,EAAE,GAAKxB,EAAEwB,GAC5C,IA6IXtF,EAAOD,QAAQgpC,aAbM,SAASjyB,GAU1B,OATAoR,EAAYpR,EAAGgiD,GACfvoD,EAAeuG,EAAGrR,KAAK4zD,IACvB3nD,EAAaoF,GAAI,EAAGzT,EAAa,MAAM,IACvCkN,EAAeuG,EAAGu5C,KAClB3+C,EAAaoF,GAAI,EAAGzT,EAAa,QAAQ,IACzC2M,EAAgB8G,EAAGzB,GACnB3D,EAAaoF,GAAI,EAAGzT,EAAa,cAAc,IAC/C2M,EAAgB8G,EAAGxB,GACnB5D,EAAaoF,GAAI,EAAGzT,EAAa,cAAc,IACxC,qCC4JPg3D,IA3ZA73D,EAAQ,GAxDRiG,iBACAC,kBACAC,iBACAC,gBACAV,sBACAX,kBACAN,aACAK,eACAE,kBACA2C,cACAmC,aACAE,mBACAa,gBACAC,qBACAC,oBACAE,gBACAC,iBACAC,qBACAC,iBACAG,mBACAC,qBACAC,eACAE,oBACAC,mBACAK,oBACAK,iBACAM,iBACAI,cACAE,YACAC,oBACAG,oBACAE,oBACAG,0BACAC,oBACAE,gBACAE,mBACAE,kBACAK,gBACAI,gBACAK,eACAE,iBACAE,gBACAE,iBACAC,qBACAE,eACAC,mBACAC,qBACAO,mBACAK,gBACAC,kBACAC,kBACAC,oBACAC,cACAE,mBACAC,qBACAE,kBAgBAhR,EAAQ,GAbR0kB,oBACAjG,oBACAoG,oBACA1E,wBACAL,uBACAkF,qBACApG,iBACAyC,sBACAqE,kBACAI,sBACA7F,qBACA0G,qBACAQ,2BAEEjmB,GAASlB,EAAQ,OAInBA,EAAQ,GAFRU,wBACAG,mBAQEi3D,GAAa,SAASxjD,EAAGsS,EAAIpnB,GAC3B8U,IAAMsS,GAAO5c,EAAe4c,EAAIpnB,IAChCof,GAAWtK,EAAGzT,GAAa,kBAAkB,KA+C/Ck3D,GAAY,SAASzjD,GACvB,OAAIhI,EAAagI,EAAG,GACT,CACHoK,IAAK,EACLs5C,OAAQvnD,GAAa6D,EAAG,IAGrB,CACHoK,IAAK,EACLs5C,OAAQ1jD,IAUd2jD,GAAW,SAAS3jD,EAAG6Z,EAAGzsB,GAC5BsM,EAAesG,EAAG5S,GAClBwN,EAAaoF,GAAI,EAAG6Z,IAGlB+pC,GAAW,SAAS5jD,EAAG6Z,EAAGzsB,GAC5B8L,EAAgB8G,EAAG5S,GACnBwN,EAAaoF,GAAI,EAAG6Z,IAGlBgqC,GAAW,SAAS7jD,EAAG6Z,EAAGzsB,GAC5ByL,EAAgBmH,EAAG5S,GACnBwN,EAAaoF,GAAI,EAAG6Z,IAWlBiqC,GAAmB,SAAS9jD,EAAGsS,EAAIvH,GACjC/K,GAAKsS,EACL5X,EAAWsF,GAAI,EAAG,GAElBtD,GAAU4V,EAAItS,EAAG,GACrBpF,EAAaoF,GAAI,EAAG+K,IA6GlBg5C,GAAa,SAAS/jD,EAAG1V,GAC3B,IAAIY,EAAI2gB,GAAkB7L,EAAG,GAC7B0Q,GAAe1Q,EAAG,EAAGvP,GACrB,IAAIzG,EAAOM,EAAM2M,EAAe+I,EAAG,EAAG9U,GAAKkQ,EAAe4E,EAAG,EAAG9U,GAChE,OAAa,OAATlB,EAAsB,GAC1B0P,EAAesG,EAAGhW,GAClBmN,EAAW6I,IAAK1V,EAAI,IACbA,EAAM,IAiBX05D,GAAa,SAAShkD,EAAGikD,EAAMC,GACjC,IAAIn2C,EAAMlC,GAAkB7L,EAAGkkD,GAG/B,OAFAxzC,GAAe1Q,EAAGikD,EAAMxzD,GACxB2f,GAAcpQ,EAAqC,OAAjC/I,EAAe+I,EAAGikD,EAAMl2C,GAAgBm2C,EAAQ,yBAC3Dn2C,GAsBLo2C,GAAU53D,GAAa,aAAa,GAEpC63D,GAAY,CAAC,OAAQ,SAAU,OAAQ,QAAS,aAAax9B,IAAI,SAAAnnB,GAAC,OAAIlT,GAAakT,KAMnF4kD,GAAQ,SAASrkD,EAAG6J,GACtB5P,EAAY+F,EAAG5O,EAAmB+yD,IAClC,IACIlpB,EADY7+B,GAAe4D,GAAI,GACb1V,IAAI0V,GACtBi7B,IACAA,EAAMj7B,GACNtG,EAAesG,EAAGokD,GAAUv6C,EAAGrW,QAC3BqW,EAAGhW,aAAe,EAClBqF,EAAgB8G,EAAG6J,EAAGhW,aACrB2F,EAAYwG,GACjBpT,GAAO8S,WAAW/I,EAAYqJ,EAAGzT,GAAa,MAAOsd,IACrDrU,EAASwK,EAAG,EAAG,KA4FjBskD,GAAQ,CACVC,QApCe,SAASvkD,GACxB,IACIsS,EADSmxC,GAAUzjD,GACP0jD,OACZrgD,EAAO,IAAIvW,WAAW,GACtBs3B,EAAO3tB,EAAgB6b,GACvBqE,EAAOpgB,EAAY+b,GACV,OAATqE,EACAnd,EAAYwG,GACP2W,IAAS0tC,GACd/qD,EAAgB0G,EAAG,kBAEnB/F,EAAY+F,EAAG5O,EAAmB+yD,IAClB/nD,GAAe4D,GAAI,GACb1V,IAAIgoB,EAC1B2oB,CAAMj7B,IAIV,OAFAtG,EAAesG,EAtDA,SAASokB,EAAMogC,GAC9B,IAAI/6D,EAAI,EAIR,OAHI26B,EAAOzyB,IAAc6yD,EAAM/6D,KAAO,IAClC26B,EAAOtyB,IAAa0yD,EAAM/6D,KAAO,KACjC26B,EAAOvyB,IAAc2yD,EAAM/6D,KAAO,KAC/B+6D,EAAMn/C,SAAS,EAAG5b,GAiDPg7D,CAAWrgC,EAAM/gB,IACnCnK,EAAgB8G,EAAGxJ,EAAiB8b,IAC7B,GAmBPoyC,QAvQe,SAAS1kD,GACxB,IAAI6J,EAAK,IAAIxW,EACTqwD,EAASD,GAAUzjD,GACnBoK,EAAMs5C,EAAOt5C,IACbkI,EAAKoxC,EAAOA,OACZiB,EAAUh5C,GAAe3L,EAAGoK,EAAM,EAAG,UAEzC,GADAo5C,GAAWxjD,EAAGsS,EAAI,GACdhb,EAAe0I,EAAGoK,EAAM,GACxBu6C,EAAU3rD,EAAgBgH,EAAGzT,GAAa,OAAQo4D,GAClD/qD,EAAcoG,EAAGoK,EAAM,GACvB1N,GAAUsD,EAAGsS,EAAI,QAEjB,IAAKxb,EAAawb,EAAIzG,GAAkB7L,EAAGoK,EAAM,GAAIP,GAEjD,OADArQ,EAAYwG,GACL,EA+Bf,OA3BKrJ,EAAY2b,EAAIqyC,EAAS96C,IAC1BM,GAAcnK,EAAGoK,EAAM,EAAG,kBAC9B9R,EAAa0H,GACT5T,GAAkBu4D,EAAS,KAA+B,IAC1DhB,GAAS3jD,EAAGzT,GAAa,UAAU,GAAOsd,EAAGjW,QAC7C+vD,GAAS3jD,EAAGzT,GAAa,aAAa,GAAOsd,EAAGzV,WAChDwvD,GAAS5jD,EAAGzT,GAAa,eAAe,GAAOsd,EAAG/V,aAClD8vD,GAAS5jD,EAAGzT,GAAa,mBAAmB,GAAOsd,EAAG9V,iBACtD4vD,GAAS3jD,EAAGzT,GAAa,QAAQ,GAAOsd,EAAGlW,OAE3CvH,GAAkBu4D,EAAS,MAAgC,GAC3Df,GAAS5jD,EAAGzT,GAAa,eAAe,GAAOsd,EAAGhW,aAClDzH,GAAkBu4D,EAAS,MAAgC,IAC3Df,GAAS5jD,EAAGzT,GAAa,QAAQ,GAAOsd,EAAG7V,MAC3C4vD,GAAS5jD,EAAGzT,GAAa,WAAW,GAAOsd,EAAG5V,SAC9C4vD,GAAS7jD,EAAGzT,GAAa,YAAY,GAAOsd,EAAG3V,WAE/C9H,GAAkBu4D,EAAS,MAAgC,IAC3DhB,GAAS3jD,EAAGzT,GAAa,QAAQ,GAAOsd,EAAG7f,MAC3C25D,GAAS3jD,EAAGzT,GAAa,YAAY,GAAOsd,EAAGnW,WAE/CtH,GAAkBu4D,EAAS,MAAgC,GAC3Dd,GAAS7jD,EAAGzT,GAAa,cAAc,GAAOsd,EAAG1V,YACjD/H,GAAkBu4D,EAAS,KAA+B,GAC1Db,GAAiB9jD,EAAGsS,EAAI/lB,GAAa,eAAe,IACpDH,GAAkBu4D,EAAS,MAAgC,GAC3Db,GAAiB9jD,EAAGsS,EAAI/lB,GAAa,QAAQ,IAC1C,GA2NPq4D,SAxNgB,SAAS5kD,GACzB,IAAI0jD,EAASD,GAAUzjD,GACnBsS,EAAKoxC,EAAOA,OACZt5C,EAAMs5C,EAAOt5C,IACbP,EAAK,IAAIxW,EACTwxD,EAAOh5C,GAAkB7L,EAAGoK,EAAM,GACtC,GAAI9S,EAAe0I,EAAGoK,EAAM,GAGxB,OAFAxQ,EAAcoG,EAAGoK,EAAM,GACvB1Q,EAAesG,EAAGpJ,EAAaoJ,EAAG,KAAM6kD,IACjC,EAEP,IAAI76C,EAAQ6B,GAAkB7L,EAAGoK,EAAM,GACvC,IAAKtT,EAAawb,EAAItI,EAAOH,GACzB,OAAOM,GAAcnK,EAAGoK,EAAI,EAAG,sBACnCo5C,GAAWxjD,EAAGsS,EAAI,GAClB,IAAItoB,EAAO4M,EAAa0b,EAAIzI,EAAIg7C,GAChC,OAAI76D,GACA0S,GAAU4V,EAAItS,EAAG,GACjBtG,EAAesG,EAAGhW,GAClB0Q,EAAWsF,GAAI,EAAG,GACX,IAGPxG,EAAYwG,GACL,IAiMf+xC,aAxWoB,SAAS/xC,GAK7B,OAJAuQ,GAAcvQ,EAAG,GACZnJ,EAAiBmJ,EAAG,IACrBxG,EAAYwG,GAET,GAoWP8kD,YA9WmB,SAAS9kD,GAE5B,OADApG,EAAcoG,EAAG5O,GACV,GA6WP2zD,WA5JkB,SAAS/kD,GAC3B,OAAO+jD,GAAW/jD,EAAG,IA4JrBglD,aA3VoB,SAAShlD,GAK7B,OAJI3D,GAAS2D,EAAG,KAAOtP,EACnB8I,EAAYwG,GAEZ9I,EAAiB8I,EAAG,GACjB,GAuVPilD,QAzEe,SAASjlD,GACxB,IAAIokB,EAAMa,EAAOnQ,EAebowC,EAdAxB,EAASD,GAAUzjD,GACnBsS,EAAKoxC,EAAOA,OACZt5C,EAAMs5C,EAAOt5C,IACjB,GAAIzS,EAAgBqI,EAAGoK,EAAI,GACvBjP,EAAW6E,EAAGoK,EAAI,GAClB0K,EAAO,KAAMsP,EAAO,EAAGa,EAAQ,MAE9B,CACD,IAAMu/B,EAAQh5C,GAAiBxL,EAAGoK,EAAM,GACxCsG,GAAe1Q,EAAGoK,EAAI,EAAG3Z,GACzBw0B,EAAQzT,GAAgBxR,EAAGoK,EAAM,EAAG,GACpC0K,EAAOuvC,GAAOjgC,EAjCL,SAASogC,EAAOv/B,GAC7B,IAAIb,EAAO,EAKX,OAJIh4B,GAAkBo4D,EAAO,KAA+B,IAAGpgC,GAAQzyB,GACnEvF,GAAkBo4D,EAAO,MAAgC,IAAGpgC,GAAQtyB,GACpE1F,GAAkBo4D,EAAO,MAAgC,IAAGpgC,GAAQvyB,GACpEozB,EAAQ,IAAGb,GAAQxyB,GAChBwyB,EA2BkB+gC,CAASX,EAAOv/B,GAIrChrB,EAAY+F,EAAG5O,EAAmB+yD,MAAah0D,GAC/C+0D,EAAY,IAAI3pC,QAChBliB,EAAsB2G,EAAGklD,GACzB7qD,EAAY2F,EAAG5O,EAAmB+yD,KAElCe,EAAY9oD,GAAe4D,GAAI,GAEnC,IAAIi7B,EAAQh/B,EAAY+D,EAAGoK,EAAM,GAGjC,OAFA86C,EAAUn/C,IAAIuM,EAAI2oB,GAClBngC,EAAYwX,EAAIwC,EAAMsP,EAAMa,GACrB,GA+CPmgC,SAjMgB,SAASplD,GACzB,IAAI0jD,EAASD,GAAUzjD,GACnBsS,EAAKoxC,EAAOA,OACZt5C,EAAMs5C,EAAOt5C,IACbP,EAAK,IAAIxW,EACT2W,EAAQ6B,GAAkB7L,EAAGoK,EAAM,GACnCy6C,EAAOh5C,GAAkB7L,EAAGoK,EAAM,GACtC,IAAKtT,EAAawb,EAAItI,EAAOH,GACzB,OAAOM,GAAcnK,EAAGoK,EAAM,EAAG,sBACrCmG,GAAcvQ,EAAGoK,EAAM,GACvBjP,EAAW6E,EAAGoK,EAAM,GACpBo5C,GAAWxjD,EAAGsS,EAAI,GAClB5V,GAAUsD,EAAGsS,EAAI,GACjB,IAAItoB,EAAOgR,EAAasX,EAAIzI,EAAIg7C,GAIhC,OAHa,OAAT76D,GACA4O,EAAQ0Z,EAAI,GAChB5Y,EAAesG,EAAGhW,GACX,GAiLP+oD,aAtWoB,SAAS/yC,GAC7B,IAAMrV,EAAI0R,GAAS2D,EAAG,GAItB,OAHAoQ,GAAcpQ,EAAGrV,GAAKwF,GAAYxF,GAAK6F,EAAY,EAAG,yBACtD2K,EAAW6E,EAAG,GACd/E,EAAiB+E,EAAG,GACb,GAkWPqlD,WA7JkB,SAASrlD,GAE3B,OADAuQ,GAAcvQ,EAAG,GACV+jD,GAAW/jD,EAAG,IA4JrBslD,aAvVoB,SAAStlD,GAK7B,OAJA0Q,GAAe1Q,EAAG,EAAGtP,GACrB6f,GAAcvQ,EAAG,GACjB7E,EAAW6E,EAAG,GACd3E,EAAiB2E,EAAG,GACb,GAmVPulD,UA3BiB,SAASvlD,GAC1B,IAAI0jD,EAASD,GAAUzjD,GACnBsS,EAAKoxC,EAAOA,OACZt5C,EAAMs5C,EAAOt5C,IACbxK,EAAM1D,GAAa8D,EAAGoK,EAAM,GAChC,GAAY,OAARxK,GAAiBjI,EAAgBqI,EAAGoK,EAAM,GAEzC,CACD,IAAIJ,EAAQwH,GAAgBxR,EAAGoK,EAAM,EAAGpK,IAAMsS,EAAK,EAAI,GACvDD,GAAerS,EAAGsS,EAAI1S,EAAKoK,QAH3BpQ,EAAcoG,EAAGoK,EAAM,GAK3B,OAAO,GAiBPo7C,UAhJiB,SAASxlD,GAC1B,IAAI9U,EAAI84D,GAAWhkD,EAAG,EAAG,GAEzB,OADA3G,EAAsB2G,EAAGzD,GAAcyD,EAAG,EAAG9U,IACtC,GA8IPu6D,YA3ImB,SAASzlD,GAC5B,IAAI0H,EAAKs8C,GAAWhkD,EAAG,EAAG,GACtB2H,EAAKq8C,GAAWhkD,EAAG,EAAG,GAI1B,OAHAoQ,GAAcpQ,GAAI3I,EAAgB2I,EAAG,GAAI,EAAG,yBAC5CoQ,GAAcpQ,GAAI3I,EAAgB2I,EAAG,GAAI,EAAG,yBAC5CxD,GAAgBwD,EAAG,EAAG0H,EAAI,EAAGC,GACtB,IAiJkB,oBAAXte,SAIdk6D,EAAW,WACP,IAAImC,EAAQC,OAAO,aAAc,IACjC,OAAkB,OAAVD,EAAkBA,EAAQ,KAGtCnC,IACAe,GAAMsB,MAAQ,SAAS5lD,GACnB,OAAS,CACL,IAAI0lD,EAAQnC,IAEZ,GAAc,SAAVmC,EACA,OAAO,EAEX,GAAqB,IAAjBA,EAAMx4D,OAAV,CAGA,IAAI2tC,EAAStuC,GAAam5D,IACtB34C,GAAgB/M,EAAG66B,EAAQA,EAAO3tC,OAAQX,GAAa,oBAAoB,KACxEmM,EAAUsH,EAAG,EAAG,EAAG,KACtB6S,GAAqBjX,EAAeoE,GAAI,GAAI,MAEhD7E,EAAW6E,EAAG,OAU1B9W,EAAOD,QAAQkpC,cALO,SAASnyB,GAE3B,OADAoR,GAAYpR,EAAGskD,IACR,0QCtYPuB,IAhHAn6D,EAAQ,GANRyR,eACAF,iBACAM,uBACAD,qBACAN,kBACAD,mBAuCArR,EAAQ,GApCR8I,WACApD,sBACAjB,aACAK,eACAiF,cACAM,oBACAM,iBACAc,eACAG,mBACAG,cACAK,iBACAQ,iBACAM,YACAC,oBACAC,qBACAC,sBACAC,oBACAC,wBACAI,0BACAC,oBACAC,oBACAC,gBACAE,mBACAE,kBACAI,gBACAC,gBACAG,gBACAC,gBACAE,eACAK,iBACAK,qBACAE,eACAK,kBACAU,iBACAE,mBACA9H,uBAkBA5I,EAAQ,GAfR4d,qBACAC,sBACAI,gBACAwG,kBACA7D,mBACAd,sBACAlB,gBACAsD,sBACAqD,eACAE,cACAtB,mBACAuB,iBACAzF,oBACAe,qBACAoB,mBAEElhB,GAASlB,EAAQ,OAMnBA,EAAQ,GAJRU,wBACAE,kBACAC,mBACAC,mBAEEs5D,GAAWp6D,EAAQ,GAEnBmnC,GAI2B,oBAAXxpC,OAEPA,OAC6B,oBAAtBypC,mBAAqCC,gBAAgBD,kBAE5DC,MAGA,EAAIC,MAAM,QAInB+yB,GAASx5D,GAAa,cAYtBy5D,GAAc7oD,EACd8oD,GAAc9oD,EAGd+oD,GAAU35D,GAAa,YAGvB45D,GAAY55D,GAAa,KAGzB65D,GAAU75D,GAAa,KAWzBs5D,EAAY,SAAS7lD,EAAGkP,EAAMm3C,GAC1Bn3C,EAAO1iB,GAAa0iB,GACpB,IAAIC,EAAM,IAAIC,eAId,GAHAD,EAAIE,KAAK,MAAOH,GAAM,GACtBC,EAAII,OAEAJ,EAAIK,OAAS,KAAOL,EAAIK,QAAU,IAElC,OADA9V,EAAesG,EAAGzT,GAAY,GAAAoR,OAAIwR,EAAIK,OAAR,MAAA7R,OAAmBwR,EAAIM,cAC9C,KAGX,IAIIqF,EAJAgB,EAAO3G,EAAIO,SAEV,sBAAsB5K,KAAKgR,KAC5BA,GAAQ,kBAAoB5G,GAEhC,IACI4F,EAAOse,SAAS,UAAWtd,GAC7B,MAAOrW,GAEL,OADA/F,EAAesG,EAAGzT,GAAY,GAAAoR,OAAI8B,EAAEzV,KAAN,MAAA2T,OAAe8B,EAAEuL,WACxC,KAEX,IAAI1D,EAAMwN,EAAKgxC,IACf,MAAmB,mBAARx+C,GAAsC,WAAf3B,EAAO2B,IAA4B,OAARA,EAClDA,OACQ,IAARA,EACAurB,IAEPn5B,EAAesG,EAAGzT,GAAY,qCAAAoR,OAAAgI,EAA6C2B,GAA7C,OACvB,OAuBnB,IAqBIg/C,GAcAA,GAAW,SAASp3C,GAChBA,EAAO1iB,GAAa0iB,GACpB,IAAIC,EAAM,IAAIC,eAKd,OAHAD,EAAIE,KAAK,MAAOH,GAAM,GACtBC,EAAII,OAEGJ,EAAIK,QAAU,KAAOL,EAAIK,QAAU,KAMlD,IAcM+2C,GAAc,SAASvmD,EAAGkP,EAAMs3C,GAClC,IAAItnC,EAAMunC,GAAWzmD,EAAGkP,GACxB,GAAY,OAARgQ,EAAc,CAEd,GAAY,QADZA,EAAM2mC,EAAU7lD,EAAGkP,EAAMs3C,EAAI,KAAO,IAAI14D,WAAW,KACjC,OAlBV,EAmBR44D,GAAW1mD,EAAGkP,EAAMgQ,GAExB,GAAIsnC,EAAI,KAAO,IAAI14D,WAAW,GAE1B,OADA+K,EAAgBmH,EAAG,GACZ,EAGP,IAAI0C,EA1EK,SAAS1C,EAAGgO,EAAKw4C,GAC9B,IAAI9jD,EAAIsL,EAAI1hB,GAAYk6D,IAExB,OAAI9jD,GAAkB,mBAANA,EACLA,GAEP1J,EAAgBgH,EAAGzT,GAAa,wBAAyBi6D,GAClD,MAmECG,CAAS3mD,EAAGkf,EAAKsnC,GACzB,OAAU,OAAN9jD,EA1BI,GA4BR3J,EAAkBiH,EAAG0C,GACd,IAkBTwvC,GAKSrf,GAOT+zB,GAAU,SAAS5mD,EAAG6mD,EAAWC,EAASC,GAC5C,IAAIC,EAAI,GAAArpD,OAAMmpD,GAANnpD,OAAgB/Q,GAAOukC,eAC/Bz3B,EAAesG,EAAGzT,GAAay6D,IAC/B,IAAI93C,EAAOgjC,GAAI8U,QACFC,IAAT/3C,IACAA,EAAOgjC,GAAI4U,SACFG,IAAT/3C,GApGM,SAASlP,GACnB3J,EAAa2J,EAAG5O,EAAmB7E,GAAa,cAChD,IAAIiC,EAAIgN,EAAcwE,GAAI,GAE1B,OADApH,EAAQoH,EAAG,GACJxR,EAgGmB04D,CAAMlnD,GAC5BtG,EAAesG,EAAG+mD,IAGlB73C,EAAO+B,GACHjR,EACAzT,GAAa2iB,GACb3iB,GAAawQ,EAAeA,GAAc,GAC1CxQ,GAAawQ,EAAezQ,GAAY85D,IAAWrpD,GAAc,IAErEkU,GAAUjR,EAAGkP,EAAMk3C,GAASW,GAC5BxsD,EAAWyF,GAAI,IAEnBpF,EAAaoF,GAAI,EAAG6mD,GACpBjuD,EAAQoH,EAAG,IAMTymD,GAAa,SAASzmD,EAAGkP,GAC3BjV,EAAY+F,EAAG5O,EAAmB20D,IAClC1vD,EAAa2J,GAAI,EAAGkP,GACpB,IAAIi4C,EAAO/qD,EAAe4D,GAAI,GAE9B,OADApH,EAAQoH,EAAG,GACJmnD,GAOLT,GAAa,SAAS1mD,EAAGkP,EAAMi4C,GACjCltD,EAAY+F,EAAG5O,EAAmB20D,IAClC1sD,EAAsB2G,EAAGmnD,GACzBvtD,EAAcoG,GAAI,GAClBpF,EAAaoF,GAAI,EAAGkP,GACpB9U,EAAY4F,GAAI,EAAGmR,GAASnR,GAAI,GAAK,GACrCpH,EAAQoH,EAAG,IAGTonD,GAAmB,SAASpnD,EAAGkP,GACjC,KAAOA,EAAK,KAAOnS,EAAajP,WAAW,IAAIohB,EAAOA,EAAK7J,SAAS,GACpE,GAAoB,IAAhB6J,EAAKhiB,OAAc,OAAO,KAC9B,IAAIxD,EAAI0C,GAAkB8iB,EAAMnS,EAAajP,WAAW,IAGxD,OAFIpE,EAAI,IAAGA,EAAIwlB,EAAKhiB,QACpBqM,EAAgByG,EAAGkP,EAAMxlB,GAClBwlB,EAAK7J,SAAS3b,IAGnB29D,GAAa,SAASrnD,EAAGhW,EAAMklB,EAAM8wB,EAAKsnB,GAC5C,IAAI1nD,EAAM,IAAI+J,EAId,IAHA2C,GAActM,EAAGJ,GACF,IAAXogC,EAAI,KACJh2C,EAAOinB,GAAUjR,EAAGhW,EAAMg2C,EAAKsnB,IACW,QAAtCp4C,EAAOk4C,GAAiBpnD,EAAGkP,KAAiB,CAChD,IAAIX,EAAW0C,GAAUjR,EAAG9D,EAAa8D,GAAI,GAAIzT,GAAayQ,GAAe,GAAOhT,GAEpF,GADAuQ,EAAWyF,GAAI,GACXsmD,GAAS/3C,GACT,OAAOA,EACXvV,EAAgBgH,EAAGzT,GAAa,oBAAqBgiB,GACrDhU,EAAWyF,GAAI,GACfmQ,EAAcvQ,GAGlB,OADA8M,GAAgB9M,GACT,MAmBL2nD,GAAW,SAASvnD,EAAGhW,EAAMw9D,EAAOF,GACtCjxD,EAAa2J,EAAG1L,EAAiB,GAAIkzD,GACrC,IAAIt4C,EAAOhT,EAAa8D,GAAI,GAG5B,OAFa,OAATkP,GACA5E,GAAWtK,EAAGzT,GAAa,iCAAkCi7D,GAC1DH,GAAWrnD,EAAGhW,EAAMklB,EAAM3iB,GAAa,KAAM+6D,IAGlDG,GAAY,SAASznD,EAAG8K,EAAMyD,GAChC,OAAIzD,GACApR,EAAesG,EAAGuO,GACX,GAEAjE,GAAWtK,EAAGzT,GAAa,mDAC9B2P,EAAa8D,EAAG,GAAIuO,EAAUrS,EAAa8D,GAAI,KAGrD0nD,GAAe,SAAS1nD,GAC1B,IAAIhW,EAAOwhB,GAAiBxL,EAAG,GAC3BuO,EAAWg5C,GAASvnD,EAAGhW,EAAMuC,GAAa,QAAQ,GAAOA,GAAa05D,IAAa,IACvF,OAAiB,OAAb13C,EAA0B,EACvBk5C,GAAUznD,EAAG6P,GAAc7P,EAAGuO,KAAc/Z,EAAQ+Z,IAWzDo5C,GAAW,SAAS3nD,EAAGuO,EAAUwD,GACnC,IAAI61C,EACJ71C,EAAUd,GAAUjR,EAAG+R,EAASxlB,GAAa,KAAM45D,IACnD,IAAI0B,EAAOz7D,GAAkB2lB,EA1Td,IA0TkCjkB,WAAW,IAC5D,GAAI+5D,GAAQ,EAAG,CACXD,EAAWruD,EAAgByG,EAAG+R,EAAS81C,GACvCD,EAAW5uD,EAAgBgH,EAAGzT,GAAa,QAAS25D,GAAS0B,GAC7D,IAAI98C,EAAOy7C,GAAYvmD,EAAGuO,EAAUq5C,GACpC,GA7LQ,IA6LJ98C,EAAkB,OAAOA,EAC7BiH,EAAU81C,EAAO,EAGrB,OADAD,EAAW5uD,EAAgBgH,EAAGzT,GAAa,QAAS25D,GAASn0C,GACtDw0C,GAAYvmD,EAAGuO,EAAUq5C,IAG9BE,GAAa,SAAS9nD,GACxB,IAAIhW,EAAOwhB,GAAiBxL,EAAG,GAC3BuO,EAAWg5C,GAASvnD,EAAGhW,EAAMuC,GAAa,UAAU,GAAOA,GAAay5D,IAAa,IACzF,OAAiB,OAAbz3C,EAA0B,EACvBk5C,GAAUznD,EAAoC,IAAhC2nD,GAAS3nD,EAAGuO,EAAUvkB,GAAcukB,IAGvDw5C,GAAiB,SAAS/nD,GAC5B,IAEI8K,EAFA9gB,EAAOwhB,GAAiBxL,EAAG,GAC3BzU,EAAIa,GAAkBpC,EAAM,IAAI8D,WAAW,IAE/C,GAAIvC,EAAI,EAAG,OAAO,EAClBgO,EAAgByG,EAAGhW,EAAMuB,GACzB,IAAIgjB,EAAWg5C,GAASvnD,EAAG9D,EAAa8D,GAAI,GAAIzT,GAAa,UAAU,GAAOA,GAAay5D,IAAa,IACxG,OAAiB,OAAbz3C,EAA0B,EACe,KAAxCzD,EAAO68C,GAAS3nD,EAAGuO,EAAUvkB,IAnNtB,GAoNJ8gB,EACO28C,GAAUznD,EAAG,EAAGuO,IAEvB7U,EAAesG,EAAGzT,GAAa,mCAAoCvC,EAAMukB,GAClE,IAGf7U,EAAesG,EAAGuO,GACX,IAGLy5C,GAAmB,SAAShoD,GAC9B,IAAIhW,EAAOwhB,GAAiBxL,EAAG,GAI/B,OAHA3J,EAAa2J,EAAG5O,EAAmBmY,GAC/BlT,EAAa2J,GAAI,EAAGhW,KAAUmG,GAC9B6I,EAAgBgH,EAAGzT,GAAa,sCAAuCvC,GACpE,GAaLi+D,GAAkB,SAAlBA,EAA2BjoD,EAAGwP,EAAQoK,GAExC,KACQpK,IAAWhb,GACPwF,EAAYgG,EAAG,EAAG4Z,EAAInwB,KAAO0G,IAC7ByI,EAAQoH,EAAG,GACX0M,GAAgBkN,EAAIha,KACpB0K,GAAWtK,EAAGzT,GAAa,4BAA6BqtB,EAAI5vB,KAAMkS,EAAa8D,GAAI,KAEvFtG,EAAesG,EAAG4Z,EAAI5vB,MACtByL,EAAUuK,EAAG,EAAG,EAAG4Z,EAAKquC,IAExBz4C,EAAShb,GAET8C,EAAe0I,GAAI,GAZlB4Z,EAAInwB,IAcAqO,EAAakI,GAAI,IACtBpH,EAAQoH,EAAG,GACXmQ,EAAcyJ,EAAIha,MAGlBhH,EAAQoH,EAAG,GAEnB,OAAO4Z,EAAIC,EAAE7Z,EAAGxL,EAAQolB,EAAIA,MAgB1BsuC,GAAkB,SAASloD,EAAGwP,EAAQoK,GAKxC,OAHAlgB,EAAesG,EADJ4Z,GAEXziB,EAAW6I,GAAI,GACfvK,EAAUuK,EAAG,EAAG,EAAG4Z,EAAKuuC,IACjBA,GAAiBnoD,EAAGxL,EAAQolB,IAGjCuuC,GAAmB,SAASnoD,EAAGwP,EAAQoK,GACzC,IAAI5vB,EAAO4vB,EAQX,OAPKniB,EAAUuI,GAAI,IACfpF,EAAaoF,EAAG,EAAGhW,GACnBqM,EAAa2J,EAAG,EAAGhW,IAASmG,IAC5B0I,EAAgBmH,EAAG,GACnBpG,EAAcoG,GAAI,GAClBpF,EAAaoF,EAAG,EAAGhW,IAEhB,GAGLo+D,GAAW,CACbC,QA5Qe,SAASroD,GACxB,IAAIkP,EAAO1D,GAAiBxL,EAAG,GAC3B6sB,EAAOrhB,GAAiBxL,EAAG,GAC3B8K,EAAOy7C,GAAYvmD,EAAGkP,EAAM2d,GAChC,OAAa,IAAT/hB,EACO,GAEPtR,EAAYwG,GACZ7I,EAAW6I,GAAI,GACf1G,EAAgB0G,EA3CR,IA2CY8K,EA5JX,OA4JyC,QAC3C,IAmQXu8C,WAzKkB,SAASrnD,GAQ3B,OAAU,OAPFqnD,GACJrnD,EACAwL,GAAiBxL,EAAG,GACpBwL,GAAiBxL,EAAG,GACpB2L,GAAe3L,EAAG,EAAG,KACrB2L,GAAe3L,EAAG,EAAG7C,IAEF,GAEnB3D,EAAYwG,GACZ7I,EAAW6I,GAAI,GACR,KAgKTsoD,GAAW,CACb58D,QAvCe,SAASsU,GACxB,IAAIhW,EAAOwhB,GAAiBxL,EAAG,GAI/B,OAHA7E,EAAW6E,EAAG,GACd3J,EAAa2J,EAAG5O,EAAmBkY,GACnCjT,EAAa2J,EAAG,EAAGhW,GACfwR,EAAcwE,GAAI,GACX,GAEXpH,EAAQoH,EAAG,GA5CI,SAASA,EAAGhW,EAAM4vB,EAAKC,GACtC,IAAIja,EAAM,IAAI+J,EAMd,OALA2C,GAActM,EAAGJ,GAEbvJ,EAAa2J,EAAG1L,EAAiB,GAAI/H,GAAa,aAAa,MAAWiE,GAC1E8Z,GAAWtK,EAAGzT,GAAa,wCAExB07D,GAAgBjoD,EAAGxL,EADf,CAACxK,KAAMA,EAAMP,EAAG,EAAGmW,IAAKA,EAAKga,IAAKA,EAAKC,EAAGA,IAwC9C0uC,CAAWvoD,EAAGhW,EADXA,EACsBk+D,OAgFpCh/D,EAAOD,QAAQopC,gBAxBS,SAASryB,GAqB7B,OA5BsB,SAASA,GAC/B1H,EAAa0H,GACbjK,EAAgBiK,EAAG,EAAG,GACtB/E,EAAiB+E,GAAI,GACrB3F,EAAY2F,EAAG5O,EAAmB20D,IAIlCyC,CAAkBxoD,GAClBoR,GAAYpR,EAAGooD,IA1BU,SAASpoD,GAClC,IAAIyoD,EAAY,CAACT,GAAkBN,GAAcI,GAAYC,GAAgB,MAE7EhyD,EAAgBiK,GAEhB,IAAK,IAAIvW,EAAI,EAAGg/D,EAAUh/D,GAAIA,IAC1BmQ,EAAcoG,GAAI,GAClBlH,EAAiBkH,EAAGyoD,EAAUh/D,GAAI,GAClC2Q,EAAY4F,GAAI,EAAGvW,EAAE,GAEzBmR,EAAaoF,GAAI,EAAGzT,GAAa,aAAa,IAiB9Cm8D,CAAqB1oD,GAErB4mD,GAAQ5mD,EAAGzT,GAAa,QAAQ,GAvdf,WAudoC+Q,GACrDspD,GAAQ5mD,EAAGzT,GAAa,UAAU,GAvdf,aAudsCgR,GAEzDjE,EAAgB0G,EAAG7C,EAAa,KAAOJ,EAAe,KAAOC,EAAgB,KACzDC,EAAe,SACnCrC,EAAaoF,GAAI,EAAGzT,GAAa,UAAU,IAE3CqhB,GAAiB5N,EAAG5O,EAAmBkY,GACvC1O,EAAaoF,GAAI,EAAGzT,GAAa,UAAU,IAE3CqhB,GAAiB5N,EAAG5O,EAAmBmY,GACvC3O,EAAaoF,GAAI,EAAGzT,GAAa,WAAW,IAC5C0M,EAAoB+G,GACpBpG,EAAcoG,GAAI,GAClB8N,GAAc9N,EAAGsoD,GAAU,GAC3B1vD,EAAQoH,EAAG,GACJ,0BC9jBPtU,EAAQ,GAHRwN,oBACAI,oBACAsB,iBAGAwW,EACA1lB,EAAQ,GADR0lB,cAYA1lB,EAAQ,GATRC,oBACAC,sBACAC,oBACAC,oBACAC,0BACAC,0BACAC,wBACAC,4BACAK,iBAwBJrD,EAAOD,QAAQspC,gBArBS,SAASvyB,GAkB7B,OAjBAoR,EAAYpR,EAAG,IACf1G,EAAgB0G,EAAGrU,GACnBiP,EAAaoF,GAAI,EAAGzT,EAAa,YACjC+M,EAAgB0G,EAAGpU,GACnBgP,EAAaoF,GAAI,EAAGzT,EAAa,cACjC+M,EAAgB0G,EAAGnU,GACnB+O,EAAaoF,GAAI,EAAGzT,EAAa,YACjC+M,EAAgB0G,EAAGlU,GACnB8O,EAAaoF,GAAI,EAAGzT,EAAa,YACjC+M,EAAgB0G,EAAGjU,GACnB6O,EAAaoF,GAAI,EAAGzT,EAAa,kBACjC+M,EAAgB0G,EAAGhU,GACnB4O,EAAaoF,GAAI,EAAGzT,EAAa,kBACjC2M,EAAgB8G,EAAG/T,GACnB2O,EAAaoF,GAAI,EAAGzT,EAAa,gBACjC+M,EAAgB0G,EAAG9T,GACnB0O,EAAaoF,GAAI,EAAGzT,EAAa,oBAC1B,iCCtCXhD,EAAAgB,EAAAo+D,GAAAp/D,EAAAQ,EAAA4+D,EAAA,sBAAA3oD,IAAAzW,EAAAQ,EAAA4+D,EAAA,yBAAA1W,IAAA,IAAA2W,EAAAr/D,EAAA,GAAAA,EAAAQ,EAAA4+D,EAAA,oCAAAC,EAAA,kBAAAr/D,EAAAQ,EAAA4+D,EAAA,sCAAAC,EAAA,oBAAAr/D,EAAAQ,EAAA4+D,EAAA,oCAAAC,EAAA,kBAAAr/D,EAAAQ,EAAA4+D,EAAA,oCAAAC,EAAA,kBAAAr/D,EAAAQ,EAAA4+D,EAAA,0CAAAC,EAAA,wBAAAr/D,EAAAQ,EAAA4+D,EAAA,0CAAAC,EAAA,wBAAAr/D,EAAAQ,EAAA4+D,EAAA,wCAAAC,EAAA,sBAAAr/D,EAAAQ,EAAA4+D,EAAA,4CAAAC,EAAA,0BAAAr/D,EAAAQ,EAAA4+D,EAAA,iCAAAC,EAAA,eAAAr/D,EAAAQ,EAAA4+D,EAAA,sCAAAC,EAAA,oBAAAr/D,EAAAQ,EAAA4+D,EAAA,iCAAAC,EAAA,eAAAr/D,EAAAQ,EAAA4+D,EAAA,gCAAAC,EAAA,cAAAr/D,EAAAQ,EAAA4+D,EAAA,iCAAAC,EAAA,eAAAr/D,EAAAQ,EAAA4+D,EAAA,iCAAAC,EAAA,eAAAr/D,EAAAQ,EAAA4+D,EAAA,wBAAAC,EAAA,MAAAr/D,EAAAQ,EAAA4+D,EAAA,4BAAAC,EAAA,UAAAr/D,EAAAQ,EAAA4+D,EAAA,2BAAAC,EAAA,aAAAC,EAAAt/D,EAAA,IAAAA,EAAAQ,EAAA4+D,EAAA,4BAAAE,QA0BCn0D,EAiBGhI,MAjBHgI,WACAC,EAgBGjI,MAhBHiI,cACAH,EAeG9H,MAfH8H,OACA/E,EAcG/C,MAdH+C,kBACAC,EAaGhD,MAbHgD,kBACA2D,EAYG3G,MAZH2G,UACAsD,EAWGjK,MAXHiK,YACAG,EAUGpK,MAVHoK,aACAE,EASGtK,MATHsK,WACAG,EAQGzK,MARHyK,WACAuB,EAOGhM,MAPHgM,UACAE,EAMGlM,MANHkM,QACAG,EAKGrM,MALHqM,kBACAW,EAIGhN,MAJHgN,eACAa,EAGG7N,MAHH6N,WACAM,EAEGnO,MAFHmO,cACAe,EACGlP,MADHkP,eAGAmR,EAGGpgB,UAHHogB,gBACAwE,EAEG5kB,UAFH4kB,cACAO,EACGnlB,UADHmlB,cAGA+hB,EAIGi1B,UAHHpxB,EAGGoxB,aAFHr1B,EAEGq1B,OADH30B,EACG20B,OAyBS9oD,EAAIuR,IAWV,SAAS0gC,EAAKr+C,EAAQ4mC,GAC5B,GAAqB,iBAAV5mC,EACVA,EAASrH,uBAAaqH,QAClB,KAAMA,aAAkB9G,YAC5B,MAAM,IAAIoB,UAAU,kDAErBssC,EAAYA,EAAUjuC,uBAAaiuC,GAAW,KAC9C,IACIlzB,EADAyhD,EAAKh8C,EAAgB/M,EAAGpM,EAAQ,KAAM4mC,GAQ1C,GALClzB,EADGyhD,IAAOp0D,EACJ,IAAIq0D,YAAYptD,EAAeoE,GAAI,IAEnCm0B,EAAKn0B,GAAI,GAEhBpH,EAAQoH,EAAG,GACP+oD,IAAOv0D,EACV,MAAM8S,EAEP,OAAOA,EAGR,GA7BA1a,SAAO6lC,cAAczyB,GACrB8R,EAAc9R,EAAGzT,uBAAa,MAAOmrC,EAAY,GACjD9+B,EAAQoH,EAAG,GAEXtG,EAAesG,EAAGzT,uBAAaX,sBAC/BiP,EAAcmF,EAAGzT,uBAAa,eAwBN,oBAAb08D,UAA4BA,oBAAoBC,aAAc,CAGxE,IAAMC,EAA6B,SAASC,GAC3C,OAAOA,GACN,IAAK,YAAa,MAAO,OACzB,IAAK,kBAAmB,MAAO,UAC/B,QAAS,MAAO,gBAIZC,EAAa,SAASrpD,GAC3B,IAAI6J,EAAK,IAAIxW,EAWb,OAVIyD,EAAakJ,EAAG,EAAG6J,IACtBlT,EAAYqJ,EAAGzT,uBAAa,MAAOsd,GACpC4pB,EAAKzzB,EAAG,IAAIspD,WAAW,QAAS,CAC/BC,SAAS,EACTC,YAAY,EACZx+C,QAASpP,EAAeoE,EAAG,GAC3BqO,MAAO8lB,EAAKn0B,EAAG,GACfuO,SAAU1E,EAAGzV,UAAY9H,sBAAYud,EAAGzV,gBAAa,EACrDq1D,OAAQ5/C,EAAGhW,YAAc,EAAIgW,EAAGhW,iBAAc,KAExC,GAGF61D,EAAiB,SAASp+C,EAAKwK,EAAM0kB,GAC1C,IACI/6B,EADAspD,EAAKh8C,EAAgB/M,EAAG8V,EAAM,KAAM0kB,GAExC,GAAIuuB,IAAOp0D,EAAe,CACzB,IAAIiL,EAAMhE,EAAeoE,GAAI,GACzBuO,EAAWjD,EAAIoY,IAAIpY,EAAIoY,IAAIulC,SAASU,SAEpCC,EAAc,IAAIZ,YAAYppD,EAAK2O,OAD1B,GAEb9O,EAAI,IAAI6pD,WAAW,QAAS,CAC3Bt+C,QAASpL,EACTyO,MAAOu7C,EACPr7C,SAAUA,EACVk7C,YANY,SAQP,GAAIV,IAAOv0D,EAAQ,CAEzB,IAAI8gB,EAAOte,EAAWgJ,GACtBjH,EAAkBiH,EAAGqpD,GACrBlyD,EAAW6I,EAAGsV,GAGdnrB,OAAOC,eAAe6+D,SAAU,gBAAiB,CAChDv+D,MAAO4gB,EACPu+C,cAAc,IAEfd,EAAKrwD,EAAUsH,EAAG,EAAG,EAAGsV,UAEjB2zC,SAASa,cAEhBvvD,EAAWyF,EAAGsV,GAEVyzC,IAAOr0D,IACV+K,EAAIo0B,EAAQ7zB,GAAI,IAGd+oD,IAAOv0D,SACA,IAANiL,IACHA,EAAI,IAAI6pD,WAAW,QAAS,CAC3Bt+C,QAASpP,EAAeoE,GAAI,GAC5BqO,MAAO8lB,EAAKn0B,GAAI,MAGlBpH,EAAQoH,EAAG,GACP3W,OAAO0gE,cAActqD,IACxBqT,QAAQzE,MAAM,qBAAsB5O,EAAE4O,SAKnC27C,EAAuB,SAAS76C,EAAK7D,EAAKkvB,GAC/C,GAAIrrB,EAAIK,QAAU,KAAOL,EAAIK,OAAS,IAAK,CAC1C,IAAIsG,EAAO3G,EAAIO,SAEdoG,EADmB,iBAATA,EACHvpB,uBAAa4iB,EAAIO,UAEjB,IAAI5iB,WAAWgpB,GAGvB4zC,EAAep+C,EAAKwK,EAAM0kB,QAE1BlvB,EAAIy+C,cAAc,IAAIE,MAAM,WAmDxBC,EAAoB,2BACpBC,EAAkB,iBAClBC,EAAU,SAAS9+C,GACxB,GAAoB,WAAhBA,EAAI++C,QAAR,CAIA,IAAIC,EAAmBJ,EAAkBlmD,KAAKsH,EAAIvK,MAClD,GAAKupD,EAAL,CAEA,IAAIC,EAAWD,EAAiB,GAChC,GAAiB,oBAAbC,GAA+C,aAAbA,EAAtC,CAGA,GAAIj/C,EAAIk/C,aAAa,eAAgB,CACpC,IAAI/tD,EAAc0tD,EAAgBnmD,KAAKsH,EAAIm/C,aAAa,gBACxD,IAAKhuD,GAAeA,EAAY,KAAOhN,GAAqBgN,EAAY,KAAO/M,EAC9E,QAhEwB,SAAS4b,GACnC,GAAIA,EAAIoY,IAAK,CACZ,IAAI8W,EAAYjuC,uBAAa,IAAI+e,EAAIoY,KAErC,GAA4B,aAAxBulC,SAASyB,YAA6Bp/C,EAAIq/C,MAC7C,GAAqB,mBAAVC,MACVA,MAAMt/C,EAAIoY,IAAK,CACd2uB,OAAQ,MACRwY,YAAa1B,EAA2B79C,EAAI89C,aAC5C0B,SAAU,SACVC,UAAWz/C,EAAIy/C,YACbC,KAAK,SAASC,GAChB,GAAIA,EAAKlC,GACR,OAAOkC,EAAKC,cAEZ,MAAM,IAAI59D,MAAM,qBAEf09D,KAAK,SAASnwB,GAChB,IAAI/kB,EAAO,IAAIhpB,WAAW+tC,GAC1B6uB,EAAep+C,EAAKwK,EAAM0kB,KACxB2wB,MAAM,SAASC,GACjB9/C,EAAIy+C,cAAc,IAAIE,MAAM,gBAEvB,CACN,IAAI96C,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAO/D,EAAIoY,KAAK,GACzBvU,EAAIG,aAAe,cACnBH,EAAIk8C,mBAAqB,WACD,IAAnBl8C,EAAIu7C,YACPV,EAAqB76C,EAAK7D,EAAKkvB,IAEjCrrB,EAAII,WAEC,CAEN,IAAIJ,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAO/D,EAAIoY,KAAK,GACzBvU,EAAII,OACJy6C,EAAqB76C,EAAK7D,EAAKkvB,QAE1B,CACN,IAAI1kB,EAAOvpB,uBAAa+e,EAAIggD,WACxB9wB,EAAYlvB,EAAIlJ,GAAK7V,uBAAa,IAAI+e,EAAIlJ,IAAM0T,EACpD4zC,EAAep+C,EAAKwK,EAAM0kB,IAwB3B+wB,CAAmBjgD,OAGY,oBAArBkgD,iBAET,IAAIA,iBAAiB,SAASC,EAASC,GACvC,IAAK,IAAIjiE,EAAE,EAAGA,EAAEgiE,EAAQv+D,OAAQzD,IAE/B,IADA,IAAIkiE,EAASF,EAAQhiE,GACZkkB,EAAE,EAAGA,EAAEg+C,EAAOC,WAAW1+D,OAAQygB,IACzCy8C,EAAQuB,EAAOC,WAAWj+C,MAGzBk+C,QAAQ5C,SAAU,CACrB6C,WAAW,EACXC,SAAS,IAEAj5C,QAAQknB,MAClBlnB,QAAQknB,KAAK,0FAQd3rC,MAAMhD,UAAUu1C,QAAQh3C,KAAKq/D,SAAS+C,iBAHrB,6DAGiD5B,wCC5Q/D1+D,EAAQ,GAtBRsG,gBACAC,cACAC,eACAC,eACAC,cACAC,eACAC,cACAE,eACAG,cACAG,cACAC,cACAE,kBACAhD,eACIG,iBACAC,uBACAS,gBACAX,aACAY,gBACAC,gBACAR,eAEJjE,iBAEImT,EAAehU,EAAQ,GAAvBgU,WACFge,EAAWhyB,EAAQ,IACnBsnB,EAAWtnB,EAAQ,GACnBunB,EAAWvnB,EAAQ,IACnBwnB,EAAWxnB,EAAQ,IACnB+U,EAAW/U,EAAQ,GACnBgV,EAAWhV,EAAQ,IAEnBsrB,EAAW/D,EAAS+D,SACpBlW,EAAWkS,EAAQlS,OAWnB6gC,EAAS,CACXC,QAAc,EACdqB,QAAc,EACdP,QAAc,EACdD,QAAc,EACdK,QAAc,EACdZ,QAAc,EACdI,SAAc,EACdR,SAAc,EACdC,QAAc,EACdC,SAAc,EACde,QAAc,GACdC,QAAc,GACdf,WAAc,GACdE,OAAc,GACdK,OAAc,GACdD,OAAc,GACdI,OAAc,GACdN,OAAc,GACdD,OAAc,GACdP,QAAc,GACdgB,OAAc,GACdD,aAAc,IAGZM,EAAQ,CACVG,UAAc,EACdF,SAAc,EACdG,QAAc,EACdF,QAAc,EACdG,YAAc,GAGZ0oB,EAAW,SAASxsD,GACtB,OAAOA,EAAE9U,IAAM8U,EAAEiD,GAOfwpD,EAAY,SAASzsD,EAAG0sD,GAC1B,IAAIC,EAAKl5C,EAAQ8yB,QACjB,GAAIimB,EAASxsD,GACT,OAAO,EACX,OAAQA,EAAEoa,GACN,KAAKuyC,EAAGrlB,MACJ,OAAIolB,GACO,IAAIrrD,EAAO9P,EAAayO,EAAElR,EAAEg5C,MAG3C,KAAK6kB,EAAGtlB,MACJ,OAAIqlB,GACO,IAAIrrD,EAAO/P,EAAa0O,EAAElR,EAAEi5C,MAG3C,QAAS,OAAO,IAUlBzC,EAAW,SAAS9D,EAAIl0C,EAAM7B,GAChC,IAAIqpB,EACA7qB,EAAIqD,EAAO7B,EAAI,EACnB,GAAI+1C,EAAGviB,GAAKuiB,EAAG6G,aACXvzB,EAAW0sB,EAAGv+B,EAAEoT,KAAKmrB,EAAGviB,GAAG,IACd3H,SAAWC,EAASsI,WAAY,CACzC,IAAI+sC,EAAQ93C,EAAS8K,EACjBitC,EAAKD,EAAQ93C,EAASvI,EAC1B,GAAKqgD,GAASt/D,GAAQA,GAAQu/D,EAAK,GAC1Bv/D,GAAQs/D,GAASA,GAAS3iE,EAAI,EAKnC,OAJI2iE,EAAQt/D,IAAMA,EAAOs/D,GACrBC,EAAK5iE,IAAGA,EAAI4iE,GAChBr5C,EAAS+c,SAASzb,EAAUxnB,QAC5BkmB,EAASid,SAAS3b,EAAU7qB,EAAIqD,GAK5C42C,GAAa1C,EAAIjqB,EAASsI,WAAYvyB,EAAM7B,EAAI,EAAG,IAGjDu4C,EAAiB,SAASxC,EAAIxhC,GAChC,OAAOwhC,EAAGv+B,EAAEoT,KAAKrW,EAAElR,EAAEk5C,OAOnB8kB,EAAU,SAAStrB,EAAIviB,GACzB,IAAIijC,EAAS1gB,EAAGv+B,EAAEoT,KAAK4I,GAAIiB,IAC3B,OAnGY,IAmGRgiC,GAnGQ,EAsGDjjC,EAAK,EAAIijC,GAOlB6K,EAAU,SAASvrB,EAAIviB,EAAIgB,GAC7B,IAAI+sC,EAAMxrB,EAAGv+B,EAAEoT,KAAK4I,GAChBijC,EAASjiC,GAAQhB,EAAK,GAC1Bhf,GAhHY,IAgHDggB,GACP/wB,KAAKuP,IAAIyjD,GAAU1uC,EAASmc,YAC5B1R,EAAK+jB,iBAAiBR,EAAGjX,GAAIz9B,EAAa,8BAA8B,IAC5E0mB,EAASmd,WAAWq8B,EAAK9K,IAMvB5d,EAAc,SAAS9C,EAAIyrB,EAAIC,GACjC,IA1HY,IA0HRA,EAAgB,OAAOD,EACtB,IA3HO,IA2HHA,EACLA,EAAKC,MACJ,CAGD,IAFA,IAAIC,EAAOF,EACPn2C,EAAOg2C,EAAQtrB,EAAI2rB,IA/Hf,IAgIDr2C,GAEHA,EAAOg2C,EAAQtrB,EADf2rB,EAAOr2C,GAGXi2C,EAAQvrB,EAAI2rB,EAAMD,GAGtB,OAAOD,GASL7nB,EAAY,SAAU5D,GACxB,IAAI8G,EAAM9G,EAAG8G,IACb9G,EAAG8G,KAlJS,EAmJZ,IAAIp6B,EAAIk2B,GAAc5C,EAAIjqB,EAASyI,OAAQ,GAnJ/B,GAqJZ,OADA9R,EAAIo2B,EAAY9C,EAAItzB,EAAGo6B,IAmBrB8kB,EAAW,SAAS5rB,EAAI36B,EAAI+Y,EAAGrT,EAAGiU,GAEpC,OADA0jB,GAAa1C,EAAI36B,EAAI+Y,EAAGrT,EAAGiU,GACpB4kB,EAAU5D,IAOfsD,EAAgB,SAAStD,GAE3B,OADAA,EAAG6G,WAAa7G,EAAGviB,GACZuiB,EAAGviB,IAQRouC,EAAuB,SAAS7rB,EAAIviB,GACtC,OAAIA,GAAM,GAAKzL,EAASie,UAAU+P,EAAGv+B,EAAEoT,KAAK4I,EAAK,GAAG3H,QACzC2H,EAAK,EAELA,GAETquC,EAAiB,SAAS9rB,EAAIviB,GAChC,OAAOuiB,EAAGv+B,EAAEoT,KAAKg3C,EAAqB7rB,EAAIviB,KAUxCsuC,EAAe,SAAS/rB,EAAIgsB,EAAM/tC,GACpC,IAAIR,EAAKouC,EAAqB7rB,EAAIgsB,GAC9BxjE,EAAIw3C,EAAGv+B,EAAEoT,KAAK4I,GAClB,OAAIj1B,EAAEstB,SAAWC,EAASwR,aAEtBtJ,IAAQjM,EAASqc,QAAUpQ,IAAQz1B,EAAEuiB,EACrCiH,EAAS+c,SAASvmC,EAAGy1B,GAIrB+hB,EAAGv+B,EAAEoT,KAAK4I,GAAMzL,EAASob,WAAWrX,EAASuR,QAAS9+B,EAAEuiB,EAAG,EAAGviB,EAAEw2B,IAE7D,IAMLitC,EAAe,SAASjsB,EAAI2rB,GAC9B,MA9NY,IA8NLA,EAAkBA,EAAOL,EAAQtrB,EAAI2rB,GACxCI,EAAa/rB,EAAI2rB,EAAM35C,EAASqc,SAQlC69B,EAAe,SAASlsB,EAAI2rB,EAAMQ,EAASluC,EAAKmuC,GAClD,MAxOY,IAwOLT,GAAkB,CACrB,IAAIr2C,EAAOg2C,EAAQtrB,EAAI2rB,GACnBI,EAAa/rB,EAAI2rB,EAAM1tC,GACvBstC,EAAQvrB,EAAI2rB,EAAMQ,GAElBZ,EAAQvrB,EAAI2rB,EAAMS,GACtBT,EAAOr2C,IAkBT2uB,EAAmB,SAASjE,EAAI2rB,GAClCroB,EAActD,GACdA,EAAG8G,IAAMhE,EAAY9C,EAAIA,EAAG8G,IAAK6kB,IAQ/B3nB,EAAiB,SAAShE,EAAI2rB,EAAMv5B,GAClCA,IAAW4N,EAAGviB,GACdwmB,EAAiBjE,EAAI2rB,IAErBltD,EAAW2zB,EAAS4N,EAAGviB,IACvByuC,EAAalsB,EAAI2rB,EAAMv5B,EAAQpgB,EAASqc,OAAQ+D,KAsBlDi6B,EAAY,SAASrsB,EAAIx3C,GAC3B,IAAIiZ,EAAIu+B,EAAGv+B,EAKX,OApDiB,SAASu+B,GAC1BksB,EAAalsB,EAAIA,EAAG8G,IAAK9G,EAAGviB,GAAIzL,EAASqc,OAAQ2R,EAAGviB,IACpDuiB,EAAG8G,KAzPS,EAuSZwlB,CAAatsB,GAEbv+B,EAAEoT,KAAKmrB,EAAGviB,IAAMj1B,EAChBiZ,EAAEkb,SAASqjB,EAAGviB,IAAMuiB,EAAGjX,GAAG+W,SACnBE,EAAGviB,MAORilB,GAAe,SAAS1C,EAAI/2C,EAAG8C,EAAGwB,EAAG1E,GAKvC,OAJA4V,EAAWuT,EAAS4d,UAAU3mC,KAAO+oB,EAAS6d,MAC9CpxB,EAAWuT,EAAS0d,SAASzmC,KAAO+oB,EAASuc,QAAgB,IAANhhC,GACvDkR,EAAWuT,EAAS2d,SAAS1mC,KAAO+oB,EAASuc,QAAgB,IAAN1lC,GACvD4V,EAAW1S,GAAKimB,EAAS+b,UAAYxgC,GAAKykB,EAASic,UAAYplC,GAAKmpB,EAASkc,UACtEm+B,EAAUrsB,EAAIhuB,EAASob,WAAWnkC,EAAG8C,EAAGwB,EAAG1E,KAMhD85C,GAAe,SAAS3C,EAAI/2C,EAAG8C,EAAGuhC,GAIpC,OAHA7uB,EAAWuT,EAAS4d,UAAU3mC,KAAO+oB,EAAS8d,MAAQ9d,EAAS4d,UAAU3mC,KAAO+oB,EAAS+d,OACzFtxB,EAAWuT,EAAS2d,SAAS1mC,KAAO+oB,EAASuc,QAC7C9vB,EAAW1S,GAAKimB,EAAS+b,UAAYT,GAAMtb,EAASkb,WAC7Cm/B,EAAUrsB,EAAIhuB,EAASqb,WAAWpkC,EAAG8C,EAAGuhC,KAG7CsV,GAAgB,SAAS5C,EAAG/2C,EAAEm1B,EAAEM,GAClC,OAAOikB,GAAa3C,EAAI/2C,EAAGm1B,EAAIM,EAAO1M,EAASmc,aAM7Co+B,GAAe,SAASvsB,EAAIj0C,GAE9B,OADA0S,EAAW1S,GAAKimB,EAASgc,WAClBq+B,EAAUrsB,EAAIhuB,EAASub,UAAUxX,EAAS8Q,YAAa96B,KAQ5D82C,GAAa,SAAS7C,EAAI/hB,EAAKrF,GACjC,GAAIA,GAAK5G,EAASkb,UACd,OAAOyV,GAAa3C,EAAIjqB,EAASqJ,SAAUnB,EAAKrF,GAEhD,IAAItuB,EAAIq4C,GAAa3C,EAAIjqB,EAASsJ,UAAWpB,EAAK,GAElD,OADAsuC,GAAavsB,EAAIpnB,GACVtuB,GAQTm4C,GAAkB,SAASzC,EAAI/1C,GACjC,IAAIuiE,EAAWxsB,EAAGmH,QAAUl9C,EACxBuiE,EAAWxsB,EAAGv+B,EAAE8S,eACZi4C,GA5WI,KA6WJ/vC,EAAK+jB,iBAAiBR,EAAGjX,GAAIz9B,EAAa,mDAAmD,IACjG00C,EAAGv+B,EAAE8S,aAAei4C,IAOtBpoB,GAAmB,SAASpE,EAAI/1C,GAClCw4C,GAAgBzC,EAAI/1C,GACpB+1C,EAAGmH,SAAWl9C,GAOZk9C,GAAU,SAASnH,EAAI/hB,IACpBjM,EAAS0L,IAAIO,IAAQA,GAAO+hB,EAAGsF,UAChCtF,EAAGmH,UACH1oC,EAAWwf,IAAQ+hB,EAAGmH,WAOxBslB,GAAU,SAASzsB,EAAIxhC,GACrBA,EAAEoa,IAAM3G,EAAQ8yB,QAAQgB,WACxBoB,GAAQnH,EAAIxhC,EAAElR,EAAEk5C,OAOlBkmB,GAAW,SAAS1sB,EAAI2sB,EAAIn1C,GAC9B,IAAIo1C,EAAMD,EAAG/zC,IAAM3G,EAAQ8yB,QAAQgB,UAAa4mB,EAAGr/D,EAAEk5C,MAAQ,EACzDqmB,EAAMr1C,EAAGoB,IAAM3G,EAAQ8yB,QAAQgB,UAAavuB,EAAGlqB,EAAEk5C,MAAQ,EACzDomB,EAAKC,GACL1lB,GAAQnH,EAAI4sB,GACZzlB,GAAQnH,EAAI6sB,KAGZ1lB,GAAQnH,EAAI6sB,GACZ1lB,GAAQnH,EAAI4sB,KAYdE,GAAO,SAAS9sB,EAAIj2C,EAAKoC,GAC3B,IAAIsV,EAAIu+B,EAAGv+B,EACPmL,EAAMpN,EAAOic,SAASukB,EAAGjhC,EAAGihC,EAAGjX,GAAGK,EAAGr/B,GACzC,GAAI6iB,EAAIhJ,cAAe,CACnB,IAAIgV,EAAIhM,EAAInjB,MAEZ,GAAImvB,EAAIonB,EAAG+G,IAAMtlC,EAAEmX,EAAEA,GAAG2P,UAAYp8B,EAAEo8B,SAAW9mB,EAAEmX,EAAEA,GAAGnvB,QAAU0C,EAAE1C,MAChE,OAAOmvB,EAGf,IAAIA,EAAIonB,EAAG+G,GAIX,OAHAvnC,EAAOqc,aAAamkB,EAAGjhC,EAAGihC,EAAGjX,GAAGK,EAAGr/B,EAAK,IAAIgoB,EAAQlS,OAAO9P,EAAa6oB,IACxEnX,EAAEmX,EAAEA,GAAKzsB,EACT6zC,EAAG+G,KACInuB,GAiBL+qB,GAAY,SAAS3D,EAAI/1C,GAC3B,IAAI2uB,EAAI,IAAI/Y,EAAOzQ,EAAoBnF,GACnChB,EAAI,IAAI4W,EAAO9P,EAAa9F,GAChC,OAAO6iE,GAAK9sB,EAAIpnB,EAAG3vB,IAMjB8jE,GAAe,SAAS/sB,EAAI12C,GAC9B,IAAIL,EAAI,IAAI4W,EAAO/P,EAAaxG,GAChC,OAAOwjE,GAAK9sB,EAAI/2C,EAAGA,IAOjB+jE,GAAQ,SAAShtB,EAAIzyC,GACvB,IAAItE,EAAI,IAAI4W,EAAO1Q,EAAc5B,GACjC,OAAOu/D,GAAK9sB,EAAI/2C,EAAGA,IAmBjBy7C,GAAkB,SAAS1E,EAAIxhC,EAAGoV,GACpC,IAAIu3C,EAAKl5C,EAAQ8yB,QACjB,GAAIvmC,EAAEoa,IAAMuyC,EAAGnmB,MACXhzB,EAASkd,SAASsT,EAAexC,EAAIxhC,GAAIoV,EAAW,QAEnD,GAAIpV,EAAEoa,IAAMuyC,EAAGlmB,QAAS,CACzB,IAAIxnB,EAAK+kB,EAAexC,EAAIxhC,GAC5BwT,EAASid,SAASxR,EAAI7J,EAAW,GACjC5B,EAAS+c,SAAStR,EAAIuiB,EAAGmH,SACzB/C,GAAiBpE,EAAI,QAEpBvhC,EAAWmV,IAAa7iB,IAiB3B0zC,GAAiB,SAASzE,EAAIxhC,GAChC,IAAI2sD,EAAKl5C,EAAQ8yB,QACbvmC,EAAEoa,IAAMuyC,EAAGnmB,OAEXvmC,EAAuC,IAA5B+jC,EAAexC,EAAIxhC,GAAGwgB,GACjCxgB,EAAEoa,EAAIuyC,EAAGplB,UACTvnC,EAAElR,EAAEk5C,KAAOhE,EAAexC,EAAIxhC,GAAG4f,GAC1B5f,EAAEoa,IAAMuyC,EAAGlmB,UAClBjzB,EAASid,SAASuT,EAAexC,EAAIxhC,GAAI,GACzCA,EAAEoa,EAAIuyC,EAAG/kB,aAOXrD,GAAqB,SAAS/C,EAAIxhC,GACpC,IAAI2sD,EAAKl5C,EAAQ8yB,QAEjB,OAAQvmC,EAAEoa,GACN,KAAKuyC,EAAGnlB,OACJxnC,EAAEoa,EAAKuyC,EAAGplB,UACV,MAEJ,KAAKolB,EAAGllB,OACJznC,EAAElR,EAAEk5C,KAAO9D,GAAa1C,EAAIjqB,EAASoJ,YAAa,EAAG3gB,EAAElR,EAAEk5C,KAAM,GAC/DhoC,EAAEoa,EAAIuyC,EAAG/kB,WACT,MAEJ,KAAK+kB,EAAGjlB,SACJ,IAAI7gC,EACJ8hC,GAAQnH,EAAIxhC,EAAElR,EAAEm5C,IAAI75B,KAChBpO,EAAElR,EAAEm5C,IAAIC,KAAOykB,EAAGnlB,QAClBmB,GAAQnH,EAAIxhC,EAAElR,EAAEm5C,IAAI/8C,GACpB2b,EAAK0Q,EAASgJ,cAEdtgB,EAAWD,EAAElR,EAAEm5C,IAAIC,KAAOykB,EAAGllB,QAC7B5gC,EAAK0Q,EAAS+I,aAElBtgB,EAAElR,EAAEk5C,KAAO9D,GAAa1C,EAAI36B,EAAI,EAAG7G,EAAElR,EAAEm5C,IAAI/8C,EAAG8U,EAAElR,EAAEm5C,IAAI75B,KACtDpO,EAAEoa,EAAIuyC,EAAG/kB,WACT,MAEJ,KAAK+kB,EAAGlmB,QAAS,KAAKkmB,EAAGnmB,MACrBP,GAAezE,EAAIxhC,KAOzByuD,GAAgB,SAASjtB,EAAI5hB,EAAG7wB,EAAG2/D,GAErC,OADA5pB,EAActD,GACP0C,GAAa1C,EAAIjqB,EAASiR,YAAa5I,EAAG7wB,EAAG2/D,IAOlDC,GAAgB,SAASntB,EAAIxhC,EAAGyf,GAClC,IAAIktC,EAAKl5C,EAAQ8yB,QAEjB,OADAhC,GAAmB/C,EAAIxhC,GACfA,EAAEoa,GACN,KAAKuyC,EAAG1lB,KACJ3B,EAAS9D,EAAI/hB,EAAK,GAClB,MAEJ,KAAKktC,EAAGxlB,OAAQ,KAAKwlB,EAAGzlB,MACpBhD,GAAa1C,EAAIjqB,EAASiR,YAAa/I,EAAKzf,EAAEoa,IAAMuyC,EAAGzlB,MAAO,GAC9D,MAEJ,KAAKylB,EAAGvlB,GACJ/C,GAAW7C,EAAI/hB,EAAKzf,EAAElR,EAAEk5C,MACxB,MAEJ,KAAK2kB,EAAGtlB,MACJhD,GAAW7C,EAAI/hB,EAAK8uC,GAAa/sB,EAAIxhC,EAAElR,EAAEi5C,OACzC,MAEJ,KAAK4kB,EAAGrlB,MACJjD,GAAW7C,EAAI/hB,EAAK0lB,GAAU3D,EAAIxhC,EAAElR,EAAEg5C,OACtC,MAEJ,KAAK6kB,EAAG/kB,WACJ,IAAI3oB,EAAK+kB,EAAexC,EAAIxhC,GAC5BwT,EAAS+c,SAAStR,EAAIQ,GACtB,MAEJ,KAAKktC,EAAGplB,UACA9nB,IAAQzf,EAAElR,EAAEk5C,MACZ9D,GAAa1C,EAAIjqB,EAAS8I,QAASZ,EAAKzf,EAAElR,EAAEk5C,KAAM,GACtD,MAEJ,QAEI,YADA/nC,EAAWD,EAAEoa,IAAMuyC,EAAGhlB,MAI9B3nC,EAAElR,EAAEk5C,KAAOvoB,EACXzf,EAAEoa,EAAIuyC,EAAGplB,WAMPqnB,GAAmB,SAASptB,EAAIxhC,GAC9BA,EAAEoa,IAAM3G,EAAQ8yB,QAAQgB,YACxB3B,GAAiBpE,EAAI,GACrBmtB,GAAcntB,EAAIxhC,EAAGwhC,EAAGmH,QAAQ,KAQlCkmB,GAAa,SAASrtB,EAAI2rB,GAC5B,MAxnBY,IAwnBLA,EAAkBA,EAAOL,EAAQtrB,EAAI2rB,GAAO,CAE/C,GADQG,EAAe9rB,EAAI2rB,GACrB71C,SAAWC,EAASwR,WAAY,OAAO,EAEjD,OAAO,GAUL+lC,GAAU,SAASttB,EAAIxhC,EAAGyf,GAC5B,IAAIktC,EAAKl5C,EAAQ8yB,QAIjB,GAHAooB,GAAcntB,EAAIxhC,EAAGyf,GACjBzf,EAAEoa,IAAMuyC,EAAGhlB,OACX3nC,EAAE9U,EAAIo5C,EAAY9C,EAAIxhC,EAAE9U,EAAG8U,EAAElR,EAAEk5C,OAC/BwkB,EAASxsD,GAAI,CACb,IAAI+uD,EACAphD,GA7oBI,EA8oBJqhD,GA9oBI,EA+oBR,GAAIH,GAAWrtB,EAAIxhC,EAAE9U,IAAM2jE,GAAWrtB,EAAIxhC,EAAEiD,GAAI,CAC5C,IAAIgsD,EAAMjvD,EAAEoa,IAAMuyC,EAAGhlB,MAhpBjB,EAgpBmCvC,EAAU5D,GACjD7zB,EAAM8gD,GAAcjtB,EAAI/hB,EAAK,EAAG,GAChCuvC,EAAMP,GAAcjtB,EAAI/hB,EAAK,EAAG,GAChCgmB,EAAiBjE,EAAIytB,GAEzBF,EAAQjqB,EAActD,GACtBksB,EAAalsB,EAAIxhC,EAAEiD,EAAG8rD,EAAOtvC,EAAK9R,GAClC+/C,EAAalsB,EAAIxhC,EAAE9U,EAAG6jE,EAAOtvC,EAAKuvC,GAEtChvD,EAAEiD,EAAIjD,EAAE9U,GAzpBI,EA0pBZ8U,EAAElR,EAAEk5C,KAAOvoB,EACXzf,EAAEoa,EAAIuyC,EAAGplB,WAOP5C,GAAmB,SAASnD,EAAIxhC,GAClCukC,GAAmB/C,EAAIxhC,GACvBiuD,GAAQzsB,EAAIxhC,GACZ4lC,GAAiBpE,EAAI,GACrBstB,GAAQttB,EAAIxhC,EAAGwhC,EAAGmH,QAAU,IAQ1BlE,GAAkB,SAASjD,EAAIxhC,GAEjC,GADAukC,GAAmB/C,EAAIxhC,GACnBA,EAAEoa,IAAM3G,EAAQ8yB,QAAQgB,UAAW,CACnC,IAAKilB,EAASxsD,GACV,OAAOA,EAAElR,EAAEk5C,KACf,GAAIhoC,EAAElR,EAAEk5C,MAAQxG,EAAGsF,QAEf,OADAgoB,GAAQttB,EAAIxhC,EAAGA,EAAElR,EAAEk5C,MACZhoC,EAAElR,EAAEk5C,KAInB,OADArD,GAAiBnD,EAAIxhC,GACdA,EAAElR,EAAEk5C,MAgBTpD,GAAe,SAASpD,EAAIxhC,GAC1BwsD,EAASxsD,GACTykC,GAAgBjD,EAAIxhC,GAEpBukC,GAAmB/C,EAAIxhC,IASzBwkC,GAAc,SAAShD,EAAIxhC,GAC7B,IAAI2sD,EAAKl5C,EAAQ8yB,QACb2oB,GAAK,EAET,OADAtqB,GAAapD,EAAIxhC,GACTA,EAAEoa,GACN,KAAKuyC,EAAGzlB,MAAOlnC,EAAElR,EAAEk5C,KAAOwmB,GAAMhtB,GAAI,GAAO0tB,GAAK,EAAM,MACtD,KAAKvC,EAAGxlB,OAAQnnC,EAAElR,EAAEk5C,KAAOwmB,GAAMhtB,GAAI,GAAQ0tB,GAAK,EAAM,MACxD,KAAKvC,EAAG1lB,KAAMjnC,EAAElR,EAAEk5C,KAnQb,SAASxG,GAClB,IAAI7zC,EAAI,IAAI0T,EAAO3Q,EAAU,MACzB0pB,EAAI,IAAI/Y,EAAOtQ,EAAYywC,EAAGjX,GAAGK,GAErC,OAAO0jC,GAAK9sB,EAAIpnB,EAAGzsB,GA+PUwhE,CAAK3tB,GAAK0tB,GAAK,EAAM,MAC9C,KAAKvC,EAAGrlB,MAAOtnC,EAAElR,EAAEk5C,KAAO7C,GAAU3D,EAAIxhC,EAAElR,EAAEg5C,MAAOonB,GAAK,EAAM,MAC9D,KAAKvC,EAAGtlB,MAAOrnC,EAAElR,EAAEk5C,KAAOumB,GAAa/sB,EAAIxhC,EAAElR,EAAEi5C,MAAOmnB,GAAK,EAAM,MACjE,KAAKvC,EAAGvlB,GAAI8nB,GAAK,EAIrB,OAAIA,IACAlvD,EAAEoa,EAAIuyC,EAAGvlB,GACLpnC,EAAElR,EAAEk5C,MAAQx0B,EAASoc,YACdpc,EAAS8c,MAAMtwB,EAAElR,EAAEk5C,MAI3BvD,GAAgBjD,EAAIxhC,IA+CzBovD,GAAkB,SAAS5tB,EAAIxhC,GACjC,IAAIif,EAAKquC,EAAe9rB,EAAIxhC,EAAElR,EAAEk5C,MAChC/nC,EAAWuT,EAASie,UAAUxS,EAAG3H,SAAW2H,EAAG3H,SAAWC,EAASwR,YAAc9J,EAAG3H,SAAWC,EAASuR,SACxGtV,EAAS+c,SAAStR,GAAMA,EAAGW,IASzByvC,GAAa,SAAS7tB,EAAIxhC,EAAG4Q,GAC/B,GAAI5Q,EAAEoa,IAAM3G,EAAQ8yB,QAAQqB,WAAY,CACpC,IAAI0nB,EAAKtrB,EAAexC,EAAIxhC,GAC5B,GAAIsvD,EAAGh4C,SAAWC,EAASmR,OAEvB,OADA8Y,EAAGviB,KACImuC,EAAS5rB,EAAIjqB,EAASuR,QAASwmC,EAAG/iD,EAAG,GAAIqE,GAMxD,OAFAg+C,GAAiBptB,EAAIxhC,GACrBiuD,GAAQzsB,EAAIxhC,GACLotD,EAAS5rB,EAAIjqB,EAASwR,WAAYvV,EAASqc,OAAQ7vB,EAAElR,EAAEk5C,KAAMp3B,IAMlEo0B,GAAgB,SAASxD,EAAIxhC,GAC/B,IACIif,EADA0tC,EAAKl5C,EAAQ8yB,QAGjB,OADAhC,GAAmB/C,EAAIxhC,GACfA,EAAEoa,GACN,KAAKuyC,EAAGhlB,KACJynB,GAAgB5tB,EAAIxhC,GACpBif,EAAKjf,EAAElR,EAAEk5C,KACT,MAEJ,KAAK2kB,EAAGvlB,GAAI,KAAKulB,EAAGtlB,MAAO,KAAKslB,EAAGrlB,MAAO,KAAKqlB,EAAGzlB,MAC9CjoB,GAl0BI,EAm0BJ,MAEJ,QACIA,EAAKowC,GAAW7tB,EAAIxhC,EAAG,GAI/BA,EAAEiD,EAAIqhC,EAAY9C,EAAIxhC,EAAEiD,EAAGgc,GAC3BwmB,EAAiBjE,EAAIxhC,EAAE9U,GACvB8U,EAAE9U,GA50BU,GAk1BV65C,GAAiB,SAASvD,EAAIxhC,GAChC,IACIif,EADA0tC,EAAKl5C,EAAQ8yB,QAGjB,OADAhC,GAAmB/C,EAAIxhC,GACfA,EAAEoa,GACN,KAAKuyC,EAAGhlB,KACJ1oB,EAAKjf,EAAElR,EAAEk5C,KACT,MAEJ,KAAK2kB,EAAG1lB,KAAM,KAAK0lB,EAAGxlB,OAClBloB,GA51BI,EA61BJ,MAEJ,QACIA,EAAKowC,GAAW7tB,EAAIxhC,EAAG,GAI/BA,EAAE9U,EAAIo5C,EAAY9C,EAAIxhC,EAAE9U,EAAG+zB,GAC3BwmB,EAAiBjE,EAAIxhC,EAAEiD,GACvBjD,EAAEiD,GAt2BU,GA66BVssD,GAAe,SAAS1oD,EAAIsnD,EAAIn1C,GAClC,IACIlS,EAAIC,EADJ4lD,EAAKl5C,EAAQ8yB,QAEjB,KAAMz/B,EAAK2lD,EAAU0B,GAAI,OAAYpnD,EAAK0lD,EAAUzzC,GAAI,MAnB5C,SAASnS,EAAIC,EAAIC,GAC7B,OAAQF,GACJ,KAAKpU,EAAY,KAAKE,EAAW,KAAKC,EACtC,KAAKS,EAAW,KAAKC,EAAW,KAAKZ,EACjC,OAA8B,IAAtBuO,EAAI+G,UAAUlB,KAAuC,IAAtB7F,EAAI+G,UAAUjB,GAEzD,KAAKlU,EAAW,KAAKE,EAAY,KAAKG,EAClC,OAAqB,IAAb6T,EAAG9b,MACf,QAAS,OAAO,GAW+CukE,CAAQ3oD,EAAIC,EAAIC,GAC/E,OAAO,EACX,IAAIc,EAAM,IAAIxG,EAEd,GADAkS,EAAQ9L,WAAW,KAAMZ,EAAIC,EAAIC,EAAIc,GACjCA,EAAIzC,cACJ+oD,EAAG/zC,EAAIuyC,EAAGrlB,MACV6mB,EAAGr/D,EAAEg5C,KAAOjgC,EAAI5c,UAEf,CACD,IAAIQ,EAAIoc,EAAI5c,MACZ,GAAIyZ,MAAMjZ,IAAY,IAANA,EACZ,OAAO,EACX0iE,EAAG/zC,EAAIuyC,EAAGtlB,MACV8mB,EAAGr/D,EAAEi5C,KAAOt8C,EAEhB,OAAO,GAyBLgkE,GAAgB,SAASjuB,EAAI36B,EAAIsnD,EAAIn1C,EAAI/B,GAC3C,IAAIy4C,EAAMlrB,GAAYhD,EAAIxoB,GACtB22C,EAAMnrB,GAAYhD,EAAI2sB,GAC1BD,GAAS1sB,EAAI2sB,EAAIn1C,GACjBm1C,EAAGr/D,EAAEk5C,KAAO9D,GAAa1C,EAAI36B,EAAI,EAAG8oD,EAAKD,GACzCvB,EAAG/zC,EAAI3G,EAAQ8yB,QAAQqB,WACvB/C,GAAarD,EAAIvqB,IA4Jf4tB,GAAe,SAASrD,EAAIvqB,GAC9BuqB,EAAGv+B,EAAEkb,SAASqjB,EAAGviB,GAAK,GAAKhI,GA0B/BxtB,EAAOD,QAAQ04C,OAAqBA,EACpCz4C,EAAOD,QAAQu6C,SAtpCC,EAupChBt6C,EAAOD,QAAQi6C,MAAqBA,EACpCh6C,EAAOD,QAAQw6C,eAAqBA,EACpCv6C,EAAOD,QAAQy6C,gBAAqBA,GACpCx6C,EAAOD,QAAQqkE,UAAqBA,EACpCpkE,EAAOD,QAAQ06C,aAAqBA,GACpCz6C,EAAOD,QAAQ26C,aAAqBA,GACpC16C,EAAOD,QAAQ46C,cAAqBA,GACpC36C,EAAOD,QAAQ66C,WAAqBA,GACpC56C,EAAOD,QAAQ86C,YAAqBA,EACpC76C,EAAOD,QAAQ+6C,mBAAqBA,GACpC96C,EAAOD,QAAQg7C,YAAqBA,GACpC/6C,EAAOD,QAAQi7C,gBAAqBA,GACpCh7C,EAAOD,QAAQk7C,kBAneW,SAASlD,EAAIxhC,IAC/BA,EAAEoa,IAAM3G,EAAQ8yB,QAAQkB,QAAU+kB,EAASxsD,KAC3CykC,GAAgBjD,EAAIxhC,IAke5BvW,EAAOD,QAAQm7C,iBAAqBA,GACpCl7C,EAAOD,QAAQo7C,aAAqBA,GACpCn7C,EAAOD,QAAQq7C,aAAqBA,GACpCp7C,EAAOD,QAAQs7C,cAAqBA,EACpCr7C,EAAOD,QAAQu7C,eAAqBA,GACpCt7C,EAAOD,QAAQw7C,cAAqBA,GACpCv7C,EAAOD,QAAQy7C,aA3RM,SAASzD,EAAIt2C,EAAGkvB,GACjC,IAAIuyC,EAAKl5C,EAAQ8yB,QACjBtmC,GAAYusD,EAASthE,KAAOuoB,EAAQq9B,UAAU5lD,EAAEkvB,IAAMlvB,EAAEkvB,IAAMuyC,EAAGllB,SACjEv8C,EAAE4D,EAAEm5C,IAAI/8C,EAAIA,EAAE4D,EAAEk5C,KAChB98C,EAAE4D,EAAEm5C,IAAI75B,IAAMo2B,GAAYhD,EAAIpnB,GAC9BlvB,EAAE4D,EAAEm5C,IAAIC,GAAMh9C,EAAEkvB,IAAMuyC,EAAGllB,OAAUklB,EAAGllB,OAASklB,EAAGnlB,OAClDt8C,EAAEkvB,EAAIuyC,EAAGjlB,UAsRbj+C,EAAOD,QAAQ07C,WA3II,SAAS1D,EAAI36B,EAAIlZ,GAChC,OAAQkZ,GACJ,KAAKq7B,EAAOE,QACR4C,GAAcxD,EAAI7zC,GAClB,MAEJ,KAAKu0C,EAAOkB,OACR2B,GAAevD,EAAI7zC,GACnB,MAEJ,KAAKu0C,EAAOM,WACRmC,GAAiBnD,EAAI7zC,GACrB,MAEJ,KAAKu0C,EAAOC,QAAS,KAAKD,EAAOsB,QACjC,KAAKtB,EAAOe,QAAS,KAAKf,EAAOO,QAAS,KAAKP,EAAOW,SACtD,KAAKX,EAAOc,QAAS,KAAKd,EAAOmB,QACjC,KAAKnB,EAAOG,SAAU,KAAKH,EAAOI,QAAS,KAAKJ,EAAOK,SACvD,KAAKL,EAAOoB,QAAS,KAAKpB,EAAOqB,QACxBkpB,EAAU9+D,GAAG,IACd62C,GAAYhD,EAAI7zC,GAEpB,MAEJ,QACI62C,GAAYhD,EAAI7zC,KAmH5BlE,EAAOD,QAAQ27C,UAAqBA,GACpC17C,EAAOD,QAAQ47C,UAAqBA,EACpC37C,EAAOD,QAAQ67C,YAthCK,SAAS7D,EAAIt2C,GAC7B,OAAOs6C,EAAehE,EAAI4D,EAAU5D,GAAKt2C,IAshC7CzB,EAAOD,QAAQ87C,SAAqBA,EACpC77C,EAAOD,QAAQ+kE,aAAqBA,GACpC9kE,EAAOD,QAAQ+7C,gBAz5BS,SAAS/D,EAAI2rB,EAAM5iD,GAEvC,IADAA,KAzRY,IA0RL4iD,EAAkBA,EAAOL,EAAQtrB,EAAI2rB,GAAO,CAC/C,IAAI5+B,EAAMiT,EAAGv+B,EAAEoT,KAAK82C,GACpBltD,EAAWsuB,EAAIjX,SAAWC,EAASyI,SAAqB,IAAVuO,EAAI3O,GAAW2O,EAAI3O,GAAKrV,IACtEiJ,EAAS+c,SAAShC,EAAKhkB,KAq5B/B9gB,EAAOD,QAAQg8C,eAAqBA,EACpC/7C,EAAOD,QAAQi8C,iBAAqBA,EACpCh8C,EAAOD,QAAQk8C,YA/GK,SAASlE,EAAI36B,EAAIsnD,EAAIn1C,EAAI/B,GACzC,IAAI01C,EAAKl5C,EAAQ8yB,QACjB,OAAQ1/B,GACJ,KAAKq7B,EAAOE,QACRniC,GAzkCI,IAykCOkuD,EAAGjjE,GACdq5C,GAAmB/C,EAAIxoB,GACvBA,EAAG/V,EAAIqhC,EAAY9C,EAAIxoB,EAAG/V,EAAGkrD,EAAGlrD,GAChCkrD,EAAGn/D,GAAGgqB,GACN,MAEJ,KAAKkpB,EAAOkB,OACRnjC,GAhlCI,IAglCOkuD,EAAGlrD,GACdshC,GAAmB/C,EAAIxoB,GACvBA,EAAG9tB,EAAIo5C,EAAY9C,EAAIxoB,EAAG9tB,EAAGijE,EAAGjjE,GAChCijE,EAAGn/D,GAAGgqB,GACN,MAEJ,KAAKkpB,EAAOM,WACRoC,GAAapD,EAAIxoB,GACjB,IAAIuV,EAAMyV,EAAexC,EAAIxoB,GACzBA,EAAGoB,IAAMuyC,EAAG/kB,YAAcrZ,EAAIjX,SAAWC,EAAS2L,WAClDjjB,EAAWkuD,EAAGr/D,EAAEk5C,OAASzZ,EAAIhiB,EAAI,GACjC0hD,GAAQzsB,EAAI2sB,GACZ36C,EAASid,SAASlC,EAAK4/B,EAAGr/D,EAAEk5C,MAC5BmmB,EAAG/zC,EAAIuyC,EAAG/kB,WAAYumB,EAAGr/D,EAAEk5C,KAAOhvB,EAAGlqB,EAAEk5C,OAGvCrD,GAAiBnD,EAAIxoB,GACrBy2C,GAAcjuB,EAAIjqB,EAAS2L,UAAWirC,EAAIn1C,EAAI/B,IAElD,MAEJ,KAAKirB,EAAOC,QAAS,KAAKD,EAAOsB,QAAS,KAAKtB,EAAOe,QAAS,KAAKf,EAAOO,QAC3E,KAAKP,EAAOW,SAAU,KAAKX,EAAOc,QAAS,KAAKd,EAAOmB,QACvD,KAAKnB,EAAOG,SAAU,KAAKH,EAAOI,QAAS,KAAKJ,EAAOK,SACvD,KAAKL,EAAOoB,QAAS,KAAKpB,EAAOqB,QACxBgsB,GAAa1oD,EAAKrU,EAAW27D,EAAIn1C,IAClCy2C,GAAcjuB,EAAI36B,EAAK0Q,EAAS8J,OAAQ8sC,EAAIn1C,EAAI/B,GACpD,MAEJ,KAAKirB,EAAOQ,OAAQ,KAAKR,EAAOa,OAAQ,KAAKb,EAAOY,OACpD,KAAKZ,EAAOgB,OAAQ,KAAKhB,EAAOU,OAAQ,KAAKV,EAAOS,QAxI3C,SAASnB,EAAIouB,EAAKzB,EAAIn1C,GACnC,IAEI22C,EAFAhD,EAAKl5C,EAAQ8yB,QAGb4nB,EAAG/zC,IAAMuyC,EAAGvlB,GACZuoB,EAAMn8C,EAAS8c,MAAM69B,EAAGr/D,EAAEk5C,OAE1B/nC,EAAWkuD,EAAG/zC,IAAMuyC,EAAGplB,WACvBooB,EAAMxB,EAAGr/D,EAAEk5C,MAGf,IAAI0nB,EAAMlrB,GAAYhD,EAAIxoB,GAE1B,OADAk1C,GAAS1sB,EAAI2sB,EAAIn1C,GACT42C,GACJ,KAAK1tB,EAAOgB,OACRirB,EAAGr/D,EAAEk5C,KAAOolB,EAAS5rB,EAAIjqB,EAAS6L,MAAO,EAAGusC,EAAKD,GACjD,MAEJ,KAAKxtB,EAAOU,OAAQ,KAAKV,EAAOS,OAE5B,IAAI97B,EAAM+oD,EAAM1tB,EAAOgB,OAAU3rB,EAAS6L,MAC1C+qC,EAAGr/D,EAAEk5C,KAAOolB,EAAS5rB,EAAI36B,EAAI,EAAG6oD,EAAKC,GACrC,MAEJ,QACI,IAAI9oD,EAAM+oD,EAAM1tB,EAAOQ,OAAUnrB,EAAS6L,MAC1C+qC,EAAGr/D,EAAEk5C,KAAOolB,EAAS5rB,EAAI36B,EAAI,EAAG8oD,EAAKD,GAI7CvB,EAAG/zC,EAAIuyC,EAAGhlB,KA2GFkoB,CAASruB,EAAI36B,EAAIsnD,EAAIn1C,GAK7B,OAAOm1C,GAiEX1kE,EAAOD,QAAQm8C,YA3KK,SAASnE,EAAI36B,EAAI7G,EAAGiX,GACpC,IAAIsD,EAAK,IAAI9G,EAAQo0B,QAKrB,OAJAttB,EAAGH,EAAI3G,EAAQ8yB,QAAQe,MACvB/sB,EAAGzrB,EAAEg5C,KAAOvtB,EAAGzrB,EAAEi5C,KAAOxtB,EAAGzrB,EAAEk5C,KAAO,EACpCztB,EAAGrvB,GA9gCS,EA+gCZqvB,EAAGtX,GA/gCS,EAghCJ4D,GACJ,KAAK48B,EAAMG,UAAW,KAAKH,EAAMC,SAC7B,GAAI6rB,GAAa1oD,EAAKrT,EAAWwM,EAAGua,GAChC,MAER,KAAKkpB,EAAME,SA9EE,SAASnC,EAAI36B,EAAI7G,EAAGiX,GACrC,IAAInsB,EAAI25C,GAAgBjD,EAAIxhC,GAC5BiuD,GAAQzsB,EAAIxhC,GACZA,EAAElR,EAAEk5C,KAAO9D,GAAa1C,EAAI36B,EAAI,EAAG/b,EAAG,GACtCkV,EAAEoa,EAAI3G,EAAQ8yB,QAAQqB,WACtB/C,GAAarD,EAAIvqB,GA0ET64C,CAAatuB,EAAI36B,EAAK0Q,EAASqL,OAAQ5iB,EAAGiX,GAC1C,MACJ,KAAKwsB,EAAMI,SA5KH,SAASrC,EAAIxhC,GACzB,IAAI2sD,EAAKl5C,EAAQ8yB,QAEjB,OADAhC,GAAmB/C,EAAIxhC,GACfA,EAAEoa,GACN,KAAKuyC,EAAG1lB,KAAM,KAAK0lB,EAAGxlB,OAClBnnC,EAAEoa,EAAIuyC,EAAGzlB,MACT,MAEJ,KAAKylB,EAAGvlB,GAAI,KAAKulB,EAAGtlB,MAAO,KAAKslB,EAAGrlB,MAAO,KAAKqlB,EAAGzlB,MAC9ClnC,EAAEoa,EAAIuyC,EAAGxlB,OACT,MAEJ,KAAKwlB,EAAGhlB,KACJynB,GAAgB5tB,EAAIxhC,GACpB,MAEJ,KAAK2sD,EAAG/kB,WACR,KAAK+kB,EAAGplB,UACJqnB,GAAiBptB,EAAIxhC,GACrBiuD,GAAQzsB,EAAIxhC,GACZA,EAAElR,EAAEk5C,KAAO9D,GAAa1C,EAAIjqB,EAASmR,OAAQ,EAAG1oB,EAAElR,EAAEk5C,KAAM,GAC1DhoC,EAAEoa,EAAIuyC,EAAG/kB,WAKf,IAAIvpB,EAAOre,EAAEiD,EAAGjD,EAAEiD,EAAIjD,EAAE9U,EAAG8U,EAAE9U,EAAImzB,EACnCovC,EAAajsB,EAAIxhC,EAAEiD,GACnBwqD,EAAajsB,EAAIxhC,EAAE9U,GAgJK6kE,CAAQvuB,EAAIxhC,KA8JxCvW,EAAOD,QAAQo8C,iBAAqBA,GACpCn8C,EAAOD,QAAQq8C,SAxhCE,SAASrE,EAAIjK,EAAOkZ,GACjCvM,GAAa1C,EAAIjqB,EAASoR,UAAW4O,EAAOkZ,EAAO,EAAG,IAwhC1DhnD,EAAOD,QAAQs8C,UA5aG,SAAStE,EAAIxhC,EAAGzU,GAC9Bk5C,GAAgBjD,EAAIxhC,GACpB,IAAIgwD,EAAOhwD,EAAElR,EAAEk5C,KACfimB,GAAQzsB,EAAIxhC,GACZA,EAAElR,EAAEk5C,KAAOxG,EAAGmH,QACd3oC,EAAEoa,EAAI3G,EAAQ8yB,QAAQgB,UACtB3B,GAAiBpE,EAAI,GACrB0C,GAAa1C,EAAIjqB,EAASyJ,QAAShhB,EAAElR,EAAEk5C,KAAMgoB,EAAMxrB,GAAYhD,EAAIj2C,IACnE0iE,GAAQzsB,EAAIj2C,IAqahB9B,EAAOD,QAAQu8C,aApDM,SAASvE,EAAI3rB,EAAMo6C,EAAQvjB,GAC5C,IAAIriD,GAAM4lE,EAAS,GAAGz8C,EAAS2U,kBAAoB,EAC/Cp5B,EAAK29C,IAAYn6C,EAAe,EAAIm6C,EACxCzsC,EAAuB,IAAZysC,GAAiBA,GAAWl5B,EAAS2U,mBAC5C99B,GAAKmpB,EAASkc,SACdwU,GAAa1C,EAAIjqB,EAASqR,WAAY/S,EAAM9mB,EAAG1E,GAC1CA,GAAKmpB,EAASgc,WACnB0U,GAAa1C,EAAIjqB,EAASqR,WAAY/S,EAAM9mB,EAAG,GAC/Cg/D,GAAavsB,EAAIn3C,IAGjB4zB,EAAK+jB,iBAAiBR,EAAGjX,GAAIz9B,EAAa,wBAAwB,IACtE00C,EAAGmH,QAAU9yB,EAAO,GAyCxBpsB,EAAOD,QAAQw8C,gBAtsBS,SAASxE,EAAIxhC,GACjCkmC,GAAgB1E,EAAIxhC,EAAGzN,IAssB3B9I,EAAOD,QAAQy8C,eAAqBA,GACpCx8C,EAAOD,QAAQ08C,gBAAqBA,GACpCz8C,EAAOD,QAAQ28C,cA5cO,SAAS3E,EAAI+I,EAAI2lB,GACnC,IAAIvD,EAAKl5C,EAAQ8yB,QACjB,OAAQgE,EAAGnwB,GACP,KAAKuyC,EAAGnlB,OAGJ,OAFAymB,GAAQzsB,EAAI0uB,QACZpB,GAAQttB,EAAI0uB,EAAI3lB,EAAGz7C,EAAEk5C,MAGzB,KAAK2kB,EAAGllB,OACJ,IAAIznC,EAAIykC,GAAgBjD,EAAI0uB,GAC5BhsB,GAAa1C,EAAIjqB,EAASsR,YAAa7oB,EAAGuqC,EAAGz7C,EAAEk5C,KAAM,GACrD,MAEJ,KAAK2kB,EAAGjlB,SACJ,IAAI7gC,EAAM0jC,EAAGz7C,EAAEm5C,IAAIC,KAAOykB,EAAGnlB,OAAUjwB,EAAS4J,YAAc5J,EAAS2J,YACnElhB,EAAIwkC,GAAYhD,EAAI0uB,GACxBhsB,GAAa1C,EAAI36B,EAAI0jC,EAAGz7C,EAAEm5C,IAAI/8C,EAAGq/C,EAAGz7C,EAAEm5C,IAAI75B,IAAKpO,GAIvDiuD,GAAQzsB,EAAI0uB,IAybhBzmE,EAAOD,QAAQ48C,aA1wBM,SAAS5E,EAAIz1C,GAC9B,IAAItB,EAAI,IAAI4W,EAAOhQ,EAAatF,GAChC,OAAOuiE,GAAK9sB,EAAI/2C,EAAGA,8MCldnBwB,EAAQ,GAbR8D,sBACAS,eACIG,iBACAU,gBACAX,aACAY,gBACAC,gBACAH,gBAEa8D,IAAjBJ,cAAiBI,cACjBlH,iBACAtB,iBACAI,iBAEE2I,EAAWxJ,EAAQ,GACnBqnB,EAAWrnB,EAAQ,IACnBsnB,EAAWtnB,EAAQ,KAerBA,EAAQ,IAbR0jC,eACAtB,UACA8B,WACAC,UACAC,WACA5B,UACAD,WACAqC,WACAC,YACAC,WACAC,YACA1C,WACA2C,YAEIhxB,EAAehU,EAAQ,GAAvBgU,WACAa,EAAe7U,EAAQ,IAAvB6U,aAIJ7U,EAAQ,IAFRkwC,cACAhE,QAGAg4B,EAAY,CAAC,GAAM,IAAM,GAAI,GAAI,GAAM,IAErCC,aAEF,SAAAA,EAAY7vD,EAAG8vD,EAAG9lE,gGAAMsJ,CAAAC,KAAAs8D,GACpBt8D,KAAKw8D,QAAU,EACfx8D,KAAKy8D,WAAa,EAClBz8D,KAAK08D,gBAAkB,EACvB18D,KAAK28D,YAAc,EACnB38D,KAAK48D,WAAa,EAElBzwD,EAAWowD,aAAal4B,EAAK,yCAC7Bl4B,EAAWjS,EAAazD,IAER,KAAZA,EAAK,IAAmD,KAAZA,EAAK,GACjDuJ,KAAKvJ,KAAOA,EAAKqb,SAAS,GACrBrb,EAAK,IAAMwF,EAAc,GAC9B+D,KAAKvJ,KAAOuC,EAAa,iBAAiB,GAE1CgH,KAAKvJ,KAAOA,EAEhBuJ,KAAKyM,EAAIA,EACTzM,KAAKu8D,EAAIA,EAGTv8D,KAAK68D,YAAc,IAAItxD,YACnBnQ,KAAKyd,IAAI7Y,KAAKw8D,QAASx8D,KAAKy8D,WAAYz8D,KAAK08D,gBAAiB18D,KAAK28D,YAAa38D,KAAK48D,aAEzF58D,KAAK6oD,GAAK,IAAIv9C,SAAStL,KAAK68D,aAC5B78D,KAAKqnC,GAAK,IAAI9tC,WAAWyG,KAAK68D,iEAgDrBllE,EAAGK,GACZ,SAAY,GAAML,IAAOK,oCA9CxBsX,GACD,IAAI+3B,EAAK,IAAI9tC,WAAW+V,GAGxB,OAFsC,IAAnC+4B,EAAUroC,KAAKu8D,EAAGl1B,EAAI,EAAG/3B,IACxBtP,KAAK8a,MAAM,aACRusB,qCAMP,OAFyC,IAArCgB,EAAUroC,KAAKu8D,EAAGv8D,KAAKqnC,GAAI,EAAG,IAC9BrnC,KAAK8a,MAAM,aACR9a,KAAKqnC,GAAG,qCAMf,OAFoD,IAAhDgB,EAAUroC,KAAKu8D,EAAGv8D,KAAKqnC,GAAI,EAAGrnC,KAAKw8D,UACnCx8D,KAAK8a,MAAM,aACR9a,KAAK6oD,GAAGiU,SAAS,GAAG,wCAM3B,OAFuD,IAAnDz0B,EAAUroC,KAAKu8D,EAAGv8D,KAAKqnC,GAAI,EAAGrnC,KAAK48D,aACnC58D,KAAK8a,MAAM,aACR9a,KAAK6oD,GAAGG,WAAW,GAAG,yCAM7B,OAFwD,IAApD3gB,EAAUroC,KAAKu8D,EAAGv8D,KAAKqnC,GAAI,EAAGrnC,KAAK28D,cACnC38D,KAAK8a,MAAM,aACR9a,KAAK6oD,GAAGiU,SAAS,GAAG,wCAI3B,OAAO98D,KAAK+8D,mDAIZ,IAAIztD,EAAOtP,KAAKg9D,WAGhB,OAFa,MAAT1tD,IACAA,EAAOtP,KAAKi9D,cACH,IAAT3tD,EACO,KACJtC,EAAWhN,KAAKyM,EAAGzM,KAAKk9D,KAAK5tD,EAAK,qCAQpCH,GAIL,IAHA,IAAIxX,EAAIqI,KAAKm9D,UACTnlE,EAAIskE,EAECpmE,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CACoC,IAAxDmyC,EAAUroC,KAAKu8D,EAAGv8D,KAAKqnC,GAAI,EAAGrnC,KAAK08D,kBACnC18D,KAAK8a,MAAM,aACf,IAAI2f,EAAMz6B,KAAK6oD,GAAGn9C,UAAU,GAAG,GAC/ByD,EAAEoT,KAAKrsB,GAAK,CACRqsB,KAAQkY,EACRjX,OAASiX,GAAOC,EAAU1iC,EAAEkiC,MAAMiD,EAAS,GAC3CrR,EAAS2O,GAAOF,EAAUviC,EAAEkiC,MAAM6C,EAAS,GAC3CtkB,EAASgiB,GAAO6B,EAAUtkC,EAAEkiC,MAAM+C,EAAS,GAC3CvQ,EAAS+N,GAAOE,EAAU3iC,EAAEkiC,MAAMM,EAAS,GAC3CxN,GAASyN,GAAO8B,EAAUvkC,EAAEkiC,MAAMgD,EAAS,GAC3CjQ,GAASwN,GAAO4B,EAAUrkC,EAAEkiC,MAAM8C,EAAS,GAC3C5Q,KAAUqO,GAAO8B,EAAUvkC,EAAEkiC,MAAMgD,EAAS,IAAMrB,0CAKhD1sB,GAGV,IAFA,IAAIxX,EAAIqI,KAAKm9D,UAEJjnE,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CACxB,IAAIkB,EAAI4I,KAAKg9D,WAEb,OAAQ5lE,GACJ,KAAKwF,EACDuS,EAAEmX,EAAE4Z,KAAK,IAAIzgB,EAAQlS,OAAO3Q,EAAU,OACtC,MACJ,KAAKC,EACDsS,EAAEmX,EAAE4Z,KAAK,IAAIzgB,EAAQlS,OAAO1Q,EAAkC,IAApBmD,KAAKg9D,aAC/C,MACJ,KAAKx/D,EACD2R,EAAEmX,EAAE4Z,KAAK,IAAIzgB,EAAQlS,OAAO/P,EAAawC,KAAKo9D,eAC9C,MACJ,KAAK3/D,EACD0R,EAAEmX,EAAE4Z,KAAK,IAAIzgB,EAAQlS,OAAO9P,EAAauC,KAAK+8D,gBAC9C,MACJ,KAAKz/D,EACL,KAAKC,EACD4R,EAAEmX,EAAE4Z,KAAK,IAAIzgB,EAAQlS,OAAOhQ,EAAayC,KAAKq9D,eAC9C,MACJ,QACIr9D,KAAK8a,MAAL,0BAAA1Q,OAAqChT,EAArC,2CAKL+X,GAGP,IAFA,IAAIxX,EAAIqI,KAAKm9D,UAEJjnE,EAAI,EAAGA,EAAIyB,EAAGzB,IACnBiZ,EAAEnX,EAAE9B,GAAK,IAAIspB,EAAMsT,MAAM9yB,KAAKyM,GAC9BzM,KAAKs9D,aAAanuD,EAAEnX,EAAE9B,GAAIiZ,EAAE9O,6CAIvB8O,GAGT,IAFA,IAAIxX,EAAIqI,KAAKm9D,UAEJjnE,EAAI,EAAGA,EAAIyB,EAAGzB,IACnBiZ,EAAEqY,SAAStxB,GAAK,CACZO,KAAS,KACT4gC,QAASr3B,KAAKg9D,WACd1iD,IAASta,KAAKg9D,8CAKhB7tD,GAEN,IADA,IAAIxX,EAAIqI,KAAKm9D,UACJjnE,EAAI,EAAGA,EAAIyB,EAAGzB,IACnBiZ,EAAEkb,SAASn0B,GAAK8J,KAAKm9D,UAEzBxlE,EAAIqI,KAAKm9D,UACT,IAAK,IAAIjnE,EAAI,EAAGA,EAAIyB,EAAGzB,IACnBiZ,EAAE4jB,QAAQ78B,GAAK,CACXsd,QAASxT,KAAKq9D,aACd5pD,QAASzT,KAAKm9D,UACdzpD,MAAS1T,KAAKm9D,WAItBxlE,EAAIqI,KAAKm9D,UACT,IAAK,IAAIjnE,EAAI,EAAGA,EAAIyB,EAAGzB,IACnBiZ,EAAEqY,SAAStxB,GAAGO,KAAOuJ,KAAKq9D,kDAIrBluD,EAAGouD,GACZpuD,EAAE9O,OAASL,KAAKq9D,aACC,OAAbluD,EAAE9O,SACF8O,EAAE9O,OAASk9D,GACfpuD,EAAE5O,YAAcP,KAAKm9D,UACrBhuD,EAAE3O,gBAAkBR,KAAKm9D,UACzBhuD,EAAEiT,UAAYpiB,KAAKg9D,WACnB7tD,EAAE+S,UAAgC,IAApBliB,KAAKg9D,WACnB7tD,EAAE8S,aAAejiB,KAAKg9D,WACtBh9D,KAAKw9D,SAASruD,GACdnP,KAAKy9D,cAActuD,GACnBnP,KAAK09D,aAAavuD,GAClBnP,KAAK29D,WAAWxuD,GAChBnP,KAAK49D,UAAUzuD,wCAGNlX,EAAGoU,GACZ,IAAIyD,EAAO9P,KAAKk9D,KAAKjlE,EAAE0B,QAClBf,EAAakX,EAAM7X,IACpB+H,KAAK8a,MAAMzO,yCAIfrM,KAAK69D,aAAa5hE,EAAc6V,SAAS,GAAI,SAErB,KAApB9R,KAAKg9D,YACLh9D,KAAK8a,MAAM,uBAES,IAApB9a,KAAKg9D,YACLh9D,KAAK8a,MAAM,sBAEf9a,KAAK69D,aAAaxB,EAAW,aAE7Br8D,KAAKw8D,QAAkBx8D,KAAKg9D,WAC5Bh9D,KAAKy8D,WAAkBz8D,KAAKg9D,WAC5Bh9D,KAAK08D,gBAAkB18D,KAAKg9D,WAC5Bh9D,KAAK28D,YAAkB38D,KAAKg9D,WAC5Bh9D,KAAK48D,WAAkB58D,KAAKg9D,WAE5Bh9D,KAAK89D,UAAU99D,KAAKw8D,QAAS,EAAG,OAChCx8D,KAAK89D,UAAU99D,KAAKy8D,WAAY,EAAG,UACnCz8D,KAAK89D,UAAU99D,KAAK08D,gBAAiB,EAAG,eACxC18D,KAAK89D,UAAU99D,KAAK28D,YAAa,EAAG,WACpC38D,KAAK89D,UAAU99D,KAAK48D,WAAY,EAAG,UAER,QAAvB58D,KAAK+8D,eACL/8D,KAAK8a,MAAM,0BAEW,QAAtB9a,KAAKo9D,cACLp9D,KAAK8a,MAAM,0DAIbijD,GACFt+C,EAAQ1N,iBAAiB/R,KAAKyM,EAAGzT,EAAa,4BAA6BgH,KAAKvJ,KAAMuC,EAAa+kE,IACnGp8D,EAAI+e,WAAW1gB,KAAKyM,EAAGrL,qCAGjB6qD,EAAM38C,EAAM2H,GACdg1C,IAAS38C,GACTtP,KAAK8a,MAAL,GAAA1Q,OAAc6M,EAAd,2DAiBZthB,EAAOD,QAAQ4xB,YAbK,SAAS7a,EAAG8vD,EAAG9lE,GAC/B,IAAIunE,EAAI,IAAI1B,EAAe7vD,EAAG8vD,EAAG9lE,GACjCunE,EAAEC,cACF,IAAI72C,EAAK5H,EAAM2T,iBAAiB1mB,EAAGuxD,EAAEhB,YAOrC,OANAr7D,EAAI8P,YAAYhF,GAChBA,EAAE+B,MAAM/B,EAAEiF,IAAI,GAAG8lB,YAAYpQ,GAC7BA,EAAGpvB,EAAI,IAAIwnB,EAAMsT,MAAMrmB,GACvBuxD,EAAEV,aAAal2C,EAAGpvB,EAAG,MACrBmU,EAAWib,EAAGpY,YAAcoY,EAAGpvB,EAAEwvB,SAAS7tB,QAEnCytB,uCCjRPjvB,EAAQ,GAZR8D,kBACAC,sBACAC,0BACAO,eACIG,iBACAU,gBACAX,aACAY,gBACAC,gBACAH,gBAEJxE,iBAGEujE,EAAevjE,EAAa,GAAI,IAAK,GAAI,GAAI,GAAI,IAGjDolE,EAA2C,GAA5BpyD,OAAO5P,GAA0B4P,OAAO3P,GAGvDgiE,EACF,SAAAA,iGAAcp+D,CAAAC,KAAAm+D,GACVn+D,KAAKyM,EAAI,KACTzM,KAAKo+D,MAAQ,KACbp+D,KAAKqL,KAAO,KACZrL,KAAKwmC,MAAQtmC,IACbF,KAAKic,OAAS/b,KAIhBm+D,EAAY,SAASpjE,EAAGqU,EAAMw0C,GACf,IAAbA,EAAE7nC,QAAgB3M,EAAO,IACzBw0C,EAAE7nC,OAAS6nC,EAAEvd,OAAOud,EAAEr3C,EAAGxR,EAAGqU,EAAMw0C,EAAEz4C,QAGtCizD,EAAW,SAASpnC,EAAG4sB,GACzBua,EAAUvlE,EAAao+B,GAAI,EAAG4sB,IAG5Bya,EAAU,SAASzwD,EAAGg2C,GACxB,IAAI0a,EAAK,IAAIjzD,YAAY,GAChB,IAAID,SAASkzD,GACnBC,SAAS,EAAG3wD,GAAG,GAClB,IAAI1W,EAAI,IAAImC,WAAWilE,GACvBH,EAAUjnE,EAAG,EAAG0sD,IAGd4a,EAAc,SAAS5wD,EAAGg2C,GAC5B,IAAI0a,EAAK,IAAIjzD,YAAY,GAChB,IAAID,SAASkzD,GACnBC,SAAS,EAAG3wD,GAAG,GAClB,IAAI1W,EAAI,IAAImC,WAAWilE,GACvBH,EAAUjnE,EAAG,EAAG0sD,IAGd6a,EAAa,SAAS7wD,EAAGg2C,GAC3B,IAAI0a,EAAK,IAAIjzD,YAAY,GAChB,IAAID,SAASkzD,GACnBhzD,WAAW,EAAGsC,GAAG,GACpB,IAAI1W,EAAI,IAAImC,WAAWilE,GACvBH,EAAUjnE,EAAG,EAAG0sD,IAGd8a,EAAa,SAAS3mE,EAAG6rD,GAC3B,GAAU,OAAN7rD,EACAqmE,EAAS,EAAGxa,OACX,CACD,IAAIx0C,EAAOrX,EAAEkW,SAAW,EACpB1T,EAAMxC,EAAEiW,SACRoB,EAAO,IACPgvD,EAAShvD,EAAMw0C,IAEfwa,EAAS,IAAMxa,GACf4a,EAAYpvD,EAAMw0C,IAEtBua,EAAU5jE,EAAK6U,EAAO,EAAGw0C,KAsC3B+a,EAAa,SAAS1vD,EAAG20C,GAC3B,IAAInsD,EAAIwX,EAAEnX,EAAE2B,OACZ4kE,EAAQ5mE,EAAGmsD,GACX,IAAK,IAAI5tD,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB4oE,EAAa3vD,EAAEnX,EAAE9B,GAAIiZ,EAAE9O,OAAQyjD,IA8BjCgb,EAAe,SAAS3vD,EAAGouD,EAASzZ,GAClCA,EAAEtd,OAASr3B,EAAE9O,SAAWk9D,EACxBqB,EAAW,KAAM9a,GAEjB8a,EAAWzvD,EAAE9O,OAAQyjD,GACzBya,EAAQpvD,EAAE5O,YAAaujD,GACvBya,EAAQpvD,EAAE3O,gBAAiBsjD,GAC3Bwa,EAASnvD,EAAEiT,UAAW0hC,GACtBwa,EAASnvD,EAAE+S,UAAU,EAAE,EAAG4hC,GAC1Bwa,EAASnvD,EAAE8S,aAAc6hC,GA7EZ,SAAS30C,EAAG20C,GACzB,IAAI7rD,EAAIkX,EAAEoT,KAAK8Q,IAAI,SAAAnnB,GAAC,OAAIA,EAAEqW,OAC1Bg8C,EAAQtmE,EAAE0B,OAAQmqD,GAElB,IAAK,IAAI5tD,EAAI,EAAGA,EAAI+B,EAAE0B,OAAQzD,IAC1BqoE,EAAQtmE,EAAE/B,GAAI4tD,GAyElBib,CAAS5vD,EAAG20C,GAtEM,SAAS30C,EAAG20C,GAC9B,IAAInsD,EAAIwX,EAAEmX,EAAE3sB,OACZ4kE,EAAQ5mE,EAAGmsD,GACX,IAAK,IAAI5tD,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CACxB,IAAIS,EAAIwY,EAAEmX,EAAEpwB,GAEZ,OADAooE,EAAS3nE,EAAEs/B,QAAS6tB,GACZntD,EAAEs/B,SACN,KAAKr5B,EACD,MACJ,KAAKC,EACDyhE,EAAS3nE,EAAEQ,MAAQ,EAAI,EAAG2sD,GAC1B,MACJ,KAAKtmD,EACDmhE,EAAWhoE,EAAEQ,MAAO2sD,GACpB,MACJ,KAAKrmD,EACDihE,EAAY/nE,EAAEQ,MAAO2sD,GACrB,MACJ,KAAKxmD,EACL,KAAKC,EACDqhE,EAAWjoE,EAAEsX,UAAW61C,KAmDpCkb,CAAc7vD,EAAG20C,GAtCA,SAAS30C,EAAG20C,GAC7B,IAAInsD,EAAIwX,EAAEqY,SAAS7tB,OACnB4kE,EAAQ5mE,EAAGmsD,GACX,IAAK,IAAI5tD,EAAI,EAAGA,EAAIyB,EAAGzB,IACnBooE,EAASnvD,EAAEqY,SAAStxB,GAAGmhC,QAAU,EAAI,EAAGysB,GACxCwa,EAASnvD,EAAEqY,SAAStxB,GAAGokB,IAAKwpC,GAkChCmb,CAAa9vD,EAAG20C,GAChB+a,EAAW1vD,EAAG20C,GA/BA,SAAS30C,EAAG20C,GAC1B,IAAInsD,EAAImsD,EAAEtd,MAAQ,EAAIr3B,EAAEkb,SAAS1wB,OACjC4kE,EAAQ5mE,EAAGmsD,GACX,IAAK,IAAI5tD,EAAI,EAAGA,EAAIyB,EAAGzB,IACnBqoE,EAAQpvD,EAAEkb,SAASn0B,GAAI4tD,GAC3BnsD,EAAImsD,EAAEtd,MAAQ,EAAIr3B,EAAE4jB,QAAQp5B,OAC5B4kE,EAAQ5mE,EAAGmsD,GACX,IAAK,IAAI5tD,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB0oE,EAAWzvD,EAAE4jB,QAAQ78B,GAAGsd,QAASswC,GACjCya,EAAQpvD,EAAE4jB,QAAQ78B,GAAGud,QAASqwC,GAC9Bya,EAAQpvD,EAAE4jB,QAAQ78B,GAAGwd,MAAOowC,GAEhCnsD,EAAImsD,EAAEtd,MAAQ,EAAIr3B,EAAEqY,SAAS7tB,OAC7B4kE,EAAQ5mE,EAAGmsD,GACX,IAAK,IAAI5tD,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB0oE,EAAWzvD,EAAEqY,SAAStxB,GAAGO,KAAMqtD,GAiBnCob,CAAU/vD,EAAG20C,IAiCjBnuD,EAAOD,QAAQ0uC,UAbG,SAAS33B,EAAG0C,EAAG0+B,EAAGxiC,EAAMm7B,GACtC,IAAIsd,EAAI,IAAIqa,EASZ,OARAra,EAAEr3C,EAAIA,EACNq3C,EAAEvd,OAASsH,EACXiW,EAAEz4C,KAAOA,EACTy4C,EAAEtd,MAAQA,EACVsd,EAAE7nC,OAAS,EAvBI,SAAS6nC,GACxBua,EAAUpiE,EAAeA,EAActC,OAAQmqD,GAC/Cwa,EAASJ,EAAcpa,GACvBwa,EArJiB,EAqJKxa,GACtBua,EAAUhC,EAAWA,EAAU1iE,OAAQmqD,GACvCwa,EAAS,EAAGxa,GACZwa,EAAS,EAAGxa,GACZwa,EAAS,EAAGxa,GACZwa,EAAS,EAAGxa,GACZwa,EAAS,EAAGxa,GACZ4a,EA/JiB,MA+JK5a,GACtB6a,EA/JiB,MA+JI7a,GAarBqb,CAAWrb,GACXwa,EAASnvD,EAAEqY,SAAS7tB,OAAQmqD,GAC5Bgb,EAAa3vD,EAAG,KAAM20C,GACfA,EAAE7nC,qQChMZ,WACG,aAEA,IAAImjD,EAAK,CACLC,WAAY,OACZC,SAAU,OACVC,SAAU,OACVC,cAAe,OACfC,OAAQ,UACRC,YAAa,eACbC,KAAM,MACNC,SAAU,OACVC,KAAM,YACNC,OAAQ,WACRC,YAAa,2FACbtoE,IAAK,sBACLuoE,WAAY,wBACZC,aAAc,aACdC,KAAM,SAGV,SAASza,EAAQhuD,GAEb,OAOJ,SAAwB0oE,EAAYC,GAChC,IAAiDvpD,EAAkB3gB,EAAGowB,EAAG+5C,EAAI7b,EAAK8b,EAAeC,EAAYC,EAAaN,EAAtHO,EAAS,EAAGC,EAAcP,EAAWxmE,OAAagnE,EAAS,GAC/D,IAAKzqE,EAAI,EAAGA,EAAIwqE,EAAaxqE,IACzB,GAA6B,iBAAlBiqE,EAAWjqE,GAClByqE,GAAUR,EAAWjqE,QAEpB,GAA6B,WAAzBkc,EAAO+tD,EAAWjqE,IAAiB,CAExC,IADAmqE,EAAKF,EAAWjqE,IACT0tC,KAEH,IADA/sB,EAAMupD,EAAKK,GACNn6C,EAAI,EAAGA,EAAI+5C,EAAGz8B,KAAKjqC,OAAQ2sB,IAAK,CACjC,GAAWotC,MAAP78C,EACA,MAAM,IAAI9c,MAAM0rD,EAAQ,gEAAiE4a,EAAGz8B,KAAKtd,GAAI+5C,EAAGz8B,KAAKtd,EAAE,KAEnHzP,EAAMA,EAAIwpD,EAAGz8B,KAAKtd,SAItBzP,EADKwpD,EAAGO,SACFR,EAAKC,EAAGO,UAGRR,EAAKK,KAOf,GAJIrB,EAAGG,SAAShuD,KAAK8uD,EAAG7yD,OAAS4xD,EAAGI,cAAcjuD,KAAK8uD,EAAG7yD,OAASqJ,aAAegpB,WAC9EhpB,EAAMA,KAGNuoD,EAAGM,YAAYnuD,KAAK8uD,EAAG7yD,OAAyB,iBAARqJ,GAAoBjG,MAAMiG,GAClE,MAAM,IAAIlc,UAAU8qD,EAAQ,0CAA2C5uC,IAO3E,OAJIuoD,EAAGK,OAAOluD,KAAK8uD,EAAG7yD,QAClBgzD,EAAc3pD,GAAO,GAGjBwpD,EAAG7yD,MACP,IAAK,IACDqJ,EAAM4oC,SAAS5oC,EAAK,IAAI9a,SAAS,GACjC,MACJ,IAAK,IACD8a,EAAMtb,OAAOC,aAAaikD,SAAS5oC,EAAK,KACxC,MACJ,IAAK,IACL,IAAK,IACDA,EAAM4oC,SAAS5oC,EAAK,IACpB,MACJ,IAAK,IACDA,EAAMxE,KAAKC,UAAUuE,EAAK,KAAMwpD,EAAGQ,MAAQphB,SAAS4gB,EAAGQ,OAAS,GAChE,MACJ,IAAK,IACDhqD,EAAMwpD,EAAGS,UAAYnwD,WAAWkG,GAAKkqD,cAAcV,EAAGS,WAAanwD,WAAWkG,GAAKkqD,gBACnF,MACJ,IAAK,IACDlqD,EAAMwpD,EAAGS,UAAYnwD,WAAWkG,GAAKmqD,QAAQX,EAAGS,WAAanwD,WAAWkG,GACxE,MACJ,IAAK,IACDA,EAAMwpD,EAAGS,UAAYvlE,OAAOuQ,OAAO+K,EAAI9K,YAAYs0D,EAAGS,aAAenwD,WAAWkG,GAChF,MACJ,IAAK,IACDA,GAAO4oC,SAAS5oC,EAAK,MAAQ,GAAG9a,SAAS,GACzC,MACJ,IAAK,IACD8a,EAAMtb,OAAOsb,GACbA,EAAOwpD,EAAGS,UAAYjqD,EAAIoqD,UAAU,EAAGZ,EAAGS,WAAajqD,EACvD,MACJ,IAAK,IACDA,EAAMtb,SAASsb,GACfA,EAAOwpD,EAAGS,UAAYjqD,EAAIoqD,UAAU,EAAGZ,EAAGS,WAAajqD,EACvD,MACJ,IAAK,IACDA,EAAMjgB,OAAOkB,UAAUiE,SAAS1F,KAAKwgB,GAAKqqD,MAAM,GAAI,GAAGC,cACvDtqD,EAAOwpD,EAAGS,UAAYjqD,EAAIoqD,UAAU,EAAGZ,EAAGS,WAAajqD,EACvD,MACJ,IAAK,IACDA,EAAM4oC,SAAS5oC,EAAK,MAAQ,EAC5B,MACJ,IAAK,IACDA,EAAMA,EAAIuqD,UACVvqD,EAAOwpD,EAAGS,UAAYjqD,EAAIoqD,UAAU,EAAGZ,EAAGS,WAAajqD,EACvD,MACJ,IAAK,IACDA,GAAO4oC,SAAS5oC,EAAK,MAAQ,GAAG9a,SAAS,IACzC,MACJ,IAAK,IACD8a,GAAO4oC,SAAS5oC,EAAK,MAAQ,GAAG9a,SAAS,IAAIslE,cAGjDjC,EAAGO,KAAKpuD,KAAK8uD,EAAG7yD,MAChBmzD,GAAU9pD,IAGNuoD,EAAGK,OAAOluD,KAAK8uD,EAAG7yD,OAAWgzD,IAAeH,EAAGH,KAK/CA,EAAO,IAJPA,EAAOM,EAAc,IAAM,IAC3B3pD,EAAMA,EAAI9a,WAAWulE,QAAQlC,EAAGc,KAAM,KAK1CI,EAAgBD,EAAGkB,SAA2B,MAAhBlB,EAAGkB,SAAmB,IAAMlB,EAAGkB,SAASC,OAAO,GAAK,IAClFjB,EAAaF,EAAGQ,OAASX,EAAOrpD,GAAKld,OACrC6qD,EAAM6b,EAAGQ,OAASN,EAAa,EAAID,EAActZ,OAAOuZ,GAAoB,GAC5EI,GAAUN,EAAG7X,MAAQ0X,EAAOrpD,EAAM2tC,EAAyB,MAAlB8b,EAAwBJ,EAAO1b,EAAM3tC,EAAM2tC,EAAM0b,EAAOrpD,GAI7G,OAAO8pD,EAjHAc,CAsHX,SAAuB7vD,GACnB,GAAI8vD,EAAc9vD,GACd,OAAO8vD,EAAc9vD,GAGzB,IAAgBszC,EAAZyc,EAAO/vD,EAAYuuD,EAAa,GAAIyB,EAAY,EACpD,KAAOD,GAAM,CACT,GAAqC,QAAhCzc,EAAQka,EAAGS,KAAKpvD,KAAKkxD,IACtBxB,EAAWjgC,KAAKglB,EAAM,SAErB,GAAuC,QAAlCA,EAAQka,EAAGU,OAAOrvD,KAAKkxD,IAC7BxB,EAAWjgC,KAAK,SAEf,IAA4C,QAAvCglB,EAAQka,EAAGW,YAAYtvD,KAAKkxD,IA6ClC,MAAM,IAAIlM,YAAY,oCA5CtB,GAAIvQ,EAAM,GAAI,CACV0c,GAAa,EACb,IAAIC,EAAa,GAAIC,EAAoB5c,EAAM,GAAI6c,EAAc,GACjE,GAAuD,QAAlDA,EAAc3C,EAAG3nE,IAAIgZ,KAAKqxD,IAe3B,MAAM,IAAIrM,YAAY,gDAbtB,IADAoM,EAAW3hC,KAAK6hC,EAAY,IACwD,MAA5ED,EAAoBA,EAAkBb,UAAUc,EAAY,GAAGpoE,UACnE,GAA8D,QAAzDooE,EAAc3C,EAAGY,WAAWvvD,KAAKqxD,IAClCD,EAAW3hC,KAAK6hC,EAAY,QAE3B,IAAgE,QAA3DA,EAAc3C,EAAGa,aAAaxvD,KAAKqxD,IAIzC,MAAM,IAAIrM,YAAY,gDAHtBoM,EAAW3hC,KAAK6hC,EAAY,IAUxC7c,EAAM,GAAK2c,OAGXD,GAAa,EAEjB,GAAkB,IAAdA,EACA,MAAM,IAAI7nE,MAAM,6EAGpBomE,EAAWjgC,KACP,CACI6/B,YAAa7a,EAAM,GACnB0b,SAAa1b,EAAM,GACnBthB,KAAashB,EAAM,GACnBgb,KAAahb,EAAM,GACnBqc,SAAarc,EAAM,GACnBsD,MAAatD,EAAM,GACnB2b,MAAa3b,EAAM,GACnB4b,UAAa5b,EAAM,GACnB13C,KAAa03C,EAAM,KAO/Byc,EAAOA,EAAKV,UAAU/b,EAAM,GAAGvrD,QAEnC,OAAO+nE,EAAc9vD,GAAOuuD,EApLN6B,CAAcvqE,GAAMwC,WAG9C,SAASgoE,EAASrwD,EAAKwuD,GACnB,OAAO3a,EAAQtmB,MAAM,KAAM,CAACvtB,GAAKxH,OAAOg2D,GAAQ,KAgHpD,IAAIsB,EAAgB9qE,OAAOY,OAAO,MAwE9B9B,EAAO,QAAc+vD,EACrB/vD,EAAO,SAAeusE,EAEJ,oBAAXnsE,SACPA,OAAM,QAAc2vD,EACpB3vD,OAAM,SAAemsE,OAGXvO,KAAN99D,aACI,MAAO,CACH6vD,QAAWA,EACXwc,SAAYA,IAHd5rE,KAAAX,EAAAM,EAAAN,EAAAC,QAAAD,QAAAwsE,IA3NjB,qCCAO78D,EAAYlN,EAAQ,GAApBkN,QACAkZ,EAAkBpmB,EAAQ,GAA1BomB,cACAvlB,EAAiBb,EAAQ,GAAzBa,aAEFmpE,EAAa,GAUnBxsE,EAAOD,QAAQwpC,cAPO,SAASzyB,GAE3B,IAAK,IAAIgO,KAAO0nD,EACZ5jD,EAAc9R,EAAGzT,EAAayhB,GAAM0nD,EAAW1nD,GAAM,GACrDpV,EAAQoH,EAAG,IAKnB,IAAMpT,EAASlB,EAAQ,IACf0lC,EAAsB1lC,EAAQ,IAA9B0lC,aACAE,EAAsB5lC,EAAQ,IAA9B4lC,kBACAa,EAAsBzmC,EAAQ,IAA9BymC,cACAF,EAAsBvmC,EAAQ,IAA9BumC,aACAI,EAAsB3mC,EAAQ,IAA9B2mC,gBACAX,EAAsBhmC,EAAQ,IAA9BgmC,WACAE,EAAsBlmC,EAAQ,IAA9BkmC,eACAJ,EAAsB9lC,EAAQ,IAA9B8lC,cACAM,EAAsBpmC,EAAQ,IAA9BomC,aAER4jC,EAAU,GAAStkC,EACnBskC,EAAW9oE,EAAOwlC,iBAAmBC,EACrCqjC,EAAW9oE,EAAOykC,eAAiBC,EACnCokC,EAAW9oE,EAAO2kC,gBAAkBC,EACpCkkC,EAAW9oE,EAAO6kC,eAAiBC,EACnCgkC,EAAW9oE,EAAO+kC,gBAAkBC,EACpC8jC,EAAW9oE,EAAOolC,iBAAmBC,EACrCyjC,EAAW9oE,EAAOilC,iBAAmBC,EACrC4jC,EAAW9oE,EAAOslC,eAAiBC,MAK3BI,EAAoB7mC,EAAQ,IAA5B6mC,gBACRmjC,EAAW9oE,EAAO0lC,oBAAsBC","file":"fengari-web.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fengari\"] = factory();\n\telse\n\t\troot[\"fengari\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 34);\n","/**\n@license MIT\n\nCopyright © 2017-2018 Benoit Giannangeli\nCopyright © 2017-2018 Daurnimator\nCopyright © 1994–2017 Lua.org, PUC-Rio.\n*/\n\n\"use strict\";\n\nconst core = require(\"./fengaricore.js\");\n\nmodule.exports.FENGARI_AUTHORS         = core.FENGARI_AUTHORS;\nmodule.exports.FENGARI_COPYRIGHT       = core.FENGARI_COPYRIGHT;\nmodule.exports.FENGARI_RELEASE         = core.FENGARI_RELEASE;\nmodule.exports.FENGARI_VERSION         = core.FENGARI_VERSION;\nmodule.exports.FENGARI_VERSION_MAJOR   = core.FENGARI_VERSION_MAJOR;\nmodule.exports.FENGARI_VERSION_MINOR   = core.FENGARI_VERSION_MINOR;\nmodule.exports.FENGARI_VERSION_NUM     = core.FENGARI_VERSION_NUM;\nmodule.exports.FENGARI_VERSION_RELEASE = core.FENGARI_VERSION_RELEASE;\n\nmodule.exports.luastring_eq      = core.luastring_eq;\nmodule.exports.luastring_indexOf = core.luastring_indexOf;\nmodule.exports.luastring_of      = core.luastring_of;\nmodule.exports.to_jsstring       = core.to_jsstring;\nmodule.exports.to_luastring      = core.to_luastring;\nmodule.exports.to_uristring      = core.to_uristring;\n\nconst luaconf = require('./luaconf.js');\nconst lua     = require('./lua.js');\nconst lauxlib = require('./lauxlib.js');\nconst lualib  = require('./lualib.js');\n\nmodule.exports.luaconf = luaconf;\nmodule.exports.lua     = lua;\nmodule.exports.lauxlib = lauxlib;\nmodule.exports.lualib  = lualib;\n","\"use strict\";\n\n/*\n * Fengari specific string conversion functions\n */\n\nlet luastring_from;\nif (typeof Uint8Array.from === \"function\") {\n    luastring_from = Uint8Array.from.bind(Uint8Array);\n} else {\n    luastring_from = function(a) {\n        let i = 0;\n        let len = a.length;\n        let r = new Uint8Array(len);\n        while (len > i) r[i] = a[i++];\n        return r;\n    };\n}\n\nlet luastring_indexOf;\nif (typeof (new Uint8Array().indexOf) === \"function\") {\n    luastring_indexOf = function(s, v, i) {\n        return s.indexOf(v, i);\n    };\n} else {\n    /* Browsers that don't support Uint8Array.indexOf seem to allow using Array.indexOf on Uint8Array objects e.g. IE11 */\n    let array_indexOf = [].indexOf;\n    if (array_indexOf.call(new Uint8Array(1), 0) !== 0) throw Error(\"missing .indexOf\");\n    luastring_indexOf = function(s, v, i) {\n        return array_indexOf.call(s, v, i);\n    };\n}\n\nlet luastring_of;\nif (typeof Uint8Array.of === \"function\") {\n    luastring_of = Uint8Array.of.bind(Uint8Array);\n} else {\n    luastring_of = function() {\n        return luastring_from(arguments);\n    };\n}\n\nconst is_luastring = function(s) {\n    return s instanceof Uint8Array;\n};\n\n/* test two lua strings for equality */\nconst luastring_eq = function(a, b) {\n    if (a !== b) {\n        let len = a.length;\n        if (len !== b.length) return false;\n        /* XXX: Should this be a constant time algorithm? */\n        for (let i=0; i<len; i++)\n            if (a[i] !== b[i]) return false;\n    }\n    return true;\n};\n\nconst unicode_error_message = \"cannot convert invalid utf8 to javascript string\";\nconst to_jsstring = function(value, from, to, replacement_char) {\n    if (!is_luastring(value)) throw new TypeError(\"to_jsstring expects a Uint8Array\");\n\n    if (to === void 0) {\n        to = value.length;\n    } else {\n        to = Math.min(value.length, to);\n    }\n\n    let str = \"\";\n    for (let i = (from!==void 0?from:0); i < to;) {\n        let u0 = value[i++];\n        if (u0 < 0x80) {\n            /* single byte sequence */\n            str += String.fromCharCode(u0);\n        } else if (u0 < 0xC2 || u0 > 0xF4) {\n            if (!replacement_char) throw RangeError(unicode_error_message);\n            str += \"�\";\n        } else if (u0 <= 0xDF) {\n            /* two byte sequence */\n            if (i >= to) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u1 = value[i++];\n            if ((u1&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            str += String.fromCharCode(((u0 & 0x1F) << 6) + (u1 & 0x3F));\n        } else if (u0 <= 0xEF) {\n            /* three byte sequence */\n            if (i+1 >= to) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u1 = value[i++];\n            if ((u1&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u2 = value[i++];\n            if ((u2&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u = ((u0 & 0x0F) << 12) + ((u1 & 0x3F) << 6) + (u2 & 0x3F);\n            if (u <= 0xFFFF) { /* BMP codepoint */\n                str += String.fromCharCode(u);\n            } else { /* Astral codepoint */\n                u -= 0x10000;\n                let s1 = (u >> 10) + 0xD800;\n                let s2 = (u % 0x400) + 0xDC00;\n                str += String.fromCharCode(s1, s2);\n            }\n        } else {\n            /* four byte sequence */\n            if (i+2 >= to) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u1 = value[i++];\n            if ((u1&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u2 = value[i++];\n            if ((u2&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u3 = value[i++];\n            if ((u3&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            /* Has to be astral codepoint */\n            let u = ((u0 & 0x07) << 18) + ((u1 & 0x3F) << 12) + ((u2 & 0x3F) << 6) + (u3 & 0x3F);\n            u -= 0x10000;\n            let s1 = (u >> 10) + 0xD800;\n            let s2 = (u % 0x400) + 0xDC00;\n            str += String.fromCharCode(s1, s2);\n        }\n    }\n    return str;\n};\n\n/* bytes allowed unescaped in a uri */\nconst uri_allowed = (\";,/?:@&=+$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789,-_.!~*'()#\").split('').reduce(function(uri_allowed, c) {\n    uri_allowed[c.charCodeAt(0)] = true;\n    return uri_allowed;\n}, {});\n\n/* utility function to convert a lua string to a js string with uri escaping */\nconst to_uristring = function(a) {\n    if (!is_luastring(a)) throw new TypeError(\"to_uristring expects a Uint8Array\");\n    let s = \"\";\n    for (let i=0; i<a.length; i++) {\n        let v = a[i];\n        if (uri_allowed[v]) {\n            s += String.fromCharCode(v);\n        } else {\n            s += \"%\" + (v<0x10?\"0\":\"\") + v.toString(16);\n        }\n    }\n    return s;\n};\n\nconst to_luastring_cache = {};\n\nconst to_luastring = function(str, cache) {\n    if (typeof str !== \"string\") throw new TypeError(\"to_luastring expects a javascript string\");\n\n    if (cache) {\n        let cached = to_luastring_cache[str];\n        if (is_luastring(cached)) return cached;\n    }\n\n    let len = str.length;\n    let outU8Array = Array(len); /* array is at *least* going to be length of string */\n    let outIdx = 0;\n    for (let i = 0; i < len; ++i) {\n        let u = str.charCodeAt(i);\n        if (u <= 0x7F) {\n            outU8Array[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n            outU8Array[outIdx++] = 0xC0 | (u >> 6);\n            outU8Array[outIdx++] = 0x80 | (u & 63);\n        } else {\n            /* This part is to work around possible lack of String.codePointAt */\n            if (u >= 0xD800 && u <= 0xDBFF && (i+1) < len) {\n                /* is first half of surrogate pair */\n                let v = str.charCodeAt(i+1);\n                if (v >= 0xDC00 && v <= 0xDFFF) {\n                    /* is valid low surrogate */\n                    i++;\n                    u = (u - 0xD800) * 0x400 + v + 0x2400;\n                }\n            }\n            if (u <= 0xFFFF) {\n                outU8Array[outIdx++] = 0xE0 | (u >> 12);\n                outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n                outU8Array[outIdx++] = 0x80 | (u & 63);\n            } else {\n                outU8Array[outIdx++] = 0xF0 | (u >> 18);\n                outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n                outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n                outU8Array[outIdx++] = 0x80 | (u & 63);\n            }\n        }\n    }\n    outU8Array = luastring_from(outU8Array);\n\n    if (cache) to_luastring_cache[str] = outU8Array;\n\n    return outU8Array;\n};\n\nconst from_userstring = function(str) {\n    if (!is_luastring(str)) {\n        if (typeof str === \"string\") {\n            str = to_luastring(str);\n        } else {\n            throw new TypeError(\"expects an array of bytes or javascript string\");\n        }\n    }\n    return str;\n};\n\nmodule.exports.luastring_from    = luastring_from;\nmodule.exports.luastring_indexOf = luastring_indexOf;\nmodule.exports.luastring_of      = luastring_of;\nmodule.exports.is_luastring      = is_luastring;\nmodule.exports.luastring_eq      = luastring_eq;\nmodule.exports.to_jsstring       = to_jsstring;\nmodule.exports.to_uristring      = to_uristring;\nmodule.exports.to_luastring      = to_luastring;\nmodule.exports.from_userstring   = from_userstring;\n\n\n/* mark for precompiled code ('<esc>Lua') */\nconst LUA_SIGNATURE = to_luastring(\"\\x1bLua\");\n\nconst LUA_VERSION_MAJOR   = \"5\";\nconst LUA_VERSION_MINOR   = \"3\";\nconst LUA_VERSION_NUM     = 503;\nconst LUA_VERSION_RELEASE = \"4\";\n\nconst LUA_VERSION         = \"Lua \" + LUA_VERSION_MAJOR + \".\" + LUA_VERSION_MINOR;\nconst LUA_RELEASE         = LUA_VERSION + \".\" + LUA_VERSION_RELEASE;\nconst LUA_COPYRIGHT       = LUA_RELEASE + \"  Copyright (C) 1994-2017 Lua.org, PUC-Rio\";\nconst LUA_AUTHORS         = \"R. Ierusalimschy, L. H. de Figueiredo, W. Celes\";\n\nmodule.exports.LUA_SIGNATURE       = LUA_SIGNATURE;\nmodule.exports.LUA_VERSION_MAJOR   = LUA_VERSION_MAJOR;\nmodule.exports.LUA_VERSION_MINOR   = LUA_VERSION_MINOR;\nmodule.exports.LUA_VERSION_NUM     = LUA_VERSION_NUM;\nmodule.exports.LUA_VERSION_RELEASE = LUA_VERSION_RELEASE;\nmodule.exports.LUA_VERSION         = LUA_VERSION;\nmodule.exports.LUA_RELEASE         = LUA_RELEASE;\nmodule.exports.LUA_COPYRIGHT       = LUA_COPYRIGHT;\nmodule.exports.LUA_AUTHORS         = LUA_AUTHORS;\n\n\nconst thread_status = {\n    LUA_OK:        0,\n    LUA_YIELD:     1,\n    LUA_ERRRUN:    2,\n    LUA_ERRSYNTAX: 3,\n    LUA_ERRMEM:    4,\n    LUA_ERRGCMM:   5,\n    LUA_ERRERR:    6\n};\n\nconst constant_types = {\n    LUA_TNONE:          -1,\n    LUA_TNIL:           0,\n    LUA_TBOOLEAN:       1,\n    LUA_TLIGHTUSERDATA: 2,\n    LUA_TNUMBER:        3,\n    LUA_TSTRING:        4,\n    LUA_TTABLE:         5,\n    LUA_TFUNCTION:      6,\n    LUA_TUSERDATA:      7,\n    LUA_TTHREAD:        8,\n    LUA_NUMTAGS:        9\n};\n\nconstant_types.LUA_TSHRSTR = constant_types.LUA_TSTRING | (0 << 4);  /* short strings */\nconstant_types.LUA_TLNGSTR = constant_types.LUA_TSTRING | (1 << 4);  /* long strings */\n\nconstant_types.LUA_TNUMFLT = constant_types.LUA_TNUMBER | (0 << 4);  /* float numbers */\nconstant_types.LUA_TNUMINT = constant_types.LUA_TNUMBER | (1 << 4);  /* integer numbers */\n\nconstant_types.LUA_TLCL = constant_types.LUA_TFUNCTION | (0 << 4);  /* Lua closure */\nconstant_types.LUA_TLCF = constant_types.LUA_TFUNCTION | (1 << 4);  /* light C function */\nconstant_types.LUA_TCCL = constant_types.LUA_TFUNCTION | (2 << 4);  /* C closure */\n\n/*\n** Comparison and arithmetic functions\n*/\n\nconst LUA_OPADD  = 0;   /* ORDER TM, ORDER OP */\nconst LUA_OPSUB  = 1;\nconst LUA_OPMUL  = 2;\nconst LUA_OPMOD  = 3;\nconst LUA_OPPOW  = 4;\nconst LUA_OPDIV  = 5;\nconst LUA_OPIDIV = 6;\nconst LUA_OPBAND = 7;\nconst LUA_OPBOR  = 8;\nconst LUA_OPBXOR = 9;\nconst LUA_OPSHL  = 10;\nconst LUA_OPSHR  = 11;\nconst LUA_OPUNM  = 12;\nconst LUA_OPBNOT = 13;\n\nconst LUA_OPEQ = 0;\nconst LUA_OPLT = 1;\nconst LUA_OPLE = 2;\n\nconst LUA_MINSTACK = 20;\n\nconst { LUAI_MAXSTACK } = require('./luaconf.js');\nconst LUA_REGISTRYINDEX = -LUAI_MAXSTACK - 1000;\n\nconst lua_upvalueindex = function(i) {\n    return LUA_REGISTRYINDEX - i;\n};\n\n/* predefined values in the registry */\nconst LUA_RIDX_MAINTHREAD = 1;\nconst LUA_RIDX_GLOBALS    = 2;\nconst LUA_RIDX_LAST       = LUA_RIDX_GLOBALS;\n\nclass lua_Debug {\n    constructor() {\n        this.event = NaN;\n        this.name = null;           /* (n) */\n        this.namewhat = null;       /* (n) 'global', 'local', 'field', 'method' */\n        this.what = null;           /* (S) 'Lua', 'C', 'main', 'tail' */\n        this.source = null;         /* (S) */\n        this.currentline = NaN;     /* (l) */\n        this.linedefined = NaN;     /* (S) */\n        this.lastlinedefined = NaN; /* (S) */\n        this.nups = NaN;            /* (u) number of upvalues */\n        this.nparams = NaN;         /* (u) number of parameters */\n        this.isvararg = NaN;        /* (u) */\n        this.istailcall = NaN;      /* (t) */\n        this.short_src = null;      /* (S) */\n        /* private part */\n        this.i_ci = null;           /* active function */\n    }\n}\n\n/*\n** Event codes\n*/\nconst LUA_HOOKCALL     = 0;\nconst LUA_HOOKRET      = 1;\nconst LUA_HOOKLINE     = 2;\nconst LUA_HOOKCOUNT    = 3;\nconst LUA_HOOKTAILCALL = 4;\n\n\n/*\n** Event masks\n*/\nconst LUA_MASKCALL  = (1 << LUA_HOOKCALL);\nconst LUA_MASKRET   = (1 << LUA_HOOKRET);\nconst LUA_MASKLINE  = (1 << LUA_HOOKLINE);\nconst LUA_MASKCOUNT = (1 << LUA_HOOKCOUNT);\n\nmodule.exports.LUA_HOOKCALL            = LUA_HOOKCALL;\nmodule.exports.LUA_HOOKCOUNT           = LUA_HOOKCOUNT;\nmodule.exports.LUA_HOOKLINE            = LUA_HOOKLINE;\nmodule.exports.LUA_HOOKRET             = LUA_HOOKRET;\nmodule.exports.LUA_HOOKTAILCALL        = LUA_HOOKTAILCALL;\nmodule.exports.LUA_MASKCALL            = LUA_MASKCALL;\nmodule.exports.LUA_MASKCOUNT           = LUA_MASKCOUNT;\nmodule.exports.LUA_MASKLINE            = LUA_MASKLINE;\nmodule.exports.LUA_MASKRET             = LUA_MASKRET;\nmodule.exports.LUA_MINSTACK            = LUA_MINSTACK;\nmodule.exports.LUA_MULTRET             = -1;\nmodule.exports.LUA_OPADD               = LUA_OPADD;\nmodule.exports.LUA_OPBAND              = LUA_OPBAND;\nmodule.exports.LUA_OPBNOT              = LUA_OPBNOT;\nmodule.exports.LUA_OPBOR               = LUA_OPBOR;\nmodule.exports.LUA_OPBXOR              = LUA_OPBXOR;\nmodule.exports.LUA_OPDIV               = LUA_OPDIV;\nmodule.exports.LUA_OPEQ                = LUA_OPEQ;\nmodule.exports.LUA_OPIDIV              = LUA_OPIDIV;\nmodule.exports.LUA_OPLE                = LUA_OPLE;\nmodule.exports.LUA_OPLT                = LUA_OPLT;\nmodule.exports.LUA_OPMOD               = LUA_OPMOD;\nmodule.exports.LUA_OPMUL               = LUA_OPMUL;\nmodule.exports.LUA_OPPOW               = LUA_OPPOW;\nmodule.exports.LUA_OPSHL               = LUA_OPSHL;\nmodule.exports.LUA_OPSHR               = LUA_OPSHR;\nmodule.exports.LUA_OPSUB               = LUA_OPSUB;\nmodule.exports.LUA_OPUNM               = LUA_OPUNM;\nmodule.exports.LUA_REGISTRYINDEX       = LUA_REGISTRYINDEX;\nmodule.exports.LUA_RIDX_GLOBALS        = LUA_RIDX_GLOBALS;\nmodule.exports.LUA_RIDX_LAST           = LUA_RIDX_LAST;\nmodule.exports.LUA_RIDX_MAINTHREAD     = LUA_RIDX_MAINTHREAD;\nmodule.exports.constant_types          = constant_types;\nmodule.exports.lua_Debug               = lua_Debug;\nmodule.exports.lua_upvalueindex        = lua_upvalueindex;\nmodule.exports.thread_status           = thread_status;\n","\"use strict\";\n\nconst defs   = require(\"./defs.js\");\nconst lapi   = require(\"./lapi.js\");\nconst ldebug = require(\"./ldebug.js\");\nconst ldo    = require(\"./ldo.js\");\nconst lstate = require(\"./lstate.js\");\n\nmodule.exports.LUA_AUTHORS             = defs.LUA_AUTHORS;\nmodule.exports.LUA_COPYRIGHT           = defs.LUA_COPYRIGHT;\nmodule.exports.LUA_ERRERR              = defs.thread_status.LUA_ERRERR;\nmodule.exports.LUA_ERRGCMM             = defs.thread_status.LUA_ERRGCMM;\nmodule.exports.LUA_ERRMEM              = defs.thread_status.LUA_ERRMEM;\nmodule.exports.LUA_ERRRUN              = defs.thread_status.LUA_ERRRUN;\nmodule.exports.LUA_ERRSYNTAX           = defs.thread_status.LUA_ERRSYNTAX;\nmodule.exports.LUA_HOOKCALL            = defs.LUA_HOOKCALL;\nmodule.exports.LUA_HOOKCOUNT           = defs.LUA_HOOKCOUNT;\nmodule.exports.LUA_HOOKLINE            = defs.LUA_HOOKLINE;\nmodule.exports.LUA_HOOKRET             = defs.LUA_HOOKRET;\nmodule.exports.LUA_HOOKTAILCALL        = defs.LUA_HOOKTAILCALL;\nmodule.exports.LUA_MASKCALL            = defs.LUA_MASKCALL;\nmodule.exports.LUA_MASKCOUNT           = defs.LUA_MASKCOUNT;\nmodule.exports.LUA_MASKLINE            = defs.LUA_MASKLINE;\nmodule.exports.LUA_MASKRET             = defs.LUA_MASKRET;\nmodule.exports.LUA_MINSTACK            = defs.LUA_MINSTACK;\nmodule.exports.LUA_MULTRET             = defs.LUA_MULTRET;\nmodule.exports.LUA_NUMTAGS             = defs.constant_types.LUA_NUMTAGS;\nmodule.exports.LUA_OK                  = defs.thread_status.LUA_OK;\nmodule.exports.LUA_OPADD               = defs.LUA_OPADD;\nmodule.exports.LUA_OPBAND              = defs.LUA_OPBAND;\nmodule.exports.LUA_OPBNOT              = defs.LUA_OPBNOT;\nmodule.exports.LUA_OPBOR               = defs.LUA_OPBOR;\nmodule.exports.LUA_OPBXOR              = defs.LUA_OPBXOR;\nmodule.exports.LUA_OPDIV               = defs.LUA_OPDIV;\nmodule.exports.LUA_OPEQ                = defs.LUA_OPEQ;\nmodule.exports.LUA_OPIDIV              = defs.LUA_OPIDIV;\nmodule.exports.LUA_OPLE                = defs.LUA_OPLE;\nmodule.exports.LUA_OPLT                = defs.LUA_OPLT;\nmodule.exports.LUA_OPMOD               = defs.LUA_OPMOD;\nmodule.exports.LUA_OPMUL               = defs.LUA_OPMUL;\nmodule.exports.LUA_OPPOW               = defs.LUA_OPPOW;\nmodule.exports.LUA_OPSHL               = defs.LUA_OPSHL;\nmodule.exports.LUA_OPSHR               = defs.LUA_OPSHR;\nmodule.exports.LUA_OPSUB               = defs.LUA_OPSUB;\nmodule.exports.LUA_OPUNM               = defs.LUA_OPUNM;\nmodule.exports.LUA_REGISTRYINDEX       = defs.LUA_REGISTRYINDEX;\nmodule.exports.LUA_RELEASE             = defs.LUA_RELEASE;\nmodule.exports.LUA_RIDX_GLOBALS        = defs.LUA_RIDX_GLOBALS;\nmodule.exports.LUA_RIDX_LAST           = defs.LUA_RIDX_LAST;\nmodule.exports.LUA_RIDX_MAINTHREAD     = defs.LUA_RIDX_MAINTHREAD;\nmodule.exports.LUA_SIGNATURE           = defs.LUA_SIGNATURE;\nmodule.exports.LUA_TNONE               = defs.constant_types.LUA_TNONE;\nmodule.exports.LUA_TNIL                = defs.constant_types.LUA_TNIL;\nmodule.exports.LUA_TBOOLEAN            = defs.constant_types.LUA_TBOOLEAN;\nmodule.exports.LUA_TLIGHTUSERDATA      = defs.constant_types.LUA_TLIGHTUSERDATA;\nmodule.exports.LUA_TNUMBER             = defs.constant_types.LUA_TNUMBER;\nmodule.exports.LUA_TSTRING             = defs.constant_types.LUA_TSTRING;\nmodule.exports.LUA_TTABLE              = defs.constant_types.LUA_TTABLE;\nmodule.exports.LUA_TFUNCTION           = defs.constant_types.LUA_TFUNCTION;\nmodule.exports.LUA_TUSERDATA           = defs.constant_types.LUA_TUSERDATA;\nmodule.exports.LUA_TTHREAD             = defs.constant_types.LUA_TTHREAD;\nmodule.exports.LUA_VERSION             = defs.LUA_VERSION;\nmodule.exports.LUA_VERSION_MAJOR       = defs.LUA_VERSION_MAJOR;\nmodule.exports.LUA_VERSION_MINOR       = defs.LUA_VERSION_MINOR;\nmodule.exports.LUA_VERSION_NUM         = defs.LUA_VERSION_NUM;\nmodule.exports.LUA_VERSION_RELEASE     = defs.LUA_VERSION_RELEASE;\nmodule.exports.LUA_YIELD               = defs.thread_status.LUA_YIELD;\nmodule.exports.lua_Debug               = defs.lua_Debug;\nmodule.exports.lua_upvalueindex        = defs.lua_upvalueindex;\nmodule.exports.lua_absindex            = lapi.lua_absindex;\nmodule.exports.lua_arith               = lapi.lua_arith;\nmodule.exports.lua_atpanic             = lapi.lua_atpanic;\nmodule.exports.lua_atnativeerror       = lapi.lua_atnativeerror;\nmodule.exports.lua_call                = lapi.lua_call;\nmodule.exports.lua_callk               = lapi.lua_callk;\nmodule.exports.lua_checkstack          = lapi.lua_checkstack;\nmodule.exports.lua_close               = lstate.lua_close;\nmodule.exports.lua_compare             = lapi.lua_compare;\nmodule.exports.lua_concat              = lapi.lua_concat;\nmodule.exports.lua_copy                = lapi.lua_copy;\nmodule.exports.lua_createtable         = lapi.lua_createtable;\nmodule.exports.lua_dump                = lapi.lua_dump;\nmodule.exports.lua_error               = lapi.lua_error;\nmodule.exports.lua_gc                  = lapi.lua_gc;\nmodule.exports.lua_getallocf           = lapi.lua_getallocf;\nmodule.exports.lua_getextraspace       = lapi.lua_getextraspace;\nmodule.exports.lua_getfield            = lapi.lua_getfield;\nmodule.exports.lua_getglobal           = lapi.lua_getglobal;\nmodule.exports.lua_gethook             = ldebug.lua_gethook;\nmodule.exports.lua_gethookcount        = ldebug.lua_gethookcount;\nmodule.exports.lua_gethookmask         = ldebug.lua_gethookmask;\nmodule.exports.lua_geti                = lapi.lua_geti;\nmodule.exports.lua_getinfo             = ldebug.lua_getinfo;\nmodule.exports.lua_getlocal            = ldebug.lua_getlocal;\nmodule.exports.lua_getmetatable        = lapi.lua_getmetatable;\nmodule.exports.lua_getstack            = ldebug.lua_getstack;\nmodule.exports.lua_gettable            = lapi.lua_gettable;\nmodule.exports.lua_gettop              = lapi.lua_gettop;\nmodule.exports.lua_getupvalue          = lapi.lua_getupvalue;\nmodule.exports.lua_getuservalue        = lapi.lua_getuservalue;\nmodule.exports.lua_insert              = lapi.lua_insert;\nmodule.exports.lua_isboolean           = lapi.lua_isboolean;\nmodule.exports.lua_iscfunction         = lapi.lua_iscfunction;\nmodule.exports.lua_isfunction          = lapi.lua_isfunction;\nmodule.exports.lua_isinteger           = lapi.lua_isinteger;\nmodule.exports.lua_islightuserdata     = lapi.lua_islightuserdata;\nmodule.exports.lua_isnil               = lapi.lua_isnil;\nmodule.exports.lua_isnone              = lapi.lua_isnone;\nmodule.exports.lua_isnoneornil         = lapi.lua_isnoneornil;\nmodule.exports.lua_isnumber            = lapi.lua_isnumber;\nmodule.exports.lua_isproxy             = lapi.lua_isproxy;\nmodule.exports.lua_isstring            = lapi.lua_isstring;\nmodule.exports.lua_istable             = lapi.lua_istable;\nmodule.exports.lua_isthread            = lapi.lua_isthread;\nmodule.exports.lua_isuserdata          = lapi.lua_isuserdata;\nmodule.exports.lua_isyieldable         = ldo.lua_isyieldable;\nmodule.exports.lua_len                 = lapi.lua_len;\nmodule.exports.lua_load                = lapi.lua_load;\nmodule.exports.lua_newstate            = lstate.lua_newstate;\nmodule.exports.lua_newtable            = lapi.lua_newtable;\nmodule.exports.lua_newthread           = lstate.lua_newthread;\nmodule.exports.lua_newuserdata         = lapi.lua_newuserdata;\nmodule.exports.lua_next                = lapi.lua_next;\nmodule.exports.lua_pcall               = lapi.lua_pcall;\nmodule.exports.lua_pcallk              = lapi.lua_pcallk;\nmodule.exports.lua_pop                 = lapi.lua_pop;\nmodule.exports.lua_pushboolean         = lapi.lua_pushboolean;\nmodule.exports.lua_pushcclosure        = lapi.lua_pushcclosure;\nmodule.exports.lua_pushcfunction       = lapi.lua_pushcfunction;\nmodule.exports.lua_pushfstring         = lapi.lua_pushfstring;\nmodule.exports.lua_pushglobaltable     = lapi.lua_pushglobaltable;\nmodule.exports.lua_pushinteger         = lapi.lua_pushinteger;\nmodule.exports.lua_pushjsclosure       = lapi.lua_pushjsclosure;\nmodule.exports.lua_pushjsfunction      = lapi.lua_pushjsfunction;\nmodule.exports.lua_pushlightuserdata   = lapi.lua_pushlightuserdata;\nmodule.exports.lua_pushliteral         = lapi.lua_pushliteral;\nmodule.exports.lua_pushlstring         = lapi.lua_pushlstring;\nmodule.exports.lua_pushnil             = lapi.lua_pushnil;\nmodule.exports.lua_pushnumber          = lapi.lua_pushnumber;\nmodule.exports.lua_pushstring          = lapi.lua_pushstring;\nmodule.exports.lua_pushthread          = lapi.lua_pushthread;\nmodule.exports.lua_pushvalue           = lapi.lua_pushvalue;\nmodule.exports.lua_pushvfstring        = lapi.lua_pushvfstring;\nmodule.exports.lua_rawequal            = lapi.lua_rawequal;\nmodule.exports.lua_rawget              = lapi.lua_rawget;\nmodule.exports.lua_rawgeti             = lapi.lua_rawgeti;\nmodule.exports.lua_rawgetp             = lapi.lua_rawgetp;\nmodule.exports.lua_rawlen              = lapi.lua_rawlen;\nmodule.exports.lua_rawset              = lapi.lua_rawset;\nmodule.exports.lua_rawseti             = lapi.lua_rawseti;\nmodule.exports.lua_rawsetp             = lapi.lua_rawsetp;\nmodule.exports.lua_register            = lapi.lua_register;\nmodule.exports.lua_remove              = lapi.lua_remove;\nmodule.exports.lua_replace             = lapi.lua_replace;\nmodule.exports.lua_resume              = ldo.lua_resume;\nmodule.exports.lua_rotate              = lapi.lua_rotate;\nmodule.exports.lua_setallof            = ldo.lua_setallof;\nmodule.exports.lua_setfield            = lapi.lua_setfield;\nmodule.exports.lua_setglobal           = lapi.lua_setglobal;\nmodule.exports.lua_sethook             = ldebug.lua_sethook;\nmodule.exports.lua_seti                = lapi.lua_seti;\nmodule.exports.lua_setlocal            = ldebug.lua_setlocal;\nmodule.exports.lua_setmetatable        = lapi.lua_setmetatable;\nmodule.exports.lua_settable            = lapi.lua_settable;\nmodule.exports.lua_settop              = lapi.lua_settop;\nmodule.exports.lua_setupvalue          = lapi.lua_setupvalue;\nmodule.exports.lua_setuservalue        = lapi.lua_setuservalue;\nmodule.exports.lua_status              = lapi.lua_status;\nmodule.exports.lua_stringtonumber      = lapi.lua_stringtonumber;\nmodule.exports.lua_toboolean           = lapi.lua_toboolean;\nmodule.exports.lua_todataview          = lapi.lua_todataview;\nmodule.exports.lua_tointeger           = lapi.lua_tointeger;\nmodule.exports.lua_tointegerx          = lapi.lua_tointegerx;\nmodule.exports.lua_tojsstring          = lapi.lua_tojsstring;\nmodule.exports.lua_tolstring           = lapi.lua_tolstring;\nmodule.exports.lua_tonumber            = lapi.lua_tonumber;\nmodule.exports.lua_tonumberx           = lapi.lua_tonumberx;\nmodule.exports.lua_topointer           = lapi.lua_topointer;\nmodule.exports.lua_toproxy             = lapi.lua_toproxy;\nmodule.exports.lua_tostring            = lapi.lua_tostring;\nmodule.exports.lua_tothread            = lapi.lua_tothread;\nmodule.exports.lua_touserdata          = lapi.lua_touserdata;\nmodule.exports.lua_type                = lapi.lua_type;\nmodule.exports.lua_typename            = lapi.lua_typename;\nmodule.exports.lua_upvalueid           = lapi.lua_upvalueid;\nmodule.exports.lua_upvaluejoin         = lapi.lua_upvaluejoin;\nmodule.exports.lua_version             = lapi.lua_version;\nmodule.exports.lua_xmove               = lapi.lua_xmove;\nmodule.exports.lua_yield               = ldo.lua_yield;\nmodule.exports.lua_yieldk              = ldo.lua_yieldk;\nmodule.exports.lua_tocfunction         = lapi.lua_tocfunction;\n","\"use strict\";\n\nconst conf = (process.env.FENGARICONF ? JSON.parse(process.env.FENGARICONF) : {});\n\nconst {\n    LUA_VERSION_MAJOR,\n    LUA_VERSION_MINOR,\n    to_luastring\n} = require('./defs.js');\n\n/*\n** LUA_PATH_SEP is the character that separates templates in a path.\n** LUA_PATH_MARK is the string that marks the substitution points in a\n** template.\n** LUA_EXEC_DIR in a Windows path is replaced by the executable's\n** directory.\n*/\nconst LUA_PATH_SEP  = \";\";\nmodule.exports.LUA_PATH_SEP = LUA_PATH_SEP;\n\nconst LUA_PATH_MARK = \"?\";\nmodule.exports.LUA_PATH_MARK = LUA_PATH_MARK;\n\nconst LUA_EXEC_DIR  = \"!\";\nmodule.exports.LUA_EXEC_DIR = LUA_EXEC_DIR;\n\n/*\n@@ LUA_PATH_DEFAULT is the default path that Lua uses to look for\n** Lua libraries.\n@@ LUA_JSPATH_DEFAULT is the default path that Lua uses to look for\n** JS libraries.\n** CHANGE them if your machine has a non-conventional directory\n** hierarchy or if you want to install your libraries in\n** non-conventional directories.\n*/\nconst LUA_VDIR = LUA_VERSION_MAJOR + \".\" + LUA_VERSION_MINOR;\nmodule.exports.LUA_VDIR = LUA_VDIR;\n\nif (typeof process === \"undefined\") {\n    const LUA_DIRSEP = \"/\";\n    module.exports.LUA_DIRSEP = LUA_DIRSEP;\n\n    const LUA_LDIR = \"./lua/\" + LUA_VDIR + \"/\";\n    module.exports.LUA_LDIR = LUA_LDIR;\n\n    const LUA_JSDIR = LUA_LDIR;\n    module.exports.LUA_JSDIR = LUA_JSDIR;\n\n    const LUA_PATH_DEFAULT = to_luastring(\n        LUA_LDIR + \"?.lua;\" + LUA_LDIR + \"?/init.lua;\" +\n        /* LUA_JSDIR excluded as it is equal to LUA_LDIR */\n        \"./?.lua;./?/init.lua\"\n    );\n    module.exports.LUA_PATH_DEFAULT = LUA_PATH_DEFAULT;\n\n    const LUA_JSPATH_DEFAULT = to_luastring(\n        LUA_JSDIR + \"?.js;\" + LUA_JSDIR + \"loadall.js;./?.js\"\n    );\n    module.exports.LUA_JSPATH_DEFAULT = LUA_JSPATH_DEFAULT;\n} else if (require('os').platform() === 'win32') {\n    const LUA_DIRSEP = \"\\\\\";\n    module.exports.LUA_DIRSEP = LUA_DIRSEP;\n\n    /*\n    ** In Windows, any exclamation mark ('!') in the path is replaced by the\n    ** path of the directory of the executable file of the current process.\n    */\n    const LUA_LDIR = \"!\\\\lua\\\\\";\n    module.exports.LUA_LDIR = LUA_LDIR;\n\n    const LUA_JSDIR = \"!\\\\\";\n    module.exports.LUA_JSDIR = LUA_JSDIR;\n\n    const LUA_SHRDIR = \"!\\\\..\\\\share\\\\lua\\\\\" + LUA_VDIR + \"\\\\\";\n    module.exports.LUA_SHRDIR = LUA_SHRDIR;\n\n    const LUA_PATH_DEFAULT = to_luastring(\n        LUA_LDIR + \"?.lua;\" + LUA_LDIR + \"?\\\\init.lua;\" +\n        LUA_JSDIR + \"?.lua;\" + LUA_JSDIR + \"?\\\\init.lua;\" +\n        LUA_SHRDIR + \"?.lua;\" + LUA_SHRDIR + \"?\\\\init.lua;\" +\n        \".\\\\?.lua;.\\\\?\\\\init.lua\"\n    );\n    module.exports.LUA_PATH_DEFAULT = LUA_PATH_DEFAULT;\n\n    const LUA_JSPATH_DEFAULT = to_luastring(\n        LUA_JSDIR + \"?.js;\" +\n        LUA_JSDIR + \"..\\\\share\\\\lua\\\\\" + LUA_VDIR + \"\\\\?.js;\" +\n        LUA_JSDIR + \"loadall.js;.\\\\?.js\"\n    );\n    module.exports.LUA_JSPATH_DEFAULT = LUA_JSPATH_DEFAULT;\n} else {\n    const LUA_DIRSEP = \"/\";\n    module.exports.LUA_DIRSEP = LUA_DIRSEP;\n\n    const LUA_ROOT = \"/usr/local/\";\n    module.exports.LUA_ROOT = LUA_ROOT;\n    const LUA_ROOT2 = \"/usr/\";\n\n    const LUA_LDIR = LUA_ROOT + \"share/lua/\" + LUA_VDIR + \"/\";\n    const LUA_LDIR2 = LUA_ROOT2 + \"share/lua/\" + LUA_VDIR + \"/\";\n    module.exports.LUA_LDIR = LUA_LDIR;\n\n    const LUA_JSDIR = LUA_LDIR;\n    module.exports.LUA_JSDIR = LUA_JSDIR;\n    const LUA_JSDIR2 = LUA_LDIR2;\n\n    const LUA_PATH_DEFAULT = to_luastring(\n        LUA_LDIR + \"?.lua;\" + LUA_LDIR + \"?/init.lua;\" +\n        LUA_LDIR2 + \"?.lua;\" + LUA_LDIR2 + \"?/init.lua;\" +\n        /* LUA_JSDIR(2) excluded as it is equal to LUA_LDIR(2) */\n        \"./?.lua;./?/init.lua\"\n    );\n    module.exports.LUA_PATH_DEFAULT = LUA_PATH_DEFAULT;\n\n    const LUA_JSPATH_DEFAULT = to_luastring(\n        LUA_JSDIR + \"?.js;\" + LUA_JSDIR + \"loadall.js;\" +\n        LUA_JSDIR2 + \"?.js;\" + LUA_JSDIR2 + \"loadall.js;\" +\n        \"./?.js\"\n    );\n    module.exports.LUA_JSPATH_DEFAULT = LUA_JSPATH_DEFAULT;\n}\n\n/*\n@@ LUA_COMPAT_FLOATSTRING makes Lua format integral floats without a\n@@ a float mark ('.0').\n** This macro is not on by default even in compatibility mode,\n** because this is not really an incompatibility.\n*/\nconst LUA_COMPAT_FLOATSTRING = conf.LUA_COMPAT_FLOATSTRING || false;\n\nconst LUA_MAXINTEGER = 2147483647;\nconst LUA_MININTEGER = -2147483648;\n\n/*\n@@ LUAI_MAXSTACK limits the size of the Lua stack.\n** CHANGE it if you need a different limit. This limit is arbitrary;\n** its only purpose is to stop Lua from consuming unlimited stack\n** space (and to reserve some numbers for pseudo-indices).\n*/\nconst LUAI_MAXSTACK = conf.LUAI_MAXSTACK || 1000000;\n\n/*\n@@ LUA_IDSIZE gives the maximum size for the description of the source\n@@ of a function in debug information.\n** CHANGE it if you want a different size.\n*/\nconst LUA_IDSIZE = conf.LUA_IDSIZE || (60-1); /* fengari uses 1 less than lua as we don't embed the null byte */\n\nconst lua_integer2str = function(n) {\n    return String(n); /* should match behaviour of LUA_INTEGER_FMT */\n};\n\nconst lua_number2str = function(n) {\n    return String(Number(n.toPrecision(14))); /* should match behaviour of LUA_NUMBER_FMT */\n};\n\nconst lua_numbertointeger = function(n) {\n    return n >= LUA_MININTEGER && n < -LUA_MININTEGER ? n : false;\n};\n\nconst LUA_INTEGER_FRMLEN = \"\";\nconst LUA_NUMBER_FRMLEN = \"\";\n\nconst LUA_INTEGER_FMT = `%${LUA_INTEGER_FRMLEN}d`;\nconst LUA_NUMBER_FMT  = \"%.14g\";\n\nconst lua_getlocaledecpoint = function() {\n    /* we hard-code the decimal point to '.' as a user cannot change the\n       locale in most JS environments, and in that you can, a multi-byte\n       locale is common.\n    */\n    return 46 /* '.'.charCodeAt(0) */;\n};\n\nconst luai_apicheck = function(l, e) {\n    if (!e) throw Error(e);\n};\n\n/*\n@@ LUAL_BUFFERSIZE is the buffer size used by the lauxlib buffer system.\n*/\nconst LUAL_BUFFERSIZE = conf.LUAL_BUFFERSIZE || 8192;\n\n// See: http://croquetweak.blogspot.fr/2014/08/deconstructing-floats-frexp-and-ldexp.html\nconst frexp = function(value) {\n    if (value === 0) return [value, 0];\n    var data = new DataView(new ArrayBuffer(8));\n    data.setFloat64(0, value);\n    var bits = (data.getUint32(0) >>> 20) & 0x7FF;\n    if (bits === 0) { // denormal\n        data.setFloat64(0, value * Math.pow(2, 64));  // exp + 64\n        bits = ((data.getUint32(0) >>> 20) & 0x7FF) - 64;\n    }\n    var exponent = bits - 1022;\n    var mantissa = ldexp(value, -exponent);\n    return [mantissa, exponent];\n};\n\nconst ldexp = function(mantissa, exponent) {\n    var steps = Math.min(3, Math.ceil(Math.abs(exponent) / 1023));\n    var result = mantissa;\n    for (var i = 0; i < steps; i++)\n        result *= Math.pow(2, Math.floor((exponent + i) / steps));\n    return result;\n};\n\nmodule.exports.LUAI_MAXSTACK          = LUAI_MAXSTACK;\nmodule.exports.LUA_COMPAT_FLOATSTRING = LUA_COMPAT_FLOATSTRING;\nmodule.exports.LUA_IDSIZE             = LUA_IDSIZE;\nmodule.exports.LUA_INTEGER_FMT        = LUA_INTEGER_FMT;\nmodule.exports.LUA_INTEGER_FRMLEN     = LUA_INTEGER_FRMLEN;\nmodule.exports.LUA_MAXINTEGER         = LUA_MAXINTEGER;\nmodule.exports.LUA_MININTEGER         = LUA_MININTEGER;\nmodule.exports.LUA_NUMBER_FMT         = LUA_NUMBER_FMT;\nmodule.exports.LUA_NUMBER_FRMLEN      = LUA_NUMBER_FRMLEN;\nmodule.exports.LUAL_BUFFERSIZE        = LUAL_BUFFERSIZE;\nmodule.exports.frexp                  = frexp;\nmodule.exports.ldexp                  = ldexp;\nmodule.exports.lua_getlocaledecpoint  = lua_getlocaledecpoint;\nmodule.exports.lua_integer2str        = lua_integer2str;\nmodule.exports.lua_number2str         = lua_number2str;\nmodule.exports.lua_numbertointeger    = lua_numbertointeger;\nmodule.exports.luai_apicheck          = luai_apicheck;\n","\"use strict\";\n\nconst { luai_apicheck } = require(\"./luaconf.js\");\n\nconst lua_assert = function(c) {\n    if (!c) throw Error(\"assertion failed\");\n};\nmodule.exports.lua_assert = lua_assert;\n\nmodule.exports.luai_apicheck = luai_apicheck || function(l, e) { return lua_assert(e); };\n\nconst api_check = function(l, e, msg) {\n    return luai_apicheck(l, e && msg);\n};\nmodule.exports.api_check = api_check;\n\nconst LUAI_MAXCCALLS = 200;\nmodule.exports.LUAI_MAXCCALLS = LUAI_MAXCCALLS;\n\n/* minimum size for string buffer */\nconst LUA_MINBUFFER = 32;\nmodule.exports.LUA_MINBUFFER = LUA_MINBUFFER;\n\nconst luai_nummod = function(L, a, b) {\n    let m = a % b;\n    if ((m*b) < 0)\n        m += b;\n    return m;\n};\nmodule.exports.luai_nummod = luai_nummod;\n\n// If later integers are more than 32bit, LUA_MAXINTEGER will then be != MAX_INT\nconst MAX_INT = 2147483647;\nmodule.exports.MAX_INT = MAX_INT;\nconst MIN_INT = -2147483648;\nmodule.exports.MIN_INT = MIN_INT;\n","/* Fengari specific functions\n *\n * This file includes fengari-specific data or and functionality for users to\n * manipulate fengari's string type.\n * The fields are exposed to the user on the 'fengari' entry point; however to\n * avoid a dependency on defs.js from lauxlib.js they are defined in this file.\n */\n\nconst defs = require(\"./defs.js\");\n\nconst FENGARI_VERSION_MAJOR   = \"0\";\nconst FENGARI_VERSION_MINOR   = \"1\";\nconst FENGARI_VERSION_NUM     = 1;\nconst FENGARI_VERSION_RELEASE = \"4\";\nconst FENGARI_VERSION         = \"Fengari \" + FENGARI_VERSION_MAJOR + \".\" + FENGARI_VERSION_MINOR;\nconst FENGARI_RELEASE         = FENGARI_VERSION + \".\" + FENGARI_VERSION_RELEASE;\nconst FENGARI_AUTHORS         = \"B. Giannangeli, Daurnimator\";\nconst FENGARI_COPYRIGHT       = FENGARI_RELEASE + \"  Copyright (C) 2017-2018 \" + FENGARI_AUTHORS + \"\\nBased on: \" + defs.LUA_COPYRIGHT;\n\nmodule.exports.FENGARI_AUTHORS         = FENGARI_AUTHORS;\nmodule.exports.FENGARI_COPYRIGHT       = FENGARI_COPYRIGHT;\nmodule.exports.FENGARI_RELEASE         = FENGARI_RELEASE;\nmodule.exports.FENGARI_VERSION         = FENGARI_VERSION;\nmodule.exports.FENGARI_VERSION_MAJOR   = FENGARI_VERSION_MAJOR;\nmodule.exports.FENGARI_VERSION_MINOR   = FENGARI_VERSION_MINOR;\nmodule.exports.FENGARI_VERSION_NUM     = FENGARI_VERSION_NUM;\nmodule.exports.FENGARI_VERSION_RELEASE = FENGARI_VERSION_RELEASE;\nmodule.exports.is_luastring            = defs.is_luastring;\nmodule.exports.luastring_eq            = defs.luastring_eq;\nmodule.exports.luastring_from          = defs.luastring_from;\nmodule.exports.luastring_indexOf       = defs.luastring_indexOf;\nmodule.exports.luastring_of            = defs.luastring_of;\nmodule.exports.to_jsstring             = defs.to_jsstring;\nmodule.exports.to_luastring            = defs.to_luastring;\nmodule.exports.to_uristring            = defs.to_uristring;\nmodule.exports.from_userstring         = defs.from_userstring;\n","\"use strict\";\n\nconst {\n    LUA_OPADD,\n    LUA_OPBAND,\n    LUA_OPBNOT,\n    LUA_OPBOR,\n    LUA_OPBXOR,\n    LUA_OPDIV,\n    LUA_OPIDIV,\n    LUA_OPMOD,\n    LUA_OPMUL,\n    LUA_OPPOW,\n    LUA_OPSHL,\n    LUA_OPSHR,\n    LUA_OPSUB,\n    LUA_OPUNM,\n    constant_types: {\n        LUA_NUMTAGS,\n        LUA_TBOOLEAN,\n        LUA_TCCL,\n        LUA_TFUNCTION,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMBER,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TSTRING,\n        LUA_TTABLE,\n        LUA_TTHREAD,\n        LUA_TUSERDATA\n    },\n    from_userstring,\n    luastring_indexOf,\n    luastring_of,\n    to_jsstring,\n    to_luastring\n} = require('./defs.js');\nconst {\n    lisdigit,\n    lisprint,\n    lisspace,\n    lisxdigit\n} = require('./ljstype.js');\nconst ldebug  = require('./ldebug.js');\nconst ldo     = require('./ldo.js');\nconst lstate  = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_new\n} = require('./lstring.js');\nconst ltable  = require('./ltable.js');\nconst {\n    LUA_COMPAT_FLOATSTRING,\n    ldexp,\n    lua_integer2str,\n    lua_number2str\n} = require('./luaconf.js');\nconst lvm     = require('./lvm.js');\nconst {\n    MAX_INT,\n    luai_nummod,\n    lua_assert\n} = require(\"./llimits.js\");\nconst ltm     = require('./ltm.js');\n\nconst LUA_TPROTO = LUA_NUMTAGS;\nconst LUA_TDEADKEY = LUA_NUMTAGS+1;\n\nclass TValue {\n\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n\n    /* type tag of a TValue (bits 0-3 for tags + variant bits 4-5) */\n    ttype() {\n        return this.type & 0x3F;\n    }\n\n    /* type tag of a TValue with no variants (bits 0-3) */\n    ttnov() {\n        return this.type & 0x0F;\n    }\n\n    checktag(t) {\n        return this.type === t;\n    }\n\n    checktype(t) {\n        return this.ttnov() === t;\n    }\n\n    ttisnumber() {\n        return this.checktype(LUA_TNUMBER);\n    }\n\n    ttisfloat() {\n        return this.checktag(LUA_TNUMFLT);\n    }\n\n    ttisinteger() {\n        return this.checktag(LUA_TNUMINT);\n    }\n\n    ttisnil() {\n        return this.checktag(LUA_TNIL);\n    }\n\n    ttisboolean() {\n        return this.checktag(LUA_TBOOLEAN);\n    }\n\n    ttislightuserdata() {\n        return this.checktag(LUA_TLIGHTUSERDATA);\n    }\n\n    ttisstring() {\n        return this.checktype(LUA_TSTRING);\n    }\n\n    ttisshrstring() {\n        return this.checktag(LUA_TSHRSTR);\n    }\n\n    ttislngstring() {\n        return this.checktag(LUA_TLNGSTR);\n    }\n\n    ttistable() {\n        return this.checktag(LUA_TTABLE);\n    }\n\n    ttisfunction() {\n        return this.checktype(LUA_TFUNCTION);\n    }\n\n    ttisclosure() {\n        return (this.type & 0x1F) === LUA_TFUNCTION;\n    }\n\n    ttisCclosure() {\n        return this.checktag(LUA_TCCL);\n    }\n\n    ttisLclosure() {\n        return this.checktag(LUA_TLCL);\n    }\n\n    ttislcf() {\n        return this.checktag(LUA_TLCF);\n    }\n\n    ttisfulluserdata() {\n        return this.checktag(LUA_TUSERDATA);\n    }\n\n    ttisthread() {\n        return this.checktag(LUA_TTHREAD);\n    }\n\n    ttisdeadkey() {\n        return this.checktag(LUA_TDEADKEY);\n    }\n\n    l_isfalse() {\n        return this.ttisnil() || (this.ttisboolean() && this.value === false);\n    }\n\n    setfltvalue(x) {\n        this.type = LUA_TNUMFLT;\n        this.value = x;\n    }\n\n    chgfltvalue(x) {\n        lua_assert(this.type == LUA_TNUMFLT);\n        this.value = x;\n    }\n\n    setivalue(x) {\n        this.type = LUA_TNUMINT;\n        this.value = x;\n    }\n\n    chgivalue(x) {\n        lua_assert(this.type == LUA_TNUMINT);\n        this.value = x;\n    }\n\n    setnilvalue() {\n        this.type = LUA_TNIL;\n        this.value = null;\n    }\n\n    setfvalue(x) {\n        this.type = LUA_TLCF;\n        this.value = x;\n    }\n\n    setpvalue(x) {\n        this.type = LUA_TLIGHTUSERDATA;\n        this.value = x;\n    }\n\n    setbvalue(x) {\n        this.type = LUA_TBOOLEAN;\n        this.value = x;\n    }\n\n    setsvalue(x) {\n        this.type = LUA_TLNGSTR; /* LUA_TSHRSTR? */\n        this.value = x;\n    }\n\n    setuvalue(x) {\n        this.type = LUA_TUSERDATA;\n        this.value = x;\n    }\n\n    setthvalue(x) {\n        this.type = LUA_TTHREAD;\n        this.value = x;\n    }\n\n    setclLvalue(x) {\n        this.type = LUA_TLCL;\n        this.value = x;\n    }\n\n    setclCvalue(x) {\n        this.type = LUA_TCCL;\n        this.value = x;\n    }\n\n    sethvalue(x) {\n        this.type = LUA_TTABLE;\n        this.value = x;\n    }\n\n    setdeadvalue() {\n        this.type = LUA_TDEADKEY;\n        this.value = null;\n    }\n\n    setfrom(tv) { /* in lua C source setobj2t is often used for this */\n        this.type = tv.type;\n        this.value = tv.value;\n    }\n\n    tsvalue() {\n        lua_assert(this.ttisstring());\n        return this.value;\n    }\n\n    svalue() {\n        return this.tsvalue().getstr();\n    }\n\n    vslen() {\n        return this.tsvalue().tsslen();\n    }\n\n    jsstring(from, to) {\n        return to_jsstring(this.svalue(), from, to, true);\n    }\n}\n\nconst pushobj2s = function(L, tv) {\n    L.stack[L.top++] = new TValue(tv.type, tv.value);\n};\nconst pushsvalue2s = function(L, ts) {\n    L.stack[L.top++] = new TValue(LUA_TLNGSTR, ts);\n};\n/* from stack to (same) stack */\nconst setobjs2s = function(L, newidx, oldidx) {\n    L.stack[newidx].setfrom(L.stack[oldidx]);\n};\n/* to stack (not from same stack) */\nconst setobj2s = function(L, newidx, oldtv) {\n    L.stack[newidx].setfrom(oldtv);\n};\nconst setsvalue2s = function(L, newidx, ts) {\n    L.stack[newidx].setsvalue(ts);\n};\n\nconst luaO_nilobject = new TValue(LUA_TNIL, null);\nObject.freeze(luaO_nilobject);\nmodule.exports.luaO_nilobject = luaO_nilobject;\n\nclass LClosure {\n\n    constructor(L, n) {\n        this.id = L.l_G.id_counter++;\n\n        this.p = null;\n        this.nupvalues = n;\n        this.upvals = new Array(n); /* list of upvalues. initialised in luaF_initupvals */\n    }\n\n}\n\nclass CClosure {\n\n    constructor(L, f, n) {\n        this.id = L.l_G.id_counter++;\n\n        this.f = f;\n        this.nupvalues = n;\n        this.upvalue = new Array(n); /* list of upvalues as TValues */\n        while (n--) {\n            this.upvalue[n] = new TValue(LUA_TNIL, null);\n        }\n    }\n\n}\n\nclass Udata {\n\n    constructor(L, size) {\n        this.id = L.l_G.id_counter++;\n\n        this.metatable = null;\n        this.uservalue = new TValue(LUA_TNIL, null);\n        this.len = size;\n        this.data = Object.create(null); // ignores size argument\n    }\n\n}\n\n/*\n** Description of a local variable for function prototypes\n** (used for debug information)\n*/\nclass LocVar {\n    constructor() {\n        this.varname = null;\n        this.startpc = NaN;  /* first point where variable is active */\n        this.endpc = NaN;    /* first point where variable is dead */\n    }\n}\n\nconst RETS = to_luastring(\"...\");\nconst PRE  = to_luastring(\"[string \\\"\");\nconst POS  = to_luastring(\"\\\"]\");\n\nconst luaO_chunkid = function(source, bufflen) {\n    let l = source.length;\n    let out;\n    if (source[0] === 61 /* ('=').charCodeAt(0) */) {  /* 'literal' source */\n        if (l < bufflen) {  /* small enough? */\n            out = new Uint8Array(l-1);\n            out.set(source.subarray(1));\n        } else {  /* truncate it */\n            out = new Uint8Array(bufflen);\n            out.set(source.subarray(1, bufflen+1));\n        }\n    } else if (source[0] === 64 /* ('@').charCodeAt(0) */) {  /* file name */\n        if (l <= bufflen) {  /* small enough? */\n            out = new Uint8Array(l-1);\n            out.set(source.subarray(1));\n        } else {  /* add '...' before rest of name */\n            out = new Uint8Array(bufflen);\n            out.set(RETS);\n            bufflen -= RETS.length;\n            out.set(source.subarray(l - bufflen), RETS.length);\n        }\n    } else {  /* string; format as [string \"source\"] */\n        out = new Uint8Array(bufflen);\n        let nli = luastring_indexOf(source, 10 /* ('\\n').charCodeAt(0) */);  /* find first new line (if any) */\n        out.set(PRE);  /* add prefix */\n        let out_i = PRE.length;\n        bufflen -= PRE.length + RETS.length + POS.length;  /* save space for prefix+suffix */\n        if (l < bufflen && nli === -1) {  /* small one-line source? */\n            out.set(source, out_i);  /* keep it */\n            out_i += source.length;\n        } else {\n            if (nli !== -1) l = nli;  /* stop at first newline */\n            if (l > bufflen) l = bufflen;\n            out.set(source.subarray(0, l), out_i);\n            out_i += l;\n            out.set(RETS, out_i);\n            out_i += RETS.length;\n        }\n        out.set(POS, out_i);\n        out_i += POS.length;\n        out = out.subarray(0, out_i);\n    }\n    return out;\n};\n\nconst luaO_hexavalue = function(c) {\n    if (lisdigit(c)) return c - 48;\n    else return (c & 0xdf) - 55;\n};\n\nconst UTF8BUFFSZ = 8;\n\nconst luaO_utf8esc = function(buff, x) {\n    let n = 1;  /* number of bytes put in buffer (backwards) */\n    lua_assert(x <= 0x10FFFF);\n    if (x < 0x80)  /* ascii? */\n        buff[UTF8BUFFSZ - 1] = x;\n    else {  /* need continuation bytes */\n        let mfb = 0x3f;  /* maximum that fits in first byte */\n        do {\n            buff[UTF8BUFFSZ - (n++)] = 0x80 | (x & 0x3f);\n            x >>= 6;  /* remove added bits */\n            mfb >>= 1;  /* now there is one less bit available in first byte */\n        } while (x > mfb);  /* still needs continuation byte? */\n        buff[UTF8BUFFSZ - n] = (~mfb << 1) | x;  /* add first byte */\n    }\n    return n;\n};\n\n/* maximum number of significant digits to read (to avoid overflows\n   even with single floats) */\nconst MAXSIGDIG = 30;\n\n/*\n** convert an hexadecimal numeric string to a number, following\n** C99 specification for 'strtod'\n*/\nconst lua_strx2number = function(s) {\n    let i = 0;\n    let r = 0.0;  /* result (accumulator) */\n    let sigdig = 0;  /* number of significant digits */\n    let nosigdig = 0;  /* number of non-significant digits */\n    let e = 0;  /* exponent correction */\n    let neg;  /* 1 if number is negative */\n    let hasdot = false;  /* true after seen a dot */\n    while (lisspace(s[i])) i++;  /* skip initial spaces */\n    if ((neg = (s[i] === 45 /* ('-').charCodeAt(0) */))) i++;  /* check signal */\n    else if (s[i] === 43 /* ('+').charCodeAt(0) */) i++;\n    if (!(s[i] === 48 /* ('0').charCodeAt(0) */ && (s[i+1] === 120 /* ('x').charCodeAt(0) */ || s[i+1] === 88 /* ('X').charCodeAt(0) */)))  /* check '0x' */\n        return null;  /* invalid format (no '0x') */\n    for (i += 2; ; i++) {  /* skip '0x' and read numeral */\n        if (s[i] === 46 /* ('.').charCodeAt(0) i.e. dot/lua_getlocaledecpoint(); */) {\n            if (hasdot) break;  /* second dot? stop loop */\n            else hasdot = true;\n        } else if (lisxdigit(s[i])) {\n            if (sigdig === 0 && s[i] === 48 /* ('0').charCodeAt(0) */)  /* non-significant digit (zero)? */\n                nosigdig++;\n            else if (++sigdig <= MAXSIGDIG)  /* can read it without overflow? */\n                r = (r * 16) + luaO_hexavalue(s[i]);\n            else e++; /* too many digits; ignore, but still count for exponent */\n            if (hasdot) e--;  /* decimal digit? correct exponent */\n        } else break;  /* neither a dot nor a digit */\n    }\n\n    if (nosigdig + sigdig === 0)  /* no digits? */\n        return null;  /* invalid format */\n    e *= 4;  /* each digit multiplies/divides value by 2^4 */\n    if (s[i] === 112 /* ('p').charCodeAt(0) */ || s[i] === 80 /* ('P').charCodeAt(0) */) {  /* exponent part? */\n        let exp1 = 0;  /* exponent value */\n        let neg1;  /* exponent signal */\n        i++;  /* skip 'p' */\n        if ((neg1 = (s[i] === 45 /* ('-').charCodeAt(0) */))) i++;  /* signal */\n        else if (s[i] === 43 /* ('+').charCodeAt(0) */) i++;\n        if (!lisdigit(s[i]))\n            return null;  /* invalid; must have at least one digit */\n        while (lisdigit(s[i]))  /* read exponent */\n            exp1 = exp1 * 10 + s[i++] - 48 /* ('0').charCodeAt(0) */;\n        if (neg1) exp1 = -exp1;\n        e += exp1;\n    }\n    if (neg) r = -r;\n    return {\n        n: ldexp(r, e),\n        i: i\n    };\n};\n\nconst lua_str2number = function(s) {\n    try {\n        s = to_jsstring(s);\n    } catch (e) {\n        return null;\n    }\n    /* use a regex to validate number and also to get length\n       parseFloat ignores trailing junk */\n    let r = /^[\\t\\v\\f \\n\\r]*[+-]?(?:[0-9]+\\.?[0-9]*|\\.[0-9]*)(?:[eE][+-]?[0-9]+)?/.exec(s);\n    if (!r)\n        return null;\n    let flt = parseFloat(r[0]);\n    return !isNaN(flt) ? { n: flt, i: r[0].length } : null;\n};\n\nconst l_str2dloc = function(s, mode) {\n    let result = mode === 'x' ? lua_strx2number(s) : lua_str2number(s); /* try to convert */\n    if (result === null) return null;\n    while (lisspace(s[result.i])) result.i++;  /* skip trailing spaces */\n    return (result.i === s.length || s[result.i] === 0) ? result : null;  /* OK if no trailing characters */\n};\n\nconst SIGILS = [\n    46  /* (\".\").charCodeAt(0) */,\n    120 /* (\"x\").charCodeAt(0) */,\n    88  /* (\"X\").charCodeAt(0) */,\n    110 /* (\"n\").charCodeAt(0) */,\n    78  /* (\"N\").charCodeAt(0) */\n];\nconst modes = {\n    [ 46]: \".\",\n    [120]: \"x\",\n    [ 88]: \"x\",\n    [110]: \"n\",\n    [ 78]: \"n\"\n};\nconst l_str2d = function(s) {\n    let l = s.length;\n    let pmode = 0;\n    for (let i=0; i<l; i++) {\n        let v = s[i];\n        if (SIGILS.indexOf(v) !== -1) {\n            pmode = v;\n            break;\n        }\n    }\n    let mode = modes[pmode];\n    if (mode === 'n')  /* reject 'inf' and 'nan' */\n        return null;\n    let end = l_str2dloc(s, mode);  /* try to convert */\n    // if (end === null) {   /* failed? may be a different locale */\n    //     throw new Error(\"Locale not available to handle number\"); // TODO\n    // }\n    return end;\n};\n\nconst MAXBY10  = Math.floor(MAX_INT / 10);\nconst MAXLASTD = MAX_INT % 10;\n\nconst l_str2int = function(s) {\n    let i = 0;\n    let a = 0;\n    let empty = true;\n    let neg;\n\n    while (lisspace(s[i])) i++;  /* skip initial spaces */\n    if ((neg = (s[i] === 45 /* ('-').charCodeAt(0) */))) i++;\n    else if (s[i] === 43 /* ('+').charCodeAt(0) */) i++;\n    if (s[i] === 48 /* ('0').charCodeAt(0) */ && (s[i+1] === 120 /* ('x').charCodeAt(0) */ || s[i+1] === 88 /* ('X').charCodeAt(0) */)) {  /* hex? */\n        i += 2;  /* skip '0x' */\n        for (; i < s.length && lisxdigit(s[i]); i++) {\n            a = (a * 16 + luaO_hexavalue(s[i]))|0;\n            empty = false;\n        }\n    } else {  /* decimal */\n        for (; i < s.length && lisdigit(s[i]); i++) {\n            let d = s[i] - 48 /* ('0').charCodeAt(0) */;\n            if (a >= MAXBY10 && (a > MAXBY10 || d > MAXLASTD + neg))  /* overflow? */\n                return null;  /* do not accept it (as integer) */\n            a = (a * 10 + d)|0;\n            empty = false;\n        }\n    }\n    while (i < s.length && lisspace(s[i])) i++;  /* skip trailing spaces */\n    if (empty || (i !== s.length && s[i] !== 0)) return null;  /* something wrong in the numeral */\n    else {\n        return {\n            n: (neg ? -a : a)|0,\n            i: i\n        };\n    }\n};\n\nconst luaO_str2num = function(s, o) {\n    let s2i = l_str2int(s);\n    if (s2i !== null) {   /* try as an integer */\n        o.setivalue(s2i.n);\n        return s2i.i+1;\n    } else {   /* else try as a float */\n        s2i = l_str2d(s);\n        if (s2i !== null) {\n            o.setfltvalue(s2i.n);\n            return s2i.i+1;\n        } else\n            return 0;  /* conversion failed */\n    }\n};\n\nconst luaO_tostring = function(L, obj) {\n    let buff;\n    if (obj.ttisinteger())\n        buff = to_luastring(lua_integer2str(obj.value));\n    else {\n        let str = lua_number2str(obj.value);\n        if (!LUA_COMPAT_FLOATSTRING && /^[-0123456789]+$/.test(str)) {  /* looks like an int? */\n            str += '.0'; /* adds '.0' to result: lua_getlocaledecpoint removed as optimisation */\n        }\n        buff = to_luastring(str);\n    }\n    obj.setsvalue(luaS_bless(L, buff));\n};\n\nconst pushstr = function(L, str) {\n    ldo.luaD_inctop(L);\n    setsvalue2s(L, L.top-1, luaS_new(L, str));\n};\n\nconst luaO_pushvfstring = function(L, fmt, argp) {\n    let n = 0;\n    let i = 0;\n    let a = 0;\n    let e;\n    for (;;) {\n        e = luastring_indexOf(fmt, 37 /* ('%').charCodeAt(0) */, i);\n        if (e == -1) break;\n        pushstr(L, fmt.subarray(i, e));\n        switch(fmt[e+1]) {\n            case 115 /* ('s').charCodeAt(0) */: {\n                let s = argp[a++];\n                if (s === null) s = to_luastring(\"(null)\", true);\n                else {\n                    s = from_userstring(s);\n                    /* respect null terminator */\n                    let i = luastring_indexOf(s, 0);\n                    if (i !== -1)\n                        s = s.subarray(0, i);\n                }\n                pushstr(L, s);\n                break;\n            }\n            case 99 /* ('c').charCodeAt(0) */: {\n                let buff = argp[a++];\n                if (lisprint(buff))\n                    pushstr(L, luastring_of(buff));\n                else\n                    luaO_pushfstring(L, to_luastring(\"<\\\\%d>\", true), buff);\n                break;\n            }\n            case 100 /* ('d').charCodeAt(0) */:\n            case 73 /* ('I').charCodeAt(0) */:\n                ldo.luaD_inctop(L);\n                L.stack[L.top-1].setivalue(argp[a++]);\n                luaO_tostring(L, L.stack[L.top-1]);\n                break;\n            case 102 /* ('f').charCodeAt(0) */:\n                ldo.luaD_inctop(L);\n                L.stack[L.top-1].setfltvalue(argp[a++]);\n                luaO_tostring(L, L.stack[L.top-1]);\n                break;\n            case 112 /* ('p').charCodeAt(0) */: {\n                let v = argp[a++];\n                if (v instanceof lstate.lua_State ||\n                    v instanceof ltable.Table ||\n                    v instanceof Udata ||\n                    v instanceof LClosure ||\n                    v instanceof CClosure) {\n                    pushstr(L, to_luastring(\"0x\"+v.id.toString(16)));\n                } else {\n                    switch(typeof v) {\n                        case \"undefined\":\n                            pushstr(L, to_luastring(\"undefined\"));\n                            break;\n                        case \"number\":  /* before check object as null is an object */\n                            pushstr(L, to_luastring(\"Number(\"+v+\")\"));\n                            break;\n                        case \"string\":  /* before check object as null is an object */\n                            pushstr(L, to_luastring(\"String(\"+JSON.stringify(v)+\")\"));\n                            break;\n                        case \"boolean\":  /* before check object as null is an object */\n                            pushstr(L, to_luastring(v?\"Boolean(true)\":\"Boolean(false)\"));\n                            break;\n                        case \"object\":\n                            if (v === null) { /* null is special */\n                                pushstr(L, to_luastring(\"null\"));\n                                break;\n                            }\n                            /* fall through */\n                        case \"function\": {\n                            let id = L.l_G.ids.get(v);\n                            if (!id) {\n                                id = L.l_G.id_counter++;\n                                L.l_G.ids.set(v, id);\n                            }\n                            pushstr(L, to_luastring(\"0x\"+id.toString(16)));\n                            break;\n                        }\n                        default:\n                            /* user provided object. no id available */\n                            pushstr(L, to_luastring(\"<id NYI>\"));\n                    }\n                }\n                break;\n            }\n            case 85 /* ('U').charCodeAt(0) */: {\n                let buff = new Uint8Array(UTF8BUFFSZ);\n                let l = luaO_utf8esc(buff, argp[a++]);\n                pushstr(L, buff.subarray(UTF8BUFFSZ - l));\n                break;\n            }\n            case 37 /* ('%').charCodeAt(0) */:\n                pushstr(L, to_luastring(\"%\", true));\n                break;\n            default:\n                ldebug.luaG_runerror(L, to_luastring(\"invalid option '%%%c' to 'lua_pushfstring'\"), fmt[e + 1]);\n        }\n        n += 2;\n        i = e + 2;\n    }\n    ldo.luaD_checkstack(L, 1);\n    pushstr(L, fmt.subarray(i));\n    if (n > 0) lvm.luaV_concat(L, n+1);\n    return L.stack[L.top-1].svalue();\n};\n\nconst luaO_pushfstring = function(L, fmt, ...argp) {\n    return luaO_pushvfstring(L, fmt, argp);\n};\n\n\n/*\n** converts an integer to a \"floating point byte\", represented as\n** (eeeeexxx), where the real value is (1xxx) * 2^(eeeee - 1) if\n** eeeee !== 0 and (xxx) otherwise.\n*/\nconst luaO_int2fb = function(x) {\n    let e = 0;  /* exponent */\n    if (x < 8) return x;\n    while (x >= (8 << 4)) {  /* coarse steps */\n        x = (x + 0xf) >> 4;  /* x = ceil(x / 16) */\n        e += 4;\n    }\n    while (x >= (8 << 1)) {  /* fine steps */\n        x = (x + 1) >> 1;  /* x = ceil(x / 2) */\n        e++;\n    }\n    return ((e+1) << 3) | (x - 8);\n};\n\nconst intarith = function(L, op, v1, v2) {\n    switch (op) {\n        case LUA_OPADD:  return (v1 + v2)|0;\n        case LUA_OPSUB:  return (v1 - v2)|0;\n        case LUA_OPMUL:  return lvm.luaV_imul(v1, v2);\n        case LUA_OPMOD:  return lvm.luaV_mod(L, v1, v2);\n        case LUA_OPIDIV: return lvm.luaV_div(L, v1, v2);\n        case LUA_OPBAND: return (v1 & v2);\n        case LUA_OPBOR:  return (v1 | v2);\n        case LUA_OPBXOR: return (v1 ^ v2);\n        case LUA_OPSHL:  return lvm.luaV_shiftl(v1, v2);\n        case LUA_OPSHR:  return lvm.luaV_shiftl(v1, -v2);\n        case LUA_OPUNM:  return (0 - v1)|0;\n        case LUA_OPBNOT: return (~0 ^ v1);\n        default: lua_assert(0);\n    }\n};\n\n\nconst numarith = function(L, op, v1, v2) {\n    switch (op) {\n        case LUA_OPADD:  return v1 + v2;\n        case LUA_OPSUB:  return v1 - v2;\n        case LUA_OPMUL:  return v1 * v2;\n        case LUA_OPDIV:  return v1 / v2;\n        case LUA_OPPOW:  return Math.pow(v1, v2);\n        case LUA_OPIDIV: return Math.floor(v1 / v2);\n        case LUA_OPUNM:  return -v1;\n        case LUA_OPMOD:  return luai_nummod(L, v1, v2);\n        default: lua_assert(0);\n    }\n};\n\nconst luaO_arith = function(L, op, p1, p2, p3) {\n    let res = (typeof p3 === \"number\") ? L.stack[p3] : p3;  /* FIXME */\n\n    switch (op) {\n        case LUA_OPBAND: case LUA_OPBOR: case LUA_OPBXOR:\n        case LUA_OPSHL: case LUA_OPSHR:\n        case LUA_OPBNOT: {  /* operate only on integers */\n            let i1, i2;\n            if ((i1 = lvm.tointeger(p1)) !== false && (i2 = lvm.tointeger(p2)) !== false) {\n                res.setivalue(intarith(L, op, i1, i2));\n                return;\n            }\n            else break;  /* go to the end */\n        }\n        case LUA_OPDIV: case LUA_OPPOW: {  /* operate only on floats */\n            let n1, n2;\n            if ((n1 = lvm.tonumber(p1)) !== false && (n2 = lvm.tonumber(p2)) !== false) {\n                res.setfltvalue(numarith(L, op, n1, n2));\n                return;\n            }\n            else break;  /* go to the end */\n        }\n        default: {  /* other operations */\n            let n1, n2;\n            if (p1.ttisinteger() && p2.ttisinteger()) {\n                res.setivalue(intarith(L, op, p1.value, p2.value));\n                return;\n            }\n            else if ((n1 = lvm.tonumber(p1)) !== false && (n2 = lvm.tonumber(p2)) !== false) {\n                res.setfltvalue(numarith(L, op, n1, n2));\n                return;\n            }\n            else break;  /* go to the end */\n        }\n    }\n    /* could not perform raw operation; try metamethod */\n    lua_assert(L !== null);  /* should not fail when folding (compile time) */\n    ltm.luaT_trybinTM(L, p1, p2, p3, (op - LUA_OPADD) + ltm.TMS.TM_ADD);\n};\n\n\nmodule.exports.CClosure          = CClosure;\nmodule.exports.LClosure          = LClosure;\nmodule.exports.LUA_TDEADKEY      = LUA_TDEADKEY;\nmodule.exports.LUA_TPROTO        = LUA_TPROTO;\nmodule.exports.LocVar            = LocVar;\nmodule.exports.TValue            = TValue;\nmodule.exports.Udata             = Udata;\nmodule.exports.UTF8BUFFSZ        = UTF8BUFFSZ;\nmodule.exports.luaO_arith        = luaO_arith;\nmodule.exports.luaO_chunkid      = luaO_chunkid;\nmodule.exports.luaO_hexavalue    = luaO_hexavalue;\nmodule.exports.luaO_int2fb       = luaO_int2fb;\nmodule.exports.luaO_pushfstring  = luaO_pushfstring;\nmodule.exports.luaO_pushvfstring = luaO_pushvfstring;\nmodule.exports.luaO_str2num      = luaO_str2num;\nmodule.exports.luaO_tostring     = luaO_tostring;\nmodule.exports.luaO_utf8esc      = luaO_utf8esc;\nmodule.exports.numarith          = numarith;\nmodule.exports.pushobj2s         = pushobj2s;\nmodule.exports.pushsvalue2s      = pushsvalue2s;\nmodule.exports.setobjs2s         = setobjs2s;\nmodule.exports.setobj2s          = setobj2s;\nmodule.exports.setsvalue2s       = setsvalue2s;\n","\"use strict\";\n\nconst {\n    LUAL_BUFFERSIZE\n} = require('./luaconf.js');\nconst {\n    LUA_ERRERR,\n    LUA_MULTRET,\n    LUA_REGISTRYINDEX,\n    LUA_SIGNATURE,\n    LUA_TBOOLEAN,\n    LUA_TLIGHTUSERDATA,\n    LUA_TNIL,\n    LUA_TNONE,\n    LUA_TNUMBER,\n    LUA_TSTRING,\n    LUA_TTABLE,\n    LUA_VERSION_NUM,\n    lua_Debug,\n    lua_absindex,\n    lua_atpanic,\n    lua_call,\n    lua_checkstack,\n    lua_concat,\n    lua_copy,\n    lua_createtable,\n    lua_error,\n    lua_getfield,\n    lua_getinfo,\n    lua_getmetatable,\n    lua_getstack,\n    lua_gettop,\n    lua_insert,\n    lua_isinteger,\n    lua_isnil,\n    lua_isnumber,\n    lua_isstring,\n    lua_istable,\n    lua_len,\n    lua_load,\n    lua_newstate,\n    lua_newtable,\n    lua_next,\n    lua_pcall,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcclosure,\n    lua_pushcfunction,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushlstring,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_pushvfstring,\n    lua_rawequal,\n    lua_rawget,\n    lua_rawgeti,\n    lua_rawlen,\n    lua_rawseti,\n    lua_remove,\n    lua_setfield,\n    lua_setglobal,\n    lua_setmetatable,\n    lua_settop,\n    lua_toboolean,\n    lua_tointeger,\n    lua_tointegerx,\n    lua_tojsstring,\n    lua_tolstring,\n    lua_tonumber,\n    lua_tonumberx,\n    lua_topointer,\n    lua_tostring,\n    lua_touserdata,\n    lua_type,\n    lua_typename,\n    lua_version\n} = require('./lua.js');\nconst {\n    from_userstring,\n    luastring_eq,\n    to_luastring,\n    to_uristring\n} = require(\"./fengaricore.js\");\n\n/* extra error code for 'luaL_loadfilex' */\nconst LUA_ERRFILE = LUA_ERRERR+1;\n\n/* key, in the registry, for table of loaded modules */\nconst LUA_LOADED_TABLE = to_luastring(\"_LOADED\");\n\n/* key, in the registry, for table of preloaded loaders */\nconst LUA_PRELOAD_TABLE = to_luastring(\"_PRELOAD\");\n\nconst LUA_FILEHANDLE = to_luastring(\"FILE*\");\n\nconst LUAL_NUMSIZES  = 4*16 + 8;\n\nconst __name = to_luastring(\"__name\");\nconst __tostring = to_luastring(\"__tostring\");\n\nconst empty = new Uint8Array(0);\n\nclass luaL_Buffer {\n    constructor() {\n        this.L = null;\n        this.b = empty;\n        this.n = 0;\n    }\n}\n\nconst LEVELS1 = 10;  /* size of the first part of the stack */\nconst LEVELS2 = 11;  /* size of the second part of the stack */\n\n/*\n** search for 'objidx' in table at index -1.\n** return 1 + string at top if find a good name.\n*/\nconst findfield = function(L, objidx, level) {\n    if (level === 0 || !lua_istable(L, -1))\n        return 0;  /* not found */\n\n    lua_pushnil(L);  /* start 'next' loop */\n\n    while (lua_next(L, -2)) {  /* for each pair in table */\n        if (lua_type(L, -2) === LUA_TSTRING) {  /* ignore non-string keys */\n            if (lua_rawequal(L, objidx, -1)) {  /* found object? */\n                lua_pop(L, 1);  /* remove value (but keep name) */\n                return 1;\n            } else if (findfield(L, objidx, level - 1)) {  /* try recursively */\n                lua_remove(L, -2);  /* remove table (but keep name) */\n                lua_pushliteral(L, \".\");\n                lua_insert(L, -2);  /* place '.' between the two names */\n                lua_concat(L, 3);\n                return 1;\n            }\n        }\n        lua_pop(L, 1);  /* remove value */\n    }\n\n    return 0;  /* not found */\n};\n\n/*\n** Search for a name for a function in all loaded modules\n*/\nconst pushglobalfuncname = function(L, ar) {\n    let top = lua_gettop(L);\n    lua_getinfo(L, to_luastring(\"f\"), ar);  /* push function */\n    lua_getfield(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    if (findfield(L, top + 1, 2)) {\n        let name = lua_tostring(L, -1);\n        if (name[0] === 95 /* '_'.charCodeAt(0) */ &&\n            name[1] === 71 /* 'G'.charCodeAt(0) */ &&\n            name[2] === 46 /* '.'.charCodeAt(0) */\n        ) {  /* name start with '_G.'? */\n            lua_pushstring(L, name.subarray(3));  /* push name without prefix */\n            lua_remove(L, -2);  /* remove original name */\n        }\n        lua_copy(L, -1, top + 1);  /* move name to proper place */\n        lua_pop(L, 2);  /* remove pushed values */\n        return 1;\n    } else {\n        lua_settop(L, top);  /* remove function and global table */\n        return 0;\n    }\n};\n\nconst pushfuncname = function(L, ar) {\n    if (pushglobalfuncname(L, ar)) {  /* try first a global name */\n        lua_pushfstring(L, to_luastring(\"function '%s'\"), lua_tostring(L, -1));\n        lua_remove(L, -2);  /* remove name */\n    }\n    else if (ar.namewhat.length !== 0)  /* is there a name from code? */\n        lua_pushfstring(L, to_luastring(\"%s '%s'\"), ar.namewhat, ar.name);  /* use it */\n    else if (ar.what && ar.what[0] === 109 /* 'm'.charCodeAt(0) */)  /* main? */\n        lua_pushliteral(L, \"main chunk\");\n    else if (ar.what && ar.what[0] === 76 /* 'L'.charCodeAt(0) */)  /* for Lua functions, use <file:line> */\n        lua_pushfstring(L, to_luastring(\"function <%s:%d>\"), ar.short_src, ar.linedefined);\n    else  /* nothing left... */\n        lua_pushliteral(L, \"?\");\n};\n\nconst lastlevel = function(L) {\n    let ar = new lua_Debug();\n    let li = 1;\n    let le = 1;\n    /* find an upper bound */\n    while (lua_getstack(L, le, ar)) { li = le; le *= 2; }\n    /* do a binary search */\n    while (li < le) {\n        let m = Math.floor((li + le)/2);\n        if (lua_getstack(L, m, ar)) li = m + 1;\n        else le = m;\n    }\n    return le - 1;\n};\n\nconst luaL_traceback = function(L, L1, msg, level) {\n    let ar = new lua_Debug();\n    let top = lua_gettop(L);\n    let last = lastlevel(L1);\n    let n1 = last - level > LEVELS1 + LEVELS2 ? LEVELS1 : -1;\n    if (msg)\n        lua_pushfstring(L, to_luastring(\"%s\\n\"), msg);\n    luaL_checkstack(L, 10, null);\n    lua_pushliteral(L, \"stack traceback:\");\n    while (lua_getstack(L1, level++, ar)) {\n        if (n1-- === 0) {  /* too many levels? */\n            lua_pushliteral(L, \"\\n\\t...\");  /* add a '...' */\n            level = last - LEVELS2 + 1;  /* and skip to last ones */\n        } else {\n            lua_getinfo(L1, to_luastring(\"Slnt\", true), ar);\n            lua_pushfstring(L, to_luastring(\"\\n\\t%s:\"), ar.short_src);\n            if (ar.currentline > 0)\n                lua_pushliteral(L, `${ar.currentline}:`);\n            lua_pushliteral(L, \" in \");\n            pushfuncname(L, ar);\n            if (ar.istailcall)\n                lua_pushliteral(L, \"\\n\\t(...tail calls..)\");\n            lua_concat(L, lua_gettop(L) - top);\n        }\n    }\n    lua_concat(L, lua_gettop(L) - top);\n};\n\nconst panic = function(L) {\n    let msg = \"PANIC: unprotected error in call to Lua API (\" + lua_tojsstring(L, -1) + \")\";\n    throw new Error(msg);\n};\n\nconst luaL_argerror = function(L, arg, extramsg) {\n    let ar = new lua_Debug();\n\n    if (!lua_getstack(L, 0, ar))  /* no stack frame? */\n        return luaL_error(L, to_luastring(\"bad argument #%d (%s)\"), arg, extramsg);\n\n    lua_getinfo(L, to_luastring(\"n\"), ar);\n\n    if (luastring_eq(ar.namewhat, to_luastring(\"method\"))) {\n        arg--;  /* do not count 'self' */\n        if (arg === 0)  /* error is in the self argument itself? */\n            return luaL_error(L, to_luastring(\"calling '%s' on bad self (%s)\"), ar.name, extramsg);\n    }\n\n    if (ar.name === null)\n        ar.name = pushglobalfuncname(L, ar) ? lua_tostring(L, -1) : to_luastring(\"?\");\n\n    return luaL_error(L, to_luastring(\"bad argument #%d to '%s' (%s)\"), arg, ar.name, extramsg);\n};\n\nconst typeerror = function(L, arg, tname) {\n    let typearg;\n    if (luaL_getmetafield(L, arg, __name) === LUA_TSTRING)\n        typearg = lua_tostring(L, -1);\n    else if (lua_type(L, arg) === LUA_TLIGHTUSERDATA)\n        typearg = to_luastring(\"light userdata\", true);\n    else\n        typearg = luaL_typename(L, arg);\n\n    let msg = lua_pushfstring(L, to_luastring(\"%s expected, got %s\"), tname, typearg);\n    return luaL_argerror(L, arg, msg);\n};\n\nconst luaL_where = function(L, level) {\n    let ar = new lua_Debug();\n    if (lua_getstack(L, level, ar)) {\n        lua_getinfo(L, to_luastring(\"Sl\", true), ar);\n        if (ar.currentline > 0) {\n            lua_pushfstring(L, to_luastring(\"%s:%d: \"), ar.short_src, ar.currentline);\n            return;\n        }\n    }\n    lua_pushstring(L, to_luastring(\"\"));\n};\n\nconst luaL_error = function(L, fmt, ...argp) {\n    luaL_where(L, 1);\n    lua_pushvfstring(L, fmt, argp);\n    lua_concat(L, 2);\n    return lua_error(L);\n};\n\n/* Unlike normal lua, we pass in an error object */\nconst luaL_fileresult = function(L, stat, fname, e) {\n    if (stat) {\n        lua_pushboolean(L, 1);\n        return 1;\n    } else {\n        lua_pushnil(L);\n        let message, errno;\n        if (e) {\n            message = e.message;\n            errno = -e.errno;\n        } else {\n            message = \"Success\"; /* what strerror(0) returns */\n            errno = 0;\n        }\n        if (fname)\n            lua_pushfstring(L, to_luastring(\"%s: %s\"), fname, to_luastring(message));\n        else\n            lua_pushstring(L, to_luastring(message));\n        lua_pushinteger(L, errno);\n        return 3;\n    }\n};\n\n/* Unlike normal lua, we pass in an error object */\nconst luaL_execresult = function(L, e) {\n    let what, stat;\n    if (e === null) {\n        lua_pushboolean(L, 1);\n        lua_pushliteral(L, \"exit\");\n        lua_pushinteger(L, 0);\n        return 3;\n    } else if (e.status) {\n        what = \"exit\";\n        stat = e.status;\n    } else if (e.signal) {\n        what = \"signal\";\n        stat = e.signal;\n    } else {\n        /* XXX: node seems to have e.errno as a string instead of a number */\n        return luaL_fileresult(L, 0, null, e);\n    }\n    lua_pushnil(L);\n    lua_pushliteral(L, what);\n    lua_pushinteger(L, stat);\n    return 3;\n};\n\nconst luaL_getmetatable = function(L, n) {\n    return lua_getfield(L, LUA_REGISTRYINDEX, n);\n};\n\nconst luaL_newmetatable = function(L, tname) {\n    if (luaL_getmetatable(L, tname) !== LUA_TNIL)  /* name already in use? */\n        return 0;  /* leave previous value on top, but return 0 */\n    lua_pop(L, 1);\n    lua_createtable(L, 0, 2);  /* create metatable */\n    lua_pushstring(L, tname);\n    lua_setfield(L, -2, __name);  /* metatable.__name = tname */\n    lua_pushvalue(L, -1);\n    lua_setfield(L, LUA_REGISTRYINDEX, tname);  /* registry.name = metatable */\n    return 1;\n\n};\n\nconst luaL_setmetatable = function(L, tname) {\n    luaL_getmetatable(L, tname);\n    lua_setmetatable(L, -2);\n};\n\nconst luaL_testudata = function(L, ud, tname) {\n    let p = lua_touserdata(L, ud);\n    if (p !== null) {  /* value is a userdata? */\n        if (lua_getmetatable(L, ud)) {  /* does it have a metatable? */\n            luaL_getmetatable(L, tname);  /* get correct metatable */\n            if (!lua_rawequal(L, -1, -2))  /* not the same? */\n                p = null;  /* value is a userdata with wrong metatable */\n            lua_pop(L, 2);  /* remove both metatables */\n            return p;\n        }\n    }\n    return null;  /* value is not a userdata with a metatable */\n};\n\nconst luaL_checkudata = function(L, ud, tname) {\n    let p = luaL_testudata(L, ud, tname);\n    if (p === null) typeerror(L, ud, tname);\n    return p;\n};\n\nconst luaL_checkoption = function(L, arg, def, lst) {\n    let name = def !== null ? luaL_optstring(L, arg, def) : luaL_checkstring(L, arg);\n    for (let i = 0; lst[i]; i++)\n        if (luastring_eq(lst[i], name))\n            return i;\n    return luaL_argerror(L, arg, lua_pushfstring(L, to_luastring(\"invalid option '%s'\"), name));\n};\n\nconst tag_error = function(L, arg, tag) {\n    typeerror(L, arg, lua_typename(L, tag));\n};\n\nconst luaL_newstate = function() {\n    let L = lua_newstate();\n    if (L) lua_atpanic(L, panic);\n    return L;\n};\n\n\nconst luaL_typename = function(L, i) {\n    return lua_typename(L, lua_type(L, i));\n};\n\nconst luaL_argcheck = function(L, cond, arg, extramsg) {\n    if (!cond) luaL_argerror(L, arg, extramsg);\n};\n\nconst luaL_checkany = function(L, arg) {\n    if (lua_type(L, arg) === LUA_TNONE)\n        luaL_argerror(L, arg, to_luastring(\"value expected\", true));\n};\n\nconst luaL_checktype = function(L, arg, t) {\n    if (lua_type(L, arg) !== t)\n        tag_error(L, arg, t);\n};\n\nconst luaL_checklstring = function(L, arg) {\n    let s = lua_tolstring(L, arg);\n    if (s === null || s === undefined) tag_error(L, arg, LUA_TSTRING);\n    return s;\n};\n\nconst luaL_checkstring = luaL_checklstring;\n\nconst luaL_optlstring = function(L, arg, def) {\n    if (lua_type(L, arg) <= 0) {\n        return def === null ? null : from_userstring(def);\n    } else return luaL_checklstring(L, arg);\n};\n\nconst luaL_optstring = luaL_optlstring;\n\nconst interror = function(L, arg) {\n    if (lua_isnumber(L, arg))\n        luaL_argerror(L, arg, to_luastring(\"number has no integer representation\", true));\n    else\n        tag_error(L, arg, LUA_TNUMBER);\n};\n\nconst luaL_checknumber = function(L, arg) {\n    let d = lua_tonumberx(L, arg);\n    if (d === false)\n        tag_error(L, arg, LUA_TNUMBER);\n    return d;\n};\n\nconst luaL_optnumber = function(L, arg, def) {\n    return luaL_opt(L, luaL_checknumber, arg, def);\n};\n\nconst luaL_checkinteger = function(L, arg) {\n    let d = lua_tointegerx(L, arg);\n    if (d === false)\n        interror(L, arg);\n    return d;\n};\n\nconst luaL_optinteger = function(L, arg, def) {\n    return luaL_opt(L, luaL_checkinteger, arg, def);\n};\n\nconst luaL_prepbuffsize = function(B, sz) {\n    let newend = B.n + sz;\n    if (B.b.length < newend) {\n        let newsize = Math.max(B.b.length * 2, newend);  /* double buffer size */\n        let newbuff = new Uint8Array(newsize);  /* create larger buffer */\n        newbuff.set(B.b);  /* copy original content */\n        B.b = newbuff;\n    }\n    return B.b.subarray(B.n, newend);\n};\n\nconst luaL_buffinit = function(L, B) {\n    B.L = L;\n    B.b = empty;\n};\n\nconst luaL_buffinitsize = function(L, B, sz) {\n    luaL_buffinit(L, B);\n    return luaL_prepbuffsize(B, sz);\n};\n\nconst luaL_prepbuffer = function(B) {\n    return luaL_prepbuffsize(B, LUAL_BUFFERSIZE);\n};\n\nconst luaL_addlstring = function(B, s, l) {\n    if (l > 0) {\n        s = from_userstring(s);\n        let b = luaL_prepbuffsize(B, l);\n        b.set(s.subarray(0, l));\n        luaL_addsize(B, l);\n    }\n};\n\nconst luaL_addstring = function(B, s) {\n    s = from_userstring(s);\n    luaL_addlstring(B, s, s.length);\n};\n\nconst luaL_pushresult = function(B) {\n    lua_pushlstring(B.L, B.b, B.n);\n    /* delete old buffer */\n    B.n = 0;\n    B.b = empty;\n};\n\nconst luaL_addchar = function(B, c) {\n    luaL_prepbuffsize(B, 1);\n    B.b[B.n++] = c;\n};\n\nconst luaL_addsize = function(B, s) {\n    B.n += s;\n};\n\nconst luaL_pushresultsize = function(B, sz) {\n    luaL_addsize(B, sz);\n    luaL_pushresult(B);\n};\n\nconst luaL_addvalue = function(B) {\n    let L = B.L;\n    let s = lua_tostring(L, -1);\n    luaL_addlstring(B, s, s.length);\n    lua_pop(L, 1);  /* remove value */\n};\n\nconst luaL_opt = function(L, f, n, d) {\n    return lua_type(L, n) <= 0 ? d : f(L, n);\n};\n\nconst getS = function(L, ud) {\n    let s = ud.string;\n    ud.string = null;\n    return s;\n};\n\nconst luaL_loadbufferx = function(L, buff, size, name, mode) {\n    return lua_load(L, getS, {string: buff}, name, mode);\n};\n\nconst luaL_loadbuffer = function(L, s, sz, n) {\n    return luaL_loadbufferx(L, s, sz, n, null);\n};\n\nconst luaL_loadstring = function(L, s) {\n    return luaL_loadbuffer(L, s, s.length, s);\n};\n\nconst luaL_dostring = function(L, s) {\n    return (luaL_loadstring(L, s) || lua_pcall(L, 0, LUA_MULTRET, 0));\n};\n\nconst luaL_getmetafield = function(L, obj, event) {\n    if (!lua_getmetatable(L, obj))  /* no metatable? */\n        return LUA_TNIL;\n    else {\n        lua_pushstring(L, event);\n        let tt = lua_rawget(L, -2);\n        if (tt === LUA_TNIL)  /* is metafield nil? */\n            lua_pop(L, 2);  /* remove metatable and metafield */\n        else\n            lua_remove(L, -2);  /* remove only metatable */\n        return tt;  /* return metafield type */\n    }\n};\n\nconst luaL_callmeta = function(L, obj, event) {\n    obj = lua_absindex(L, obj);\n    if (luaL_getmetafield(L, obj, event) === LUA_TNIL)\n        return false;\n\n    lua_pushvalue(L, obj);\n    lua_call(L, 1, 1);\n\n    return true;\n};\n\nconst luaL_len = function(L, idx) {\n    lua_len(L, idx);\n    let l = lua_tointegerx(L, -1);\n    if (l === false)\n        luaL_error(L, to_luastring(\"object length is not an integer\", true));\n    lua_pop(L, 1);  /* remove object */\n    return l;\n};\n\nconst p_I = to_luastring(\"%I\");\nconst p_f = to_luastring(\"%f\");\nconst luaL_tolstring = function(L, idx) {\n    if (luaL_callmeta(L, idx, __tostring)) {\n        if (!lua_isstring(L, -1))\n            luaL_error(L, to_luastring(\"'__tostring' must return a string\"));\n    } else {\n        let t = lua_type(L, idx);\n        switch(t) {\n            case LUA_TNUMBER: {\n                if (lua_isinteger(L, idx))\n                    lua_pushfstring(L, p_I, lua_tointeger(L, idx));\n                else\n                    lua_pushfstring(L, p_f, lua_tonumber(L, idx));\n                break;\n            }\n            case LUA_TSTRING:\n                lua_pushvalue(L, idx);\n                break;\n            case LUA_TBOOLEAN:\n                lua_pushliteral(L, (lua_toboolean(L, idx) ? \"true\" : \"false\"));\n                break;\n            case LUA_TNIL:\n                lua_pushliteral(L, \"nil\");\n                break;\n            default: {\n                let tt = luaL_getmetafield(L, idx, __name);\n                let kind = tt === LUA_TSTRING ? lua_tostring(L, -1) : luaL_typename(L, idx);\n                lua_pushfstring(L, to_luastring(\"%s: %p\"), kind, lua_topointer(L, idx));\n                if (tt !== LUA_TNIL)\n                    lua_remove(L, -2);\n                break;\n            }\n        }\n    }\n\n    return lua_tolstring(L, -1);\n};\n\n/*\n** Stripped-down 'require': After checking \"loaded\" table, calls 'openf'\n** to open a module, registers the result in 'package.loaded' table and,\n** if 'glb' is true, also registers the result in the global table.\n** Leaves resulting module on the top.\n*/\nconst luaL_requiref = function(L, modname, openf, glb) {\n    luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    lua_getfield(L, -1, modname); /* LOADED[modname] */\n    if (!lua_toboolean(L, -1)) {  /* package not already loaded? */\n        lua_pop(L, 1);  /* remove field */\n        lua_pushcfunction(L, openf);\n        lua_pushstring(L, modname);  /* argument to open function */\n        lua_call(L, 1, 1);  /* call 'openf' to open module */\n        lua_pushvalue(L, -1);  /* make copy of module (call result) */\n        lua_setfield(L, -3, modname);  /* LOADED[modname] = module */\n    }\n    lua_remove(L, -2);  /* remove LOADED table */\n    if (glb) {\n        lua_pushvalue(L, -1);  /* copy of module */\n        lua_setglobal(L, modname);  /* _G[modname] = module */\n    }\n};\n\nconst find_subarray = function(arr, subarr, from_index) {\n    var i = from_index >>> 0,\n        sl = subarr.length,\n        l = arr.length + 1 - sl;\n\n    loop: for (; i < l; i++) {\n        for (let j = 0; j < sl; j++)\n            if (arr[i+j] !== subarr[j])\n                continue loop;\n        return i;\n    }\n    return -1;\n};\n\nconst luaL_gsub = function(L, s, p, r) {\n    let wild;\n    let b = new luaL_Buffer();\n    luaL_buffinit(L, b);\n    while ((wild = find_subarray(s, p)) >= 0) {\n        luaL_addlstring(b, s, wild);  /* push prefix */\n        luaL_addstring(b, r);  /* push replacement in place of pattern */\n        s = s.subarray(wild + p.length);  /* continue after 'p' */\n    }\n    luaL_addstring(b, s);  /* push last suffix */\n    luaL_pushresult(b);\n    return lua_tostring(L, -1);\n};\n\n/*\n** ensure that stack[idx][fname] has a table and push that table\n** into the stack\n*/\nconst luaL_getsubtable = function(L, idx, fname) {\n    if (lua_getfield(L, idx, fname) === LUA_TTABLE)\n        return true;  /* table already there */\n    else {\n        lua_pop(L, 1);  /* remove previous result */\n        idx = lua_absindex(L, idx);\n        lua_newtable(L);\n        lua_pushvalue(L, -1);  /* copy to be left at top */\n        lua_setfield(L, idx, fname);  /* assign new table to field */\n        return false;  /* false, because did not find table there */\n    }\n};\n\n/*\n** set functions from list 'l' into table at top - 'nup'; each\n** function gets the 'nup' elements at the top as upvalues.\n** Returns with only the table at the stack.\n*/\nconst luaL_setfuncs = function(L, l, nup) {\n    luaL_checkstack(L, nup, to_luastring(\"too many upvalues\", true));\n    for (let lib in l) {  /* fill the table with given functions */\n        for (let i = 0; i < nup; i++)  /* copy upvalues to the top */\n            lua_pushvalue(L, -nup);\n        lua_pushcclosure(L, l[lib], nup);  /* closure with those upvalues */\n        lua_setfield(L, -(nup + 2), to_luastring(lib));\n    }\n    lua_pop(L, nup);  /* remove upvalues */\n};\n\n/*\n** Ensures the stack has at least 'space' extra slots, raising an error\n** if it cannot fulfill the request. (The error handling needs a few\n** extra slots to format the error message. In case of an error without\n** this extra space, Lua will generate the same 'stack overflow' error,\n** but without 'msg'.)\n*/\nconst luaL_checkstack = function(L, space, msg) {\n    if (!lua_checkstack(L, space)) {\n        if (msg)\n            luaL_error(L, to_luastring(\"stack overflow (%s)\"), msg);\n        else\n            luaL_error(L, to_luastring('stack overflow', true));\n    }\n};\n\nconst luaL_newlibtable = function(L) {\n    lua_createtable(L);\n};\n\nconst luaL_newlib = function(L, l) {\n    lua_createtable(L);\n    luaL_setfuncs(L, l, 0);\n};\n\n/* predefined references */\nconst LUA_NOREF  = -2;\nconst LUA_REFNIL = -1;\n\nconst luaL_ref = function(L, t) {\n    let ref;\n    if (lua_isnil(L, -1)) {\n        lua_pop(L, 1);  /* remove from stack */\n        return LUA_REFNIL;  /* 'nil' has a unique fixed reference */\n    }\n    t = lua_absindex(L, t);\n    lua_rawgeti(L, t, 0);  /* get first free element */\n    ref = lua_tointeger(L, -1);  /* ref = t[freelist] */\n    lua_pop(L, 1);  /* remove it from stack */\n    if (ref !== 0) {  /* any free element? */\n        lua_rawgeti(L, t, ref);  /* remove it from list */\n        lua_rawseti(L, t, 0);  /* (t[freelist] = t[ref]) */\n    }\n    else  /* no free elements */\n        ref = lua_rawlen(L, t) + 1;  /* get a new reference */\n    lua_rawseti(L, t, ref);\n    return ref;\n};\n\n\nconst luaL_unref = function(L, t, ref) {\n    if (ref >= 0) {\n        t = lua_absindex(L, t);\n        lua_rawgeti(L, t, 0);\n        lua_rawseti(L, t, ref);  /* t[ref] = t[freelist] */\n        lua_pushinteger(L, ref);\n        lua_rawseti(L, t, 0);  /* t[freelist] = ref */\n    }\n};\n\n\nconst errfile = function(L, what, fnameindex, error) {\n    let serr = error.message;\n    let filename = lua_tostring(L, fnameindex).subarray(1);\n    lua_pushfstring(L, to_luastring(\"cannot %s %s: %s\"), to_luastring(what), filename, to_luastring(serr));\n    lua_remove(L, fnameindex);\n    return LUA_ERRFILE;\n};\n\nlet getc;\n\nconst utf8_bom = [0XEF, 0XBB, 0XBF];  /* UTF-8 BOM mark */\nconst skipBOM = function(lf) {\n    lf.n = 0;\n    let c;\n    let p = 0;\n    do {\n        c = getc(lf);\n        if (c === null || c !== utf8_bom[p]) return c;\n        p++;\n        lf.buff[lf.n++] = c;  /* to be read by the parser */\n    } while (p < utf8_bom.length);\n    lf.n = 0;  /* prefix matched; discard it */\n    return getc(lf);  /* return next character */\n};\n\n/*\n** reads the first character of file 'f' and skips an optional BOM mark\n** in its beginning plus its first line if it starts with '#'. Returns\n** true if it skipped the first line.  In any case, '*cp' has the\n** first \"valid\" character of the file (after the optional BOM and\n** a first-line comment).\n*/\nconst skipcomment = function(lf) {\n    let c = skipBOM(lf);\n    if (c === 35 /* '#'.charCodeAt(0) */) {  /* first line is a comment (Unix exec. file)? */\n        do {  /* skip first line */\n            c = getc(lf);\n        } while (c && c !== 10 /* '\\n'.charCodeAt(0) */);\n\n        return {\n            skipped: true,\n            c: getc(lf)  /* skip end-of-line, if present */\n        };\n    } else {\n        return {\n            skipped: false,\n            c: c\n        };\n    }\n};\n\nlet luaL_loadfilex;\n\nif (typeof process === \"undefined\") {\n    class LoadF {\n        constructor() {\n            this.n = NaN;  /* number of pre-read characters */\n            this.f = null;  /* file being read */\n            this.buff = new Uint8Array(1024);  /* area for reading file */\n            this.pos = 0;  /* current position in file */\n            this.err = void 0;\n        }\n    }\n\n    const getF = function(L, ud) {\n        let lf = ud;\n\n        if (lf.f !== null && lf.n > 0) {  /* are there pre-read characters to be read? */\n            let bytes = lf.n; /* return them (chars already in buffer) */\n            lf.n = 0;  /* no more pre-read characters */\n            lf.f = lf.f.subarray(lf.pos);  /* we won't use lf.buff anymore */\n            return lf.buff.subarray(0, bytes);\n        }\n\n        let f = lf.f;\n        lf.f = null;\n        return f;\n    };\n\n    getc = function(lf) {\n        return lf.pos < lf.f.length ? lf.f[lf.pos++] : null;\n    };\n\n    luaL_loadfilex = function(L, filename, mode) {\n        let lf = new LoadF();\n        let fnameindex = lua_gettop(L) + 1;  /* index of filename on the stack */\n        if (filename === null) {\n            throw new Error(\"Can't read stdin in the browser\");\n        } else {\n            lua_pushfstring(L, to_luastring(\"@%s\"), filename);\n            let path = to_uristring(filename);\n            let xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", path, false);\n            /*\n            Synchronous xhr in main thread always returns a js string.\n            Some browsers make console noise if you even attempt to set responseType\n            */\n            if (typeof window === \"undefined\") {\n                xhr.responseType = \"arraybuffer\";\n            }\n            xhr.send();\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                if (typeof xhr.response === \"string\") {\n                    lf.f = to_luastring(xhr.response);\n                } else {\n                    lf.f = new Uint8Array(xhr.response);\n                }\n            } else {\n                lf.err = xhr.status;\n                return errfile(L, \"open\", fnameindex, { message: `${xhr.status}: ${xhr.statusText}` });\n            }\n        }\n        let com = skipcomment(lf);\n        /* check for signature first, as we don't want to add line number corrections in binary case */\n        if (com.c === LUA_SIGNATURE[0] && filename) {  /* binary file? */\n            /* no need to re-open */\n        } else if (com.skipped) { /* read initial portion */\n            lf.buff[lf.n++] = 10 /* '\\n'.charCodeAt(0) */;  /* add line to correct line numbers */\n        }\n        if (com.c !== null)\n            lf.buff[lf.n++] = com.c; /* 'c' is the first character of the stream */\n        let status = lua_load(L, getF, lf, lua_tostring(L, -1), mode);\n        let readstatus = lf.err;\n        if (readstatus) {\n            lua_settop(L, fnameindex);  /* ignore results from 'lua_load' */\n            return errfile(L, \"read\", fnameindex, readstatus);\n        }\n        lua_remove(L, fnameindex);\n        return status;\n    };\n} else {\n    const fs = require('fs');\n\n    class LoadF {\n        constructor() {\n            this.n = NaN;  /* number of pre-read characters */\n            this.f = null;  /* file being read */\n            this.buff = Buffer.alloc(1024);  /* area for reading file */\n            this.pos = 0;  /* current position in file */\n            this.err = void 0;\n        }\n    }\n\n    const getF = function(L, ud) {\n        let lf = ud;\n        let bytes = 0;\n        if (lf.n > 0) {  /* are there pre-read characters to be read? */\n            bytes = lf.n; /* return them (chars already in buffer) */\n            lf.n = 0;  /* no more pre-read characters */\n        } else {  /* read a block from file */\n            try {\n                bytes = fs.readSync(lf.f, lf.buff, 0, lf.buff.length, lf.pos); /* read block */\n            } catch(e) {\n                lf.err = e;\n                bytes = 0;\n            }\n            lf.pos += bytes;\n        }\n        if (bytes > 0)\n            return lf.buff.subarray(0, bytes);\n        else return null;\n    };\n\n    getc = function(lf) {\n        let b = Buffer.alloc(1);\n        let bytes;\n        try {\n            bytes = fs.readSync(lf.f, b, 0, 1, lf.pos);\n        } catch(e) {\n            lf.err = e;\n            return null;\n        }\n        lf.pos += bytes;\n        return bytes > 0 ? b.readUInt8() : null;\n    };\n\n    luaL_loadfilex = function(L, filename, mode) {\n        let lf = new LoadF();\n        let fnameindex = lua_gettop(L) + 1;  /* index of filename on the stack */\n        if (filename === null) {\n            lua_pushliteral(L, \"=stdin\");\n            lf.f = process.stdin.fd;\n        } else {\n            lua_pushfstring(L, to_luastring(\"@%s\"), filename);\n            try {\n                lf.f = fs.openSync(filename, \"r\");\n            } catch (e) {\n                return errfile(L, \"open\", fnameindex, e);\n            }\n        }\n        let com = skipcomment(lf);\n        /* check for signature first, as we don't want to add line number corrections in binary case */\n        if (com.c === LUA_SIGNATURE[0] && filename) {  /* binary file? */\n            /* no need to re-open */\n        } else if (com.skipped) { /* read initial portion */\n            lf.buff[lf.n++] = 10 /* '\\n'.charCodeAt(0) */;  /* add line to correct line numbers */\n        }\n        if (com.c !== null)\n            lf.buff[lf.n++] = com.c; /* 'c' is the first character of the stream */\n        let status = lua_load(L, getF, lf, lua_tostring(L, -1), mode);\n        let readstatus = lf.err;\n        if (filename) try { fs.closeSync(lf.f); } catch(e) {}  /* close file (even in case of errors) */\n        if (readstatus) {\n            lua_settop(L, fnameindex);  /* ignore results from 'lua_load' */\n            return errfile(L, \"read\", fnameindex, readstatus);\n        }\n        lua_remove(L, fnameindex);\n        return status;\n    };\n}\n\nconst luaL_loadfile = function(L, filename) {\n    return luaL_loadfilex(L, filename, null);\n};\n\nconst luaL_dofile = function(L, filename) {\n    return (luaL_loadfile(L, filename) || lua_pcall(L, 0, LUA_MULTRET, 0));\n};\n\nconst lua_writestringerror = function() {\n    for (let i=0; i<arguments.length; i++) {\n        let a = arguments[i];\n        if (typeof process === \"undefined\") {\n            /* split along new lines for separate console.error invocations */\n            do {\n                /* regexp uses [\\d\\D] to work around matching new lines\n                   the 's' flag is non-standard */\n                let r = /([^\\n]*)\\n?([\\d\\D]*)/.exec(a);\n                console.error(r[1]);\n                a = r[2];\n            } while (a !== \"\");\n        } else {\n            process.stderr.write(a);\n        }\n    }\n};\n\nconst luaL_checkversion_ = function(L, ver, sz) {\n    let v = lua_version(L);\n    if (sz != LUAL_NUMSIZES)  /* check numeric types */\n        luaL_error(L, to_luastring(\"core and library have incompatible numeric types\"));\n    if (v != lua_version(null))\n        luaL_error(L, to_luastring(\"multiple Lua VMs detected\"));\n    else if (v !== ver)\n        luaL_error(L, to_luastring(\"version mismatch: app. needs %f, Lua core provides %f\"), ver, v);\n};\n\n/* There is no point in providing this function... */\nconst luaL_checkversion = function(L) {\n    luaL_checkversion_(L, LUA_VERSION_NUM, LUAL_NUMSIZES);\n};\n\nmodule.exports.LUA_ERRFILE          = LUA_ERRFILE;\nmodule.exports.LUA_FILEHANDLE       = LUA_FILEHANDLE;\nmodule.exports.LUA_LOADED_TABLE     = LUA_LOADED_TABLE;\nmodule.exports.LUA_NOREF            = LUA_NOREF;\nmodule.exports.LUA_PRELOAD_TABLE    = LUA_PRELOAD_TABLE;\nmodule.exports.LUA_REFNIL           = LUA_REFNIL;\nmodule.exports.luaL_Buffer          = luaL_Buffer;\nmodule.exports.luaL_addchar         = luaL_addchar;\nmodule.exports.luaL_addlstring      = luaL_addlstring;\nmodule.exports.luaL_addsize         = luaL_addsize;\nmodule.exports.luaL_addstring       = luaL_addstring;\nmodule.exports.luaL_addvalue        = luaL_addvalue;\nmodule.exports.luaL_argcheck        = luaL_argcheck;\nmodule.exports.luaL_argerror        = luaL_argerror;\nmodule.exports.luaL_buffinit        = luaL_buffinit;\nmodule.exports.luaL_buffinitsize    = luaL_buffinitsize;\nmodule.exports.luaL_callmeta        = luaL_callmeta;\nmodule.exports.luaL_checkany        = luaL_checkany;\nmodule.exports.luaL_checkinteger    = luaL_checkinteger;\nmodule.exports.luaL_checklstring    = luaL_checklstring;\nmodule.exports.luaL_checknumber     = luaL_checknumber;\nmodule.exports.luaL_checkoption     = luaL_checkoption;\nmodule.exports.luaL_checkstack      = luaL_checkstack;\nmodule.exports.luaL_checkstring     = luaL_checkstring;\nmodule.exports.luaL_checktype       = luaL_checktype;\nmodule.exports.luaL_checkudata      = luaL_checkudata;\nmodule.exports.luaL_checkversion    = luaL_checkversion;\nmodule.exports.luaL_checkversion_   = luaL_checkversion_;\nmodule.exports.luaL_dofile          = luaL_dofile;\nmodule.exports.luaL_dostring        = luaL_dostring;\nmodule.exports.luaL_error           = luaL_error;\nmodule.exports.luaL_execresult      = luaL_execresult;\nmodule.exports.luaL_fileresult      = luaL_fileresult;\nmodule.exports.luaL_getmetafield    = luaL_getmetafield;\nmodule.exports.luaL_getmetatable    = luaL_getmetatable;\nmodule.exports.luaL_getsubtable     = luaL_getsubtable;\nmodule.exports.luaL_gsub            = luaL_gsub;\nmodule.exports.luaL_len             = luaL_len;\nmodule.exports.luaL_loadbuffer      = luaL_loadbuffer;\nmodule.exports.luaL_loadbufferx     = luaL_loadbufferx;\nmodule.exports.luaL_loadfile        = luaL_loadfile;\nmodule.exports.luaL_loadfilex       = luaL_loadfilex;\nmodule.exports.luaL_loadstring      = luaL_loadstring;\nmodule.exports.luaL_newlib          = luaL_newlib;\nmodule.exports.luaL_newlibtable     = luaL_newlibtable;\nmodule.exports.luaL_newmetatable    = luaL_newmetatable;\nmodule.exports.luaL_newstate        = luaL_newstate;\nmodule.exports.luaL_opt             = luaL_opt;\nmodule.exports.luaL_optinteger      = luaL_optinteger;\nmodule.exports.luaL_optlstring      = luaL_optlstring;\nmodule.exports.luaL_optnumber       = luaL_optnumber;\nmodule.exports.luaL_optstring       = luaL_optstring;\nmodule.exports.luaL_prepbuffer      = luaL_prepbuffer;\nmodule.exports.luaL_prepbuffsize    = luaL_prepbuffsize;\nmodule.exports.luaL_pushresult      = luaL_pushresult;\nmodule.exports.luaL_pushresultsize  = luaL_pushresultsize;\nmodule.exports.luaL_ref             = luaL_ref;\nmodule.exports.luaL_requiref        = luaL_requiref;\nmodule.exports.luaL_setfuncs        = luaL_setfuncs;\nmodule.exports.luaL_setmetatable    = luaL_setmetatable;\nmodule.exports.luaL_testudata       = luaL_testudata;\nmodule.exports.luaL_tolstring       = luaL_tolstring;\nmodule.exports.luaL_traceback       = luaL_traceback;\nmodule.exports.luaL_typename        = luaL_typename;\nmodule.exports.luaL_unref           = luaL_unref;\nmodule.exports.luaL_where           = luaL_where;\nmodule.exports.lua_writestringerror = lua_writestringerror;\n","\"use strict\";\n\nconst {\n    LUA_HOOKCALL,\n    LUA_HOOKRET,\n    LUA_HOOKTAILCALL,\n    LUA_MASKCALL,\n    LUA_MASKLINE,\n    LUA_MASKRET,\n    LUA_MINSTACK,\n    LUA_MULTRET,\n    LUA_SIGNATURE,\n    constant_types: {\n        LUA_TCCL,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TNIL\n    },\n    thread_status: {\n        LUA_ERRMEM,\n        LUA_ERRERR,\n        LUA_ERRRUN,\n        LUA_ERRSYNTAX,\n        LUA_OK,\n        LUA_YIELD\n    },\n    lua_Debug,\n    luastring_indexOf,\n    to_luastring\n} = require('./defs.js');\nconst lapi     = require('./lapi.js');\nconst ldebug   = require('./ldebug.js');\nconst lfunc    = require('./lfunc.js');\nconst {\n    api_check,\n    lua_assert,\n    LUAI_MAXCCALLS\n} = require('./llimits.js');\nconst lobject  = require('./lobject.js');\nconst lopcodes = require('./lopcodes.js');\nconst lparser  = require('./lparser.js');\nconst lstate   = require('./lstate.js');\nconst { luaS_newliteral } = require('./lstring.js');\nconst ltm      = require('./ltm.js');\nconst { LUAI_MAXSTACK } = require('./luaconf.js');\nconst lundump  = require('./lundump.js');\nconst lvm      = require('./lvm.js');\nconst { MBuffer } = require('./lzio.js');\n\nconst adjust_top = function(L, newtop) {\n    if (L.top < newtop) {\n        while (L.top < newtop)\n            L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n    } else {\n        while (L.top > newtop)\n            delete L.stack[--L.top];\n    }\n};\n\nconst seterrorobj = function(L, errcode, oldtop) {\n    let current_top = L.top;\n\n    /* extend stack so that L.stack[oldtop] is sure to exist */\n    while (L.top < oldtop + 1)\n        L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n\n    switch (errcode) {\n        case LUA_ERRMEM: {\n            lobject.setsvalue2s(L, oldtop, luaS_newliteral(L, \"not enough memory\"));\n            break;\n        }\n        case LUA_ERRERR: {\n            lobject.setsvalue2s(L, oldtop, luaS_newliteral(L, \"error in error handling\"));\n            break;\n        }\n        default: {\n            lobject.setobjs2s(L, oldtop, current_top - 1);\n        }\n    }\n\n    while (L.top > oldtop + 1)\n        delete L.stack[--L.top];\n};\n\nconst ERRORSTACKSIZE = LUAI_MAXSTACK + 200;\n\nconst luaD_reallocstack = function(L, newsize) {\n    lua_assert(newsize <= LUAI_MAXSTACK || newsize == ERRORSTACKSIZE);\n    lua_assert(L.stack_last == L.stack.length - lstate.EXTRA_STACK);\n    L.stack.length = newsize;\n    L.stack_last = newsize - lstate.EXTRA_STACK;\n};\n\nconst luaD_growstack = function(L, n) {\n    let size = L.stack.length;\n    if (size > LUAI_MAXSTACK)\n        luaD_throw(L, LUA_ERRERR);\n    else {\n        let needed = L.top + n + lstate.EXTRA_STACK;\n        let newsize = 2 * size;\n        if (newsize > LUAI_MAXSTACK) newsize = LUAI_MAXSTACK;\n        if (newsize < needed) newsize = needed;\n        if (newsize > LUAI_MAXSTACK) {  /* stack overflow? */\n            luaD_reallocstack(L, ERRORSTACKSIZE);\n            ldebug.luaG_runerror(L, to_luastring(\"stack overflow\", true));\n        }\n        else\n            luaD_reallocstack(L, newsize);\n    }\n};\n\nconst luaD_checkstack = function(L, n) {\n    if (L.stack_last - L.top <= n)\n        luaD_growstack(L, n);\n};\n\nconst stackinuse = function(L) {\n    let lim = L.top;\n    for (let ci = L.ci; ci !== null; ci = ci.previous) {\n        if (lim < ci.top) lim = ci.top;\n    }\n    lua_assert(lim <= L.stack_last);\n    return lim + 1; /* part of stack in use */\n};\n\nconst luaD_shrinkstack = function(L) {\n    let inuse = stackinuse(L);\n    let goodsize = inuse + Math.floor(inuse / 8) + 2*lstate.EXTRA_STACK;\n    if (goodsize > LUAI_MAXSTACK)\n        goodsize = LUAI_MAXSTACK;  /* respect stack limit */\n    if (L.stack.length > LUAI_MAXSTACK)  /* had been handling stack overflow? */\n        lstate.luaE_freeCI(L);  /* free all CIs (list grew because of an error) */\n    /* if thread is currently not handling a stack overflow and its\n     good size is smaller than current size, shrink its stack */\n    if (inuse <= (LUAI_MAXSTACK - lstate.EXTRA_STACK) && goodsize < L.stack.length)\n        luaD_reallocstack(L, goodsize);\n};\n\nconst luaD_inctop = function(L) {\n    luaD_checkstack(L, 1);\n    L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n};\n\n/*\n** Prepares a function call: checks the stack, creates a new CallInfo\n** entry, fills in the relevant information, calls hook if needed.\n** If function is a JS function, does the call, too. (Otherwise, leave\n** the execution ('luaV_execute') to the caller, to allow stackless\n** calls.) Returns true iff function has been executed (JS function).\n*/\nconst luaD_precall = function(L, off, nresults) {\n    let func = L.stack[off];\n\n    switch(func.type) {\n        case LUA_TCCL:\n        case LUA_TLCF: {\n            let f = func.type === LUA_TCCL ? func.value.f : func.value;\n\n            luaD_checkstack(L, LUA_MINSTACK);\n            let ci = lstate.luaE_extendCI(L);\n            ci.funcOff = off;\n            ci.nresults = nresults;\n            ci.func = func;\n            ci.top = L.top + LUA_MINSTACK;\n            lua_assert(ci.top <= L.stack_last);\n            ci.callstatus = 0;\n            if (L.hookmask & LUA_MASKCALL)\n                luaD_hook(L, LUA_HOOKCALL, -1);\n            let n = f(L); /* do the actual call */\n            if (typeof n !== \"number\" || n < 0 || (n|0) !== n)\n                throw Error(\"invalid return value from JS function (expected integer)\");\n            lapi.api_checknelems(L, n);\n\n            luaD_poscall(L, ci, L.top - n, n);\n\n            return true;\n        }\n        case LUA_TLCL: {\n            let base;\n            let p = func.value.p;\n            let n = L.top - off - 1;\n            let fsize = p.maxstacksize;\n            luaD_checkstack(L, fsize);\n            if (p.is_vararg) {\n                base = adjust_varargs(L, p, n);\n            } else {\n                for (; n < p.numparams; n++)\n                    L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null); // complete missing arguments\n                base = off + 1;\n            }\n\n            let ci = lstate.luaE_extendCI(L);\n            ci.funcOff = off;\n            ci.nresults = nresults;\n            ci.func = func;\n            ci.l_base = base;\n            ci.top = base + fsize;\n            adjust_top(L, ci.top);\n            ci.l_code = p.code;\n            ci.l_savedpc = 0;\n            ci.callstatus = lstate.CIST_LUA;\n            if (L.hookmask & LUA_MASKCALL)\n                callhook(L, ci);\n            return false;\n        }\n        default:\n            luaD_checkstack(L, 1);\n            tryfuncTM(L, off, func);\n            return luaD_precall(L, off, nresults);\n    }\n};\n\nconst luaD_poscall = function(L, ci, firstResult, nres) {\n    let wanted = ci.nresults;\n\n    if (L.hookmask & (LUA_MASKRET | LUA_MASKLINE)) {\n        if (L.hookmask & LUA_MASKRET)\n            luaD_hook(L, LUA_HOOKRET, -1);\n        L.oldpc = ci.previous.l_savedpc;  /* 'oldpc' for caller function */\n    }\n\n    let res = ci.funcOff;\n    L.ci = ci.previous;\n    L.ci.next = null;\n    return moveresults(L, firstResult, res, nres, wanted);\n};\n\nconst moveresults = function(L, firstResult, res, nres, wanted) {\n    switch (wanted) {\n        case 0:\n            break;\n        case 1: {\n            if (nres === 0)\n                L.stack[res].setnilvalue();\n            else {\n                lobject.setobjs2s(L, res, firstResult); /* move it to proper place */\n            }\n            break;\n        }\n        case LUA_MULTRET: {\n            for (let i = 0; i < nres; i++)\n                lobject.setobjs2s(L, res + i, firstResult + i);\n            for (let i=L.top; i>=(res + nres); i--)\n                delete L.stack[i];\n            L.top = res + nres;\n            return false;\n        }\n        default: {\n            let i;\n            if (wanted <= nres) {\n                for (i = 0; i < wanted; i++)\n                    lobject.setobjs2s(L, res + i, firstResult + i);\n            } else {\n                for (i = 0; i < nres; i++)\n                    lobject.setobjs2s(L, res + i, firstResult + i);\n                for (; i < wanted; i++) {\n                    if (res+i >= L.top)\n                        L.stack[res + i] = new lobject.TValue(LUA_TNIL, null);\n                    else\n                        L.stack[res + i].setnilvalue();\n                }\n            }\n            break;\n        }\n    }\n    let newtop = res + wanted; /* top points after the last result */\n    for (let i=L.top; i>=newtop; i--)\n        delete L.stack[i];\n    L.top = newtop;\n    return true;\n};\n\n/*\n** Call a hook for the given event. Make sure there is a hook to be\n** called. (Both 'L->hook' and 'L->hookmask', which triggers this\n** function, can be changed asynchronously by signals.)\n*/\nconst luaD_hook = function(L, event, line) {\n    let hook = L.hook;\n    if (hook && L.allowhook) {  /* make sure there is a hook */\n        let ci = L.ci;\n        let top = L.top;\n        let ci_top = ci.top;\n        let ar = new lua_Debug();\n        ar.event = event;\n        ar.currentline = line;\n        ar.i_ci = ci;\n        luaD_checkstack(L, LUA_MINSTACK);  /* ensure minimum stack size */\n        ci.top = L.top + LUA_MINSTACK;\n        lua_assert(ci.top <= L.stack_last);\n        L.allowhook = 0;  /* cannot call hooks inside a hook */\n        ci.callstatus |= lstate.CIST_HOOKED;\n        hook(L, ar);\n        lua_assert(!L.allowhook);\n        L.allowhook = 1;\n        ci.top = ci_top;\n        adjust_top(L, top);\n        ci.callstatus &= ~lstate.CIST_HOOKED;\n    }\n};\n\nconst callhook = function(L, ci) {\n    let hook = LUA_HOOKCALL;\n    ci.l_savedpc++;  /* hooks assume 'pc' is already incremented */\n    if ((ci.previous.callstatus & lstate.CIST_LUA) &&\n      ci.previous.l_code[ci.previous.l_savedpc - 1].opcode == lopcodes.OpCodesI.OP_TAILCALL) {\n        ci.callstatus |= lstate.CIST_TAIL;\n        hook = LUA_HOOKTAILCALL;\n    }\n    luaD_hook(L, hook, -1);\n    ci.l_savedpc--;  /* correct 'pc' */\n};\n\nconst adjust_varargs = function(L, p, actual) {\n    let nfixargs = p.numparams;\n    /* move fixed parameters to final position */\n    let fixed = L.top - actual; /* first fixed argument */\n    let base = L.top; /* final position of first argument */\n\n    let i;\n    for (i = 0; i < nfixargs && i < actual; i++) {\n        lobject.pushobj2s(L, L.stack[fixed + i]);\n        L.stack[fixed + i].setnilvalue();\n    }\n\n    for (; i < nfixargs; i++)\n        L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n\n    return base;\n};\n\nconst tryfuncTM = function(L, off, func) {\n    let tm = ltm.luaT_gettmbyobj(L, func, ltm.TMS.TM_CALL);\n    if (!tm.ttisfunction(tm))\n        ldebug.luaG_typeerror(L, func, to_luastring(\"call\", true));\n    /* Open a hole inside the stack at 'func' */\n    lobject.pushobj2s(L, L.stack[L.top-1]); /* push top of stack again */\n    for (let p = L.top-2; p > off; p--)\n        lobject.setobjs2s(L, p, p-1); /* move other items up one */\n    lobject.setobj2s(L, off, tm); /* tag method is the new function to be called */\n};\n\n/*\n** Check appropriate error for stack overflow (\"regular\" overflow or\n** overflow while handling stack overflow). If 'nCalls' is larger than\n** LUAI_MAXCCALLS (which means it is handling a \"regular\" overflow) but\n** smaller than 9/8 of LUAI_MAXCCALLS, does not report an error (to\n** allow overflow handling to work)\n*/\nconst stackerror = function(L) {\n    if (L.nCcalls === LUAI_MAXCCALLS)\n        ldebug.luaG_runerror(L, to_luastring(\"JS stack overflow\", true));\n    else if (L.nCcalls >= LUAI_MAXCCALLS + (LUAI_MAXCCALLS >> 3))\n        luaD_throw(L, LUA_ERRERR);  /* error while handing stack error */\n};\n\n/*\n** Call a function (JS or Lua). The function to be called is at func.\n** The arguments are on the stack, right after the function.\n** When returns, all the results are on the stack, starting at the original\n** function position.\n*/\nconst luaD_call = function(L, off, nResults) {\n    if (++L.nCcalls >= LUAI_MAXCCALLS)\n        stackerror(L);\n    if (!luaD_precall(L, off, nResults))\n        lvm.luaV_execute(L);\n    L.nCcalls--;\n};\n\nconst luaD_throw = function(L, errcode) {\n    if (L.errorJmp) {  /* thread has an error handler? */\n        L.errorJmp.status = errcode;  /* set status */\n        throw L.errorJmp;\n    } else {  /* thread has no error handler */\n        let g = L.l_G;\n        L.status = errcode;  /* mark it as dead */\n        if (g.mainthread.errorJmp) {  /* main thread has a handler? */\n            g.mainthread.stack[g.mainthread.top++] = L.stack[L.top - 1];  /* copy error obj. */\n            luaD_throw(g.mainthread, errcode);  /* re-throw in main thread */\n        } else {  /* no handler at all; abort */\n            let panic = g.panic;\n            if (panic) {  /* panic function? */\n                seterrorobj(L, errcode, L.top);  /* assume EXTRA_STACK */\n                if (L.ci.top < L.top)\n                    L.ci.top = L.top;  /* pushing msg. can break this invariant */\n                panic(L);  /* call panic function (last chance to jump out) */\n            }\n            throw new Error(`Aborted ${errcode}`);\n        }\n    }\n};\n\nconst luaD_rawrunprotected = function(L, f, ud) {\n    let oldnCcalls = L.nCcalls;\n    let lj = {\n        status: LUA_OK,\n        previous: L.errorJmp /* chain new error handler */\n    };\n    L.errorJmp = lj;\n\n    try {\n        f(L, ud);\n    } catch (e) {\n        if (lj.status === LUA_OK) {\n            /* error was not thrown via luaD_throw, i.e. it is a JS error */\n            /* run user error handler (if it exists) */\n            let atnativeerror = L.l_G.atnativeerror;\n            if (atnativeerror) {\n                try {\n                    lj.status = LUA_OK;\n\n                    lapi.lua_pushcfunction(L, atnativeerror);\n                    lapi.lua_pushlightuserdata(L, e);\n                    luaD_callnoyield(L, L.top - 2, 1);\n\n                    /* Now run the message handler (if it exists) */\n                    /* copy of luaG_errormsg without the throw */\n                    if (L.errfunc !== 0) {  /* is there an error handling function? */\n                        let errfunc = L.errfunc;\n                        lobject.pushobj2s(L, L.stack[L.top - 1]); /* move argument */\n                        lobject.setobjs2s(L, L.top - 2, errfunc); /* push function */\n                        luaD_callnoyield(L, L.top - 2, 1);\n                    }\n\n                    lj.status = LUA_ERRRUN;\n                } catch(e2) {\n                    if (lj.status === LUA_OK) {\n                        /* also failed */\n                        lj.status = -1;\n                    }\n                }\n            } else {\n                lj.status = -1;\n            }\n        }\n    }\n\n    L.errorJmp = lj.previous;\n    L.nCcalls = oldnCcalls;\n\n    return lj.status;\n\n};\n\n/*\n** Completes the execution of an interrupted C function, calling its\n** continuation function.\n*/\nconst finishCcall = function(L, status) {\n    let ci = L.ci;\n\n    /* must have a continuation and must be able to call it */\n    lua_assert(ci.c_k !== null && L.nny === 0);\n    /* error status can only happen in a protected call */\n    lua_assert(ci.callstatus & lstate.CIST_YPCALL || status === LUA_YIELD);\n\n    if (ci.callstatus & lstate.CIST_YPCALL) {  /* was inside a pcall? */\n        ci.callstatus &= ~lstate.CIST_YPCALL;  /* continuation is also inside it */\n        L.errfunc = ci.c_old_errfunc;  /* with the same error function */\n    }\n\n    /* finish 'lua_callk'/'lua_pcall'; CIST_YPCALL and 'errfunc' already\n       handled */\n    if (ci.nresults === LUA_MULTRET && L.ci.top < L.top) L.ci.top = L.top;\n    let c_k = ci.c_k; /* don't want to call as method */\n    let n = c_k(L, status, ci.c_ctx);  /* call continuation function */\n    lapi.api_checknelems(L, n);\n    luaD_poscall(L, ci, L.top - n, n);  /* finish 'luaD_precall' */\n};\n\n/*\n** Executes \"full continuation\" (everything in the stack) of a\n** previously interrupted coroutine until the stack is empty (or another\n** interruption long-jumps out of the loop). If the coroutine is\n** recovering from an error, 'ud' points to the error status, which must\n** be passed to the first continuation function (otherwise the default\n** status is LUA_YIELD).\n*/\nconst unroll = function(L, ud) {\n    if (ud !== null)  /* error status? */\n        finishCcall(L, ud);  /* finish 'lua_pcallk' callee */\n\n    while (L.ci !== L.base_ci) {  /* something in the stack */\n        if (!(L.ci.callstatus & lstate.CIST_LUA))  /* C function? */\n            finishCcall(L, LUA_YIELD);  /* complete its execution */\n        else {  /* Lua function */\n            lvm.luaV_finishOp(L);  /* finish interrupted instruction */\n            lvm.luaV_execute(L);  /* execute down to higher C 'boundary' */\n        }\n    }\n};\n\n/*\n** Try to find a suspended protected call (a \"recover point\") for the\n** given thread.\n*/\nconst findpcall = function(L) {\n    for (let ci = L.ci; ci !== null; ci = ci.previous) {  /* search for a pcall */\n        if (ci.callstatus & lstate.CIST_YPCALL)\n            return ci;\n    }\n\n    return null;  /* no pending pcall */\n};\n\n/*\n** Recovers from an error in a coroutine. Finds a recover point (if\n** there is one) and completes the execution of the interrupted\n** 'luaD_pcall'. If there is no recover point, returns zero.\n*/\nconst recover = function(L, status) {\n    let ci = findpcall(L);\n    if (ci === null) return 0;  /* no recovery point */\n    /* \"finish\" luaD_pcall */\n    let oldtop = ci.extra;\n    lfunc.luaF_close(L, oldtop);\n    seterrorobj(L, status, oldtop);\n    L.ci = ci;\n    L.allowhook = ci.callstatus & lstate.CIST_OAH;  /* restore original 'allowhook' */\n    L.nny = 0;  /* should be zero to be yieldable */\n    luaD_shrinkstack(L);\n    L.errfunc = ci.c_old_errfunc;\n    return 1;  /* continue running the coroutine */\n};\n\n/*\n** Signal an error in the call to 'lua_resume', not in the execution\n** of the coroutine itself. (Such errors should not be handled by any\n** coroutine error handler and should not kill the coroutine.)\n*/\nconst resume_error = function(L, msg, narg) {\n    let ts = luaS_newliteral(L, msg);\n    if (narg === 0) {\n        lobject.pushsvalue2s(L, ts);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    } else {\n        /* remove args from the stack */\n        for (let i=1; i<narg; i++)\n            delete L.stack[--L.top];\n        lobject.setsvalue2s(L, L.top-1, ts);  /* push error message */\n    }\n    return LUA_ERRRUN;\n};\n\n/*\n** Do the work for 'lua_resume' in protected mode. Most of the work\n** depends on the status of the coroutine: initial state, suspended\n** inside a hook, or regularly suspended (optionally with a continuation\n** function), plus erroneous cases: non-suspended coroutine or dead\n** coroutine.\n*/\nconst resume = function(L, n) {\n    let firstArg = L.top - n;  /* first argument */\n    let ci = L.ci;\n    if (L.status === LUA_OK) {  /* starting a coroutine? */\n        if (!luaD_precall(L, firstArg - 1, LUA_MULTRET))  /* Lua function? */\n            lvm.luaV_execute(L);  /* call it */\n    } else {  /* resuming from previous yield */\n        lua_assert(L.status === LUA_YIELD);\n        L.status = LUA_OK;  /* mark that it is running (again) */\n        ci.funcOff = ci.extra;\n        ci.func = L.stack[ci.funcOff];\n\n        if (ci.callstatus & lstate.CIST_LUA)  /* yielded inside a hook? */\n            lvm.luaV_execute(L);  /* just continue running Lua code */\n        else {  /* 'common' yield */\n            if (ci.c_k !== null) {  /* does it have a continuation function? */\n                n = ci.c_k(L, LUA_YIELD, ci.c_ctx); /* call continuation */\n                lapi.api_checknelems(L, n);\n                firstArg = L.top - n;  /* yield results come from continuation */\n            }\n\n            luaD_poscall(L, ci, firstArg, n);  /* finish 'luaD_precall' */\n        }\n\n        unroll(L, null);  /* run continuation */\n    }\n};\n\nconst lua_resume = function(L, from, nargs) {\n    let oldnny = L.nny;  /* save \"number of non-yieldable\" calls */\n\n    if (L.status === LUA_OK) {  /* may be starting a coroutine */\n        if (L.ci !== L.base_ci)  /* not in base level? */\n            return resume_error(L, \"cannot resume non-suspended coroutine\", nargs);\n    } else if (L.status !== LUA_YIELD)\n        return resume_error(L, \"cannot resume dead coroutine\", nargs);\n\n    L.nCcalls = from ? from.nCcalls + 1 : 1;\n    if (L.nCcalls >= LUAI_MAXCCALLS)\n        return resume_error(L, \"JS stack overflow\", nargs);\n\n    L.nny = 0;  /* allow yields */\n\n    lapi.api_checknelems(L, L.status === LUA_OK ? nargs + 1: nargs);\n\n    let status = luaD_rawrunprotected(L, resume, nargs);\n    if (status === -1)  /* error calling 'lua_resume'? */\n        status = LUA_ERRRUN;\n    else {  /* continue running after recoverable errors */\n        while (status > LUA_YIELD && recover(L, status)) {\n            /* unroll continuation */\n            status = luaD_rawrunprotected(L, unroll, status);\n        }\n\n        if (status > LUA_YIELD) {  /* unrecoverable error? */\n            L.status = status;  /* mark thread as 'dead' */\n            seterrorobj(L, status, L.top);  /* push error message */\n            L.ci.top = L.top;\n        } else\n            lua_assert(status === L.status);  /* normal end or yield */\n    }\n\n    L.nny = oldnny;  /* restore 'nny' */\n    L.nCcalls--;\n    lua_assert(L.nCcalls === (from ? from.nCcalls : 0));\n    return status;\n};\n\nconst lua_isyieldable = function(L) {\n    return L.nny === 0;\n};\n\nconst lua_yieldk = function(L, nresults, ctx, k) {\n    let ci = L.ci;\n    lapi.api_checknelems(L, nresults);\n\n    if (L.nny > 0) {\n        if (L !== L.l_G.mainthread)\n            ldebug.luaG_runerror(L, to_luastring(\"attempt to yield across a JS-call boundary\", true));\n        else\n            ldebug.luaG_runerror(L, to_luastring(\"attempt to yield from outside a coroutine\", true));\n    }\n\n    L.status = LUA_YIELD;\n    ci.extra = ci.funcOff;  /* save current 'func' */\n    if (ci.callstatus & lstate.CIST_LUA)  /* inside a hook? */\n        api_check(L, k === null, \"hooks cannot continue after yielding\");\n    else {\n        ci.c_k = k;\n        if (k !== null)  /* is there a continuation? */\n            ci.c_ctx = ctx;  /* save context */\n        ci.funcOff = L.top - nresults - 1;  /* protect stack below results */\n        ci.func = L.stack[ci.funcOff];\n        luaD_throw(L, LUA_YIELD);\n    }\n\n    lua_assert(ci.callstatus & lstate.CIST_HOOKED);  /* must be inside a hook */\n    return 0;  /* return to 'luaD_hook' */\n};\n\nconst lua_yield = function(L, n) {\n    lua_yieldk(L, n, 0, null);\n};\n\nconst luaD_pcall = function(L, func, u, old_top, ef) {\n    let old_ci = L.ci;\n    let old_allowhooks = L.allowhook;\n    let old_nny = L.nny;\n    let old_errfunc = L.errfunc;\n    L.errfunc = ef;\n\n    let status = luaD_rawrunprotected(L, func, u);\n\n    if (status !== LUA_OK) {\n        lfunc.luaF_close(L, old_top);\n        seterrorobj(L, status, old_top);\n        L.ci = old_ci;\n        L.allowhook = old_allowhooks;\n        L.nny = old_nny;\n        luaD_shrinkstack(L);\n    }\n\n    L.errfunc = old_errfunc;\n\n    return status;\n};\n\n/*\n** Similar to 'luaD_call', but does not allow yields during the call\n*/\nconst luaD_callnoyield = function(L, off, nResults) {\n    L.nny++;\n    luaD_call(L, off, nResults);\n    L.nny--;\n};\n\n/*\n** Execute a protected parser.\n*/\nclass SParser {\n    constructor(z, name, mode) {  /* data to 'f_parser' */\n        this.z = z;\n        this.buff = new MBuffer();  /* dynamic structure used by the scanner */\n        this.dyd = new lparser.Dyndata();  /* dynamic structures used by the parser */\n        this.mode = mode;\n        this.name = name;\n    }\n}\n\nconst checkmode = function(L, mode, x) {\n    if (mode && luastring_indexOf(mode, x[0]) === -1) {\n        lobject.luaO_pushfstring(L,\n            to_luastring(\"attempt to load a %s chunk (mode is '%s')\"), x, mode);\n        luaD_throw(L, LUA_ERRSYNTAX);\n    }\n};\n\nconst f_parser = function(L, p) {\n    let cl;\n    let c = p.z.zgetc();  /* read first character */\n    if (c === LUA_SIGNATURE[0]) {\n        checkmode(L, p.mode, to_luastring(\"binary\", true));\n        cl = lundump.luaU_undump(L, p.z, p.name);\n    } else {\n        checkmode(L, p.mode, to_luastring(\"text\", true));\n        cl = lparser.luaY_parser(L, p.z, p.buff, p.dyd, p.name, c);\n    }\n\n    lua_assert(cl.nupvalues === cl.p.upvalues.length);\n    lfunc.luaF_initupvals(L, cl);\n};\n\nconst luaD_protectedparser = function(L, z, name, mode) {\n    let p = new SParser(z, name, mode);\n    L.nny++;  /* cannot yield during parsing */\n    let status = luaD_pcall(L, f_parser, p, L.top, L.errfunc);\n    L.nny--;\n    return status;\n};\n\nmodule.exports.adjust_top           = adjust_top;\nmodule.exports.luaD_call            = luaD_call;\nmodule.exports.luaD_callnoyield     = luaD_callnoyield;\nmodule.exports.luaD_checkstack      = luaD_checkstack;\nmodule.exports.luaD_growstack       = luaD_growstack;\nmodule.exports.luaD_hook            = luaD_hook;\nmodule.exports.luaD_inctop          = luaD_inctop;\nmodule.exports.luaD_pcall           = luaD_pcall;\nmodule.exports.luaD_poscall         = luaD_poscall;\nmodule.exports.luaD_precall         = luaD_precall;\nmodule.exports.luaD_protectedparser = luaD_protectedparser;\nmodule.exports.luaD_rawrunprotected = luaD_rawrunprotected;\nmodule.exports.luaD_reallocstack    = luaD_reallocstack;\nmodule.exports.luaD_throw           = luaD_throw;\nmodule.exports.lua_isyieldable      = lua_isyieldable;\nmodule.exports.lua_resume           = lua_resume;\nmodule.exports.lua_yield            = lua_yield;\nmodule.exports.lua_yieldk           = lua_yieldk;\n","\"use strict\";\n\nconst {\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TCCL,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TTABLE,\n        LUA_TTHREAD,\n        LUA_TUSERDATA\n    },\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require('./llimits.js');\nconst ldebug  = require('./ldebug.js');\nconst lobject = require('./lobject.js');\nconst {\n    luaS_hashlongstr,\n    TString\n} = require('./lstring.js');\nconst lstate  = require('./lstate.js');\n\n/* used to prevent conflicts with lightuserdata keys */\nlet lightuserdata_hashes = new WeakMap();\nconst get_lightuserdata_hash = function(v) {\n    let hash = lightuserdata_hashes.get(v);\n    if (!hash) {\n        /* Hash should be something unique that is a valid WeakMap key\n           so that it ends up in dead_weak when removed from a table */\n        hash = {};\n        lightuserdata_hashes.set(v, hash);\n    }\n    return hash;\n};\n\nconst table_hash = function(L, key) {\n    switch(key.type) {\n        case LUA_TNIL:\n            return ldebug.luaG_runerror(L, to_luastring(\"table index is nil\", true));\n        case LUA_TNUMFLT:\n            if (isNaN(key.value))\n                return ldebug.luaG_runerror(L, to_luastring(\"table index is NaN\", true));\n            /* fall through */\n        case LUA_TNUMINT: /* takes advantage of floats and integers being same in JS */\n        case LUA_TBOOLEAN:\n        case LUA_TTABLE:\n        case LUA_TLCL:\n        case LUA_TLCF:\n        case LUA_TCCL:\n        case LUA_TUSERDATA:\n        case LUA_TTHREAD:\n            return key.value;\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR:\n            return luaS_hashlongstr(key.tsvalue());\n        case LUA_TLIGHTUSERDATA: {\n            let v = key.value;\n            switch(typeof v) {\n                case \"string\":\n                    /* possible conflict with LUA_TSTRING.\n                       prefix this string with \"*\" so they don't clash */\n                    return \"*\" + v;\n                case \"number\":\n                    /* possible conflict with LUA_TNUMBER.\n                       turn into string and prefix with \"#\" to avoid clash with other strings */\n                    return \"#\" + v;\n                case \"boolean\":\n                    /* possible conflict with LUA_TBOOLEAN. use strings ?true and ?false instead */\n                    return v?\"?true\":\"?false\";\n                case \"function\":\n                    /* possible conflict with LUA_TLCF.\n                       indirect via a weakmap */\n                    return get_lightuserdata_hash(v);\n                case \"object\":\n                    /* v could be a lua_State, CClosure, LClosure, Table or Userdata from this state as returned by lua_topointer */\n                    if ((v instanceof lstate.lua_State && v.l_G === L.l_G) ||\n                        v instanceof Table ||\n                        v instanceof lobject.Udata ||\n                        v instanceof lobject.LClosure ||\n                        v instanceof lobject.CClosure) {\n                        /* indirect via a weakmap */\n                        return get_lightuserdata_hash(v);\n                    }\n                    /* fall through */\n                default:\n                    return v;\n            }\n        }\n        default:\n            throw new Error(\"unknown key type: \" + key.type);\n    }\n};\n\nclass Table {\n    constructor(L) {\n        this.id = L.l_G.id_counter++;\n        this.strong = new Map();\n        this.dead_strong = new Map();\n        this.dead_weak = void 0; /* initialised when needed */\n        this.f = void 0; /* first entry */\n        this.l = void 0; /* last entry */\n        this.metatable = null;\n        this.flags = ~0;\n    }\n}\n\nconst invalidateTMcache = function(t) {\n    t.flags = 0;\n};\n\nconst add = function(t, hash, key, value) {\n    t.dead_strong.clear();\n    t.dead_weak = void 0;\n    let prev = null;\n    let entry = {\n        key: key,\n        value: value,\n        p: prev = t.l,\n        n: void 0\n    };\n    if (!t.f) t.f = entry;\n    if (prev) prev.n = entry;\n    t.strong.set(hash, entry);\n    t.l = entry;\n};\n\nconst is_valid_weakmap_key = function(k) {\n    return typeof k === 'object' ? k !== null : typeof k === 'function';\n};\n\n/* Move out of 'strong' part and into 'dead' part. */\nconst mark_dead = function(t, hash) {\n    let e = t.strong.get(hash);\n    if (e) {\n        e.key.setdeadvalue();\n        e.value = void 0;\n        let next = e.n;\n        let prev = e.p;\n        e.p = void 0; /* no need to know previous item any more */\n        if(prev) prev.n = next;\n        if(next) next.p = prev;\n        if(t.f === e) t.f = next;\n        if(t.l === e) t.l = prev;\n        t.strong.delete(hash);\n        if (is_valid_weakmap_key(hash)) {\n            if (!t.dead_weak) t.dead_weak = new WeakMap();\n            t.dead_weak.set(hash, e);\n        } else {\n            /* can't be used as key in weakmap */\n            t.dead_strong.set(hash, e);\n        }\n    }\n};\n\nconst luaH_new = function(L) {\n    return new Table(L);\n};\n\nconst getgeneric = function(t, hash) {\n    let v = t.strong.get(hash);\n    return v ? v.value : lobject.luaO_nilobject;\n};\n\nconst luaH_getint = function(t, key) {\n    lua_assert(typeof key == \"number\" && (key|0) === key);\n    return getgeneric(t, key);\n};\n\nconst luaH_getstr = function(t, key) {\n    lua_assert(key instanceof TString);\n    return getgeneric(t, luaS_hashlongstr(key));\n};\n\nconst luaH_get = function(L, t, key) {\n    lua_assert(key instanceof lobject.TValue);\n    if (key.ttisnil() || (key.ttisfloat() && isNaN(key.value)))\n        return lobject.luaO_nilobject;\n    return getgeneric(t, table_hash(L, key));\n};\n\nconst luaH_setint = function(t, key, value) {\n    lua_assert(typeof key == \"number\" && (key|0) === key && value instanceof lobject.TValue);\n    let hash = key; /* table_hash known result */\n    if (value.ttisnil()) {\n        mark_dead(t, hash);\n        return;\n    }\n    let e = t.strong.get(hash);\n    if (e) {\n        let tv = e.value;\n        tv.setfrom(value);\n    } else {\n        let k = new lobject.TValue(LUA_TNUMINT, key);\n        let v = new lobject.TValue(value.type, value.value);\n        add(t, hash, k, v);\n    }\n};\n\nconst luaH_setfrom = function(L, t, key, value) {\n    lua_assert(key instanceof lobject.TValue);\n    let hash = table_hash(L, key);\n    if (value.ttisnil()) { /* delete */\n        mark_dead(t, hash);\n        return;\n    }\n\n    let e = t.strong.get(hash);\n    if (e) {\n        e.value.setfrom(value);\n    } else {\n        let k;\n        let kv = key.value;\n        if ((key.ttisfloat() && (kv|0) === kv)) { /* does index fit in an integer? */\n            /* insert it as an integer */\n            k = new lobject.TValue(LUA_TNUMINT, kv);\n        } else {\n            k = new lobject.TValue(key.type, kv);\n        }\n        let v = new lobject.TValue(value.type, value.value);\n        add(t, hash, k, v);\n    }\n};\n\n/*\n** Try to find a boundary in table 't'. A 'boundary' is an integer index\n** such that t[i] is non-nil and t[i+1] is nil (and 0 if t[1] is nil).\n*/\nconst luaH_getn = function(t) {\n    let i = 0;\n    let j = t.strong.size + 1; /* use known size of Map to bound search */\n    /* now do a binary search between them */\n    while (j - i > 1) {\n        let m = Math.floor((i+j)/2);\n        if (luaH_getint(t, m).ttisnil()) j = m;\n        else i = m;\n    }\n    return i;\n};\n\nconst luaH_next = function(L, table, keyI) {\n    let keyO = L.stack[keyI];\n\n    let entry;\n    if (keyO.type === LUA_TNIL) {\n        entry = table.f;\n        if (!entry)\n            return false;\n    } else {\n        /* First find current key */\n        let hash = table_hash(L, keyO);\n        /* Look in main part of table */\n        entry = table.strong.get(hash);\n        if (entry) {\n            entry = entry.n;\n            if (!entry)\n                return false;\n        } else {\n            /* Try dead keys */\n            entry = (table.dead_weak && table.dead_weak.get(hash)) || table.dead_strong.get(hash);\n            if (!entry)\n                /* item not in table */\n                return ldebug.luaG_runerror(L, to_luastring(\"invalid key to 'next'\"));\n            /* Iterate until either out of keys, or until finding a non-dead key */\n            do {\n                entry = entry.n;\n                if (!entry)\n                    return false;\n            } while (entry.key.ttisdeadkey());\n        }\n    }\n    lobject.setobj2s(L, keyI, entry.key);\n    lobject.setobj2s(L, keyI+1, entry.value);\n    return true;\n};\n\nmodule.exports.invalidateTMcache = invalidateTMcache;\nmodule.exports.luaH_get     = luaH_get;\nmodule.exports.luaH_getint  = luaH_getint;\nmodule.exports.luaH_getn    = luaH_getn;\nmodule.exports.luaH_getstr  = luaH_getstr;\nmodule.exports.luaH_setfrom = luaH_setfrom;\nmodule.exports.luaH_setint  = luaH_setint;\nmodule.exports.luaH_new     = luaH_new;\nmodule.exports.luaH_next    = luaH_next;\nmodule.exports.Table        = Table;\n","\"use strict\";\n\nconst {\n    is_luastring,\n    luastring_eq,\n    luastring_from,\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require(\"./llimits.js\");\n\nclass TString {\n\n    constructor(L, str) {\n        this.hash = null;\n        this.realstring = str;\n    }\n\n    getstr() {\n        return this.realstring;\n    }\n\n    tsslen() {\n        return this.realstring.length;\n    }\n\n}\n\nconst luaS_eqlngstr = function(a, b) {\n    lua_assert(a instanceof TString);\n    lua_assert(b instanceof TString);\n    return a == b || luastring_eq(a.realstring, b.realstring);\n};\n\n/* converts strings (arrays) to a consistent map key\n   make sure this doesn't conflict with any of the anti-collision strategies in ltable */\nconst luaS_hash = function(str) {\n    lua_assert(is_luastring(str));\n    let len = str.length;\n    let s = \"|\";\n    for (let i=0; i<len; i++)\n        s += str[i].toString(16);\n    return s;\n};\n\nconst luaS_hashlongstr = function(ts) {\n    lua_assert(ts instanceof TString);\n    if(ts.hash === null) {\n        ts.hash = luaS_hash(ts.getstr());\n    }\n    return ts.hash;\n};\n\n/* variant that takes ownership of array */\nconst luaS_bless = function(L, str) {\n    lua_assert(str instanceof Uint8Array);\n    return new TString(L, str);\n};\n\n/* makes a copy */\nconst luaS_new = function(L, str) {\n    return luaS_bless(L, luastring_from(str));\n};\n\n/* takes a js string */\nconst luaS_newliteral = function(L, str) {\n    return luaS_bless(L, to_luastring(str));\n};\n\nmodule.exports.luaS_eqlngstr    = luaS_eqlngstr;\nmodule.exports.luaS_hash        = luaS_hash;\nmodule.exports.luaS_hashlongstr = luaS_hashlongstr;\nmodule.exports.luaS_bless       = luaS_bless;\nmodule.exports.luaS_new         = luaS_new;\nmodule.exports.luaS_newliteral  = luaS_newliteral;\nmodule.exports.TString          = TString;\n","\"use strict\";\n\nconst {\n    LUA_HOOKCOUNT,\n    LUA_HOOKLINE,\n    LUA_MASKCOUNT,\n    LUA_MASKLINE,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TNIL,\n        LUA_TTABLE\n    },\n    thread_status: {\n        LUA_ERRRUN,\n        LUA_YIELD\n    },\n    from_userstring,\n    luastring_eq,\n    luastring_indexOf,\n    to_luastring\n} = require('./defs.js');\nconst {\n    api_check,\n    lua_assert\n} = require('./llimits.js');\nconst { LUA_IDSIZE } = require('./luaconf.js');\nconst lapi     = require('./lapi.js');\nconst ldo      = require('./ldo.js');\nconst lfunc    = require('./lfunc.js');\nconst llex     = require('./llex.js');\nconst lobject  = require('./lobject.js');\nconst lopcodes = require('./lopcodes.js');\nconst lstate   = require('./lstate.js');\nconst ltable   = require('./ltable.js');\nconst ltm      = require('./ltm.js');\nconst lvm      = require('./lvm.js');\n\nconst currentpc = function(ci) {\n    lua_assert(ci.callstatus & lstate.CIST_LUA);\n    return ci.l_savedpc - 1;\n};\n\nconst currentline = function(ci) {\n    return ci.func.value.p.lineinfo.length !== 0 ? ci.func.value.p.lineinfo[currentpc(ci)] : -1;\n};\n\n/*\n** If function yielded, its 'func' can be in the 'extra' field. The\n** next function restores 'func' to its correct value for debugging\n** purposes. (It exchanges 'func' and 'extra'; so, when called again,\n** after debugging, it also \"re-restores\" ** 'func' to its altered value.\n*/\nconst swapextra = function(L) {\n    if (L.status === LUA_YIELD) {\n        let ci = L.ci;  /* get function that yielded */\n        let temp = ci.funcOff;  /* exchange its 'func' and 'extra' values */\n        ci.func = L.stack[ci.extra];\n        ci.funcOff = ci.extra;\n        ci.extra = temp;\n    }\n};\n\nconst lua_sethook = function(L, func, mask, count) {\n    if (func === null || mask === 0) {  /* turn off hooks? */\n        mask = 0;\n        func = null;\n    }\n    if (L.ci.callstatus & lstate.CIST_LUA)\n        L.oldpc = L.ci.l_savedpc;\n    L.hook = func;\n    L.basehookcount = count;\n    L.hookcount = L.basehookcount;\n    L.hookmask = mask;\n};\n\nconst lua_gethook = function(L) {\n    return L.hook;\n};\n\n\nconst lua_gethookmask = function(L) {\n    return L.hookmask;\n};\n\n\nconst lua_gethookcount = function(L) {\n    return L.basehookcount;\n};\n\nconst lua_getstack = function(L, level, ar) {\n    let ci;\n    let status;\n    if (level < 0) return 0;  /* invalid (negative) level */\n    for (ci = L.ci; level > 0 && ci !== L.base_ci; ci = ci.previous)\n        level--;\n    if (level === 0 && ci !== L.base_ci) {  /* level found? */\n        status = 1;\n        ar.i_ci = ci;\n    } else\n        status = 0;  /* no such level */\n    return status;\n};\n\nconst upvalname = function(p, uv) {\n    lua_assert(uv < p.upvalues.length);\n    let s = p.upvalues[uv].name;\n    if (s === null) return to_luastring(\"?\", true);\n    return s.getstr();\n};\n\nconst findvararg = function(ci, n) {\n    let nparams = ci.func.value.p.numparams;\n    if (n >= ci.l_base - ci.funcOff - nparams)\n        return null;  /* no such vararg */\n    else {\n        return {\n            pos: ci.funcOff + nparams + n,\n            name: to_luastring(\"(*vararg)\", true)  /* generic name for any vararg */\n        };\n    }\n};\n\nconst findlocal = function(L, ci, n) {\n    let base, name = null;\n\n    if (ci.callstatus & lstate.CIST_LUA) {\n        if (n < 0)  /* access to vararg values? */\n            return findvararg(ci, -n);\n        else {\n            base = ci.l_base;\n            name = lfunc.luaF_getlocalname(ci.func.value.p, n, currentpc(ci));\n        }\n    } else\n        base = ci.funcOff + 1;\n\n    if (name === null) {  /* no 'standard' name? */\n        let limit = ci === L.ci ? L.top : ci.next.funcOff;\n        if (limit - base >= n && n > 0)  /* is 'n' inside 'ci' stack? */\n            name = to_luastring(\"(*temporary)\", true);  /* generic name for any valid slot */\n        else\n            return null;  /* no name */\n    }\n    return {\n        pos: base + (n - 1),\n        name: name\n    };\n};\n\nconst lua_getlocal = function(L, ar, n) {\n    let name;\n    swapextra(L);\n    if (ar === null) {  /* information about non-active function? */\n        if (!L.stack[L.top - 1].ttisLclosure())  /* not a Lua function? */\n            name = null;\n        else  /* consider live variables at function start (parameters) */\n            name = lfunc.luaF_getlocalname(L.stack[L.top - 1].value.p, n, 0);\n    } else {  /* active function; get information through 'ar' */\n        let local = findlocal(L, ar.i_ci, n);\n        if (local) {\n            name = local.name;\n            lobject.pushobj2s(L, L.stack[local.pos]);\n            api_check(L, L.top <= L.ci.top, \"stack overflow\");\n        } else {\n            name = null;\n        }\n    }\n    swapextra(L);\n    return name;\n};\n\nconst lua_setlocal = function(L, ar, n) {\n    let name;\n    swapextra(L);\n    let local = findlocal(L, ar.i_ci, n);\n    if (local) {\n        name = local.name;\n        lobject.setobjs2s(L, local.pos, L.top - 1);\n        delete L.stack[--L.top];  /* pop value */\n    } else {\n        name = null;\n    }\n    swapextra(L);\n    return name;\n};\n\nconst funcinfo = function(ar, cl) {\n    if (cl === null || cl instanceof lobject.CClosure) {\n        ar.source = to_luastring(\"=[JS]\", true);\n        ar.linedefined = -1;\n        ar.lastlinedefined = -1;\n        ar.what = to_luastring(\"J\", true);\n    } else {\n        let p = cl.p;\n        ar.source = p.source ? p.source.getstr() : to_luastring(\"=?\", true);\n        ar.linedefined = p.linedefined;\n        ar.lastlinedefined = p.lastlinedefined;\n        ar.what = ar.linedefined === 0 ? to_luastring(\"main\", true) : to_luastring(\"Lua\", true);\n    }\n\n    ar.short_src = lobject.luaO_chunkid(ar.source, LUA_IDSIZE);\n};\n\nconst collectvalidlines = function(L, f) {\n    if (f === null || f instanceof lobject.CClosure) {\n        L.stack[L.top] = new lobject.TValue(LUA_TNIL, null);\n        lapi.api_incr_top(L);\n    } else {\n        let lineinfo = f.p.lineinfo;\n        let t = ltable.luaH_new(L);\n        L.stack[L.top] = new lobject.TValue(LUA_TTABLE, t);\n        lapi.api_incr_top(L);\n        let v = new lobject.TValue(LUA_TBOOLEAN, true);\n        for (let i = 0; i < lineinfo.length; i++)\n            ltable.luaH_setint(t, lineinfo[i], v);\n    }\n};\n\nconst getfuncname = function(L, ci) {\n    let r = {\n        name: null,\n        funcname: null\n    };\n    if (ci === null)\n        return null;\n    else if (ci.callstatus & lstate.CIST_FIN) {  /* is this a finalizer? */\n        r.name = to_luastring(\"__gc\", true);\n        r.funcname = to_luastring(\"metamethod\", true);  /* report it as such */\n        return r;\n    }\n    /* calling function is a known Lua function? */\n    else if (!(ci.callstatus & lstate.CIST_TAIL) && ci.previous.callstatus & lstate.CIST_LUA)\n        return funcnamefromcode(L, ci.previous);\n    else return null;  /* no way to find a name */\n};\n\nconst auxgetinfo = function(L, what, ar, f, ci) {\n    let status = 1;\n    for (; what.length > 0; what = what.subarray(1)) {\n        switch (what[0]) {\n            case 83 /* ('S').charCodeAt(0) */: {\n                funcinfo(ar, f);\n                break;\n            }\n            case 108 /* ('l').charCodeAt(0) */: {\n                ar.currentline = ci && ci.callstatus & lstate.CIST_LUA ? currentline(ci) : -1;\n                break;\n            }\n            case 117 /* ('u').charCodeAt(0) */: {\n                ar.nups = f === null ? 0 : f.nupvalues;\n                if (f === null || f instanceof lobject.CClosure) {\n                    ar.isvararg = true;\n                    ar.nparams = 0;\n                } else {\n                    ar.isvararg = f.p.is_vararg;\n                    ar.nparams = f.p.numparams;\n                }\n                break;\n            }\n            case 116 /* ('t').charCodeAt(0) */: {\n                ar.istailcall = ci ? ci.callstatus & lstate.CIST_TAIL : 0;\n                break;\n            }\n            case 110 /* ('n').charCodeAt(0) */: {\n                let r = getfuncname(L, ci);\n                if (r === null) {\n                    ar.namewhat = to_luastring(\"\", true);\n                    ar.name = null;\n                } else {\n                    ar.namewhat = r.funcname;\n                    ar.name = r.name;\n                }\n                break;\n            }\n            case 76 /* ('L').charCodeAt(0) */:\n            case 102 /* ('f').charCodeAt(0) */:  /* handled by lua_getinfo */\n                break;\n            default: status = 0;  /* invalid option */\n        }\n    }\n\n    return status;\n};\n\nconst lua_getinfo = function(L, what, ar) {\n    what = from_userstring(what);\n    let status, cl, ci, func;\n    swapextra(L);\n    if (what[0] === 62 /* ('>').charCodeAt(0) */) {\n        ci = null;\n        func = L.stack[L.top - 1];\n        api_check(L, func.ttisfunction(), \"function expected\");\n        what = what.subarray(1);  /* skip the '>' */\n        L.top--;  /* pop function */\n    } else {\n        ci = ar.i_ci;\n        func = ci.func;\n        lua_assert(ci.func.ttisfunction());\n    }\n\n    cl = func.ttisclosure() ? func.value : null;\n    status = auxgetinfo(L, what, ar, cl, ci);\n    if (luastring_indexOf(what, 102 /* ('f').charCodeAt(0) */) >= 0) {\n        lobject.pushobj2s(L, func);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    }\n\n    swapextra(L);\n    if (luastring_indexOf(what, 76 /* ('L').charCodeAt(0) */) >= 0)\n        collectvalidlines(L, cl);\n\n    return status;\n};\n\nconst kname = function(p, pc, c) {\n    let r = {\n        name: null,\n        funcname: null\n    };\n\n    if (lopcodes.ISK(c)) {  /* is 'c' a constant? */\n        let kvalue = p.k[lopcodes.INDEXK(c)];\n        if (kvalue.ttisstring()) {  /* literal constant? */\n            r.name = kvalue.svalue();  /* it is its own name */\n            return r;\n        }\n        /* else no reasonable name found */\n    } else {  /* 'c' is a register */\n        let what = getobjname(p, pc, c); /* search for 'c' */\n        if (what && what.funcname[0] === 99 /* ('c').charCodeAt(0) */) {  /* found a constant name? */\n            return what;  /* 'name' already filled */\n        }\n        /* else no reasonable name found */\n    }\n    r.name = to_luastring(\"?\", true);\n    return r;  /* no reasonable name found */\n};\n\nconst filterpc = function(pc, jmptarget) {\n    if (pc < jmptarget)  /* is code conditional (inside a jump)? */\n        return -1;  /* cannot know who sets that register */\n    else return pc;  /* current position sets that register */\n};\n\n/*\n** try to find last instruction before 'lastpc' that modified register 'reg'\n*/\nconst findsetreg = function(p, lastpc, reg) {\n    let setreg = -1;  /* keep last instruction that changed 'reg' */\n    let jmptarget = 0;  /* any code before this address is conditional */\n    let OCi = lopcodes.OpCodesI;\n    for (let pc = 0; pc < lastpc; pc++) {\n        let i = p.code[pc];\n        let a = i.A;\n        switch (i.opcode) {\n            case OCi.OP_LOADNIL: {\n                let b = i.B;\n                if (a <= reg && reg <= a + b)  /* set registers from 'a' to 'a+b' */\n                    setreg = filterpc(pc, jmptarget);\n                break;\n            }\n            case OCi.OP_TFORCALL: {\n                if (reg >= a + 2)  /* affect all regs above its base */\n                    setreg = filterpc(pc, jmptarget);\n                break;\n            }\n            case OCi.OP_CALL:\n            case OCi.OP_TAILCALL: {\n                if (reg >= a)  /* affect all registers above base */\n                    setreg = filterpc(pc, jmptarget);\n                break;\n            }\n            case OCi.OP_JMP: {\n                let b = i.sBx;\n                let dest = pc + 1 + b;\n                /* jump is forward and do not skip 'lastpc'? */\n                if (pc < dest && dest <= lastpc) {\n                    if (dest > jmptarget)\n                        jmptarget = dest;  /* update 'jmptarget' */\n                }\n                break;\n            }\n            default:\n                if (lopcodes.testAMode(i.opcode) && reg === a)\n                    setreg = filterpc(pc, jmptarget);\n                break;\n        }\n    }\n\n    return setreg;\n};\n\n\nconst getobjname = function(p, lastpc, reg) {\n    let r = {\n        name: lfunc.luaF_getlocalname(p, reg + 1, lastpc),\n        funcname: null\n    };\n\n    if (r.name) {  /* is a local? */\n        r.funcname = to_luastring(\"local\", true);\n        return r;\n    }\n\n    /* else try symbolic execution */\n    let pc = findsetreg(p, lastpc, reg);\n    let OCi = lopcodes.OpCodesI;\n    if (pc !== -1) {  /* could find instruction? */\n        let i = p.code[pc];\n        switch (i.opcode) {\n            case OCi.OP_MOVE: {\n                let b = i.B;  /* move from 'b' to 'a' */\n                if (b < i.A)\n                    return getobjname(p, pc, b);  /* get name for 'b' */\n                break;\n            }\n            case OCi.OP_GETTABUP:\n            case OCi.OP_GETTABLE: {\n                let k = i.C;  /* key index */\n                let t = i.B;  /* table index */\n                let vn = i.opcode === OCi.OP_GETTABLE ? lfunc.luaF_getlocalname(p, t + 1, pc) : upvalname(p, t);\n                r.name = kname(p, pc, k).name;\n                r.funcname = (vn && luastring_eq(vn, llex.LUA_ENV)) ? to_luastring(\"global\", true) : to_luastring(\"field\", true);\n                return r;\n            }\n            case OCi.OP_GETUPVAL: {\n                r.name = upvalname(p, i.B);\n                r.funcname = to_luastring(\"upvalue\", true);\n                return r;\n            }\n            case OCi.OP_LOADK:\n            case OCi.OP_LOADKX: {\n                let b = i.opcode === OCi.OP_LOADK ? i.Bx : p.code[pc + 1].Ax;\n                if (p.k[b].ttisstring()) {\n                    r.name = p.k[b].svalue();\n                    r.funcname = to_luastring(\"constant\", true);\n                    return r;\n                }\n                break;\n            }\n            case OCi.OP_SELF: {\n                let k = i.C;\n                r.name = kname(p, pc, k).name;\n                r.funcname = to_luastring(\"method\", true);\n                return r;\n            }\n            default: break;\n        }\n    }\n\n    return null;\n};\n\n/*\n** Try to find a name for a function based on the code that called it.\n** (Only works when function was called by a Lua function.)\n** Returns what the name is (e.g., \"for iterator\", \"method\",\n** \"metamethod\") and sets '*name' to point to the name.\n*/\nconst funcnamefromcode = function(L, ci) {\n    let r = {\n        name: null,\n        funcname: null\n    };\n\n    let tm = 0;  /* (initial value avoids warnings) */\n    let p = ci.func.value.p;  /* calling function */\n    let pc = currentpc(ci);  /* calling instruction index */\n    let i = p.code[pc];  /* calling instruction */\n    let OCi = lopcodes.OpCodesI;\n\n    if (ci.callstatus & lstate.CIST_HOOKED) {\n        r.name = to_luastring(\"?\", true);\n        r.funcname = to_luastring(\"hook\", true);\n        return r;\n    }\n\n    switch (i.opcode) {\n        case OCi.OP_CALL:\n        case OCi.OP_TAILCALL:\n            return getobjname(p, pc, i.A);  /* get function name */\n        case OCi.OP_TFORCALL:\n            r.name = to_luastring(\"for iterator\", true);\n            r.funcname = to_luastring(\"for iterator\", true);\n            return r;\n        /* other instructions can do calls through metamethods */\n        case OCi.OP_SELF:\n        case OCi.OP_GETTABUP:\n        case OCi.OP_GETTABLE:\n            tm = ltm.TMS.TM_INDEX;\n            break;\n        case OCi.OP_SETTABUP:\n        case OCi.OP_SETTABLE:\n            tm = ltm.TMS.TM_NEWINDEX;\n            break;\n        case OCi.OP_ADD:    tm = ltm.TMS.TM_ADD;    break;\n        case OCi.OP_SUB:    tm = ltm.TMS.TM_SUB;    break;\n        case OCi.OP_MUL:    tm = ltm.TMS.TM_MUL;    break;\n        case OCi.OP_MOD:    tm = ltm.TMS.TM_MOD;    break;\n        case OCi.OP_POW:    tm = ltm.TMS.TM_POW;    break;\n        case OCi.OP_DIV:    tm = ltm.TMS.TM_DIV;    break;\n        case OCi.OP_IDIV:   tm = ltm.TMS.TM_IDIV;   break;\n        case OCi.OP_BAND:   tm = ltm.TMS.TM_BAND;   break;\n        case OCi.OP_BOR:    tm = ltm.TMS.TM_BOR;    break;\n        case OCi.OP_BXOR:   tm = ltm.TMS.TM_BXOR;   break;\n        case OCi.OP_SHL:    tm = ltm.TMS.TM_SHL;    break;\n        case OCi.OP_SHR:    tm = ltm.TMS.TM_SHR;    break;\n        case OCi.OP_UNM:    tm = ltm.TMS.TM_UNM;    break;\n        case OCi.OP_BNOT:   tm = ltm.TMS.TM_BNOT;   break;\n        case OCi.OP_LEN:    tm = ltm.TMS.TM_LEN;    break;\n        case OCi.OP_CONCAT: tm = ltm.TMS.TM_CONCAT; break;\n        case OCi.OP_EQ:     tm = ltm.TMS.TM_EQ;     break;\n        case OCi.OP_LT:     tm = ltm.TMS.TM_LT;     break;\n        case OCi.OP_LE:     tm = ltm.TMS.TM_LE;     break;\n        default:\n            return null;  /* cannot find a reasonable name */\n    }\n\n    r.name = L.l_G.tmname[tm].getstr();\n    r.funcname = to_luastring(\"metamethod\", true);\n    return r;\n};\n\nconst isinstack = function(L, ci, o) {\n    for (let i = ci.l_base; i < ci.top; i++) {\n        if (L.stack[i] === o)\n            return i;\n    }\n\n    return false;\n};\n\n/*\n** Checks whether value 'o' came from an upvalue. (That can only happen\n** with instructions OP_GETTABUP/OP_SETTABUP, which operate directly on\n** upvalues.)\n*/\nconst getupvalname = function(L, ci, o) {\n    let c = ci.func.value;\n    for (let i = 0; i < c.nupvalues; i++) {\n        if (c.upvals[i] === o) {\n            return {\n                name: upvalname(c.p, i),\n                funcname: to_luastring('upvalue', true)\n            };\n        }\n    }\n\n    return null;\n};\n\nconst varinfo = function(L, o) {\n    let ci = L.ci;\n    let kind = null;\n    if (ci.callstatus & lstate.CIST_LUA) {\n        kind = getupvalname(L, ci, o);  /* check whether 'o' is an upvalue */\n        let stkid = isinstack(L, ci, o);\n        if (!kind && stkid)  /* no? try a register */\n            kind = getobjname(ci.func.value.p, currentpc(ci), stkid - ci.l_base);\n    }\n\n    return kind ? lobject.luaO_pushfstring(L, to_luastring(\" (%s '%s')\", true), kind.funcname, kind.name) : to_luastring(\"\", true);\n};\n\nconst luaG_typeerror = function(L, o, op) {\n    let t = ltm.luaT_objtypename(L, o);\n    luaG_runerror(L, to_luastring(\"attempt to %s a %s value%s\", true), op, t, varinfo(L, o));\n};\n\nconst luaG_concaterror = function(L, p1, p2) {\n    if (p1.ttisstring() || lvm.cvt2str(p1)) p1 = p2;\n    luaG_typeerror(L, p1, to_luastring('concatenate', true));\n};\n\n/*\n** Error when both values are convertible to numbers, but not to integers\n*/\nconst luaG_opinterror = function(L, p1, p2, msg) {\n    if (lvm.tonumber(p1) === false)\n        p2 = p1;\n    luaG_typeerror(L, p2, msg);\n};\n\nconst luaG_ordererror = function(L, p1, p2) {\n    let t1 = ltm.luaT_objtypename(L, p1);\n    let t2 = ltm.luaT_objtypename(L, p2);\n    if (luastring_eq(t1, t2))\n        luaG_runerror(L, to_luastring(\"attempt to compare two %s values\", true), t1);\n    else\n        luaG_runerror(L, to_luastring(\"attempt to compare %s with %s\", true), t1, t2);\n};\n\n/* add src:line information to 'msg' */\nconst luaG_addinfo = function(L, msg, src, line) {\n    let buff;\n    if (src)\n        buff = lobject.luaO_chunkid(src.getstr(), LUA_IDSIZE);\n    else\n        buff = to_luastring(\"?\", true);\n\n    return lobject.luaO_pushfstring(L, to_luastring(\"%s:%d: %s\", true), buff, line, msg);\n};\n\nconst luaG_runerror = function(L, fmt, ...argp) {\n    let ci = L.ci;\n    let msg = lobject.luaO_pushvfstring(L, fmt, argp);\n    if (ci.callstatus & lstate.CIST_LUA)  /* if Lua function, add source:line information */\n        luaG_addinfo(L, msg, ci.func.value.p.source, currentline(ci));\n    luaG_errormsg(L);\n};\n\nconst luaG_errormsg = function(L) {\n    if (L.errfunc !== 0) {  /* is there an error handling function? */\n        let errfunc = L.errfunc;\n        lobject.pushobj2s(L, L.stack[L.top - 1]); /* move argument */\n        lobject.setobjs2s(L, L.top - 2, errfunc); /* push function */\n        ldo.luaD_callnoyield(L, L.top - 2, 1);\n    }\n\n    ldo.luaD_throw(L, LUA_ERRRUN);\n};\n\n/*\n** Error when both values are convertible to numbers, but not to integers\n*/\nconst luaG_tointerror = function(L, p1, p2) {\n    let temp = lvm.tointeger(p1);\n    if (temp === false)\n        p2 = p1;\n    luaG_runerror(L, to_luastring(\"number%s has no integer representation\", true), varinfo(L, p2));\n};\n\nconst luaG_traceexec = function(L) {\n    let ci = L.ci;\n    let mask = L.hookmask;\n    let counthook = (--L.hookcount === 0 && (mask & LUA_MASKCOUNT));\n    if (counthook)\n        L.hookcount = L.basehookcount;  /* reset count */\n    else if (!(mask & LUA_MASKLINE))\n        return;  /* no line hook and count != 0; nothing to be done */\n    if (ci.callstatus & lstate.CIST_HOOKYIELD) {  /* called hook last time? */\n        ci.callstatus &= ~lstate.CIST_HOOKYIELD;  /* erase mark */\n        return;  /* do not call hook again (VM yielded, so it did not move) */\n    }\n    if (counthook)\n        ldo.luaD_hook(L, LUA_HOOKCOUNT, -1);  /* call count hook */\n    if (mask & LUA_MASKLINE) {\n        let p = ci.func.value.p;\n        let npc = ci.l_savedpc - 1; // pcRel(ci.u.l.savedpc, p);\n        let newline = p.lineinfo.length !== 0 ? p.lineinfo[npc] : -1;\n        if (npc === 0 ||  /* call linehook when enter a new function, */\n            ci.l_savedpc <= L.oldpc ||  /* when jump back (loop), or when */\n            newline !== (p.lineinfo.length !== 0 ? p.lineinfo[L.oldpc - 1] : -1))  /* enter a new line */\n            ldo.luaD_hook(L, LUA_HOOKLINE, newline);  /* call line hook */\n    }\n    L.oldpc = ci.l_savedpc;\n    if (L.status === LUA_YIELD) {  /* did hook yield? */\n        if (counthook)\n            L.hookcount = 1;  /* undo decrement to zero */\n        ci.l_savedpc--;  /* undo increment (resume will increment it again) */\n        ci.callstatus |= lstate.CIST_HOOKYIELD;  /* mark that it yielded */\n        ci.funcOff = L.top - 1;  /* protect stack below results */\n        ci.func = L.stack[ci.funcOff];\n        ldo.luaD_throw(L, LUA_YIELD);\n    }\n};\n\nmodule.exports.luaG_addinfo     = luaG_addinfo;\nmodule.exports.luaG_concaterror = luaG_concaterror;\nmodule.exports.luaG_errormsg    = luaG_errormsg;\nmodule.exports.luaG_opinterror  = luaG_opinterror;\nmodule.exports.luaG_ordererror  = luaG_ordererror;\nmodule.exports.luaG_runerror    = luaG_runerror;\nmodule.exports.luaG_tointerror  = luaG_tointerror;\nmodule.exports.luaG_traceexec   = luaG_traceexec;\nmodule.exports.luaG_typeerror   = luaG_typeerror;\nmodule.exports.lua_gethook      = lua_gethook;\nmodule.exports.lua_gethookcount = lua_gethookcount;\nmodule.exports.lua_gethookmask  = lua_gethookmask;\nmodule.exports.lua_getinfo      = lua_getinfo;\nmodule.exports.lua_getlocal     = lua_getlocal;\nmodule.exports.lua_getstack     = lua_getstack;\nmodule.exports.lua_sethook      = lua_sethook;\nmodule.exports.lua_setlocal     = lua_setlocal;\n","\"use strict\";\n\nconst {\n    LUA_MINSTACK,\n    LUA_RIDX_GLOBALS,\n    LUA_RIDX_MAINTHREAD,\n    constant_types: {\n        LUA_NUMTAGS,\n        LUA_TNIL,\n        LUA_TTABLE,\n        LUA_TTHREAD\n    },\n    thread_status: {\n        LUA_OK\n    }\n} = require('./defs.js');\nconst lobject              = require('./lobject.js');\nconst ldo                  = require('./ldo.js');\nconst lapi                 = require('./lapi.js');\nconst ltable               = require('./ltable.js');\nconst ltm                  = require('./ltm.js');\n\nconst EXTRA_STACK = 5;\n\nconst BASIC_STACK_SIZE = 2 * LUA_MINSTACK;\n\nclass CallInfo {\n\n    constructor() {\n        this.func = null;\n        this.funcOff = NaN;\n        this.top = NaN;\n        this.previous = null;\n        this.next = null;\n\n        /* only for Lua functions */\n        this.l_base = NaN; /* base for this function */\n        this.l_code = null; /* reference to this.func.p.code */\n        this.l_savedpc = NaN; /* offset into l_code */\n        /* only for JS functions */\n        this.c_k = null;  /* continuation in case of yields */\n        this.c_old_errfunc = null;\n        this.c_ctx = null;  /* context info. in case of yields */\n\n        this.nresults = NaN;\n        this.callstatus = NaN;\n    }\n\n}\n\nclass lua_State {\n\n    constructor(g) {\n        this.id = g.id_counter++;\n\n        this.base_ci = new CallInfo(); /* CallInfo for first level (C calling Lua) */\n        this.top = NaN; /* first free slot in the stack */\n        this.stack_last = NaN; /* last free slot in the stack */\n        this.oldpc = NaN; /* last pc traced */\n\n        /* preinit_thread */\n        this.l_G = g;\n        this.stack = null;\n        this.ci = null;\n        this.errorJmp = null;\n        this.nCcalls = 0;\n        this.hook = null;\n        this.hookmask = 0;\n        this.basehookcount = 0;\n        this.allowhook = 1;\n        this.hookcount = this.basehookcount;\n        this.nny = 1;\n        this.status = LUA_OK;\n        this.errfunc = 0;\n    }\n\n}\n\nclass global_State {\n\n    constructor() {\n        this.id_counter = 1; /* used to give objects unique ids */\n        this.ids = new WeakMap();\n\n        this.mainthread = null;\n        this.l_registry = new lobject.TValue(LUA_TNIL, null);\n        this.panic = null;\n        this.atnativeerror = null;\n        this.version = null;\n        this.tmname = new Array(ltm.TMS.TM_N);\n        this.mt = new Array(LUA_NUMTAGS);\n    }\n\n}\n\nconst luaE_extendCI = function(L) {\n    let ci = new CallInfo();\n    L.ci.next = ci;\n    ci.previous = L.ci;\n    ci.next = null;\n    L.ci = ci;\n    return ci;\n};\n\nconst luaE_freeCI = function(L) {\n    let ci = L.ci;\n    ci.next = null;\n};\n\nconst stack_init = function(L1, L) {\n    L1.stack = new Array(BASIC_STACK_SIZE);\n    L1.top = 0;\n    L1.stack_last = BASIC_STACK_SIZE - EXTRA_STACK;\n    /* initialize first ci */\n    let ci = L1.base_ci;\n    ci.next = ci.previous = null;\n    ci.callstatus = 0;\n    ci.funcOff = L1.top;\n    ci.func = L1.stack[L1.top];\n    L1.stack[L1.top++] = new lobject.TValue(LUA_TNIL, null);\n    ci.top = L1.top + LUA_MINSTACK;\n    L1.ci = ci;\n};\n\nconst freestack = function(L) {\n    L.ci = L.base_ci;\n    luaE_freeCI(L);\n    L.stack = null;\n};\n\n/*\n** Create registry table and its predefined values\n*/\nconst init_registry = function(L, g) {\n    let registry = ltable.luaH_new(L);\n    g.l_registry.sethvalue(registry);\n    ltable.luaH_setint(registry, LUA_RIDX_MAINTHREAD, new lobject.TValue(LUA_TTHREAD, L));\n    ltable.luaH_setint(registry, LUA_RIDX_GLOBALS, new lobject.TValue(LUA_TTABLE, ltable.luaH_new(L)));\n};\n\n/*\n** open parts of the state that may cause memory-allocation errors.\n** ('g->version' !== NULL flags that the state was completely build)\n*/\nconst f_luaopen = function(L) {\n    let g = L.l_G;\n    stack_init(L, L);\n    init_registry(L, g);\n    ltm.luaT_init(L);\n    g.version = lapi.lua_version(null);\n};\n\nconst lua_newthread = function(L) {\n    let g = L.l_G;\n    let L1 = new lua_State(g);\n    L.stack[L.top] = new lobject.TValue(LUA_TTHREAD, L1);\n    lapi.api_incr_top(L);\n    L1.hookmask = L.hookmask;\n    L1.basehookcount = L.basehookcount;\n    L1.hook = L.hook;\n    L1.hookcount = L1.basehookcount;\n    stack_init(L1, L);\n    return L1;\n};\n\nconst luaE_freethread = function(L, L1) {\n    freestack(L1);\n};\n\nconst lua_newstate = function() {\n    let g = new global_State();\n    let L = new lua_State(g);\n    g.mainthread = L;\n\n    if (ldo.luaD_rawrunprotected(L, f_luaopen, null) !== LUA_OK) {\n        L = null;\n    }\n\n    return L;\n};\n\nconst close_state = function(L) {\n    freestack(L);\n};\n\nconst lua_close = function(L) {\n    L = L.l_G.mainthread;  /* only the main thread can be closed */\n    close_state(L);\n};\n\nmodule.exports.lua_State       = lua_State;\nmodule.exports.CallInfo        = CallInfo;\nmodule.exports.CIST_OAH        = (1<<0);  /* original value of 'allowhook' */\nmodule.exports.CIST_LUA        = (1<<1);  /* call is running a Lua function */\nmodule.exports.CIST_HOOKED     = (1<<2);  /* call is running a debug hook */\nmodule.exports.CIST_FRESH      = (1<<3);  /* call is running on a fresh invocation of luaV_execute */\nmodule.exports.CIST_YPCALL     = (1<<4);  /* call is a yieldable protected call */\nmodule.exports.CIST_TAIL       = (1<<5);  /* call was tail called */\nmodule.exports.CIST_HOOKYIELD  = (1<<6);  /* last hook called yielded */\nmodule.exports.CIST_LEQ        = (1<<7);  /* using __lt for __le */\nmodule.exports.CIST_FIN        = (1<<8);   /* call is running a finalizer */\nmodule.exports.EXTRA_STACK     = EXTRA_STACK;\nmodule.exports.lua_close       = lua_close;\nmodule.exports.lua_newstate    = lua_newstate;\nmodule.exports.lua_newthread   = lua_newthread;\nmodule.exports.luaE_extendCI   = luaE_extendCI;\nmodule.exports.luaE_freeCI     = luaE_freeCI;\nmodule.exports.luaE_freethread = luaE_freethread;\n","\"use strict\";\n\nconst { constant_types: { LUA_TNIL } } = require('./defs.js');\nconst lobject = require('./lobject.js');\n\nclass Proto {\n    constructor(L) {\n        this.id = L.l_G.id_counter++;\n        this.k = [];              // constants used by the function\n        this.p = [];              // functions defined inside the function\n        this.code = [];           // opcodes\n        this.cache = null;        // last-created closure with this prototype\n        this.lineinfo = [];       // map from opcodes to source lines (debug information)\n        this.upvalues = [];       // upvalue information\n        this.numparams = 0;       // number of fixed parameters\n        this.is_vararg = false;\n        this.maxstacksize = 0;    // number of registers needed by this function\n        this.locvars = [];        // information about local variables (debug information)\n        this.linedefined = 0;     // debug information\n        this.lastlinedefined = 0; // debug information\n        this.source = null;       // used for debug information\n    }\n}\n\nconst luaF_newLclosure = function(L, n) {\n    return new lobject.LClosure(L, n);\n};\n\n\nconst luaF_findupval = function(L, level) {\n    return L.stack[level];\n};\n\nconst luaF_close = function(L, level) {\n    /* Create new TValues on stack;\n     * any closures will keep referencing old TValues */\n    for (let i=level; i<L.top; i++) {\n        let old = L.stack[i];\n        L.stack[i] = new lobject.TValue(old.type, old.value);\n    }\n};\n\n/*\n** fill a closure with new upvalues\n*/\nconst luaF_initupvals = function(L, cl) {\n    for (let i = 0; i < cl.nupvalues; i++)\n        cl.upvals[i] = new lobject.TValue(LUA_TNIL, null);\n};\n\n/*\n** Look for n-th local variable at line 'line' in function 'func'.\n** Returns null if not found.\n*/\nconst luaF_getlocalname = function(f, local_number, pc) {\n    for (let i = 0; i < f.locvars.length && f.locvars[i].startpc <= pc; i++) {\n        if (pc < f.locvars[i].endpc) {  /* is variable active? */\n            local_number--;\n            if (local_number === 0)\n                return f.locvars[i].varname.getstr();\n        }\n    }\n    return null;  /* not found */\n};\n\nmodule.exports.MAXUPVAL          = 255;\nmodule.exports.Proto             = Proto;\nmodule.exports.luaF_findupval    = luaF_findupval;\nmodule.exports.luaF_close        = luaF_close;\nmodule.exports.luaF_getlocalname = luaF_getlocalname;\nmodule.exports.luaF_initupvals   = luaF_initupvals;\nmodule.exports.luaF_newLclosure  = luaF_newLclosure;\n","\"use strict\";\n\nconst {\n    constant_types: {\n        LUA_TTABLE,\n        LUA_TUSERDATA\n    },\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require('./llimits.js');\nconst lobject = require('./lobject.js');\nconst ldo     = require('./ldo.js');\nconst lstate  = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_new\n} = require('./lstring.js');\nconst ltable  = require('./ltable.js');\nconst ldebug  = require('./ldebug.js');\nconst lvm     = require('./lvm.js');\n\nconst luaT_typenames_ = [\n    \"no value\",\n    \"nil\",\n    \"boolean\",\n    \"userdata\",\n    \"number\",\n    \"string\",\n    \"table\",\n    \"function\",\n    \"userdata\",\n    \"thread\",\n    \"proto\" /* this last case is used for tests only */\n].map(e => to_luastring(e));\n\nconst ttypename = function(t) {\n    return luaT_typenames_[t + 1];\n};\n\n\n/*\n* WARNING: if you change the order of this enumeration,\n* grep \"ORDER TM\" and \"ORDER OP\"\n*/\nconst TMS = {\n    TM_INDEX:    0,\n    TM_NEWINDEX: 1,\n    TM_GC:       2,\n    TM_MODE:     3,\n    TM_LEN:      4,\n    TM_EQ:       5,  /* last tag method with fast access */\n    TM_ADD:      6,\n    TM_SUB:      7,\n    TM_MUL:      8,\n    TM_MOD:      9,\n    TM_POW:     10,\n    TM_DIV:     11,\n    TM_IDIV:    12,\n    TM_BAND:    13 ,\n    TM_BOR:     14,\n    TM_BXOR:    15,\n    TM_SHL:     16,\n    TM_SHR:     17,\n    TM_UNM:     18,\n    TM_BNOT:    19,\n    TM_LT:      20,\n    TM_LE:      21,\n    TM_CONCAT:  22,\n    TM_CALL:    23,\n    TM_N:       24  /* number of elements in the enum */\n};\n\nconst luaT_init = function(L) {\n    L.l_G.tmname[TMS.TM_INDEX]    = new luaS_new(L, to_luastring(\"__index\", true));\n    L.l_G.tmname[TMS.TM_NEWINDEX] = new luaS_new(L, to_luastring(\"__newindex\", true));\n    L.l_G.tmname[TMS.TM_GC]       = new luaS_new(L, to_luastring(\"__gc\", true));\n    L.l_G.tmname[TMS.TM_MODE]     = new luaS_new(L, to_luastring(\"__mode\", true));\n    L.l_G.tmname[TMS.TM_LEN]      = new luaS_new(L, to_luastring(\"__len\", true));\n    L.l_G.tmname[TMS.TM_EQ]       = new luaS_new(L, to_luastring(\"__eq\", true));\n    L.l_G.tmname[TMS.TM_ADD]      = new luaS_new(L, to_luastring(\"__add\", true));\n    L.l_G.tmname[TMS.TM_SUB]      = new luaS_new(L, to_luastring(\"__sub\", true));\n    L.l_G.tmname[TMS.TM_MUL]      = new luaS_new(L, to_luastring(\"__mul\", true));\n    L.l_G.tmname[TMS.TM_MOD]      = new luaS_new(L, to_luastring(\"__mod\", true));\n    L.l_G.tmname[TMS.TM_POW]      = new luaS_new(L, to_luastring(\"__pow\", true));\n    L.l_G.tmname[TMS.TM_DIV]      = new luaS_new(L, to_luastring(\"__div\", true));\n    L.l_G.tmname[TMS.TM_IDIV]     = new luaS_new(L, to_luastring(\"__idiv\", true));\n    L.l_G.tmname[TMS.TM_BAND]     = new luaS_new(L, to_luastring(\"__band\", true));\n    L.l_G.tmname[TMS.TM_BOR]      = new luaS_new(L, to_luastring(\"__bor\", true));\n    L.l_G.tmname[TMS.TM_BXOR]     = new luaS_new(L, to_luastring(\"__bxor\", true));\n    L.l_G.tmname[TMS.TM_SHL]      = new luaS_new(L, to_luastring(\"__shl\", true));\n    L.l_G.tmname[TMS.TM_SHR]      = new luaS_new(L, to_luastring(\"__shr\", true));\n    L.l_G.tmname[TMS.TM_UNM]      = new luaS_new(L, to_luastring(\"__unm\", true));\n    L.l_G.tmname[TMS.TM_BNOT]     = new luaS_new(L, to_luastring(\"__bnot\", true));\n    L.l_G.tmname[TMS.TM_LT]       = new luaS_new(L, to_luastring(\"__lt\", true));\n    L.l_G.tmname[TMS.TM_LE]       = new luaS_new(L, to_luastring(\"__le\", true));\n    L.l_G.tmname[TMS.TM_CONCAT]   = new luaS_new(L, to_luastring(\"__concat\", true));\n    L.l_G.tmname[TMS.TM_CALL]     = new luaS_new(L, to_luastring(\"__call\", true));\n};\n\n/*\n** Return the name of the type of an object. For tables and userdata\n** with metatable, use their '__name' metafield, if present.\n*/\nconst __name = to_luastring('__name', true);\nconst luaT_objtypename = function(L, o) {\n    let mt;\n    if ((o.ttistable() && (mt = o.value.metatable) !== null) ||\n        (o.ttisfulluserdata() && (mt = o.value.metatable) !== null)) {\n        let name = ltable.luaH_getstr(mt, luaS_bless(L, __name));\n        if (name.ttisstring())\n            return name.svalue();\n    }\n    return ttypename(o.ttnov());\n};\n\nconst luaT_callTM = function(L, f, p1, p2, p3, hasres) {\n    let func = L.top;\n\n    lobject.pushobj2s(L, f); /* push function (assume EXTRA_STACK) */\n    lobject.pushobj2s(L, p1); /* 1st argument */\n    lobject.pushobj2s(L, p2); /* 2nd argument */\n\n    if (!hasres)  /* no result? 'p3' is third argument */\n        lobject.pushobj2s(L, p3); /* 3rd argument */\n\n    if (L.ci.callstatus & lstate.CIST_LUA)\n        ldo.luaD_call(L, func, hasres);\n    else\n        ldo.luaD_callnoyield(L, func, hasres);\n\n    if (hasres) {  /* if has result, move it to its place */\n        let tv = L.stack[L.top-1];\n        delete L.stack[--L.top];\n        p3.setfrom(tv);\n    }\n};\n\nconst luaT_callbinTM = function(L, p1, p2, res, event) {\n    let tm = luaT_gettmbyobj(L, p1, event);\n    if (tm.ttisnil())\n        tm = luaT_gettmbyobj(L, p2, event);\n    if (tm.ttisnil()) return false;\n    luaT_callTM(L, tm, p1, p2, res, 1);\n    return true;\n};\n\nconst luaT_trybinTM = function(L, p1, p2, res, event) {\n    if (!luaT_callbinTM(L, p1, p2, res, event)) {\n        switch (event) {\n            case TMS.TM_CONCAT:\n                return ldebug.luaG_concaterror(L, p1, p2);\n            case TMS.TM_BAND: case TMS.TM_BOR: case TMS.TM_BXOR:\n            case TMS.TM_SHL: case TMS.TM_SHR: case TMS.TM_BNOT: {\n                let n1 = lvm.tonumber(p1);\n                let n2 = lvm.tonumber(p2);\n                if (n1 !== false && n2 !== false)\n                    return ldebug.luaG_tointerror(L, p1, p2);\n                else\n                    return ldebug.luaG_opinterror(L, p1, p2, to_luastring(\"perform bitwise operation on\", true));\n            }\n            default:\n                return ldebug.luaG_opinterror(L, p1, p2, to_luastring(\"perform arithmetic on\", true));\n        }\n    }\n};\n\nconst luaT_callorderTM = function(L, p1, p2, event) {\n    let res = new lobject.TValue();\n    if (!luaT_callbinTM(L, p1, p2, res, event))\n        return null;\n    else\n        return !res.l_isfalse();\n};\n\nconst fasttm = function(l, et, e) {\n    return et === null ? null :\n        (et.flags & (1 << e)) ? null : luaT_gettm(et, e, l.l_G.tmname[e]);\n};\n\nconst luaT_gettm = function(events, event, ename) {\n    const tm = ltable.luaH_getstr(events, ename);\n    lua_assert(event <= TMS.TM_EQ);\n    if (tm.ttisnil()) {  /* no tag method? */\n        events.flags |= 1<<event;  /* cache this fact */\n        return null;\n    }\n    else return tm;\n};\n\nconst luaT_gettmbyobj = function(L, o, event) {\n    let mt;\n    switch(o.ttnov()) {\n        case LUA_TTABLE:\n        case LUA_TUSERDATA:\n            mt = o.value.metatable;\n            break;\n        default:\n            mt = L.l_G.mt[o.ttnov()];\n    }\n\n    return mt ? ltable.luaH_getstr(mt, L.l_G.tmname[event]) : lobject.luaO_nilobject;\n};\n\nmodule.exports.fasttm           = fasttm;\nmodule.exports.TMS              = TMS;\nmodule.exports.luaT_callTM      = luaT_callTM;\nmodule.exports.luaT_callbinTM   = luaT_callbinTM;\nmodule.exports.luaT_trybinTM    = luaT_trybinTM;\nmodule.exports.luaT_callorderTM = luaT_callorderTM;\nmodule.exports.luaT_gettm       = luaT_gettm;\nmodule.exports.luaT_gettmbyobj  = luaT_gettmbyobj;\nmodule.exports.luaT_init        = luaT_init;\nmodule.exports.luaT_objtypename = luaT_objtypename;\nmodule.exports.ttypename        = ttypename;\n","\"use strict\";\n\nconst {\n    LUA_MASKLINE,\n    LUA_MASKCOUNT,\n    LUA_MULTRET,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLCF,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMBER,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TTABLE,\n        LUA_TUSERDATA\n    },\n    to_luastring\n} = require('./defs.js');\nconst {\n    INDEXK,\n    ISK,\n    LFIELDS_PER_FLUSH,\n    OpCodesI: {\n        OP_ADD,\n        OP_BAND,\n        OP_BNOT,\n        OP_BOR,\n        OP_BXOR,\n        OP_CALL,\n        OP_CLOSURE,\n        OP_CONCAT,\n        OP_DIV,\n        OP_EQ,\n        OP_EXTRAARG,\n        OP_FORLOOP,\n        OP_FORPREP,\n        OP_GETTABLE,\n        OP_GETTABUP,\n        OP_GETUPVAL,\n        OP_IDIV,\n        OP_JMP,\n        OP_LE,\n        OP_LEN,\n        OP_LOADBOOL,\n        OP_LOADK,\n        OP_LOADKX,\n        OP_LOADNIL,\n        OP_LT,\n        OP_MOD,\n        OP_MOVE,\n        OP_MUL,\n        OP_NEWTABLE,\n        OP_NOT,\n        OP_POW,\n        OP_RETURN,\n        OP_SELF,\n        OP_SETLIST,\n        OP_SETTABLE,\n        OP_SETTABUP,\n        OP_SETUPVAL,\n        OP_SHL,\n        OP_SHR,\n        OP_SUB,\n        OP_TAILCALL,\n        OP_TEST,\n        OP_TESTSET,\n        OP_TFORCALL,\n        OP_TFORLOOP,\n        OP_UNM,\n        OP_VARARG\n    }\n} = require('./lopcodes.js');\nconst {\n    LUA_MAXINTEGER,\n    LUA_MININTEGER,\n    lua_numbertointeger\n} = require('./luaconf.js');\nconst {\n    lua_assert,\n    luai_nummod\n} = require('./llimits.js');\nconst lobject = require('./lobject.js');\nconst lfunc   = require('./lfunc.js');\nconst lstate  = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_eqlngstr,\n    luaS_hashlongstr\n} = require('./lstring.js');\nconst ldo     = require('./ldo.js');\nconst ltm     = require('./ltm.js');\nconst ltable  = require('./ltable.js');\nconst ldebug  = require('./ldebug.js');\n\n/*\n** finish execution of an opcode interrupted by an yield\n*/\nconst luaV_finishOp = function(L) {\n    let ci = L.ci;\n    let base = ci.l_base;\n    let inst = ci.l_code[ci.l_savedpc - 1];  /* interrupted instruction */\n    let op = inst.opcode;\n\n    switch (op) {  /* finish its execution */\n        case OP_ADD: case OP_SUB: case OP_MUL: case OP_DIV: case OP_IDIV:\n        case OP_BAND: case OP_BOR: case OP_BXOR: case OP_SHL: case OP_SHR:\n        case OP_MOD: case OP_POW:\n        case OP_UNM: case OP_BNOT: case OP_LEN:\n        case OP_GETTABUP: case OP_GETTABLE: case OP_SELF: {\n            lobject.setobjs2s(L, base + inst.A, L.top-1);\n            delete L.stack[--L.top];\n            break;\n        }\n        case OP_LE: case OP_LT: case OP_EQ: {\n            let res = !L.stack[L.top - 1].l_isfalse();\n            delete L.stack[--L.top];\n            if (ci.callstatus & lstate.CIST_LEQ) {  /* \"<=\" using \"<\" instead? */\n                lua_assert(op === OP_LE);\n                ci.callstatus ^= lstate.CIST_LEQ;  /* clear mark */\n                res = !res;  /* negate result */\n            }\n            lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_JMP);\n            if (res !== (inst.A ? true : false))  /* condition failed? */\n                ci.l_savedpc++;  /* skip jump instruction */\n            break;\n        }\n        case OP_CONCAT: {\n            let top = L.top - 1;  /* top when 'luaT_trybinTM' was called */\n            let b = inst.B;  /* first element to concatenate */\n            let total = top - 1 - (base + b);  /* yet to concatenate */\n            lobject.setobjs2s(L, top - 2, top);  /* put TM result in proper position */\n            if (total > 1) {  /* are there elements to concat? */\n                L.top = top - 1;  /* top is one after last element (at top-2) */\n                luaV_concat(L, total);  /* concat them (may yield again) */\n            }\n            /* move final result to final position */\n            lobject.setobjs2s(L, ci.l_base + inst.A, L.top - 1);\n            ldo.adjust_top(L, ci.top);  /* restore top */\n            break;\n        }\n        case OP_TFORCALL: {\n            lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_TFORLOOP);\n            ldo.adjust_top(L, ci.top);  /* correct top */\n            break;\n        }\n        case OP_CALL: {\n            if (inst.C - 1 >= 0)  /* nresults >= 0? */\n                ldo.adjust_top(L, ci.top);  /* adjust results */\n            break;\n        }\n    }\n};\n\nconst RA = function(L, base, i) {\n    return base + i.A;\n};\n\nconst RB = function(L, base, i) {\n    return base + i.B;\n};\n\n// const RC = function(L, base, i) {\n//     return base + i.C;\n// };\n\nconst RKB = function(L, base, k, i) {\n    return ISK(i.B) ? k[INDEXK(i.B)] : L.stack[base + i.B];\n};\n\nconst RKC = function(L, base, k, i) {\n    return ISK(i.C) ? k[INDEXK(i.C)] : L.stack[base + i.C];\n};\n\nconst luaV_execute = function(L) {\n    let ci = L.ci;\n\n    ci.callstatus |= lstate.CIST_FRESH;\n    newframe:\n    for (;;) {\n        lua_assert(ci === L.ci);\n        let cl = ci.func.value;\n        let k = cl.p.k;\n        let base = ci.l_base;\n\n        let i = ci.l_code[ci.l_savedpc++];\n\n        if (L.hookmask & (LUA_MASKLINE | LUA_MASKCOUNT)) {\n            ldebug.luaG_traceexec(L);\n        }\n\n        let ra = RA(L, base, i);\n        let opcode = i.opcode;\n\n        switch (opcode) {\n            case OP_MOVE: {\n                lobject.setobjs2s(L, ra, RB(L, base, i));\n                break;\n            }\n            case OP_LOADK: {\n                let konst = k[i.Bx];\n                lobject.setobj2s(L, ra, konst);\n                break;\n            }\n            case OP_LOADKX: {\n                lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_EXTRAARG);\n                let konst = k[ci.l_code[ci.l_savedpc++].Ax];\n                lobject.setobj2s(L, ra, konst);\n                break;\n            }\n            case OP_LOADBOOL: {\n                L.stack[ra].setbvalue(i.B !== 0);\n\n                if (i.C !== 0)\n                    ci.l_savedpc++; /* skip next instruction (if C) */\n\n                break;\n            }\n            case OP_LOADNIL: {\n                for (let j = 0; j <= i.B; j++)\n                    L.stack[ra + j].setnilvalue();\n                break;\n            }\n            case OP_GETUPVAL: {\n                let b = i.B;\n                lobject.setobj2s(L, ra, cl.upvals[b]);\n                break;\n            }\n            case OP_GETTABUP: {\n                let upval = cl.upvals[i.B];\n                let rc = RKC(L, base, k, i);\n                luaV_gettable(L, upval, rc, ra);\n                break;\n            }\n            case OP_GETTABLE: {\n                let rb = L.stack[RB(L, base, i)];\n                let rc = RKC(L, base, k, i);\n                luaV_gettable(L, rb, rc, ra);\n                break;\n            }\n            case OP_SETTABUP: {\n                let upval = cl.upvals[i.A];\n                let rb = RKB(L, base, k, i);\n                let rc = RKC(L, base, k, i);\n                settable(L, upval, rb, rc);\n                break;\n            }\n            case OP_SETUPVAL: {\n                let uv = cl.upvals[i.B];\n                uv.setfrom(L.stack[ra]);\n                break;\n            }\n            case OP_SETTABLE: {\n                let table = L.stack[ra];\n                let key = RKB(L, base, k, i);\n                let v = RKC(L, base, k, i);\n\n                settable(L, table, key, v);\n                break;\n            }\n            case OP_NEWTABLE: {\n                L.stack[ra].sethvalue(ltable.luaH_new(L));\n                break;\n            }\n            case OP_SELF: {\n                let rb = RB(L, base, i);\n                let rc = RKC(L, base, k, i);\n                lobject.setobjs2s(L, ra + 1, rb);\n                luaV_gettable(L, L.stack[rb], rc, ra);\n                break;\n            }\n            case OP_ADD: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue((op1.value + op2.value)|0);\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 + numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_ADD);\n                }\n                break;\n            }\n            case OP_SUB: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue((op1.value - op2.value)|0);\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 - numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_SUB);\n                }\n                break;\n            }\n            case OP_MUL: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue(luaV_imul(op1.value, op2.value));\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 * numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_MUL);\n                }\n                break;\n            }\n            case OP_MOD: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue(luaV_mod(L, op1.value, op2.value));\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(luai_nummod(L, numberop1, numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_MOD);\n                }\n                break;\n            }\n            case OP_POW: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(Math.pow(numberop1, numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_POW);\n                }\n                break;\n            }\n            case OP_DIV: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 / numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_DIV);\n                }\n                break;\n            }\n            case OP_IDIV: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue(luaV_div(L, op1.value, op2.value));\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(Math.floor(numberop1 / numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_IDIV);\n                }\n                break;\n            }\n            case OP_BAND: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(numberop1 & numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_BAND);\n                }\n                break;\n            }\n            case OP_BOR: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(numberop1 | numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_BOR);\n                }\n                break;\n            }\n            case OP_BXOR: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(numberop1 ^ numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_BXOR);\n                }\n                break;\n            }\n            case OP_SHL: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(luaV_shiftl(numberop1, numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_SHL);\n                }\n                break;\n            }\n            case OP_SHR: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(luaV_shiftl(numberop1, -numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_SHR);\n                }\n                break;\n            }\n            case OP_UNM: {\n                let op = L.stack[RB(L, base, i)];\n                let numberop;\n\n                if (op.ttisinteger()) {\n                    L.stack[ra].setivalue((-op.value)|0);\n                } else if ((numberop = tonumber(op)) !== false) {\n                    L.stack[ra].setfltvalue(-numberop);\n                } else {\n                    ltm.luaT_trybinTM(L, op, op, L.stack[ra], ltm.TMS.TM_UNM);\n                }\n                break;\n            }\n            case OP_BNOT: {\n                let op = L.stack[RB(L, base, i)];\n\n                if (op.ttisinteger()) {\n                    L.stack[ra].setivalue(~op.value);\n                } else {\n                    ltm.luaT_trybinTM(L, op, op, L.stack[ra], ltm.TMS.TM_BNOT);\n                }\n                break;\n            }\n            case OP_NOT: {\n                let op = L.stack[RB(L, base, i)];\n                L.stack[ra].setbvalue(op.l_isfalse());\n                break;\n            }\n            case OP_LEN: {\n                luaV_objlen(L, L.stack[ra], L.stack[RB(L, base, i)]);\n                break;\n            }\n            case OP_CONCAT: {\n                let b = i.B;\n                let c = i.C;\n                L.top = base + c + 1; /* mark the end of concat operands */\n                luaV_concat(L, c - b + 1);\n                let rb = base + b;\n                lobject.setobjs2s(L, ra, rb);\n                ldo.adjust_top(L, ci.top); /* restore top */\n                break;\n            }\n            case OP_JMP: {\n                dojump(L, ci, i, 0);\n                break;\n            }\n            case OP_EQ: {\n                if (luaV_equalobj(L, RKB(L, base, k, i), RKC(L, base, k, i)) !== i.A)\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_LT: {\n                if (luaV_lessthan(L, RKB(L, base, k, i), RKC(L, base, k, i)) !== i.A)\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_LE: {\n                if (luaV_lessequal(L, RKB(L, base, k, i), RKC(L, base, k, i)) !== i.A)\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_TEST: {\n                if (i.C ? L.stack[ra].l_isfalse() : !L.stack[ra].l_isfalse())\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_TESTSET: {\n                let rbIdx = RB(L, base, i);\n                let rb = L.stack[rbIdx];\n                if (i.C ? rb.l_isfalse() : !rb.l_isfalse())\n                    ci.l_savedpc++;\n                else {\n                    lobject.setobjs2s(L, ra, rbIdx);\n                    donextjump(L, ci);\n                }\n                break;\n            }\n            case OP_CALL: {\n                let b = i.B;\n                let nresults = i.C - 1;\n                if (b !== 0) ldo.adjust_top(L, ra+b);  /* else previous instruction set top */\n                if (ldo.luaD_precall(L, ra, nresults)) {\n                    if (nresults >= 0)\n                        ldo.adjust_top(L, ci.top);  /* adjust results */\n                } else {\n                    ci = L.ci;\n                    continue newframe;\n                }\n\n                break;\n            }\n            case OP_TAILCALL: {\n                let b = i.B;\n                if (b !== 0) ldo.adjust_top(L, ra+b);  /* else previous instruction set top */\n                if (ldo.luaD_precall(L, ra, LUA_MULTRET)) { // JS function\n                } else {\n                    /* tail call: put called frame (n) in place of caller one (o) */\n                    let nci = L.ci;\n                    let oci = nci.previous;\n                    let nfunc = nci.func;\n                    let nfuncOff = nci.funcOff;\n                    let ofuncOff = oci.funcOff;\n                    let lim = nci.l_base + nfunc.value.p.numparams;\n                    if (cl.p.p.length > 0) lfunc.luaF_close(L, oci.l_base);\n                    for (let aux = 0; nfuncOff + aux < lim; aux++)\n                        lobject.setobjs2s(L, ofuncOff + aux, nfuncOff + aux);\n                    oci.l_base = ofuncOff + (nci.l_base - nfuncOff);\n                    oci.top = ofuncOff + (L.top - nfuncOff);\n                    ldo.adjust_top(L, oci.top);  /* correct top */\n                    oci.l_code = nci.l_code;\n                    oci.l_savedpc = nci.l_savedpc;\n                    oci.callstatus |= lstate.CIST_TAIL;\n                    oci.next = null;\n                    ci = L.ci = oci;\n\n                    lua_assert(L.top === oci.l_base + L.stack[ofuncOff].value.p.maxstacksize);\n\n                    continue newframe;\n                }\n                break;\n            }\n            case OP_RETURN: {\n                if (cl.p.p.length > 0) lfunc.luaF_close(L, base);\n                let b = ldo.luaD_poscall(L, ci, ra, (i.B !== 0 ? i.B - 1 : L.top - ra));\n\n                if (ci.callstatus & lstate.CIST_FRESH)\n                    return; /* external invocation: return */\n                /* invocation via reentry: continue execution */\n                ci = L.ci;\n                if (b) ldo.adjust_top(L, ci.top);\n                lua_assert(ci.callstatus & lstate.CIST_LUA);\n                lua_assert(ci.l_code[ci.l_savedpc - 1].opcode === OP_CALL);\n                continue newframe;\n            }\n            case OP_FORLOOP: {\n                if (L.stack[ra].ttisinteger()) { /* integer loop? */\n                    let step = L.stack[ra + 2].value;\n                    let idx = (L.stack[ra].value + step)|0;\n                    let limit = L.stack[ra + 1].value;\n\n                    if (0 < step ? idx <= limit : limit <= idx) {\n                        ci.l_savedpc += i.sBx;\n                        L.stack[ra].chgivalue(idx);  /* update internal index... */\n                        L.stack[ra + 3].setivalue(idx);\n                    }\n                } else { /* floating loop */\n                    let step = L.stack[ra + 2].value;\n                    let idx = L.stack[ra].value + step;\n                    let limit = L.stack[ra + 1].value;\n\n                    if (0 < step ? idx <= limit : limit <= idx) {\n                        ci.l_savedpc += i.sBx;\n                        L.stack[ra].chgfltvalue(idx);  /* update internal index... */\n                        L.stack[ra + 3].setfltvalue(idx);\n                    }\n                }\n                break;\n            }\n            case OP_FORPREP: {\n                let init = L.stack[ra];\n                let plimit = L.stack[ra + 1];\n                let pstep = L.stack[ra + 2];\n                let forlim;\n\n                if (init.ttisinteger() && pstep.ttisinteger() && (forlim = forlimit(plimit, pstep.value))) {\n                    /* all values are integer */\n                    let initv = forlim.stopnow ? 0 : init.value;\n                    plimit.value = forlim.ilimit;\n                    init.value = (initv - pstep.value)|0;\n                } else { /* try making all values floats */\n                    let nlimit, nstep, ninit;\n                    if ((nlimit = tonumber(plimit)) === false)\n                        ldebug.luaG_runerror(L, to_luastring(\"'for' limit must be a number\", true));\n                    L.stack[ra + 1].setfltvalue(nlimit);\n                    if ((nstep = tonumber(pstep)) === false)\n                        ldebug.luaG_runerror(L, to_luastring(\"'for' step must be a number\", true));\n                    L.stack[ra + 2].setfltvalue(nstep);\n                    if ((ninit = tonumber(init)) === false)\n                        ldebug.luaG_runerror(L, to_luastring(\"'for' initial value must be a number\", true));\n                    L.stack[ra].setfltvalue(ninit - nstep);\n                }\n\n                ci.l_savedpc += i.sBx;\n                break;\n            }\n            case OP_TFORCALL: {\n                let cb = ra + 3; /* call base */\n                lobject.setobjs2s(L, cb+2, ra+2);\n                lobject.setobjs2s(L, cb+1, ra+1);\n                lobject.setobjs2s(L, cb, ra);\n                ldo.adjust_top(L, cb+3);  /* func. + 2 args (state and index) */\n                ldo.luaD_call(L, cb, i.C);\n                ldo.adjust_top(L, ci.top);\n                /* go straight to OP_TFORLOOP */\n                i = ci.l_code[ci.l_savedpc++];\n                ra = RA(L, base, i);\n                lua_assert(i.opcode === OP_TFORLOOP);\n            }\n            /* fall through */\n            case OP_TFORLOOP: {\n                if (!L.stack[ra + 1].ttisnil()) { /* continue loop? */\n                    lobject.setobjs2s(L, ra, ra + 1); /* save control variable */\n                    ci.l_savedpc += i.sBx; /* jump back */\n                }\n                break;\n            }\n            case OP_SETLIST: {\n                let n = i.B;\n                let c = i.C;\n\n                if (n === 0) n = L.top - ra - 1;\n\n                if (c === 0) {\n                    lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_EXTRAARG);\n                    c = ci.l_code[ci.l_savedpc++].Ax;\n                }\n\n                let h = L.stack[ra].value;\n                let last = ((c - 1) * LFIELDS_PER_FLUSH) + n;\n\n                for (; n > 0; n--) {\n                    ltable.luaH_setint(h, last--, L.stack[ra + n]);\n                }\n                ldo.adjust_top(L, ci.top);  /* correct top (in case of previous open call) */\n                break;\n            }\n            case OP_CLOSURE: {\n                let p = cl.p.p[i.Bx];\n                let ncl = getcached(p, cl.upvals, L.stack, base);  /* cached closure */\n                if (ncl === null)  /* no match? */\n                    pushclosure(L, p, cl.upvals, base, ra);  /* create a new one */\n                else\n                    L.stack[ra].setclLvalue(ncl);\n                break;\n            }\n            case OP_VARARG: {\n                let b = i.B - 1;\n                let n = base - ci.funcOff - cl.p.numparams - 1;\n                let j;\n\n                if (n < 0) /* less arguments than parameters? */\n                    n = 0; /* no vararg arguments */\n\n                if (b < 0) {\n                    b = n;  /* get all var. arguments */\n                    ldo.luaD_checkstack(L, n);\n                    ldo.adjust_top(L, ra + n);\n                }\n\n                for (j = 0; j < b && j < n; j++)\n                    lobject.setobjs2s(L, ra + j, base - n + j);\n\n                for (; j < b; j++) /* complete required results with nil */\n                    L.stack[ra + j].setnilvalue();\n                break;\n            }\n            case OP_EXTRAARG: {\n                throw Error(\"invalid opcode\");\n            }\n        }\n    }\n};\n\nconst dojump = function(L, ci, i, e) {\n    let a = i.A;\n    if (a !== 0) lfunc.luaF_close(L, ci.l_base + a - 1);\n    ci.l_savedpc += i.sBx + e;\n};\n\nconst donextjump = function(L, ci) {\n    dojump(L, ci, ci.l_code[ci.l_savedpc], 1);\n};\n\n\nconst luaV_lessthan = function(L, l, r) {\n    if (l.ttisnumber() && r.ttisnumber())\n        return LTnum(l, r) ? 1 : 0;\n    else if (l.ttisstring() && r.ttisstring())\n        return l_strcmp(l.tsvalue(), r.tsvalue()) < 0 ? 1 : 0;\n    else {\n        let res = ltm.luaT_callorderTM(L, l, r, ltm.TMS.TM_LT);\n        if (res === null)\n            ldebug.luaG_ordererror(L, l, r);\n        return res ? 1 : 0;\n    }\n};\n\nconst luaV_lessequal = function(L, l, r) {\n    let res;\n\n    if (l.ttisnumber() && r.ttisnumber())\n        return LEnum(l, r) ? 1 : 0;\n    else if (l.ttisstring() && r.ttisstring())\n        return l_strcmp(l.tsvalue(), r.tsvalue()) <= 0 ? 1 : 0;\n    else {\n        res = ltm.luaT_callorderTM(L, l, r, ltm.TMS.TM_LE);\n        if (res !== null)\n            return res ? 1 : 0;\n    }\n    /* try 'lt': */\n    L.ci.callstatus |= lstate.CIST_LEQ; /* mark it is doing 'lt' for 'le' */\n    res = ltm.luaT_callorderTM(L, r, l, ltm.TMS.TM_LT);\n    L.ci.callstatus ^= lstate.CIST_LEQ; /* clear mark */\n    if (res === null)\n        ldebug.luaG_ordererror(L, l, r);\n    return res ? 0 : 1; /* result is negated */\n};\n\nconst luaV_equalobj = function(L, t1, t2) {\n    if (t1.ttype() !== t2.ttype()) { /* not the same variant? */\n        if (t1.ttnov() !== t2.ttnov() || t1.ttnov() !== LUA_TNUMBER)\n            return 0; /* only numbers can be equal with different variants */\n        else { /* two numbers with different variants */\n            /* OPTIMIZATION: instead of calling luaV_tointeger we can just let JS do the comparison */\n            return (t1.value === t2.value) ? 1 : 0;\n        }\n    }\n\n    let tm;\n\n    /* values have same type and same variant */\n    switch(t1.ttype()) {\n        case LUA_TNIL:\n            return 1;\n        case LUA_TBOOLEAN:\n            return t1.value == t2.value ? 1 : 0; // Might be 1 or true\n        case LUA_TLIGHTUSERDATA:\n        case LUA_TNUMINT:\n        case LUA_TNUMFLT:\n        case LUA_TLCF:\n            return t1.value === t2.value ? 1 : 0;\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR: {\n            return luaS_eqlngstr(t1.tsvalue(), t2.tsvalue()) ? 1 : 0;\n        }\n        case LUA_TUSERDATA:\n        case LUA_TTABLE:\n            if (t1.value === t2.value) return 1;\n            else if (L === null) return 0;\n\n            tm = ltm.fasttm(L, t1.value.metatable, ltm.TMS.TM_EQ);\n            if (tm === null)\n                tm = ltm.fasttm(L, t2.value.metatable, ltm.TMS.TM_EQ);\n            break;\n        default:\n            return t1.value === t2.value ? 1 : 0;\n    }\n\n    if (tm === null) /* no TM? */\n        return 0;\n\n    let tv = new lobject.TValue(); /* doesn't use the stack */\n    ltm.luaT_callTM(L, tm, t1, t2, tv, 1);\n    return tv.l_isfalse() ? 0 : 1;\n};\n\nconst luaV_rawequalobj = function(t1, t2) {\n    return luaV_equalobj(null, t1, t2);\n};\n\nconst forlimit = function(obj, step) {\n    let stopnow = false;\n    let ilimit = luaV_tointeger(obj, step < 0 ? 2 : 1);\n    if (ilimit === false) {\n        let n = tonumber(obj);\n        if (n === false)\n            return false;\n\n        if (0 < n) {\n            ilimit = LUA_MAXINTEGER;\n            if (step < 0) stopnow = true;\n        } else {\n            ilimit = LUA_MININTEGER;\n            if (step >= 0) stopnow = true;\n        }\n    }\n\n    return {\n        stopnow: stopnow,\n        ilimit: ilimit\n    };\n};\n\n/*\n** try to convert a value to an integer, rounding according to 'mode':\n** mode === 0: accepts only integral values\n** mode === 1: takes the floor of the number\n** mode === 2: takes the ceil of the number\n*/\nconst luaV_tointeger = function(obj, mode) {\n    if (obj.ttisfloat()) {\n        let n = obj.value;\n        let f = Math.floor(n);\n\n        if (n !== f) { /* not an integral value? */\n            if (mode === 0)\n                return false;  /* fails if mode demands integral value */\n            else if (mode > 1)  /* needs ceil? */\n                f += 1;  /* convert floor to ceil (remember: n !== f) */\n        }\n\n        return lua_numbertointeger(f);\n    } else if (obj.ttisinteger()) {\n        return obj.value;\n    } else if (cvt2num(obj)) {\n        let v = new lobject.TValue();\n        if (lobject.luaO_str2num(obj.svalue(), v) === (obj.vslen() + 1))\n            return luaV_tointeger(v, mode);\n    }\n\n    return false;\n};\n\nconst tointeger = function(o) {\n    return o.ttisinteger() ? o.value : luaV_tointeger(o, 0);\n};\n\nconst tonumber = function(o) {\n    if (o.ttnov() === LUA_TNUMBER)\n        return o.value;\n\n    if (cvt2num(o)) {  /* string convertible to number? */\n        let v = new lobject.TValue();\n        if (lobject.luaO_str2num(o.svalue(), v) === (o.vslen() + 1))\n            return v.value;\n    }\n\n    return false;\n};\n\n/*\n** Return 'l < r', for numbers.\n** As fengari uses javascript numbers for both floats and integers and has\n** correct semantics, we can just compare values.\n*/\nconst LTnum = function(l, r) {\n    return l.value < r.value;\n};\n\n/*\n** Return 'l <= r', for numbers.\n*/\nconst LEnum = function(l, r) {\n    return l.value <= r.value;\n};\n\n/*\n** Compare two strings 'ls' x 'rs', returning an integer smaller-equal-\n** -larger than zero if 'ls' is smaller-equal-larger than 'rs'.\n*/\nconst l_strcmp = function(ls, rs) {\n    let l = luaS_hashlongstr(ls);\n    let r = luaS_hashlongstr(rs);\n    /* In fengari we assume string hash has same collation as byte values */\n    if (l === r)\n        return 0;\n    else if (l < r)\n        return -1;\n    else\n        return 1;\n};\n\n/*\n** Main operation 'ra' = #rb'.\n*/\nconst luaV_objlen = function(L, ra, rb) {\n    let tm;\n    switch(rb.ttype()) {\n        case LUA_TTABLE: {\n            let h = rb.value;\n            tm = ltm.fasttm(L, h.metatable, ltm.TMS.TM_LEN);\n            if (tm !== null) break; /* metamethod? break switch to call it */\n            ra.setivalue(ltable.luaH_getn(h)); /* else primitive len */\n            return;\n        }\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR:\n            ra.setivalue(rb.vslen());\n            return;\n        default: {\n            tm = ltm.luaT_gettmbyobj(L, rb, ltm.TMS.TM_LEN);\n            if (tm.ttisnil())\n                ldebug.luaG_typeerror(L, rb, to_luastring(\"get length of\", true));\n            break;\n        }\n    }\n\n    ltm.luaT_callTM(L, tm, rb, rb, ra, 1);\n};\n\n/* Shim taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul */\nconst luaV_imul = Math.imul || function(a, b) {\n    let aHi = (a >>> 16) & 0xffff;\n    let aLo = a & 0xffff;\n    let bHi = (b >>> 16) & 0xffff;\n    let bLo = b & 0xffff;\n    /*\n    ** the shift by 0 fixes the sign on the high part\n    ** the final |0 converts the unsigned value into a signed value\n    */\n    return ((aLo * bLo) + (((aHi * bLo + aLo * bHi) << 16) >>> 0) | 0);\n};\n\nconst luaV_div = function(L, m, n) {\n    if (n === 0)\n        ldebug.luaG_runerror(L, to_luastring(\"attempt to divide by zero\"));\n    return Math.floor(m / n)|0;\n};\n\n// % semantic on negative numbers is different in js\nconst luaV_mod = function(L, m, n) {\n    if (n === 0)\n        ldebug.luaG_runerror(L, to_luastring(\"attempt to perform 'n%%0'\"));\n    return (m - Math.floor(m / n) * n)|0;\n};\n\nconst NBITS = 32;\n\nconst luaV_shiftl = function(x, y) {\n    if (y < 0) {  /* shift right? */\n        if (y <= -NBITS) return 0;\n        else return x >>> -y;\n    }\n    else {  /* shift left */\n        if (y >= NBITS) return 0;\n        else return x << y;\n    }\n};\n\n/*\n** check whether cached closure in prototype 'p' may be reused, that is,\n** whether there is a cached closure with the same upvalues needed by\n** new closure to be created.\n*/\nconst getcached = function(p, encup, stack, base) {\n    let c = p.cache;\n    if (c !== null) {  /* is there a cached closure? */\n        let uv = p.upvalues;\n        let nup = uv.length;\n        for (let i = 0; i < nup; i++) {  /* check whether it has right upvalues */\n            let v = uv[i].instack ? stack[base + uv[i].idx] : encup[uv[i].idx];\n            if (c.upvals[i] !== v)\n                return null;  /* wrong upvalue; cannot reuse closure */\n        }\n    }\n    return c;  /* return cached closure (or NULL if no cached closure) */\n};\n\n/*\n** create a new Lua closure, push it in the stack, and initialize\n** its upvalues.\n*/\nconst pushclosure = function(L, p, encup, base, ra) {\n    let nup = p.upvalues.length;\n    let uv = p.upvalues;\n    let ncl = new lobject.LClosure(L, nup);\n    ncl.p = p;\n    L.stack[ra].setclLvalue(ncl);\n    for (let i = 0; i < nup; i++) {\n        if (uv[i].instack)\n            ncl.upvals[i] = lfunc.luaF_findupval(L, base + uv[i].idx);\n        else\n            ncl.upvals[i] = encup[uv[i].idx];\n    }\n    p.cache = ncl;  /* save it on cache for reuse */\n};\n\nconst cvt2str = function(o) {\n    return o.ttisnumber();\n};\n\nconst cvt2num = function(o) {\n    return o.ttisstring();\n};\n\nconst tostring = function(L, i) {\n    let o = L.stack[i];\n\n    if (o.ttisstring()) return true;\n\n    if (cvt2str(o)) {\n        lobject.luaO_tostring(L, o);\n        return true;\n    }\n\n    return false;\n};\n\nconst isemptystr = function(o) {\n    return o.ttisstring() && o.vslen() === 0;\n};\n\n/* copy strings in stack from top - n up to top - 1 to buffer */\nconst copy2buff = function(L, top, n, buff) {\n    let tl = 0;  /* size already copied */\n    do {\n        let tv = L.stack[top-n];\n        let l = tv.vslen();  /* length of string being copied */\n        let s = tv.svalue();\n        buff.set(s, tl);\n        tl += l;\n    } while (--n > 0);\n};\n\n/*\n** Main operation for concatenation: concat 'total' values in the stack,\n** from 'L->top - total' up to 'L->top - 1'.\n*/\nconst luaV_concat = function(L, total) {\n    lua_assert(total >= 2);\n    do {\n        let top = L.top;\n        let n = 2; /* number of elements handled in this pass (at least 2) */\n\n        if (!(L.stack[top-2].ttisstring() || cvt2str(L.stack[top-2])) || !tostring(L, top - 1)) {\n            ltm.luaT_trybinTM(L, L.stack[top-2], L.stack[top-1], L.stack[top-2], ltm.TMS.TM_CONCAT);\n        } else if (isemptystr(L.stack[top-1])) {\n            tostring(L, top - 2);\n        } else if (isemptystr(L.stack[top-2])) {\n            lobject.setobjs2s(L, top - 2, top - 1);\n        } else {\n            /* at least two non-empty string values; get as many as possible */\n            let tl = L.stack[top-1].vslen();\n            /* collect total length and number of strings */\n            for (n = 1; n < total && tostring(L, top - n - 1); n++) {\n                let l = L.stack[top - n - 1].vslen();\n                tl += l;\n            }\n            let buff = new Uint8Array(tl);\n            copy2buff(L, top, n, buff);\n            let ts = luaS_bless(L, buff);\n            lobject.setsvalue2s(L, top - n, ts);\n        }\n        total -= n - 1; /* got 'n' strings to create 1 new */\n        /* popped 'n' strings and pushed one */\n        for (; L.top > top-(n-1);)\n            delete L.stack[--L.top];\n    } while (total > 1); /* repeat until only 1 result left */\n};\n\nconst MAXTAGLOOP = 2000;\n\nconst luaV_gettable = function(L, t, key, ra) {\n    for (let loop = 0; loop < MAXTAGLOOP; loop++) {\n        let tm;\n\n        if (!t.ttistable()) {\n            tm = ltm.luaT_gettmbyobj(L, t, ltm.TMS.TM_INDEX);\n            if (tm.ttisnil())\n                ldebug.luaG_typeerror(L, t, to_luastring('index', true)); /* no metamethod */\n            /* else will try the metamethod */\n        } else {\n            let slot = ltable.luaH_get(L, t.value, key);\n            if (!slot.ttisnil()) {\n                lobject.setobj2s(L, ra, slot);\n                return;\n            } else { /* 't' is a table */\n                tm = ltm.fasttm(L, t.value.metatable, ltm.TMS.TM_INDEX);  /* table's metamethod */\n                if (tm === null) { /* no metamethod? */\n                    L.stack[ra].setnilvalue(); /* result is nil */\n                    return;\n                }\n            }\n            /* else will try the metamethod */\n        }\n        if (tm.ttisfunction()) { /* is metamethod a function? */\n            ltm.luaT_callTM(L, tm, t, key, L.stack[ra], 1); /* call it */\n            return;\n        }\n        t = tm;  /* else try to access 'tm[key]' */\n    }\n\n    ldebug.luaG_runerror(L, to_luastring(\"'__index' chain too long; possible loop\", true));\n};\n\nconst settable = function(L, t, key, val) {\n    for (let loop = 0; loop < MAXTAGLOOP; loop++) {\n        let tm;\n        if (t.ttistable()) {\n            let h = t.value; /* save 't' table */\n            let slot = ltable.luaH_get(L, h, key);\n            if (!slot.ttisnil() || (tm = ltm.fasttm(L, h.metatable, ltm.TMS.TM_NEWINDEX)) === null) {\n                ltable.luaH_setfrom(L, h, key, val);\n                ltable.invalidateTMcache(h);\n                return;\n            }\n            /* else will try the metamethod */\n        } else { /* not a table; check metamethod */\n            if ((tm = ltm.luaT_gettmbyobj(L, t, ltm.TMS.TM_NEWINDEX)).ttisnil())\n                ldebug.luaG_typeerror(L, t, to_luastring('index', true));\n        }\n        /* try the metamethod */\n        if (tm.ttisfunction()) {\n            ltm.luaT_callTM(L, tm, t, key, val, 0);\n            return;\n        }\n        t = tm;  /* else repeat assignment over 'tm' */\n    }\n\n    ldebug.luaG_runerror(L, to_luastring(\"'__newindex' chain too long; possible loop\", true));\n};\n\n\nmodule.exports.cvt2str          = cvt2str;\nmodule.exports.cvt2num          = cvt2num;\nmodule.exports.luaV_gettable    = luaV_gettable;\nmodule.exports.luaV_concat      = luaV_concat;\nmodule.exports.luaV_div         = luaV_div;\nmodule.exports.luaV_equalobj    = luaV_equalobj;\nmodule.exports.luaV_execute     = luaV_execute;\nmodule.exports.luaV_finishOp    = luaV_finishOp;\nmodule.exports.luaV_imul        = luaV_imul;\nmodule.exports.luaV_lessequal   = luaV_lessequal;\nmodule.exports.luaV_lessthan    = luaV_lessthan;\nmodule.exports.luaV_mod         = luaV_mod;\nmodule.exports.luaV_objlen      = luaV_objlen;\nmodule.exports.luaV_rawequalobj = luaV_rawequalobj;\nmodule.exports.luaV_shiftl      = luaV_shiftl;\nmodule.exports.luaV_tointeger   = luaV_tointeger;\nmodule.exports.settable         = settable;\nmodule.exports.tointeger        = tointeger;\nmodule.exports.tonumber         = tonumber;\n","\"use strict\";\n\nconst OpCodes = [\n    \"MOVE\",\n    \"LOADK\",\n    \"LOADKX\",\n    \"LOADBOOL\",\n    \"LOADNIL\",\n    \"GETUPVAL\",\n    \"GETTABUP\",\n    \"GETTABLE\",\n    \"SETTABUP\",\n    \"SETUPVAL\",\n    \"SETTABLE\",\n    \"NEWTABLE\",\n    \"SELF\",\n    \"ADD\",\n    \"SUB\",\n    \"MUL\",\n    \"MOD\",\n    \"POW\",\n    \"DIV\",\n    \"IDIV\",\n    \"BAND\",\n    \"BOR\",\n    \"BXOR\",\n    \"SHL\",\n    \"SHR\",\n    \"UNM\",\n    \"BNOT\",\n    \"NOT\",\n    \"LEN\",\n    \"CONCAT\",\n    \"JMP\",\n    \"EQ\",\n    \"LT\",\n    \"LE\",\n    \"TEST\",\n    \"TESTSET\",\n    \"CALL\",\n    \"TAILCALL\",\n    \"RETURN\",\n    \"FORLOOP\",\n    \"FORPREP\",\n    \"TFORCALL\",\n    \"TFORLOOP\",\n    \"SETLIST\",\n    \"CLOSURE\",\n    \"VARARG\",\n    \"EXTRAARG\"\n];\n\nconst OpCodesI = {\n    OP_MOVE:     0,\n    OP_LOADK:    1,\n    OP_LOADKX:   2,\n    OP_LOADBOOL: 3,\n    OP_LOADNIL:  4,\n    OP_GETUPVAL: 5,\n    OP_GETTABUP: 6,\n    OP_GETTABLE: 7,\n    OP_SETTABUP: 8,\n    OP_SETUPVAL: 9,\n    OP_SETTABLE: 10,\n    OP_NEWTABLE: 11,\n    OP_SELF:     12,\n    OP_ADD:      13,\n    OP_SUB:      14,\n    OP_MUL:      15,\n    OP_MOD:      16,\n    OP_POW:      17,\n    OP_DIV:      18,\n    OP_IDIV:     19,\n    OP_BAND:     20,\n    OP_BOR:      21,\n    OP_BXOR:     22,\n    OP_SHL:      23,\n    OP_SHR:      24,\n    OP_UNM:      25,\n    OP_BNOT:     26,\n    OP_NOT:      27,\n    OP_LEN:      28,\n    OP_CONCAT:   29,\n    OP_JMP:      30,\n    OP_EQ:       31,\n    OP_LT:       32,\n    OP_LE:       33,\n    OP_TEST:     34,\n    OP_TESTSET:  35,\n    OP_CALL:     36,\n    OP_TAILCALL: 37,\n    OP_RETURN:   38,\n    OP_FORLOOP:  39,\n    OP_FORPREP:  40,\n    OP_TFORCALL: 41,\n    OP_TFORLOOP: 42,\n    OP_SETLIST:  43,\n    OP_CLOSURE:  44,\n    OP_VARARG:   45,\n    OP_EXTRAARG: 46\n};\n\n/*\n** masks for instruction properties. The format is:\n** bits 0-1: op mode\n** bits 2-3: C arg mode\n** bits 4-5: B arg mode\n** bit 6: instruction set register A\n** bit 7: operator is a test (next instruction must be a jump)\n*/\nconst OpArgN = 0;  /* argument is not used */\nconst OpArgU = 1;  /* argument is used */\nconst OpArgR = 2;  /* argument is a register or a jump offset */\nconst OpArgK = 3;  /* argument is a constant or register/constant */\n\n/* basic instruction format */\nconst iABC  = 0;\nconst iABx  = 1;\nconst iAsBx = 2;\nconst iAx   = 3;\n\nconst luaP_opmodes = [\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_MOVE */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgN << 2 | iABx,   /* OP_LOADK */\n    0 << 7 | 1 << 6 | OpArgN << 4 | OpArgN << 2 | iABx,   /* OP_LOADKX */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_LOADBOOL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_LOADNIL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_GETUPVAL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgK << 2 | iABC,   /* OP_GETTABUP */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgK << 2 | iABC,   /* OP_GETTABLE */\n    0 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SETTABUP */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_SETUPVAL */\n    0 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SETTABLE */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_NEWTABLE */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgK << 2 | iABC,   /* OP_SELF */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_ADD */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SUB */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_MUL */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_MOD */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_POW */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_DIV */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_IDIV */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_BAND */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_BOR */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_BXOR */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SHL */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SHR */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_UNM */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_BNOT */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_NOT */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_LEN */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgR << 2 | iABC,   /* OP_CONCAT */\n    0 << 7 | 0 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_JMP */\n    1 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_EQ */\n    1 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_LT */\n    1 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_LE */\n    1 << 7 | 0 << 6 | OpArgN << 4 | OpArgU << 2 | iABC,   /* OP_TEST */\n    1 << 7 | 1 << 6 | OpArgR << 4 | OpArgU << 2 | iABC,   /* OP_TESTSET */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_CALL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_TAILCALL */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_RETURN */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_FORLOOP */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_FORPREP */\n    0 << 7 | 0 << 6 | OpArgN << 4 | OpArgU << 2 | iABC,   /* OP_TFORCALL */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_TFORLOOP */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_SETLIST */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABx,   /* OP_CLOSURE */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_VARARG */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgU << 2 | iAx     /* OP_EXTRAARG */\n];\n\nconst getOpMode = function(m) {\n    return luaP_opmodes[m] & 3;\n};\n\nconst getBMode = function(m) {\n    return (luaP_opmodes[m] >> 4) & 3;\n};\n\nconst getCMode = function(m) {\n    return (luaP_opmodes[m] >> 2) & 3;\n};\n\nconst testAMode = function(m) {\n    return luaP_opmodes[m] & (1 << 6);\n};\n\nconst testTMode = function(m) {\n    return luaP_opmodes[m] & (1 << 7);\n};\n\nconst SIZE_C     = 9;\nconst SIZE_B     = 9;\nconst SIZE_Bx    = (SIZE_C + SIZE_B);\nconst SIZE_A     = 8;\nconst SIZE_Ax    = (SIZE_C + SIZE_B + SIZE_A);\nconst SIZE_OP    = 6;\nconst POS_OP     = 0;\nconst POS_A      = (POS_OP + SIZE_OP);\nconst POS_C      = (POS_A + SIZE_A);\nconst POS_B      = (POS_C + SIZE_C);\nconst POS_Bx     = POS_C;\nconst POS_Ax     = POS_A;\nconst MAXARG_Bx  = ((1 << SIZE_Bx) - 1);\nconst MAXARG_sBx = (MAXARG_Bx >> 1); /* 'sBx' is signed */\nconst MAXARG_Ax  = ((1<<SIZE_Ax)-1);\nconst MAXARG_A   = ((1 << SIZE_A) - 1);\nconst MAXARG_B   = ((1 << SIZE_B) - 1);\nconst MAXARG_C   = ((1 << SIZE_C) - 1);\n\n/* this bit 1 means constant (0 means register) */\nconst BITRK      = (1 << (SIZE_B - 1));\n\nconst MAXINDEXRK = (BITRK - 1);\n\n/*\n** invalid register that fits in 8 bits\n*/\nconst NO_REG     = MAXARG_A;\n\n/* test whether value is a constant */\nconst ISK = function (x) {\n    return x & BITRK;\n};\n\n/* gets the index of the constant */\nconst INDEXK = function (r) {\n    return r & ~BITRK;\n};\n\n/* code a constant index as a RK value */\nconst RKASK = function(x) {\n    return x | BITRK;\n};\n\n\n/* creates a mask with 'n' 1 bits at position 'p' */\nconst MASK1 = function(n, p) {\n    return ((~((~0)<<(n)))<<(p));\n};\n\n/* creates a mask with 'n' 0 bits at position 'p' */\nconst MASK0 = function(n, p) {\n    return (~MASK1(n, p));\n};\n\nconst GET_OPCODE = function(i) {\n    return i.opcode;\n};\n\nconst SET_OPCODE = function(i, o) {\n    i.code = (i.code & MASK0(SIZE_OP, POS_OP)) | ((o << POS_OP) & MASK1(SIZE_OP, POS_OP));\n    return fullins(i);\n};\n\nconst setarg = function(i, v, pos, size) {\n    i.code = (i.code & MASK0(size, pos)) | ((v << pos) & MASK1(size, pos));\n    return fullins(i);\n};\n\nconst GETARG_A = function(i) {\n    return i.A;\n};\n\nconst SETARG_A = function(i,v) {\n    return setarg(i, v, POS_A, SIZE_A);\n};\n\nconst GETARG_B = function(i) {\n    return i.B;\n};\n\nconst SETARG_B = function(i,v) {\n    return setarg(i, v, POS_B, SIZE_B);\n};\n\nconst GETARG_C = function(i) {\n    return i.C;\n};\n\nconst SETARG_C = function(i,v) {\n    return setarg(i, v, POS_C, SIZE_C);\n};\n\nconst GETARG_Bx = function(i) {\n    return i.Bx;\n};\n\nconst SETARG_Bx = function(i,v) {\n    return setarg(i, v, POS_Bx, SIZE_Bx);\n};\n\nconst GETARG_Ax = function(i) {\n    return i.Ax;\n};\n\nconst SETARG_Ax = function(i,v) {\n    return setarg(i, v, POS_Ax, SIZE_Ax);\n};\n\nconst GETARG_sBx = function(i) {\n    return i.sBx;\n};\n\nconst SETARG_sBx = function(i, b) {\n    return SETARG_Bx(i, b + MAXARG_sBx);\n};\n\n/*\n** Pre-calculate all possible part of the instruction\n*/\nconst fullins = function(ins) {\n    if (typeof ins === \"number\") {\n        return {\n            code:   ins,\n            opcode: (ins >> POS_OP) & MASK1(SIZE_OP, 0),\n            A:      (ins >> POS_A)  & MASK1(SIZE_A,  0),\n            B:      (ins >> POS_B)  & MASK1(SIZE_B,  0),\n            C:      (ins >> POS_C)  & MASK1(SIZE_C,  0),\n            Bx:     (ins >> POS_Bx) & MASK1(SIZE_Bx, 0),\n            Ax:     (ins >> POS_Ax) & MASK1(SIZE_Ax, 0),\n            sBx:    ((ins >> POS_Bx) & MASK1(SIZE_Bx, 0)) - MAXARG_sBx\n        };\n    } else {\n        let i = ins.code;\n        ins.opcode = (i >> POS_OP) & MASK1(SIZE_OP, 0);\n        ins.A      = (i >> POS_A)  & MASK1(SIZE_A,  0);\n        ins.B      = (i >> POS_B)  & MASK1(SIZE_B,  0);\n        ins.C      = (i >> POS_C)  & MASK1(SIZE_C,  0);\n        ins.Bx     = (i >> POS_Bx) & MASK1(SIZE_Bx, 0);\n        ins.Ax     = (i >> POS_Ax) & MASK1(SIZE_Ax, 0);\n        ins.sBx    = ((i >> POS_Bx) & MASK1(SIZE_Bx, 0)) - MAXARG_sBx;\n        return ins;\n    }\n};\n\nconst CREATE_ABC = function(o, a, b, c) {\n    return fullins(o << POS_OP | a << POS_A | b << POS_B | c << POS_C);\n};\n\nconst CREATE_ABx = function(o, a, bc) {\n    return fullins(o << POS_OP | a << POS_A | bc << POS_Bx);\n};\n\nconst CREATE_Ax = function(o, a) {\n    return fullins(o << POS_OP | a << POS_Ax);\n};\n\n/* number of list items to accumulate before a SETLIST instruction */\nconst LFIELDS_PER_FLUSH = 50;\n\nmodule.exports.BITRK               = BITRK;\nmodule.exports.CREATE_ABC          = CREATE_ABC;\nmodule.exports.CREATE_ABx          = CREATE_ABx;\nmodule.exports.CREATE_Ax           = CREATE_Ax;\nmodule.exports.GET_OPCODE          = GET_OPCODE;\nmodule.exports.GETARG_A            = GETARG_A;\nmodule.exports.GETARG_B            = GETARG_B;\nmodule.exports.GETARG_C            = GETARG_C;\nmodule.exports.GETARG_Bx           = GETARG_Bx;\nmodule.exports.GETARG_Ax           = GETARG_Ax;\nmodule.exports.GETARG_sBx          = GETARG_sBx;\nmodule.exports.INDEXK              = INDEXK;\nmodule.exports.ISK                 = ISK;\nmodule.exports.LFIELDS_PER_FLUSH   = LFIELDS_PER_FLUSH;\nmodule.exports.MAXARG_A            = MAXARG_A;\nmodule.exports.MAXARG_Ax           = MAXARG_Ax;\nmodule.exports.MAXARG_B            = MAXARG_B;\nmodule.exports.MAXARG_Bx           = MAXARG_Bx;\nmodule.exports.MAXARG_C            = MAXARG_C;\nmodule.exports.MAXARG_sBx          = MAXARG_sBx;\nmodule.exports.MAXINDEXRK          = MAXINDEXRK;\nmodule.exports.NO_REG              = NO_REG;\nmodule.exports.OpArgK              = OpArgK;\nmodule.exports.OpArgN              = OpArgN;\nmodule.exports.OpArgR              = OpArgR;\nmodule.exports.OpArgU              = OpArgU;\nmodule.exports.OpCodes             = OpCodes;\nmodule.exports.OpCodesI            = OpCodesI;\nmodule.exports.POS_A               = POS_A;\nmodule.exports.POS_Ax              = POS_Ax;\nmodule.exports.POS_B               = POS_B;\nmodule.exports.POS_Bx              = POS_Bx;\nmodule.exports.POS_C               = POS_C;\nmodule.exports.POS_OP              = POS_OP;\nmodule.exports.RKASK               = RKASK;\nmodule.exports.SETARG_A            = SETARG_A;\nmodule.exports.SETARG_Ax           = SETARG_Ax;\nmodule.exports.SETARG_B            = SETARG_B;\nmodule.exports.SETARG_Bx           = SETARG_Bx;\nmodule.exports.SETARG_C            = SETARG_C;\nmodule.exports.SETARG_sBx          = SETARG_sBx;\nmodule.exports.SET_OPCODE          = SET_OPCODE;\nmodule.exports.SIZE_A              = SIZE_A;\nmodule.exports.SIZE_Ax             = SIZE_Ax;\nmodule.exports.SIZE_B              = SIZE_B;\nmodule.exports.SIZE_Bx             = SIZE_Bx;\nmodule.exports.SIZE_C              = SIZE_C;\nmodule.exports.SIZE_OP             = SIZE_OP;\nmodule.exports.fullins             = fullins;\nmodule.exports.getBMode            = getBMode;\nmodule.exports.getCMode            = getCMode;\nmodule.exports.getOpMode           = getOpMode;\nmodule.exports.iABC                = iABC;\nmodule.exports.iABx                = iABx;\nmodule.exports.iAsBx               = iAsBx;\nmodule.exports.iAx                 = iAx;\nmodule.exports.testAMode           = testAMode;\nmodule.exports.testTMode           = testTMode;\n","\"use strict\";\n\nconst {\n    LUA_VERSION_MAJOR,\n    LUA_VERSION_MINOR\n} = require(\"./lua.js\");\n\nconst LUA_VERSUFFIX = \"_\" + LUA_VERSION_MAJOR + \"_\" + LUA_VERSION_MINOR;\nmodule.exports.LUA_VERSUFFIX = LUA_VERSUFFIX;\n\nmodule.exports.lua_assert = function(c) {};\n\nmodule.exports.luaopen_base = require(\"./lbaselib.js\").luaopen_base;\n\nconst LUA_COLIBNAME = \"coroutine\";\nmodule.exports.LUA_COLIBNAME = LUA_COLIBNAME;\nmodule.exports.luaopen_coroutine = require(\"./lcorolib.js\").luaopen_coroutine;\n\nconst LUA_TABLIBNAME = \"table\";\nmodule.exports.LUA_TABLIBNAME = LUA_TABLIBNAME;\nmodule.exports.luaopen_table = require(\"./ltablib.js\").luaopen_table;\n\nif (typeof process !== \"undefined\") {\n    const LUA_IOLIBNAME = \"io\";\n    module.exports.LUA_IOLIBNAME = LUA_IOLIBNAME;\n    module.exports.luaopen_io = require(\"./liolib.js\").luaopen_io;\n}\n\nconst LUA_OSLIBNAME = \"os\";\nmodule.exports.LUA_OSLIBNAME = LUA_OSLIBNAME;\nmodule.exports.luaopen_os = require(\"./loslib.js\").luaopen_os;\n\nconst LUA_STRLIBNAME = \"string\";\nmodule.exports.LUA_STRLIBNAME = LUA_STRLIBNAME;\nmodule.exports.luaopen_string = require(\"./lstrlib.js\").luaopen_string;\n\nconst LUA_UTF8LIBNAME = \"utf8\";\nmodule.exports.LUA_UTF8LIBNAME = LUA_UTF8LIBNAME;\nmodule.exports.luaopen_utf8 = require(\"./lutf8lib.js\").luaopen_utf8;\n\nconst LUA_BITLIBNAME = \"bit32\";\nmodule.exports.LUA_BITLIBNAME = LUA_BITLIBNAME;\n// module.exports.luaopen_bit32 = require(\"./lbitlib.js\").luaopen_bit32;\n\nconst LUA_MATHLIBNAME = \"math\";\nmodule.exports.LUA_MATHLIBNAME = LUA_MATHLIBNAME;\nmodule.exports.luaopen_math = require(\"./lmathlib.js\").luaopen_math;\n\nconst LUA_DBLIBNAME = \"debug\";\nmodule.exports.LUA_DBLIBNAME = LUA_DBLIBNAME;\nmodule.exports.luaopen_debug = require(\"./ldblib.js\").luaopen_debug;\n\nconst LUA_LOADLIBNAME = \"package\";\nmodule.exports.LUA_LOADLIBNAME = LUA_LOADLIBNAME;\nmodule.exports.luaopen_package = require(\"./loadlib.js\").luaopen_package;\n\nconst LUA_FENGARILIBNAME = \"fengari\";\nmodule.exports.LUA_FENGARILIBNAME = LUA_FENGARILIBNAME;\nmodule.exports.luaopen_fengari = require(\"./fengarilib.js\").luaopen_fengari;\n\nconst linit = require('./linit.js');\nmodule.exports.luaL_openlibs = linit.luaL_openlibs;\n","\"use strict\";\n\nconst {\n\tlua,\n\tlauxlib,\n\tlualib,\n\tto_luastring\n} = require('fengari');\nconst {\n\tLUA_MULTRET,\n\tLUA_OK,\n\tLUA_REGISTRYINDEX,\n\tLUA_RIDX_MAINTHREAD,\n\tLUA_TBOOLEAN,\n\tLUA_TFUNCTION,\n\tLUA_TLIGHTUSERDATA,\n\tLUA_TNIL,\n\tLUA_TNONE,\n\tLUA_TNUMBER,\n\tLUA_TSTRING,\n\tLUA_TTABLE,\n\tLUA_TTHREAD,\n\tLUA_TUSERDATA,\n\tlua_atnativeerror,\n\tlua_call,\n\tlua_getfield,\n\tlua_gettable,\n\tlua_gettop,\n\tlua_isnil,\n\tlua_isproxy,\n\tlua_newuserdata,\n\tlua_pcall,\n\tlua_pop,\n\tlua_pushboolean,\n\tlua_pushcfunction,\n\tlua_pushinteger,\n\tlua_pushlightuserdata,\n\tlua_pushliteral,\n\tlua_pushnil,\n\tlua_pushnumber,\n\tlua_pushstring,\n\tlua_pushvalue,\n\tlua_rawgeti,\n\tlua_rawgetp,\n\tlua_rawsetp,\n\tlua_rotate,\n\tlua_setfield,\n\tlua_settable,\n\tlua_settop,\n\tlua_toboolean,\n\tlua_tojsstring,\n\tlua_tonumber,\n\tlua_toproxy,\n\tlua_tothread,\n\tlua_touserdata,\n\tlua_type\n} = lua;\nconst {\n\tluaL_argerror,\n\tluaL_checkany,\n\tluaL_checkoption,\n\tluaL_checkstack,\n\tluaL_checkudata,\n\tluaL_error,\n\tluaL_getmetafield,\n\tluaL_newlib,\n\tluaL_newmetatable,\n\tluaL_requiref,\n\tluaL_setfuncs,\n\tluaL_setmetatable,\n\tluaL_testudata,\n\tluaL_tolstring\n} = lauxlib;\nconst {\n\tluaopen_base\n} = lualib;\n\nconst FENGARI_INTEROP_VERSION_MAJOR   = \"0\";\nconst FENGARI_INTEROP_VERSION_MINOR   = \"1\";\nconst FENGARI_INTEROP_VERSION_NUM     = 1;\nconst FENGARI_INTEROP_VERSION_RELEASE = \"2\";\nconst FENGARI_INTEROP_VERSION         = FENGARI_INTEROP_VERSION_MAJOR + \".\" + FENGARI_INTEROP_VERSION_MINOR;\nconst FENGARI_INTEROP_RELEASE         = FENGARI_INTEROP_VERSION + \".\" + FENGARI_INTEROP_VERSION_RELEASE;\n\nlet custom_inspect_symbol;\nif (typeof process !== \"undefined\") {\n\ttry { /* for node.js */\n\t\tcustom_inspect_symbol = require('util').inspect.custom;\n\t} catch (e) {}\n}\n\nconst global_env = (function() {\n\t/* global WorkerGlobalScope */ /* see https://github.com/sindresorhus/globals/issues/127 */\n\tif (typeof process !== \"undefined\") {\n\t\t/* node */\n\t\treturn global;\n\t} else if (typeof window !== \"undefined\") {\n\t\t/* browser window */\n\t\treturn window;\n\t} else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t\t/* web worker */\n\t\treturn self;\n\t} else {\n\t\t/* unknown global env */\n\t\treturn (0, eval)('this'); /* use non-strict mode to get global env */\n\t}\n})();\n\nlet apply, construct, Reflect_deleteProperty;\nif (typeof Reflect !== \"undefined\") {\n\tapply = Reflect.apply;\n\tconstruct = Reflect.construct;\n\tReflect_deleteProperty = Reflect.deleteProperty;\n} else {\n\tconst fApply = Function.apply;\n\tconst bind = Function.bind;\n\tapply = function(target, thisArgument, argumentsList) {\n\t\treturn fApply.call(target, thisArgument, argumentsList);\n\t};\n\tconstruct = function(target, argumentsList /*, newTarget */) {\n\t\tswitch (argumentsList.length) {\n\t\t\tcase 0: return new target();\n\t\t\tcase 1: return new target(argumentsList[0]);\n\t\t\tcase 2: return new target(argumentsList[0], argumentsList[1]);\n\t\t\tcase 3: return new target(argumentsList[0], argumentsList[1], argumentsList[2]);\n\t\t\tcase 4: return new target(argumentsList[0], argumentsList[1], argumentsList[2], argumentsList[3]);\n\t\t}\n\t\tlet args = [null];\n\t\targs.push.apply(args, argumentsList);\n\t\treturn new (bind.apply(target, args))();\n\t};\n\t/* need to be in non-strict mode */\n\tReflect_deleteProperty = Function(\"t\", \"k\", \"delete t[k]\");\n}\n\n/*\nString.concat coerces to string with correct hint for Symbol.toPrimitive\n`this` isn't allowed to be null, so bind the empty string\n*/\nconst toString = String.prototype.concat.bind(\"\");\n\nconst isobject = function(o) {\n\treturn typeof o === \"object\" ? o !== null : typeof o === \"function\";\n};\n\nconst js_tname = to_luastring(\"js object\");\nconst js_library_not_loaded = \"js library not loaded into lua_State\";\n\nconst testjs = function(L, idx) {\n\tlet u = luaL_testudata(L, idx, js_tname);\n\tif (u)\n\t\treturn u.data;\n\telse\n\t\treturn void 0;\n};\n\nconst checkjs = function(L, idx) {\n\treturn luaL_checkudata(L, idx, js_tname).data;\n};\n\nconst pushjs = function(L, v) {\n\tlet b = lua_newuserdata(L);\n\tb.data = v;\n\tluaL_setmetatable(L, js_tname);\n};\n\nconst getmainthread = function(L) {\n\tlua_rawgeti(L, LUA_REGISTRYINDEX, LUA_RIDX_MAINTHREAD);\n\tlet mainL = lua_tothread(L, -1);\n\tlua_pop(L, 1);\n\treturn mainL;\n};\n\n/* weak map from states to proxy objects (for each object) in that state */\nconst states = new WeakMap();\n\nconst push = function(L, v) {\n\tswitch (typeof v) {\n\t\tcase \"undefined\":\n\t\t\tlua_pushnil(L);\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tlua_pushnumber(L, v);\n\t\t\tbreak;\n\t\tcase \"string\":\n\t\t\tlua_pushstring(L, to_luastring(v));\n\t\t\tbreak;\n\t\tcase \"boolean\":\n\t\t\tlua_pushboolean(L, v);\n\t\t\tbreak;\n\t\tcase \"symbol\":\n\t\t\tlua_pushlightuserdata(L, v);\n\t\t\tbreak;\n\t\tcase \"function\":\n\t\t\tif (lua_isproxy(v, L)) {\n\t\t\t\tv(L);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/* fall through */\n\t\tcase \"object\":\n\t\t\tif (v === null) {\n\t\t\t\t/* can't use null in a WeakMap; grab from registry */\n\t\t\t\tif (lua_rawgetp(L, LUA_REGISTRYINDEX, null) !== LUA_TUSERDATA)\n\t\t\t\t\tthrow Error(js_library_not_loaded);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/* fall through */\n\t\tdefault: {\n\t\t\t/* Try and push same object again */\n\t\t\tlet objects_seen = states.get(getmainthread(L));\n\t\t\tif (!objects_seen) throw Error(js_library_not_loaded);\n\t\t\tlet p = objects_seen.get(v);\n\t\t\tif (p) {\n\t\t\t\tp(L);\n\t\t\t} else {\n\t\t\t\tpushjs(L, v);\n\t\t\t\tp = lua_toproxy(L, -1);\n\t\t\t\tobjects_seen.set(v, p);\n\t\t\t}\n\t\t}\n\t}\n};\n\nconst atnativeerror = function(L) {\n\tlet u = lua_touserdata(L, 1);\n\tpush(L, u);\n\treturn 1;\n};\n\nconst tojs = function(L, idx) {\n\tswitch(lua_type(L, idx)) {\n\t\tcase LUA_TNONE:\n\t\tcase LUA_TNIL:\n\t\t\treturn void 0;\n\t\tcase LUA_TBOOLEAN:\n\t\t\treturn lua_toboolean(L, idx);\n\t\tcase LUA_TLIGHTUSERDATA:\n\t\t\treturn lua_touserdata(L, idx);\n\t\tcase LUA_TNUMBER:\n\t\t\treturn lua_tonumber(L, idx);\n\t\tcase LUA_TSTRING:\n\t\t\treturn lua_tojsstring(L, idx);\n\t\tcase LUA_TUSERDATA: {\n\t\t\tlet u = testjs(L, idx);\n\t\t\tif (u !== void 0)\n\t\t\t\treturn u;\n\t\t}\n\t\t/* fall through */\n\t\tcase LUA_TTABLE:\n\t\tcase LUA_TFUNCTION:\n\t\tcase LUA_TTHREAD:\n\t\t/* fall through */\n\t\tdefault:\n\t\t\treturn wrap(L, lua_toproxy(L, idx));\n\t}\n};\n\n/* Calls function on the stack with `nargs` from the stack.\n   On lua error, re-throws as javascript error\n   On success, returns single return value */\nconst jscall = function(L, nargs) {\n\tlet status = lua_pcall(L, nargs, 1, 0);\n\tlet r = tojs(L, -1);\n\tlua_pop(L, 1);\n\tswitch(status) {\n\t\tcase LUA_OK:\n\t\t\treturn r;\n\t\tdefault:\n\t\t\tthrow r;\n\t}\n};\n\nconst invoke = function(L, p, thisarg, args, n_results) {\n\tif (!isobject(args)) throw new TypeError(\"`args` argument must be an object\");\n\tlet length = +args.length;\n\tif (!(length >= 0)) length = 0; /* Keep NaN in mind */\n\tluaL_checkstack(L, 2+length, null);\n\tlet base = lua_gettop(L);\n\tp(L);\n\tpush(L, thisarg);\n\tfor (let i=0; i<length; i++) {\n\t\tpush(L, args[i]);\n\t}\n\tswitch(lua_pcall(L, 1+length, n_results, 0)) {\n\t\tcase LUA_OK: {\n\t\t\tlet nres = lua_gettop(L)-base;\n\t\t\tlet res = new Array(nres);\n\t\t\tfor (let i=0; i<nres; i++) {\n\t\t\t\tres[i] = tojs(L, base+i+1);\n\t\t\t}\n\t\t\tlua_settop(L, base);\n\t\t\treturn res;\n\t\t}\n\t\tdefault: {\n\t\t\tlet r = tojs(L, -1);\n\t\t\tlua_settop(L, base);\n\t\t\tthrow r;\n\t\t}\n\t}\n};\n\nconst gettable = function(L) {\n\tlua_gettable(L, 1);\n\treturn 1;\n};\n\nconst get = function(L, p, prop) {\n\tluaL_checkstack(L, 3, null);\n\tlua_pushcfunction(L, gettable);\n\tp(L);\n\tpush(L, prop);\n\treturn jscall(L, 2);\n};\n\nconst has = function(L, p, prop) {\n\tluaL_checkstack(L, 3, null);\n\tlua_pushcfunction(L, gettable);\n\tp(L);\n\tpush(L, prop);\n\tlet status = lua_pcall(L, 2, 1, 0);\n\tswitch(status) {\n\t\tcase LUA_OK: {\n\t\t\tlet r = lua_isnil(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\treturn !r;\n\t\t}\n\t\tdefault: {\n\t\t\tlet r = tojs(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\tthrow r;\n\t\t}\n\t}\n};\n\nconst set = function(L, p, prop, value) {\n\tluaL_checkstack(L, 4, null);\n\tlua_pushcfunction(L, function(L) {\n\t\tlua_settable(L, 1);\n\t\treturn 0;\n\t});\n\tp(L);\n\tpush(L, prop);\n\tpush(L, value);\n\tswitch(lua_pcall(L, 3, 0, 0)) {\n\t\tcase LUA_OK:\n\t\t\treturn;\n\t\tdefault: {\n\t\t\tlet r = tojs(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\tthrow r;\n\t\t}\n\t}\n};\n\nconst deleteProperty = function(L, p, prop) {\n\tluaL_checkstack(L, 4, null);\n\tlua_pushcfunction(L, function(L) {\n\t\tlua_settable(L, 1);\n\t\treturn 0;\n\t});\n\tp(L);\n\tpush(L, prop);\n\tlua_pushnil(L);\n\tswitch(lua_pcall(L, 3, 0, 0)) {\n\t\tcase LUA_OK:\n\t\t\treturn;\n\t\tdefault: {\n\t\t\tlet r = tojs(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\tthrow r;\n\t\t}\n\t}\n};\n\nconst tostring = function(L, p) {\n\tluaL_checkstack(L, 2, null);\n\tlua_pushcfunction(L, function(L) {\n\t\tluaL_tolstring(L, 1);\n\t\treturn 1;\n\t});\n\tp(L);\n\treturn jscall(L, 1);\n};\n\n/* implements lua's \"Generic For\" protocol */\nconst iter_next = function() {\n\tlet L = this.L;\n\tluaL_checkstack(L, 3, null);\n\tlet top = lua_gettop(L);\n\tthis.iter(L);\n\tthis.state(L);\n\tthis.last(L);\n\tswitch(lua_pcall(L, 2, LUA_MULTRET, 0)) {\n\t\tcase LUA_OK: {\n\t\t\tthis.last = lua_toproxy(L, top+1);\n\t\t\tlet r;\n\t\t\tif (lua_isnil(L, -1)) {\n\t\t\t\tr = {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: void 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tlet n_results = lua_gettop(L) - top;\n\t\t\t\tlet result = new Array(n_results);\n\t\t\t\tfor (let i=0; i<n_results; i++) {\n\t\t\t\t\tresult[i] = tojs(L, top+i+1);\n\t\t\t\t}\n\t\t\t\tr = {\n\t\t\t\t\tdone: false,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t\tlua_settop(L, top);\n\t\t\treturn r;\n\t\t}\n\t\tdefault: {\n\t\t\tlet e = tojs(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\tthrow e;\n\t\t}\n\t}\n};\n\n/* make iteration use pairs() */\nconst jsiterator = function(L, p) {\n\tluaL_checkstack(L, 1, null);\n\tlua_pushcfunction(L, function(L) {\n\t\tluaL_requiref(L, to_luastring(\"_G\"), luaopen_base, 0);\n\t\tlua_getfield(L, -1, to_luastring(\"pairs\"));\n\t\tp(L);\n\t\tlua_call(L, 1, 3);\n\t\treturn 3;\n\t});\n\tswitch(lua_pcall(L, 0, 3, 0)) {\n\t\tcase LUA_OK: {\n\t\t\tlet iter = lua_toproxy(L, -3);\n\t\t\tlet state = lua_toproxy(L, -2);\n\t\t\tlet last = lua_toproxy(L, -1);\n\t\t\tlua_pop(L, 3);\n\t\t\treturn {\n\t\t\t\tL: L,\n\t\t\t\titer: iter,\n\t\t\t\tstate: state,\n\t\t\t\tlast: last,\n\t\t\t\tnext: iter_next\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\tlet r = tojs(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\tthrow r;\n\t\t}\n\t}\n};\n\nconst wrap = function(L1, p) {\n\tconst L = getmainthread(L1);\n\t/* we need `typeof js_proxy` to be \"function\" so that it's acceptable to native apis */\n\tlet js_proxy = function() {\n\t\t/* only get one result */\n\t\treturn invoke(L, p, this, arguments, 1)[0];\n\t};\n\tjs_proxy.apply = function(thisarg, args) {\n\t\t/* only get one result */\n\t\treturn invoke(L, p, thisarg, args, 1)[0];\n\t};\n\tjs_proxy.invoke = function(thisarg, args) {\n\t\treturn invoke(L, p, thisarg, args, LUA_MULTRET);\n\t};\n\tjs_proxy.get = function(k) {\n\t\treturn get(L, p, k);\n\t};\n\tjs_proxy.has = function(k) {\n\t\treturn has(L, p, k);\n\t};\n\tjs_proxy.set = function(k, v) {\n\t\treturn set(L, p, k, v);\n\t};\n\tjs_proxy.delete = function(k) {\n\t\treturn deleteProperty(L, p, k);\n\t};\n\tjs_proxy.toString = function() {\n\t\treturn tostring(L, p);\n\t};\n\tif (typeof Symbol === \"function\") {\n\t\tjs_proxy[Symbol.toStringTag] = \"Fengari object\";\n\t\tjs_proxy[Symbol.iterator] = function() {\n\t\t\treturn jsiterator(L, p);\n\t\t};\n\t\tif (Symbol.toPrimitive) {\n\t\t\tjs_proxy[Symbol.toPrimitive] = function(hint) {\n\t\t\t\tif (hint === \"string\") {\n\t\t\t\t\treturn tostring(L, p);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\tif (custom_inspect_symbol) {\n\t\tjs_proxy[custom_inspect_symbol] = js_proxy.toString;\n\t}\n\tlet objects_seen = states.get(L);\n\tif (!objects_seen) throw Error(js_library_not_loaded);\n\tobjects_seen.set(js_proxy, p);\n\treturn js_proxy;\n};\n\nconst jslib = {\n\t\"new\": function(L) {\n\t\tlet u = tojs(L, 1);\n\t\tlet nargs = lua_gettop(L)-1;\n\t\tlet args = new Array(nargs);\n\t\tfor (let i = 0; i < nargs; i++) {\n\t\t\targs[i] = tojs(L, i+2);\n\t\t}\n\t\tpush(L, construct(u, args));\n\t\treturn 1;\n\t},\n\t\"tonumber\": function(L) {\n\t\tlet u = tojs(L, 1);\n\t\tlua_pushnumber(L, +u);\n\t\treturn 1;\n\t},\n\t\"tostring\": function(L) {\n\t\tlet u = tojs(L, 1);\n\t\tlua_pushliteral(L, toString(u));\n\t\treturn 1;\n\t},\n\t\"instanceof\": function(L) {\n\t\tlet u1 = tojs(L, 1);\n\t\tlet u2 = tojs(L, 2);\n\t\tlua_pushboolean(L, u1 instanceof u2);\n\t\treturn 1;\n\t},\n\t\"typeof\": function(L) {\n\t\tlet u = tojs(L, 1);\n\t\tlua_pushliteral(L, typeof u);\n\t\treturn 1;\n\t}\n};\n\nif (typeof Symbol === \"function\" && Symbol.iterator) {\n\tconst get_iterator = function(L, idx) {\n\t\tlet u = checkjs(L, idx);\n\t\tlet getiter = u[Symbol.iterator];\n\t\tif (!getiter)\n\t\t\tluaL_argerror(L, idx, to_luastring(\"object not iterable\"));\n\t\tlet iter = apply(getiter, u, []);\n\t\tif (!isobject(iter))\n\t\t\tluaL_argerror(L, idx, to_luastring(\"Result of the Symbol.iterator method is not an object\"));\n\t\treturn iter;\n\t};\n\n\tconst next = function(L) {\n\t\tlet iter = tojs(L, 1);\n\t\tlet r = iter.next();\n\t\tif (r.done) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tpush(L, r.value);\n\t\t\treturn 1;\n\t\t}\n\t};\n\n\tjslib[\"of\"] = function(L) {\n\t\tlet iter = get_iterator(L, 1);\n\t\tlua_pushcfunction(L, next);\n\t\tpush(L, iter);\n\t\treturn 2;\n\t};\n}\n\nif (typeof Proxy === \"function\" && typeof Symbol === \"function\") {\n\tconst L_symbol = Symbol(\"lua_State\");\n\tconst p_symbol = Symbol(\"fengari-proxy\");\n\n\tconst proxy_handlers = {\n\t\t\"apply\": function(target, thisarg, args) {\n\t\t\treturn invoke(target[L_symbol], target[p_symbol], thisarg, args, 1)[0];\n\t\t},\n\t\t\"construct\": function(target, argumentsList) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tlet arg_length = argumentsList.length;\n\t\t\tluaL_checkstack(L, 2+arg_length, null);\n\t\t\tp(L);\n\t\t\tlet idx = lua_gettop(L);\n\t\t\tif (luaL_getmetafield(L, idx, to_luastring(\"construct\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\tthrow new TypeError(\"not a constructor\");\n\t\t\t}\n\t\t\tlua_rotate(L, idx, 1);\n\t\t\tfor (let i=0; i<arg_length; i++) {\n\t\t\t\tpush(L, argumentsList[i]);\n\t\t\t}\n\t\t\treturn jscall(L, 1+arg_length);\n\t\t},\n\t\t\"defineProperty\": function(target, prop, desc) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tluaL_checkstack(L, 4, null);\n\t\t\tp(L);\n\t\t\tif (luaL_getmetafield(L, -1, to_luastring(\"defineProperty\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlua_rotate(L, -2, 1);\n\t\t\tpush(L, prop);\n\t\t\tpush(L, desc);\n\t\t\treturn jscall(L, 3);\n\t\t},\n\t\t\"deleteProperty\": function(target, k) {\n\t\t\treturn deleteProperty(target[L_symbol], target[p_symbol], k);\n\t\t},\n\t\t\"get\": function(target, k) {\n\t\t\treturn get(target[L_symbol], target[p_symbol], k);\n\t\t},\n\t\t\"getOwnPropertyDescriptor\": function(target, prop) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tluaL_checkstack(L, 3, null);\n\t\t\tp(L);\n\t\t\tif (luaL_getmetafield(L, -1, to_luastring(\"getOwnPropertyDescriptor\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlua_rotate(L, -2, 1);\n\t\t\tpush(L, prop);\n\t\t\treturn jscall(L, 2);\n\t\t},\n\t\t\"getPrototypeOf\": function(target) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tluaL_checkstack(L, 2, null);\n\t\t\tp(L);\n\t\t\tif (luaL_getmetafield(L, -1, to_luastring(\"getPrototypeOf\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tlua_rotate(L, -2, 1);\n\t\t\treturn jscall(L, 1);\n\t\t},\n\t\t\"has\": function(target, k) {\n\t\t\treturn has(target[L_symbol], target[p_symbol], k);\n\t\t},\n\t\t\"ownKeys\": function(target) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tluaL_checkstack(L, 2, null);\n\t\t\tp(L);\n\t\t\tif (luaL_getmetafield(L, -1, to_luastring(\"ownKeys\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\tthrow Error(\"ownKeys unknown for fengari object\");\n\t\t\t}\n\t\t\tlua_rotate(L, -2, 1);\n\t\t\treturn jscall(L, 1);\n\t\t},\n\t\t\"set\": function(target, k, v) {\n\t\t\tset(target[L_symbol], target[p_symbol], k, v);\n\t\t\treturn true;\n\t\t},\n\t\t\"setPrototypeOf\": function(target, prototype) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tluaL_checkstack(L, 3, null);\n\t\t\tp(L);\n\t\t\tif (luaL_getmetafield(L, -1, to_luastring(\"setPrototypeOf\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlua_rotate(L, -2, 1);\n\t\t\tpush(L, prototype);\n\t\t\treturn jscall(L, 2);\n\t\t}\n\t};\n\n\t/*\n\tFunctions created with `function(){}` have a non-configurable .prototype\n\tfield. This causes issues with the .ownKeys and .getOwnPropertyDescriptor\n\ttraps.\n\tHowever using `.bind()` returns a function without the .prototype property.\n\n\t```js\n\tReflect.ownKeys((function(){})) // Array [ \"prototype\", \"length\", \"name\" ]\n\tReflect.ownKeys((function(){}).bind()) // Array [ \"length\", \"name\" ]\n\t```\n\t*/\n\tconst raw_function = function() {\n\t\tlet f = (function(){}).bind();\n\t\tdelete f.length;\n\t\tdelete f.name;\n\t\treturn f;\n\t};\n\n\t/*\n\tWe use Function() here to get prevent transpilers from converting to a\n\tnon-arrow function.\n\tAdditionally, we avoid setting the internal name field by never giving the\n\tnew function a name in the block it was defined (and instead delete-ing\n\tthe configurable fields .length and .name in a wrapper function)\n\t*/\n\tconst make_arrow_function = Function(\"return ()=>void 0;\");\n\tconst raw_arrow_function = function() {\n\t\tlet f = make_arrow_function();\n\t\tdelete f.length;\n\t\tdelete f.name;\n\t\treturn f;\n\t};\n\n\t/*\n\tArrow functions do not have a .prototype field:\n\n\t```js\n\tReflect.ownKeys((() = >void 0)) // Array [ \"length\", \"name\" ]\n\t```\n\n\tHowever they cannot be used as a constructor:\n\n\t```js\n\tnew (new Proxy(() => void 0, { construct: function() { return {}; } })) // TypeError: (intermediate value) is not a constructor\n\tnew (new Proxy(function(){}, { construct: function() { return {}; } })) // {}\n\t```\n\t*/\n\tconst createproxy = function(L1, p, type) {\n\t\tconst L = getmainthread(L1);\n\t\tlet target;\n\t\tswitch (type) {\n\t\t\tcase \"function\":\n\t\t\t\ttarget = raw_function();\n\t\t\t\tbreak;\n\t\t\tcase \"arrow_function\":\n\t\t\t\ttarget = raw_arrow_function();\n\t\t\t\tbreak;\n\t\t\tcase \"object\":\n\t\t\t\ttarget = {};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow TypeError(\"invalid type to createproxy\");\n\t\t}\n\t\ttarget[p_symbol] = p;\n\t\ttarget[L_symbol] = L;\n\t\treturn new Proxy(target, proxy_handlers);\n\t};\n\n\tconst valid_types = [\"function\", \"arrow_function\", \"object\"];\n\tconst valid_types_as_luastring = valid_types.map((v) => to_luastring(v));\n\tjslib[\"createproxy\"] = function(L) {\n\t\tluaL_checkany(L, 1);\n\t\tlet type = valid_types[luaL_checkoption(L, 2, valid_types_as_luastring[0], valid_types_as_luastring)];\n\t\tlet fengariProxy = createproxy(L, lua_toproxy(L, 1), type);\n\t\tpush(L, fengariProxy);\n\t\treturn 1;\n\t};\n}\n\nlet jsmt = {\n\t\"__index\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet k = tojs(L, 2);\n\t\tpush(L, u[k]);\n\t\treturn 1;\n\t},\n\t\"__newindex\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet k = tojs(L, 2);\n\t\tlet v = tojs(L, 3);\n\t\tif (v === void 0)\n\t\t\tReflect_deleteProperty(u, k);\n\t\telse\n\t\t\tu[k] = v;\n\t\treturn 0;\n\t},\n\t\"__tostring\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet s = toString(u);\n\t\tlua_pushstring(L, to_luastring(s));\n\t\treturn 1;\n\t},\n\t\"__call\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet nargs = lua_gettop(L)-1;\n\t\tlet thisarg;\n\t\tlet args = new Array(Math.max(0, nargs-1));\n\t\tif (nargs > 0) {\n\t\t\tthisarg = tojs(L, 2);\n\t\t\tif (nargs-- > 0) {\n\t\t\t\tfor (let i = 0; i < nargs; i++) {\n\t\t\t\t\targs[i] = tojs(L, i+3);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tpush(L, apply(u, thisarg, args));\n\t\treturn 1;\n\t},\n\t\"__pairs\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet f;\n\t\tlet iter, state, first;\n\t\tif (typeof Symbol !== \"function\" || (f = u[Symbol.for(\"__pairs\")]) === void 0) {\n\t\t\t/* By default, iterate over Object.keys */\n\t\t\titer = function(last) {\n\t\t\t\tif (this.index >= this.keys.length)\n\t\t\t\t\treturn;\n\t\t\t\tlet key = this.keys[this.index++];\n\t\t\t\treturn [key, this.object[key]];\n\t\t\t};\n\t\t\tstate = {\n\t\t\t\tobject: u,\n\t\t\t\tkeys: Object.keys(u),\n\t\t\t\tindex: 0,\n\t\t\t};\n\t\t} else {\n\t\t\tlet r = apply(f, u, []);\n\t\t\tif (r === void 0)\n\t\t\t\tluaL_error(L, to_luastring(\"bad '__pairs' result (object with keys 'iter', 'state', 'first' expected)\"));\n\t\t\titer = r.iter;\n\t\t\tif (iter === void 0)\n\t\t\t\tluaL_error(L, to_luastring(\"bad '__pairs' result (object.iter is missing)\"));\n\t\t\tstate = r.state;\n\t\t\tfirst = r.first;\n\t\t}\n\t\tlua_pushcfunction(L, function() {\n\t\t\tlet state = tojs(L, 1);\n\t\t\tlet last = tojs(L, 2);\n\t\t\tlet r = apply(iter, state, [last]);\n\t\t\t/* returning undefined indicates end of iteration */\n\t\t\tif (r === void 0)\n\t\t\t\treturn 0;\n\t\t\t/* otherwise it should return an array of results */\n\t\t\tif (!Array.isArray(r))\n\t\t\t\tluaL_error(L, to_luastring(\"bad iterator result (Array or undefined expected)\"));\n\t\t\tluaL_checkstack(L, r.length, null);\n\t\t\tfor (let i=0; i<r.length; i++) {\n\t\t\t\tpush(L, r[i]);\n\t\t\t}\n\t\t\treturn r.length;\n\t\t});\n\t\tpush(L, state);\n\t\tpush(L, first);\n\t\treturn 3;\n\t},\n\t\"__len\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet f;\n\t\tlet r;\n\t\tif (typeof Symbol !== \"function\" || (f = u[Symbol.for(\"__len\")]) === void 0) {\n\t\t\t/* by default use .length field */\n\t\t\tr = u.length;\n\t\t} else {\n\t\t\tr = apply(f, u, []);\n\t\t}\n\t\tpush(L, r);\n\t\treturn 1;\n\t}\n};\n\nconst luaopen_js = function(L) {\n\t/* Add weak map to track objects seen */\n\tstates.set(getmainthread(L), new WeakMap());\n\n\tlua_atnativeerror(L, atnativeerror);\n\n\tluaL_newlib(L, jslib);\n\tlua_pushliteral(L, FENGARI_INTEROP_VERSION);\n\tlua_setfield(L, -2, to_luastring(\"_VERSION\"));\n\tlua_pushinteger(L, FENGARI_INTEROP_VERSION_NUM);\n\tlua_setfield(L, -2, to_luastring(\"_VERSION_NUM\"));\n\tlua_pushliteral(L, FENGARI_INTEROP_RELEASE);\n\tlua_setfield(L, -2, to_luastring(\"_RELEASE\"));\n\n\tluaL_newmetatable(L, js_tname);\n\tluaL_setfuncs(L, jsmt, 0);\n\tlua_pop(L, 1);\n\n\tpushjs(L, null);\n\t/* Store null object in registry under lightuserdata null */\n\tlua_pushvalue(L, -1);\n\tlua_rawsetp(L, LUA_REGISTRYINDEX, null);\n\tlua_setfield(L, -2, to_luastring(\"null\"));\n\n\tpush(L, global_env);\n\tlua_setfield(L, -2, to_luastring(\"global\"));\n\n\treturn 1;\n};\n\nmodule.exports.FENGARI_INTEROP_VERSION = FENGARI_INTEROP_VERSION;\nmodule.exports.FENGARI_INTEROP_VERSION_NUM = FENGARI_INTEROP_VERSION_NUM;\nmodule.exports.FENGARI_INTEROP_RELEASE = FENGARI_INTEROP_RELEASE;\nmodule.exports.checkjs = checkjs;\nmodule.exports.testjs = testjs;\nmodule.exports.pushjs = pushjs;\nmodule.exports.push = push;\nmodule.exports.tojs = tojs;\nmodule.exports.luaopen_js = luaopen_js;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    LUA_OPBNOT,\n    LUA_OPEQ,\n    LUA_OPLE,\n    LUA_OPLT,\n    LUA_OPUNM,\n    LUA_REGISTRYINDEX,\n    LUA_RIDX_GLOBALS,\n    LUA_VERSION_NUM,\n    constant_types: {\n        LUA_NUMTAGS,\n        LUA_TBOOLEAN,\n        LUA_TCCL,\n        LUA_TFUNCTION,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNONE,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TTABLE,\n        LUA_TTHREAD,\n        LUA_TUSERDATA\n    },\n    thread_status: { LUA_OK },\n    from_userstring,\n    to_luastring,\n} = require('./defs.js');\nconst { api_check } = require('./llimits.js');\nconst ldebug    = require('./ldebug.js');\nconst ldo       = require('./ldo.js');\nconst { luaU_dump } = require('./ldump.js');\nconst lfunc     = require('./lfunc.js');\nconst lobject   = require('./lobject.js');\nconst lstate    = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_new,\n    luaS_newliteral\n} = require('./lstring.js');\nconst ltm       = require('./ltm.js');\nconst { LUAI_MAXSTACK } = require('./luaconf.js');\nconst lvm       = require('./lvm.js');\nconst ltable    = require('./ltable.js');\nconst { ZIO } = require('./lzio.js');\nconst TValue    = lobject.TValue;\nconst CClosure  = lobject.CClosure;\n\nconst api_incr_top = function(L) {\n    L.top++;\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n};\n\nconst api_checknelems = function(L, n) {\n    api_check(L, n < (L.top - L.ci.funcOff), \"not enough elements in the stack\");\n};\n\nconst fengari_argcheck = function(c) {\n    if (!c) throw TypeError(\"invalid argument\");\n};\n\nconst fengari_argcheckinteger = function(n) {\n    fengari_argcheck(typeof n === \"number\" && (n|0) === n);\n};\n\nconst isvalid = function(o) {\n    return o !== lobject.luaO_nilobject;\n};\n\nconst lua_version = function(L) {\n    if (L === null) return LUA_VERSION_NUM;\n    else return L.l_G.version;\n};\n\nconst lua_atpanic = function(L, panicf) {\n    let old = L.l_G.panic;\n    L.l_G.panic = panicf;\n    return old;\n};\n\nconst lua_atnativeerror = function(L, errorf) {\n    let old = L.l_G.atnativeerror;\n    L.l_G.atnativeerror = errorf;\n    return old;\n};\n\n// Return value for idx on stack\nconst index2addr = function(L, idx) {\n    let ci = L.ci;\n    if (idx > 0) {\n        let o = ci.funcOff + idx;\n        api_check(L, idx <= ci.top - (ci.funcOff + 1), \"unacceptable index\");\n        if (o >= L.top) return lobject.luaO_nilobject;\n        else return L.stack[o];\n    } else if (idx > LUA_REGISTRYINDEX) {\n        api_check(L, idx !== 0 && -idx <= L.top, \"invalid index\");\n        return L.stack[L.top + idx];\n    } else if (idx === LUA_REGISTRYINDEX) {\n        return L.l_G.l_registry;\n    } else { /* upvalues */\n        idx = LUA_REGISTRYINDEX - idx;\n        api_check(L, idx <= lfunc.MAXUPVAL + 1, \"upvalue index too large\");\n        if (ci.func.ttislcf()) /* light C function? */\n            return lobject.luaO_nilobject; /* it has no upvalues */\n        else {\n            return idx <= ci.func.value.nupvalues ? ci.func.value.upvalue[idx - 1] : lobject.luaO_nilobject;\n        }\n    }\n};\n\n// Like index2addr but returns the index on stack; doesn't allow pseudo indices\nconst index2addr_ = function(L, idx) {\n    let ci = L.ci;\n    if (idx > 0) {\n        let o = ci.funcOff + idx;\n        api_check(L, idx <= ci.top - (ci.funcOff + 1), \"unacceptable index\");\n        if (o >= L.top) return null;\n        else return o;\n    } else if (idx > LUA_REGISTRYINDEX) {\n        api_check(L, idx !== 0 && -idx <= L.top, \"invalid index\");\n        return L.top + idx;\n    } else { /* registry or upvalue */\n        throw Error(\"attempt to use pseudo-index\");\n    }\n};\n\nconst lua_checkstack = function(L, n) {\n    let res;\n    let ci = L.ci;\n    api_check(L, n >= 0, \"negative 'n'\");\n    if (L.stack_last - L.top > n) /* stack large enough? */\n        res = true;\n    else { /* no; need to grow stack */\n        let inuse = L.top + lstate.EXTRA_STACK;\n        if (inuse > LUAI_MAXSTACK - n)  /* can grow without overflow? */\n            res = false;  /* no */\n        else { /* try to grow stack */\n            ldo.luaD_growstack(L, n);\n            res = true;\n        }\n    }\n\n    if (res && ci.top < L.top + n)\n        ci.top = L.top + n;  /* adjust frame top */\n\n    return res;\n};\n\nconst lua_xmove = function(from, to, n) {\n    if (from === to) return;\n    api_checknelems(from, n);\n    api_check(from, from.l_G === to.l_G, \"moving among independent states\");\n    api_check(from, to.ci.top - to.top >= n, \"stack overflow\");\n    from.top -= n;\n    for (let i = 0; i < n; i++) {\n        to.stack[to.top] = new lobject.TValue();\n        lobject.setobj2s(to, to.top, from.stack[from.top + i]);\n        delete from.stack[from.top + i];\n        to.top++;\n    }\n};\n\n/*\n** basic stack manipulation\n*/\n\n/*\n** convert an acceptable stack index into an absolute index\n*/\nconst lua_absindex = function(L, idx) {\n    return (idx > 0 || idx <= LUA_REGISTRYINDEX)\n        ? idx\n        : (L.top - L.ci.funcOff) + idx;\n};\n\nconst lua_gettop = function(L) {\n    return L.top - (L.ci.funcOff + 1);\n};\n\nconst lua_pushvalue = function(L, idx) {\n    lobject.pushobj2s(L, index2addr(L, idx));\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n};\n\nconst lua_settop = function(L, idx) {\n    let func = L.ci.funcOff;\n    let newtop;\n    if (idx >= 0) {\n        api_check(L, idx <= L.stack_last - (func + 1), \"new top too large\");\n        newtop = func + 1 + idx;\n    } else {\n        api_check(L, -(idx + 1) <= L.top - (func + 1), \"invalid new top\");\n        newtop = L.top + idx + 1; /* 'subtract' index (index is negative) */\n    }\n    ldo.adjust_top(L, newtop);\n};\n\nconst lua_pop = function(L, n) {\n    lua_settop(L, -n - 1);\n};\n\nconst reverse = function(L, from, to) {\n    for (; from < to; from++, to--) {\n        let fromtv = L.stack[from];\n        let temp = new TValue(fromtv.type, fromtv.value);\n        lobject.setobjs2s(L, from, to);\n        lobject.setobj2s(L, to, temp);\n    }\n};\n\n/*\n** Let x = AB, where A is a prefix of length 'n'. Then,\n** rotate x n === BA. But BA === (A^r . B^r)^r.\n*/\nconst lua_rotate = function(L, idx, n) {\n    let t = L.top - 1;\n    let pIdx = index2addr_(L, idx);\n    let p = L.stack[pIdx];\n    api_check(L, isvalid(p) && idx > LUA_REGISTRYINDEX, \"index not in the stack\");\n    api_check(L, (n >= 0 ? n : -n) <= (t - pIdx + 1), \"invalid 'n'\");\n    let m = n >= 0 ? t - n : pIdx - n - 1;  /* end of prefix */\n    reverse(L, pIdx, m);\n    reverse(L, m + 1, L.top - 1);\n    reverse(L, pIdx, L.top - 1);\n};\n\nconst lua_copy = function(L, fromidx, toidx) {\n    let from = index2addr(L, fromidx);\n    index2addr(L, toidx).setfrom(from);\n};\n\nconst lua_remove = function(L, idx) {\n    lua_rotate(L, idx, -1);\n    lua_pop(L, 1);\n};\n\nconst lua_insert = function(L, idx) {\n    lua_rotate(L, idx, 1);\n};\n\nconst lua_replace = function(L, idx) {\n    lua_copy(L, -1, idx);\n    lua_pop(L, 1);\n};\n\n/*\n** push functions (JS -> stack)\n*/\n\nconst lua_pushnil = function(L) {\n    L.stack[L.top] = new TValue(LUA_TNIL, null);\n    api_incr_top(L);\n};\n\nconst lua_pushnumber = function(L, n) {\n    fengari_argcheck(typeof n === \"number\");\n    L.stack[L.top] = new TValue(LUA_TNUMFLT, n);\n    api_incr_top(L);\n};\n\nconst lua_pushinteger = function(L, n) {\n    fengari_argcheckinteger(n);\n    L.stack[L.top] = new TValue(LUA_TNUMINT, n);\n    api_incr_top(L);\n};\n\nconst lua_pushlstring = function(L, s, len) {\n    fengari_argcheckinteger(len);\n    let ts;\n    if (len === 0) {\n        s = to_luastring(\"\", true);\n        ts = luaS_bless(L, s);\n    } else {\n        s = from_userstring(s);\n        api_check(L, s.length >= len, \"invalid length to lua_pushlstring\");\n        ts = luaS_new(L, s.subarray(0, len));\n    }\n    lobject.pushsvalue2s(L, ts);\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return ts.value;\n};\n\nconst lua_pushstring = function (L, s) {\n    if (s === undefined || s === null) {\n        L.stack[L.top] = new TValue(LUA_TNIL, null);\n        L.top++;\n    } else {\n        let ts = luaS_new(L, from_userstring(s));\n        lobject.pushsvalue2s(L, ts);\n        s = ts.getstr(); /* internal copy */\n    }\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return s;\n};\n\nconst lua_pushvfstring = function (L, fmt, argp) {\n    fmt = from_userstring(fmt);\n    return lobject.luaO_pushvfstring(L, fmt, argp);\n};\n\nconst lua_pushfstring = function (L, fmt, ...argp) {\n    fmt = from_userstring(fmt);\n    return lobject.luaO_pushvfstring(L, fmt, argp);\n};\n\n/* Similar to lua_pushstring, but takes a JS string */\nconst lua_pushliteral = function (L, s) {\n    if (s === undefined || s === null) {\n        L.stack[L.top] = new TValue(LUA_TNIL, null);\n        L.top++;\n    } else {\n        fengari_argcheck(typeof s === \"string\");\n        let ts = luaS_newliteral(L, s);\n        lobject.pushsvalue2s(L, ts);\n        s = ts.getstr(); /* internal copy */\n    }\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n\n    return s;\n};\n\nconst lua_pushcclosure = function(L, fn, n) {\n    fengari_argcheck(typeof fn === \"function\");\n    fengari_argcheckinteger(n);\n    if (n === 0)\n        L.stack[L.top] = new TValue(LUA_TLCF, fn);\n    else {\n        api_checknelems(L, n);\n        api_check(L, n <= lfunc.MAXUPVAL, \"upvalue index too large\");\n        let cl = new CClosure(L, fn, n);\n        for (let i=0; i<n; i++)\n            cl.upvalue[i].setfrom(L.stack[L.top - n + i]);\n        for (let i=1; i<n; i++)\n            delete L.stack[--L.top];\n        if (n>0)\n            --L.top;\n        L.stack[L.top].setclCvalue(cl);\n    }\n    api_incr_top(L);\n};\n\nconst lua_pushjsclosure = lua_pushcclosure;\n\nconst lua_pushcfunction = function(L, fn) {\n    lua_pushcclosure(L, fn, 0);\n};\n\nconst lua_pushjsfunction = lua_pushcfunction;\n\nconst lua_pushboolean = function(L, b) {\n    L.stack[L.top] = new TValue(LUA_TBOOLEAN, !!b);\n    api_incr_top(L);\n};\n\nconst lua_pushlightuserdata = function(L, p) {\n    L.stack[L.top] = new TValue(LUA_TLIGHTUSERDATA, p);\n    api_incr_top(L);\n};\n\nconst lua_pushthread = function(L) {\n    L.stack[L.top] = new TValue(LUA_TTHREAD, L);\n    api_incr_top(L);\n    return L.l_G.mainthread === L;\n};\n\nconst lua_pushglobaltable = function(L) {\n    lua_rawgeti(L, LUA_REGISTRYINDEX, LUA_RIDX_GLOBALS);\n};\n\n/*\n** set functions (stack -> Lua)\n*/\n\n/*\n** t[k] = value at the top of the stack (where 'k' is a string)\n*/\nconst auxsetstr = function(L, t, k) {\n    let str = luaS_new(L, from_userstring(k));\n    api_checknelems(L, 1);\n    lobject.pushsvalue2s(L, str); /* push 'str' (to make it a TValue) */\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    lvm.settable(L, t, L.stack[L.top - 1], L.stack[L.top - 2]);\n    /* pop value and key */\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_setglobal = function(L, name) {\n    auxsetstr(L, ltable.luaH_getint(L.l_G.l_registry.value, LUA_RIDX_GLOBALS), name);\n};\n\nconst lua_setmetatable = function(L, objindex) {\n    api_checknelems(L, 1);\n    let mt;\n    let obj = index2addr(L, objindex);\n    if (L.stack[L.top - 1].ttisnil())\n        mt = null;\n    else {\n        api_check(L, L.stack[L.top - 1].ttistable(), \"table expected\");\n        mt = L.stack[L.top - 1].value;\n    }\n\n    switch (obj.ttnov()) {\n        case LUA_TUSERDATA:\n        case LUA_TTABLE: {\n            obj.value.metatable = mt;\n            break;\n        }\n        default: {\n            L.l_G.mt[obj.ttnov()] = mt;\n            break;\n        }\n    }\n\n    delete L.stack[--L.top];\n    return true;\n};\n\nconst lua_settable = function(L, idx) {\n    api_checknelems(L, 2);\n    let t = index2addr(L, idx);\n    lvm.settable(L, t, L.stack[L.top - 2], L.stack[L.top - 1]);\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_setfield = function(L, idx, k) {\n    auxsetstr(L, index2addr(L, idx), k);\n};\n\nconst lua_seti = function(L, idx, n) {\n    fengari_argcheckinteger(n);\n    api_checknelems(L, 1);\n    let t = index2addr(L, idx);\n    L.stack[L.top] = new TValue(LUA_TNUMINT, n);\n    api_incr_top(L);\n    lvm.settable(L, t, L.stack[L.top - 1], L.stack[L.top - 2]);\n    /* pop value and key */\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_rawset = function(L, idx) {\n    api_checknelems(L, 2);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttistable(), \"table expected\");\n    let k = L.stack[L.top - 2];\n    let v = L.stack[L.top - 1];\n    ltable.luaH_setfrom(L, o.value, k, v);\n    ltable.invalidateTMcache(o.value);\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_rawseti = function(L, idx, n) {\n    fengari_argcheckinteger(n);\n    api_checknelems(L, 1);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttistable(), \"table expected\");\n    ltable.luaH_setint(o.value, n, L.stack[L.top - 1]);\n    delete L.stack[--L.top];\n};\n\nconst lua_rawsetp = function(L, idx, p) {\n    api_checknelems(L, 1);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttistable(), \"table expected\");\n    let k = new TValue(LUA_TLIGHTUSERDATA, p);\n    let v = L.stack[L.top - 1];\n    ltable.luaH_setfrom(L, o.value, k, v);\n    delete L.stack[--L.top];\n};\n\n/*\n** get functions (Lua -> stack)\n*/\n\nconst auxgetstr = function(L, t, k) {\n    let str = luaS_new(L, from_userstring(k));\n    lobject.pushsvalue2s(L, str);\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    lvm.luaV_gettable(L, t, L.stack[L.top - 1], L.top - 1);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_rawgeti = function(L, idx, n) {\n    let t = index2addr(L, idx);\n    fengari_argcheckinteger(n);\n    api_check(L, t.ttistable(), \"table expected\");\n    lobject.pushobj2s(L, ltable.luaH_getint(t.value, n));\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_rawgetp = function(L, idx, p) {\n    let t = index2addr(L, idx);\n    api_check(L, t.ttistable(), \"table expected\");\n    let k = new TValue(LUA_TLIGHTUSERDATA, p);\n    lobject.pushobj2s(L, ltable.luaH_get(L, t.value, k));\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_rawget = function(L, idx) {\n    let t = index2addr(L, idx);\n    api_check(L, t.ttistable(t), \"table expected\");\n    lobject.setobj2s(L, L.top - 1, ltable.luaH_get(L, t.value, L.stack[L.top - 1]));\n    return L.stack[L.top - 1].ttnov();\n};\n\n// narray and nrec are mostly useless for this implementation\nconst lua_createtable = function(L, narray, nrec) {\n    let t = new lobject.TValue(LUA_TTABLE, ltable.luaH_new(L));\n    L.stack[L.top] = t;\n    api_incr_top(L);\n};\n\nconst luaS_newudata = function(L, size) {\n    return new lobject.Udata(L, size);\n};\n\nconst lua_newuserdata = function(L, size) {\n    let u = luaS_newudata(L, size);\n    L.stack[L.top] = new lobject.TValue(LUA_TUSERDATA, u);\n    api_incr_top(L);\n    return u.data;\n};\n\nconst aux_upvalue = function(L, fi, n) {\n    fengari_argcheckinteger(n);\n    switch(fi.ttype()) {\n        case LUA_TCCL: {  /* C closure */\n            let f = fi.value;\n            if (!(1 <= n && n <= f.nupvalues)) return null;\n            return {\n                name: to_luastring(\"\", true),\n                val: f.upvalue[n-1]\n            };\n        }\n        case LUA_TLCL: {  /* Lua closure */\n            let f = fi.value;\n            let p = f.p;\n            if (!(1 <= n && n <= p.upvalues.length)) return null;\n            let name = p.upvalues[n-1].name;\n            return {\n                name: name ? name.getstr() : to_luastring(\"(*no name)\", true),\n                val: f.upvals[n-1]\n            };\n        }\n        default: return null;  /* not a closure */\n    }\n};\n\nconst lua_getupvalue = function(L, funcindex, n) {\n    let up = aux_upvalue(L, index2addr(L, funcindex), n);\n    if (up) {\n        let name = up.name;\n        let val = up.val;\n        lobject.pushobj2s(L, val);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n        return name;\n    }\n    return null;\n};\n\nconst lua_setupvalue = function(L, funcindex, n) {\n    let fi = index2addr(L, funcindex);\n    api_checknelems(L, 1);\n    let aux = aux_upvalue(L, fi, n);\n    if (aux) {\n        let name = aux.name;\n        let val = aux.val;\n        val.setfrom(L.stack[L.top-1]);\n        delete L.stack[--L.top];\n        return name;\n    }\n    return null;\n};\n\nconst lua_newtable = function(L) {\n    lua_createtable(L, 0, 0);\n};\n\nconst lua_register = function(L, n, f) {\n    lua_pushcfunction(L, f);\n    lua_setglobal(L, n);\n};\n\nconst lua_getmetatable = function(L, objindex) {\n    let obj = index2addr(L, objindex);\n    let mt;\n    let res = false;\n    switch (obj.ttnov()) {\n        case LUA_TTABLE:\n        case LUA_TUSERDATA:\n            mt = obj.value.metatable;\n            break;\n        default:\n            mt = L.l_G.mt[obj.ttnov()];\n            break;\n    }\n\n    if (mt !== null && mt !== undefined) {\n        L.stack[L.top] = new TValue(LUA_TTABLE, mt);\n        api_incr_top(L);\n        res = true;\n    }\n\n    return res;\n};\n\nconst lua_getuservalue = function(L, idx) {\n    let o = index2addr(L, idx);\n    api_check(L, o.ttisfulluserdata(), \"full userdata expected\");\n    let uv = o.value.uservalue;\n    L.stack[L.top] = new TValue(uv.type, uv.value);\n    api_incr_top(L);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_gettable = function(L, idx) {\n    let t = index2addr(L, idx);\n    lvm.luaV_gettable(L, t, L.stack[L.top - 1], L.top - 1);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_getfield = function(L, idx, k) {\n    return auxgetstr(L, index2addr(L, idx), k);\n};\n\nconst lua_geti = function(L, idx, n) {\n    let t = index2addr(L, idx);\n    fengari_argcheckinteger(n);\n    L.stack[L.top] = new TValue(LUA_TNUMINT, n);\n    api_incr_top(L);\n    lvm.luaV_gettable(L, t, L.stack[L.top - 1], L.top - 1);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_getglobal = function(L, name) {\n    return auxgetstr(L, ltable.luaH_getint(L.l_G.l_registry.value, LUA_RIDX_GLOBALS), name);\n};\n\n/*\n** access functions (stack -> JS)\n*/\n\nconst lua_toboolean = function(L, idx) {\n    let o = index2addr(L, idx);\n    return !o.l_isfalse();\n};\n\nconst lua_tolstring = function(L, idx) {\n    let o = index2addr(L, idx);\n\n    if (!o.ttisstring()) {\n        if (!lvm.cvt2str(o)) {  /* not convertible? */\n            return null;\n        }\n        lobject.luaO_tostring(L, o);\n    }\n    return o.svalue();\n};\n\nconst lua_tostring =  lua_tolstring;\n\nconst lua_tojsstring = function(L, idx) {\n    let o = index2addr(L, idx);\n\n    if (!o.ttisstring()) {\n        if (!lvm.cvt2str(o)) {  /* not convertible? */\n            return null;\n        }\n        lobject.luaO_tostring(L, o);\n    }\n    return o.jsstring();\n};\n\nconst lua_todataview = function(L, idx) {\n    let u8 = lua_tolstring(L, idx);\n    return new DataView(u8.buffer, u8.byteOffset, u8.byteLength);\n};\n\nconst lua_rawlen = function(L, idx) {\n    let o = index2addr(L, idx);\n    switch (o.ttype()) {\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR:\n            return o.vslen();\n        case LUA_TUSERDATA:\n            return o.value.len;\n        case LUA_TTABLE:\n            return ltable.luaH_getn(o.value);\n        default:\n            return 0;\n    }\n};\n\nconst lua_tocfunction = function(L, idx) {\n    let o = index2addr(L, idx);\n    if (o.ttislcf() || o.ttisCclosure()) return o.value;\n    else return null;  /* not a C function */\n};\n\nconst lua_tointeger = function(L, idx) {\n    let n = lua_tointegerx(L, idx);\n    return n === false ? 0 : n;\n};\n\nconst lua_tointegerx = function(L, idx) {\n    return lvm.tointeger(index2addr(L, idx));\n};\n\nconst lua_tonumber = function(L, idx) {\n    let n = lua_tonumberx(L, idx);\n    return n === false ? 0 : n;\n};\n\nconst lua_tonumberx = function(L, idx) {\n    return lvm.tonumber(index2addr(L, idx));\n};\n\nconst lua_touserdata = function(L, idx) {\n    let o = index2addr(L, idx);\n    switch (o.ttnov()) {\n        case LUA_TUSERDATA:\n            return o.value.data;\n        case LUA_TLIGHTUSERDATA:\n            return o.value;\n        default: return null;\n    }\n};\n\nconst lua_tothread = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttisthread() ? o.value : null;\n};\n\nconst lua_topointer = function(L, idx) {\n    let o = index2addr(L, idx);\n    switch (o.ttype()) {\n        case LUA_TTABLE:\n        case LUA_TLCL:\n        case LUA_TCCL:\n        case LUA_TLCF:\n        case LUA_TTHREAD:\n        case LUA_TUSERDATA: /* note: this differs in behaviour to reference lua implementation */\n        case LUA_TLIGHTUSERDATA:\n            return o.value;\n        default:\n            return null;\n    }\n};\n\n\n/* A proxy is a function that the same lua value to the given lua state. */\n\n/* Having a weakmap of created proxies was only way I could think of to provide an 'isproxy' function */\nconst seen = new WeakMap();\n\n/* is the passed object a proxy? is it from the given state? (if passed) */\nconst lua_isproxy = function(p, L) {\n    let G = seen.get(p);\n    if (!G)\n        return false;\n    return (L === null) || (L.l_G === G);\n};\n\n/* Use 'create_proxy' helper function so that 'L' is not in scope */\nconst create_proxy = function(G, type, value) {\n    let proxy = function(L) {\n        api_check(L, L instanceof lstate.lua_State && G === L.l_G, \"must be from same global state\");\n        L.stack[L.top] = new TValue(type, value);\n        api_incr_top(L);\n    };\n    seen.set(proxy, G);\n    return proxy;\n};\n\nconst lua_toproxy = function(L, idx) {\n    let tv = index2addr(L, idx);\n    /* pass broken down tv incase it is an upvalue index */\n    return create_proxy(L.l_G, tv.type, tv.value);\n};\n\n\nconst lua_compare = function(L, index1, index2, op) {\n    let o1 = index2addr(L, index1);\n    let o2 = index2addr(L, index2);\n\n    let i = 0;\n\n    if (isvalid(o1) && isvalid(o2)) {\n        switch (op) {\n            case LUA_OPEQ: i = lvm.luaV_equalobj(L, o1, o2); break;\n            case LUA_OPLT: i = lvm.luaV_lessthan(L, o1, o2); break;\n            case LUA_OPLE: i = lvm.luaV_lessequal(L, o1, o2); break;\n            default: api_check(L, false, \"invalid option\");\n        }\n    }\n\n    return i;\n};\n\nconst lua_stringtonumber = function(L, s) {\n    let tv = new TValue();\n    let sz = lobject.luaO_str2num(s, tv);\n    if (sz !== 0) {\n        L.stack[L.top] = tv;\n        api_incr_top(L);\n    }\n    return sz;\n};\n\nconst f_call = function(L, ud) {\n    ldo.luaD_callnoyield(L, ud.funcOff, ud.nresults);\n};\n\nconst lua_type = function(L, idx) {\n    let o = index2addr(L, idx);\n    return isvalid(o) ?  o.ttnov() : LUA_TNONE;\n};\n\nconst lua_typename = function(L, t) {\n    api_check(L, LUA_TNONE <= t && t < LUA_NUMTAGS, \"invalid tag\");\n    return ltm.ttypename(t);\n};\n\nconst lua_iscfunction = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttislcf(o) || o.ttisCclosure();\n};\n\nconst lua_isnil = function(L, n) {\n    return lua_type(L, n) === LUA_TNIL;\n};\n\nconst lua_isboolean = function(L, n) {\n    return lua_type(L, n) === LUA_TBOOLEAN;\n};\n\nconst lua_isnone = function(L, n) {\n    return lua_type(L, n) === LUA_TNONE;\n};\n\nconst lua_isnoneornil = function(L, n) {\n    return lua_type(L, n) <= 0;\n};\n\nconst lua_istable = function(L, idx) {\n    return index2addr(L, idx).ttistable();\n};\n\nconst lua_isinteger = function(L, idx) {\n    return index2addr(L, idx).ttisinteger();\n};\n\nconst lua_isnumber = function(L, idx) {\n    return lvm.tonumber(index2addr(L, idx)) !== false;\n};\n\nconst lua_isstring = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttisstring() || lvm.cvt2str(o);\n};\n\nconst lua_isuserdata = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttisfulluserdata(o) || o.ttislightuserdata();\n};\n\nconst lua_isthread = function(L, idx) {\n    return lua_type(L, idx) === LUA_TTHREAD;\n};\n\nconst lua_isfunction = function(L, idx) {\n    return lua_type(L, idx) === LUA_TFUNCTION;\n};\n\nconst lua_islightuserdata = function(L, idx) {\n    return lua_type(L, idx) === LUA_TLIGHTUSERDATA;\n};\n\nconst lua_rawequal = function(L, index1, index2) {\n    let o1 = index2addr(L, index1);\n    let o2 = index2addr(L, index2);\n    return isvalid(o1) && isvalid(o2) ? lvm.luaV_equalobj(null, o1, o2) : 0;\n};\n\nconst lua_arith = function(L, op) {\n    if (op !== LUA_OPUNM && op !== LUA_OPBNOT)\n        api_checknelems(L, 2);  /* all other operations expect two operands */\n    else {  /* for unary operations, add fake 2nd operand */\n        api_checknelems(L, 1);\n        lobject.pushobj2s(L, L.stack[L.top-1]);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    }\n    /* first operand at top - 2, second at top - 1; result go to top - 2 */\n    lobject.luaO_arith(L, op, L.stack[L.top - 2], L.stack[L.top - 1], L.stack[L.top - 2]);\n    delete L.stack[--L.top];  /* remove second operand */\n};\n\n/*\n** 'load' and 'call' functions (run Lua code)\n*/\n\nconst default_chunkname = to_luastring(\"?\");\nconst lua_load = function(L, reader, data, chunkname, mode) {\n    if (!chunkname) chunkname = default_chunkname;\n    else chunkname = from_userstring(chunkname);\n    if (mode !== null) mode = from_userstring(mode);\n    let z = new ZIO(L, reader, data);\n    let status = ldo.luaD_protectedparser(L, z, chunkname, mode);\n    if (status === LUA_OK) {  /* no errors? */\n        let f = L.stack[L.top - 1].value; /* get newly created function */\n        if (f.nupvalues >= 1) {  /* does it have an upvalue? */\n            /* get global table from registry */\n            let gt = ltable.luaH_getint(L.l_G.l_registry.value, LUA_RIDX_GLOBALS);\n            /* set global table as 1st upvalue of 'f' (may be LUA_ENV) */\n            f.upvals[0].setfrom(gt);\n        }\n    }\n    return status;\n};\n\nconst lua_dump = function(L, writer, data, strip) {\n    api_checknelems(L, 1);\n    let o = L.stack[L.top -1];\n    if (o.ttisLclosure())\n        return luaU_dump(L, o.value.p, writer, data, strip);\n    return 1;\n};\n\nconst lua_status = function(L) {\n    return L.status;\n};\n\nconst lua_setuservalue = function(L, idx) {\n    api_checknelems(L, 1);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttisfulluserdata(), \"full userdata expected\");\n    o.value.uservalue.setfrom(L.stack[L.top - 1]);\n    delete L.stack[--L.top];\n};\n\nconst checkresults = function(L,na,nr) {\n    api_check(L, nr === LUA_MULTRET || (L.ci.top - L.top >= (nr) - (na)),\n        \"results from function overflow current stack size\");\n};\n\nconst lua_callk = function(L, nargs, nresults, ctx, k) {\n    api_check(L, k === null || !(L.ci.callstatus & lstate.CIST_LUA), \"cannot use continuations inside hooks\");\n    api_checknelems(L, nargs + 1);\n    api_check(L, L.status === LUA_OK, \"cannot do calls on non-normal thread\");\n    checkresults(L, nargs, nresults);\n    let func = L.top - (nargs + 1);\n    if (k !== null && L.nny === 0) { /* need to prepare continuation? */\n        L.ci.c_k = k;\n        L.ci.c_ctx = ctx;\n        ldo.luaD_call(L, func, nresults);\n    } else { /* no continuation or no yieldable */\n        ldo.luaD_callnoyield(L, func, nresults);\n    }\n\n    if (nresults === LUA_MULTRET && L.ci.top < L.top)\n        L.ci.top = L.top;\n};\n\nconst lua_call = function(L, n, r) {\n    lua_callk(L, n, r, 0, null);\n};\n\nconst lua_pcallk = function(L, nargs, nresults, errfunc, ctx, k) {\n    api_check(L, k === null || !(L.ci.callstatus & lstate.CIST_LUA), \"cannot use continuations inside hooks\");\n    api_checknelems(L, nargs + 1);\n    api_check(L, L.status === LUA_OK, \"cannot do calls on non-normal thread\");\n    checkresults(L, nargs, nresults);\n    let status;\n    let func;\n    if (errfunc === 0)\n        func = 0;\n    else {\n        func = index2addr_(L, errfunc);\n    }\n    let funcOff = L.top - (nargs + 1); /* function to be called */\n    if (k === null || L.nny > 0) { /* no continuation or no yieldable? */\n        let c = {\n            funcOff: funcOff,\n            nresults: nresults /* do a 'conventional' protected call */\n        };\n        status = ldo.luaD_pcall(L, f_call, c, funcOff, func);\n    } else { /* prepare continuation (call is already protected by 'resume') */\n        let ci = L.ci;\n        ci.c_k = k;  /* prepare continuation (call is already protected by 'resume') */\n        ci.c_ctx = ctx;  /* prepare continuation (call is already protected by 'resume') */\n        /* save information for error recovery */\n        ci.extra = funcOff;\n        ci.c_old_errfunc = L.errfunc;\n        L.errfunc = func;\n        ci.callstatus &= ~lstate.CIST_OAH | L.allowhook;\n        ci.callstatus |= lstate.CIST_YPCALL;  /* function can do error recovery */\n        ldo.luaD_call(L, funcOff, nresults);  /* do the call */\n        ci.callstatus &= ~lstate.CIST_YPCALL;\n        L.errfunc = ci.c_old_errfunc;\n        status = LUA_OK;\n    }\n\n    if (nresults === LUA_MULTRET && L.ci.top < L.top)\n        L.ci.top = L.top;\n\n    return status;\n};\n\nconst lua_pcall = function(L, n, r, f) {\n    return lua_pcallk(L, n, r, f, 0, null);\n};\n\n/*\n** miscellaneous functions\n*/\n\nconst lua_error = function(L) {\n    api_checknelems(L, 1);\n    ldebug.luaG_errormsg(L);\n};\n\nconst lua_next = function(L, idx) {\n    let t = index2addr(L, idx);\n    api_check(L, t.ttistable(), \"table expected\");\n    L.stack[L.top] = new TValue();\n    let more = ltable.luaH_next(L, t.value, L.top - 1);\n    if (more) {\n        api_incr_top(L);\n        return 1;\n    } else {\n        delete L.stack[L.top];\n        delete L.stack[--L.top];\n        return 0;\n    }\n};\n\nconst lua_concat = function(L, n) {\n    api_checknelems(L, n);\n    if (n >= 2)\n        lvm.luaV_concat(L, n);\n    else if (n === 0) {\n        lobject.pushsvalue2s(L, luaS_bless(L, to_luastring(\"\", true)));\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    }\n};\n\nconst lua_len = function(L, idx) {\n    let t = index2addr(L, idx);\n    let tv = new TValue();\n    lvm.luaV_objlen(L, tv, t);\n    L.stack[L.top] = tv;\n    api_incr_top(L);\n};\n\nconst getupvalref = function(L, fidx, n) {\n    let fi = index2addr(L, fidx);\n    api_check(L, fi.ttisLclosure(), \"Lua function expected\");\n    let f = fi.value;\n    fengari_argcheckinteger(n);\n    api_check(L, 1 <= n && n <= f.p.upvalues.length, \"invalid upvalue index\");\n    return {\n        f: f,\n        i: n - 1\n    };\n};\n\nconst lua_upvalueid = function(L, fidx, n) {\n    let fi = index2addr(L, fidx);\n    switch (fi.ttype()) {\n        case LUA_TLCL: {  /* lua closure */\n            let ref = getupvalref(L, fidx, n);\n            return ref.f.upvals[ref.i];\n        }\n        case LUA_TCCL: {  /* C closure */\n            let f = fi.value;\n            api_check(L, (n|0) === n && n > 0 && n <= f.nupvalues, \"invalid upvalue index\");\n            return f.upvalue[n - 1];\n        }\n        default: {\n            api_check(L, false, \"closure expected\");\n            return null;\n        }\n    }\n};\n\nconst lua_upvaluejoin = function(L, fidx1, n1, fidx2, n2) {\n    let ref1 = getupvalref(L, fidx1, n1);\n    let ref2 = getupvalref(L, fidx2, n2);\n    let up2 = ref2.f.upvals[ref2.i];\n    ref1.f.upvals[ref1.i] = up2;\n};\n\n// This functions are only there for compatibility purposes\nconst lua_gc = function () {};\n\nconst lua_getallocf = function () {\n    console.warn(\"lua_getallocf is not available\");\n    return 0;\n};\n\nconst lua_setallocf = function () {\n    console.warn(\"lua_setallocf is not available\");\n    return 0;\n};\n\nconst lua_getextraspace = function () {\n    console.warn(\"lua_getextraspace is not available\");\n    return 0;\n};\n\nmodule.exports.api_incr_top          = api_incr_top;\nmodule.exports.api_checknelems       = api_checknelems;\nmodule.exports.lua_absindex          = lua_absindex;\nmodule.exports.lua_arith             = lua_arith;\nmodule.exports.lua_atpanic           = lua_atpanic;\nmodule.exports.lua_atnativeerror     = lua_atnativeerror;\nmodule.exports.lua_call              = lua_call;\nmodule.exports.lua_callk             = lua_callk;\nmodule.exports.lua_checkstack        = lua_checkstack;\nmodule.exports.lua_compare           = lua_compare;\nmodule.exports.lua_concat            = lua_concat;\nmodule.exports.lua_copy              = lua_copy;\nmodule.exports.lua_createtable       = lua_createtable;\nmodule.exports.lua_dump              = lua_dump;\nmodule.exports.lua_error             = lua_error;\nmodule.exports.lua_gc                = lua_gc;\nmodule.exports.lua_getallocf         = lua_getallocf;\nmodule.exports.lua_getextraspace     = lua_getextraspace;\nmodule.exports.lua_getfield          = lua_getfield;\nmodule.exports.lua_getglobal         = lua_getglobal;\nmodule.exports.lua_geti              = lua_geti;\nmodule.exports.lua_getmetatable      = lua_getmetatable;\nmodule.exports.lua_gettable          = lua_gettable;\nmodule.exports.lua_gettop            = lua_gettop;\nmodule.exports.lua_getupvalue        = lua_getupvalue;\nmodule.exports.lua_getuservalue      = lua_getuservalue;\nmodule.exports.lua_insert            = lua_insert;\nmodule.exports.lua_isboolean         = lua_isboolean;\nmodule.exports.lua_iscfunction       = lua_iscfunction;\nmodule.exports.lua_isfunction        = lua_isfunction;\nmodule.exports.lua_isinteger         = lua_isinteger;\nmodule.exports.lua_islightuserdata   = lua_islightuserdata;\nmodule.exports.lua_isnil             = lua_isnil;\nmodule.exports.lua_isnone            = lua_isnone;\nmodule.exports.lua_isnoneornil       = lua_isnoneornil;\nmodule.exports.lua_isnumber          = lua_isnumber;\nmodule.exports.lua_isproxy           = lua_isproxy;\nmodule.exports.lua_isstring          = lua_isstring;\nmodule.exports.lua_istable           = lua_istable;\nmodule.exports.lua_isthread          = lua_isthread;\nmodule.exports.lua_isuserdata        = lua_isuserdata;\nmodule.exports.lua_len               = lua_len;\nmodule.exports.lua_load              = lua_load;\nmodule.exports.lua_newtable          = lua_newtable;\nmodule.exports.lua_newuserdata       = lua_newuserdata;\nmodule.exports.lua_next              = lua_next;\nmodule.exports.lua_pcall             = lua_pcall;\nmodule.exports.lua_pcallk            = lua_pcallk;\nmodule.exports.lua_pop               = lua_pop;\nmodule.exports.lua_pushboolean       = lua_pushboolean;\nmodule.exports.lua_pushcclosure      = lua_pushcclosure;\nmodule.exports.lua_pushcfunction     = lua_pushcfunction;\nmodule.exports.lua_pushfstring       = lua_pushfstring;\nmodule.exports.lua_pushglobaltable   = lua_pushglobaltable;\nmodule.exports.lua_pushinteger       = lua_pushinteger;\nmodule.exports.lua_pushjsclosure     = lua_pushjsclosure;\nmodule.exports.lua_pushjsfunction    = lua_pushjsfunction;\nmodule.exports.lua_pushlightuserdata = lua_pushlightuserdata;\nmodule.exports.lua_pushliteral       = lua_pushliteral;\nmodule.exports.lua_pushlstring       = lua_pushlstring;\nmodule.exports.lua_pushnil           = lua_pushnil;\nmodule.exports.lua_pushnumber        = lua_pushnumber;\nmodule.exports.lua_pushstring        = lua_pushstring;\nmodule.exports.lua_pushthread        = lua_pushthread;\nmodule.exports.lua_pushvalue         = lua_pushvalue;\nmodule.exports.lua_pushvfstring      = lua_pushvfstring;\nmodule.exports.lua_rawequal          = lua_rawequal;\nmodule.exports.lua_rawget            = lua_rawget;\nmodule.exports.lua_rawgeti           = lua_rawgeti;\nmodule.exports.lua_rawgetp           = lua_rawgetp;\nmodule.exports.lua_rawlen            = lua_rawlen;\nmodule.exports.lua_rawset            = lua_rawset;\nmodule.exports.lua_rawseti           = lua_rawseti;\nmodule.exports.lua_rawsetp           = lua_rawsetp;\nmodule.exports.lua_register          = lua_register;\nmodule.exports.lua_remove            = lua_remove;\nmodule.exports.lua_replace           = lua_replace;\nmodule.exports.lua_rotate            = lua_rotate;\nmodule.exports.lua_setallocf         = lua_setallocf;\nmodule.exports.lua_setfield          = lua_setfield;\nmodule.exports.lua_setglobal         = lua_setglobal;\nmodule.exports.lua_seti              = lua_seti;\nmodule.exports.lua_setmetatable      = lua_setmetatable;\nmodule.exports.lua_settable          = lua_settable;\nmodule.exports.lua_settop            = lua_settop;\nmodule.exports.lua_setupvalue        = lua_setupvalue;\nmodule.exports.lua_setuservalue      = lua_setuservalue;\nmodule.exports.lua_status            = lua_status;\nmodule.exports.lua_stringtonumber    = lua_stringtonumber;\nmodule.exports.lua_toboolean         = lua_toboolean;\nmodule.exports.lua_tocfunction       = lua_tocfunction;\nmodule.exports.lua_todataview        = lua_todataview;\nmodule.exports.lua_tointeger         = lua_tointeger;\nmodule.exports.lua_tointegerx        = lua_tointegerx;\nmodule.exports.lua_tojsstring        = lua_tojsstring;\nmodule.exports.lua_tolstring         = lua_tolstring;\nmodule.exports.lua_tonumber          = lua_tonumber;\nmodule.exports.lua_tonumberx         = lua_tonumberx;\nmodule.exports.lua_topointer         = lua_topointer;\nmodule.exports.lua_toproxy           = lua_toproxy;\nmodule.exports.lua_tostring          = lua_tostring;\nmodule.exports.lua_tothread          = lua_tothread;\nmodule.exports.lua_touserdata        = lua_touserdata;\nmodule.exports.lua_type              = lua_type;\nmodule.exports.lua_typename          = lua_typename;\nmodule.exports.lua_upvalueid         = lua_upvalueid;\nmodule.exports.lua_upvaluejoin       = lua_upvaluejoin;\nmodule.exports.lua_version           = lua_version;\nmodule.exports.lua_xmove             = lua_xmove;\n","\"use strict\";\n\nconst { lua_assert } = require(\"./llimits.js\");\n\nclass MBuffer {\n    constructor() {\n        this.buffer = null;\n        this.n = 0;\n    }\n}\n\nconst luaZ_buffer = function(buff) {\n    return buff.buffer.subarray(0, buff.n);\n};\n\nconst luaZ_buffremove = function(buff, i) {\n    buff.n -= i;\n};\n\nconst luaZ_resetbuffer = function(buff) {\n    buff.n = 0;\n};\n\nconst luaZ_resizebuffer = function(L, buff, size) {\n    let newbuff = new Uint8Array(size);\n    if (buff.buffer)\n        newbuff.set(buff.buffer);\n    buff.buffer = newbuff;\n};\n\nclass ZIO {\n    constructor(L, reader, data) {\n        this.L = L;           /* Lua state (for reader) */\n        lua_assert(typeof reader == \"function\", \"ZIO requires a reader\");\n        this.reader = reader; /* reader function */\n        this.data = data;     /* additional data */\n        this.n = 0;           /* bytes still unread */\n        this.buffer = null;\n        this.off = 0;         /* current position in buffer */\n    }\n\n    zgetc () {\n        return ((this.n--) > 0) ? this.buffer[this.off++] : luaZ_fill(this);\n    }\n}\n\nconst EOZ = -1;\n\nconst luaZ_fill = function(z) {\n    let buff = z.reader(z.L, z.data);\n    if (buff === null)\n        return EOZ;\n    lua_assert(buff instanceof Uint8Array, \"Should only load binary of array of bytes\");\n    let size = buff.length;\n    if (size === 0)\n        return EOZ;\n    z.buffer = buff;\n    z.off = 0;\n    z.n = size - 1;\n    return z.buffer[z.off++];\n};\n\n/* b should be an array-like that will be set to bytes\n * b_offset is the offset at which to start filling */\nconst luaZ_read = function(z, b, b_offset, n) {\n    while (n) {\n        if (z.n === 0) { /* no bytes in buffer? */\n            if (luaZ_fill(z) === EOZ)\n                return n; /* no more input; return number of missing bytes */\n            else {\n                z.n++;  /* luaZ_fill consumed first byte; put it back */\n                z.off--;\n            }\n        }\n        let m = (n <= z.n) ? n : z.n; /* min. between n and z->n */\n        for (let i=0; i<m; i++) {\n            b[b_offset++] = z.buffer[z.off++];\n        }\n        z.n -= m;\n        if (z.n === 0) // remove reference to input so it can get freed\n            z.buffer = null;\n        n -= m;\n    }\n\n    return 0;\n};\n\nmodule.exports.EOZ               = EOZ;\nmodule.exports.luaZ_buffer       = luaZ_buffer;\nmodule.exports.luaZ_buffremove   = luaZ_buffremove;\nmodule.exports.luaZ_fill         = luaZ_fill;\nmodule.exports.luaZ_read         = luaZ_read;\nmodule.exports.luaZ_resetbuffer  = luaZ_resetbuffer;\nmodule.exports.luaZ_resizebuffer = luaZ_resizebuffer;\nmodule.exports.MBuffer           = MBuffer;\nmodule.exports.ZIO               = ZIO;\n","\"use strict\";\n\nconst {\n    constant_types: { LUA_TBOOLEAN, LUA_TLNGSTR },\n    thread_status: { LUA_ERRSYNTAX },\n    to_luastring\n} = require('./defs.js');\nconst {\n    LUA_MINBUFFER,\n    MAX_INT,\n    lua_assert\n} = require('./llimits.js');\nconst ldebug   = require('./ldebug.js');\nconst ldo      = require('./ldo.js');\nconst {\n    lisdigit,\n    lislalnum,\n    lislalpha,\n    lisspace,\n    lisxdigit\n} = require('./ljstype.js');\nconst lobject  = require('./lobject.js');\nconst {\n    luaS_bless,\n    luaS_hash,\n    luaS_hashlongstr,\n    luaS_new\n} = require('./lstring.js');\nconst ltable   = require('./ltable.js');\nconst {\n    EOZ,\n    luaZ_buffer,\n    luaZ_buffremove,\n    luaZ_resetbuffer,\n    luaZ_resizebuffer\n} = require('./lzio.js');\n\nconst FIRST_RESERVED = 257;\n\nconst LUA_ENV = to_luastring(\"_ENV\", true);\n\n/* terminal symbols denoted by reserved words */\nconst TK_AND      = FIRST_RESERVED;\nconst TK_BREAK    = FIRST_RESERVED + 1;\nconst TK_DO       = FIRST_RESERVED + 2;\nconst TK_ELSE     = FIRST_RESERVED + 3;\nconst TK_ELSEIF   = FIRST_RESERVED + 4;\nconst TK_END      = FIRST_RESERVED + 5;\nconst TK_FALSE    = FIRST_RESERVED + 6;\nconst TK_FOR      = FIRST_RESERVED + 7;\nconst TK_FUNCTION = FIRST_RESERVED + 8;\nconst TK_GOTO     = FIRST_RESERVED + 9;\nconst TK_IF       = FIRST_RESERVED + 10;\nconst TK_IN       = FIRST_RESERVED + 11;\nconst TK_LOCAL    = FIRST_RESERVED + 12;\nconst TK_NIL      = FIRST_RESERVED + 13;\nconst TK_NOT      = FIRST_RESERVED + 14;\nconst TK_OR       = FIRST_RESERVED + 15;\nconst TK_REPEAT   = FIRST_RESERVED + 16;\nconst TK_RETURN   = FIRST_RESERVED + 17;\nconst TK_THEN     = FIRST_RESERVED + 18;\nconst TK_TRUE     = FIRST_RESERVED + 19;\nconst TK_UNTIL    = FIRST_RESERVED + 20;\nconst TK_WHILE    = FIRST_RESERVED + 21;\n/* other terminal symbols */\nconst TK_IDIV     = FIRST_RESERVED + 22;\nconst TK_CONCAT   = FIRST_RESERVED + 23;\nconst TK_DOTS     = FIRST_RESERVED + 24;\nconst TK_EQ       = FIRST_RESERVED + 25;\nconst TK_GE       = FIRST_RESERVED + 26;\nconst TK_LE       = FIRST_RESERVED + 27;\nconst TK_NE       = FIRST_RESERVED + 28;\nconst TK_SHL      = FIRST_RESERVED + 29;\nconst TK_SHR      = FIRST_RESERVED + 30;\nconst TK_DBCOLON  = FIRST_RESERVED + 31;\nconst TK_EOS      = FIRST_RESERVED + 32;\nconst TK_FLT      = FIRST_RESERVED + 33;\nconst TK_INT      = FIRST_RESERVED + 34;\nconst TK_NAME     = FIRST_RESERVED + 35;\nconst TK_STRING   = FIRST_RESERVED + 36;\n\nconst RESERVED = {\n    \"TK_AND\":      TK_AND,\n    \"TK_BREAK\":    TK_BREAK,\n    \"TK_DO\":       TK_DO,\n    \"TK_ELSE\":     TK_ELSE,\n    \"TK_ELSEIF\":   TK_ELSEIF,\n    \"TK_END\":      TK_END,\n    \"TK_FALSE\":    TK_FALSE,\n    \"TK_FOR\":      TK_FOR,\n    \"TK_FUNCTION\": TK_FUNCTION,\n    \"TK_GOTO\":     TK_GOTO,\n    \"TK_IF\":       TK_IF,\n    \"TK_IN\":       TK_IN,\n    \"TK_LOCAL\":    TK_LOCAL,\n    \"TK_NIL\":      TK_NIL,\n    \"TK_NOT\":      TK_NOT,\n    \"TK_OR\":       TK_OR,\n    \"TK_REPEAT\":   TK_REPEAT,\n    \"TK_RETURN\":   TK_RETURN,\n    \"TK_THEN\":     TK_THEN,\n    \"TK_TRUE\":     TK_TRUE,\n    \"TK_UNTIL\":    TK_UNTIL,\n    \"TK_WHILE\":    TK_WHILE,\n    \"TK_IDIV\":     TK_IDIV,\n    \"TK_CONCAT\":   TK_CONCAT,\n    \"TK_DOTS\":     TK_DOTS,\n    \"TK_EQ\":       TK_EQ,\n    \"TK_GE\":       TK_GE,\n    \"TK_LE\":       TK_LE,\n    \"TK_NE\":       TK_NE,\n    \"TK_SHL\":      TK_SHL,\n    \"TK_SHR\":      TK_SHR,\n    \"TK_DBCOLON\":  TK_DBCOLON,\n    \"TK_EOS\":      TK_EOS,\n    \"TK_FLT\":      TK_FLT,\n    \"TK_INT\":      TK_INT,\n    \"TK_NAME\":     TK_NAME,\n    \"TK_STRING\":   TK_STRING\n};\n\nconst luaX_tokens = [\n    \"and\", \"break\", \"do\", \"else\", \"elseif\",\n    \"end\", \"false\", \"for\", \"function\", \"goto\", \"if\",\n    \"in\", \"local\", \"nil\", \"not\", \"or\", \"repeat\",\n    \"return\", \"then\", \"true\", \"until\", \"while\",\n    \"//\", \"..\", \"...\", \"==\", \">=\", \"<=\", \"~=\",\n    \"<<\", \">>\", \"::\", \"<eof>\",\n    \"<number>\", \"<integer>\", \"<name>\", \"<string>\"\n].map((e, i)=>to_luastring(e));\n\nclass SemInfo {\n    constructor() {\n        this.r = NaN;\n        this.i = NaN;\n        this.ts = null;\n    }\n}\n\nclass Token {\n    constructor() {\n        this.token = NaN;\n        this.seminfo = new SemInfo();\n    }\n}\n\n/* state of the lexer plus state of the parser when shared by all\n   functions */\nclass LexState {\n    constructor() {\n        this.current = NaN;  /* current character (charint) */\n        this.linenumber = NaN;  /* input line counter */\n        this.lastline = NaN;  /* line of last token 'consumed' */\n        this.t = new Token();  /* current token */\n        this.lookahead = new Token();  /* look ahead token */\n        this.fs = null;  /* current function (parser) */\n        this.L = null;\n        this.z = null; /* input stream */\n        this.buff = null;  /* buffer for tokens */\n        this.h = null;  /* to reuse strings */\n        this.dyd = null;  /* dynamic structures used by the parser */\n        this.source = null;  /* current source name */\n        this.envn = null;  /* environment variable name */\n    }\n}\n\nconst save = function(ls, c) {\n    let b = ls.buff;\n    if (b.n + 1 > b.buffer.length) {\n        if (b.buffer.length >= MAX_INT/2)\n            lexerror(ls, to_luastring(\"lexical element too long\", true), 0);\n        let newsize = b.buffer.length*2;\n        luaZ_resizebuffer(ls.L, b, newsize);\n    }\n    b.buffer[b.n++] = c < 0 ? 255 + c + 1 : c;\n};\n\nconst luaX_token2str = function(ls, token) {\n    if (token < FIRST_RESERVED) {  /* single-byte symbols? */\n        return lobject.luaO_pushfstring(ls.L, to_luastring(\"'%c'\", true), token);\n    } else {\n        let s = luaX_tokens[token - FIRST_RESERVED];\n        if (token < TK_EOS)  /* fixed format (symbols and reserved words)? */\n            return lobject.luaO_pushfstring(ls.L, to_luastring(\"'%s'\", true), s);\n        else  /* names, strings, and numerals */\n            return s;\n    }\n};\n\nconst currIsNewline = function(ls) {\n    return ls.current === 10 /* ('\\n').charCodeAt(0) */ || ls.current === 13 /* ('\\r').charCodeAt(0) */;\n};\n\nconst next = function(ls) {\n    ls.current = ls.z.zgetc();\n};\n\nconst save_and_next = function(ls) {\n    save(ls, ls.current);\n    next(ls);\n};\n\n/*\n** creates a new string and anchors it in scanner's table so that\n** it will not be collected until the end of the compilation\n** (by that time it should be anchored somewhere)\n*/\nconst TVtrue = new lobject.TValue(LUA_TBOOLEAN, true);\nconst luaX_newstring = function(ls, str) {\n    let L = ls.L;\n    let ts = luaS_new(L, str);\n    /* HACK: Workaround lack of ltable 'keyfromval' */\n    let tpair = ls.h.strong.get(luaS_hashlongstr(ts));\n    if (!tpair) { /* not in use yet? */\n        let key = new lobject.TValue(LUA_TLNGSTR, ts);\n        ltable.luaH_setfrom(L, ls.h, key, TVtrue);\n    } else { /* string already present */\n        ts = tpair.key.tsvalue(); /* re-use value previously stored */\n    }\n    return ts;\n};\n\n/*\n** increment line number and skips newline sequence (any of\n** \\n, \\r, \\n\\r, or \\r\\n)\n*/\nconst inclinenumber = function(ls) {\n    let old = ls.current;\n    lua_assert(currIsNewline(ls));\n    next(ls);  /* skip '\\n' or '\\r' */\n    if (currIsNewline(ls) && ls.current !== old)\n        next(ls);  /* skip '\\n\\r' or '\\r\\n' */\n    if (++ls.linenumber >= MAX_INT)\n        lexerror(ls, to_luastring(\"chunk has too many lines\", true), 0);\n};\n\nconst luaX_setinput = function(L, ls, z, source, firstchar) {\n    ls.t = {\n        token: 0,\n        seminfo: new SemInfo()\n    };\n    ls.L = L;\n    ls.current = firstchar;\n    ls.lookahead = {\n        token: TK_EOS,\n        seminfo: new SemInfo()\n    };\n    ls.z = z;\n    ls.fs = null;\n    ls.linenumber = 1;\n    ls.lastline = 1;\n    ls.source = source;\n    ls.envn = luaS_bless(L, LUA_ENV);\n    luaZ_resizebuffer(L, ls.buff, LUA_MINBUFFER);  /* initialize buffer */\n};\n\nconst check_next1 = function(ls, c) {\n    if (ls.current === c) {\n        next(ls);\n        return true;\n    }\n\n    return false;\n};\n\n/*\n** Check whether current char is in set 'set' (with two chars) and\n** saves it\n*/\nconst check_next2 = function(ls, set) {\n    if (ls.current === set[0].charCodeAt(0) || ls.current === set[1].charCodeAt(0)) {\n        save_and_next(ls);\n        return true;\n    }\n\n    return false;\n};\n\nconst read_numeral = function(ls, seminfo) {\n    let expo = \"Ee\";\n    let first = ls.current;\n    lua_assert(lisdigit(ls.current));\n    save_and_next(ls);\n    if (first === 48 /* ('0').charCodeAt(0) */ && check_next2(ls, \"xX\"))  /* hexadecimal? */\n        expo = \"Pp\";\n\n    for (;;) {\n        if (check_next2(ls, expo))  /* exponent part? */\n            check_next2(ls, \"-+\");  /* optional exponent sign */\n        if (lisxdigit(ls.current))\n            save_and_next(ls);\n        else if (ls.current === 46 /* ('.').charCodeAt(0) */)\n            save_and_next(ls);\n        else break;\n    }\n\n    // save(ls, 0);\n\n    let obj = new lobject.TValue();\n    if (lobject.luaO_str2num(luaZ_buffer(ls.buff), obj) === 0)  /* format error? */\n        lexerror(ls, to_luastring(\"malformed number\", true), TK_FLT);\n    if (obj.ttisinteger()) {\n        seminfo.i = obj.value;\n        return TK_INT;\n    } else {\n        lua_assert(obj.ttisfloat());\n        seminfo.r = obj.value;\n        return TK_FLT;\n    }\n};\n\nconst txtToken = function(ls, token) {\n    switch (token) {\n        case TK_NAME: case TK_STRING:\n        case TK_FLT: case TK_INT:\n            // save(ls, 0);\n            return lobject.luaO_pushfstring(ls.L, to_luastring(\"'%s'\", true), luaZ_buffer(ls.buff));\n        default:\n            return luaX_token2str(ls, token);\n    }\n};\n\nconst lexerror = function(ls, msg, token) {\n    msg = ldebug.luaG_addinfo(ls.L, msg, ls.source, ls.linenumber);\n    if (token)\n        lobject.luaO_pushfstring(ls.L, to_luastring(\"%s near %s\"), msg, txtToken(ls, token));\n    ldo.luaD_throw(ls.L, LUA_ERRSYNTAX);\n};\n\nconst luaX_syntaxerror = function(ls, msg) {\n    lexerror(ls, msg, ls.t.token);\n};\n\n/*\n** skip a sequence '[=*[' or ']=*]'; if sequence is well formed, return\n** its number of '='s; otherwise, return a negative number (-1 iff there\n** are no '='s after initial bracket)\n*/\nconst skip_sep = function(ls) {\n    let count = 0;\n    let s = ls.current;\n    lua_assert(s === 91 /* ('[').charCodeAt(0) */ || s === 93 /* (']').charCodeAt(0) */);\n    save_and_next(ls);\n    while (ls.current === 61 /* ('=').charCodeAt(0) */) {\n        save_and_next(ls);\n        count++;\n    }\n    return ls.current === s ? count : (-count) - 1;\n};\n\nconst read_long_string = function(ls, seminfo, sep) {\n    let line = ls.linenumber;  /* initial line (for error message) */\n    save_and_next(ls);  /* skip 2nd '[' */\n\n    if (currIsNewline(ls))  /* string starts with a newline? */\n        inclinenumber(ls);  /* skip it */\n\n    let skip = false;\n    for (; !skip ;) {\n        switch (ls.current) {\n            case EOZ: {  /* error */\n                let what = seminfo ? \"string\" : \"comment\";\n                let msg = `unfinished long ${what} (starting at line ${line})`;\n                lexerror(ls, to_luastring(msg), TK_EOS);\n                break;\n            }\n            case 93 /* (']').charCodeAt(0) */: {\n                if (skip_sep(ls) === sep) {\n                    save_and_next(ls);  /* skip 2nd ']' */\n                    skip = true;\n                }\n                break;\n            }\n            case 10 /* ('\\n').charCodeAt(0) */:\n            case 13 /* ('\\r').charCodeAt(0) */: {\n                save(ls, 10 /* ('\\n').charCodeAt(0) */);\n                inclinenumber(ls);\n                if (!seminfo) luaZ_resetbuffer(ls.buff);\n                break;\n            }\n            default: {\n                if (seminfo) save_and_next(ls);\n                else next(ls);\n            }\n        }\n    }\n\n    if (seminfo)\n        seminfo.ts = luaX_newstring(ls, ls.buff.buffer.subarray(2 + sep, ls.buff.n - (2 + sep)));\n};\n\nconst esccheck = function(ls, c, msg) {\n    if (!c) {\n        if (ls.current !== EOZ)\n            save_and_next(ls);  /* add current to buffer for error message */\n        lexerror(ls, msg, TK_STRING);\n    }\n};\n\nconst gethexa = function(ls) {\n    save_and_next(ls);\n    esccheck(ls, lisxdigit(ls.current), to_luastring(\"hexadecimal digit expected\", true));\n    return lobject.luaO_hexavalue(ls.current);\n};\n\nconst readhexaesc = function(ls) {\n    let r = gethexa(ls);\n    r = (r << 4) + gethexa(ls);\n    luaZ_buffremove(ls.buff, 2);  /* remove saved chars from buffer */\n    return r;\n};\n\nconst readutf8desc = function(ls) {\n    let i = 4;  /* chars to be removed: '\\', 'u', '{', and first digit */\n    save_and_next(ls);  /* skip 'u' */\n    esccheck(ls, ls.current === 123 /* ('{').charCodeAt(0) */, to_luastring(\"missing '{'\", true));\n    let r = gethexa(ls);  /* must have at least one digit */\n\n    save_and_next(ls);\n    while (lisxdigit(ls.current)) {\n        i++;\n        r = (r << 4) + lobject.luaO_hexavalue(ls.current);\n        esccheck(ls, r <= 0x10FFFF, to_luastring(\"UTF-8 value too large\", true));\n        save_and_next(ls);\n    }\n    esccheck(ls, ls.current === 125 /* ('}').charCodeAt(0) */, to_luastring(\"missing '}'\", true));\n    next(ls);  /* skip '}' */\n    luaZ_buffremove(ls.buff, i);  /* remove saved chars from buffer */\n    return r;\n};\n\nconst utf8esc = function(ls) {\n    let buff = new Uint8Array(lobject.UTF8BUFFSZ);\n    let n = lobject.luaO_utf8esc(buff, readutf8desc(ls));\n    for (; n > 0; n--)  /* add 'buff' to string */\n        save(ls, buff[lobject.UTF8BUFFSZ - n]);\n};\n\nconst readdecesc = function(ls) {\n    let r = 0;  /* result accumulator */\n    let i;\n    for (i = 0; i < 3 && lisdigit(ls.current); i++) {  /* read up to 3 digits */\n        r = 10 * r + ls.current - 48 /* ('0').charCodeAt(0) */;\n        save_and_next(ls);\n    }\n    esccheck(ls, r <= 255, to_luastring(\"decimal escape too large\", true));\n    luaZ_buffremove(ls.buff, i);  /* remove read digits from buffer */\n    return r;\n};\n\nconst read_string = function(ls, del, seminfo) {\n    save_and_next(ls);  /* keep delimiter (for error messages) */\n\n    while (ls.current !== del) {\n        switch (ls.current) {\n            case EOZ:\n                lexerror(ls, to_luastring(\"unfinished string\", true), TK_EOS);\n                break;\n            case 10 /* ('\\n').charCodeAt(0) */:\n            case 13 /* ('\\r').charCodeAt(0) */:\n                lexerror(ls, to_luastring(\"unfinished string\", true), TK_STRING);\n                break;\n            case 92 /* ('\\\\').charCodeAt(0) */: {  /* escape sequences */\n                save_and_next(ls);  /* keep '\\\\' for error messages */\n                let will;\n                let c;\n                switch(ls.current) {\n                    case 97 /* ('a').charCodeAt(0) */: c = 7 /* \\a isn't valid JS */; will = 'read_save'; break;\n                    case 98 /* ('b').charCodeAt(0) */: c = 8 /* ('\\b').charCodeAt(0) */; will = 'read_save'; break;\n                    case 102 /* ('f').charCodeAt(0) */: c = 12 /* ('\\f').charCodeAt(0) */; will = 'read_save'; break;\n                    case 110 /* ('n').charCodeAt(0) */: c = 10 /* ('\\n').charCodeAt(0) */; will = 'read_save'; break;\n                    case 114 /* ('r').charCodeAt(0) */: c = 13 /* ('\\r').charCodeAt(0) */; will = 'read_save'; break;\n                    case 116 /* ('t').charCodeAt(0) */: c = 9 /* ('\\t').charCodeAt(0) */; will = 'read_save'; break;\n                    case 118 /* ('v').charCodeAt(0) */: c = 11 /* ('\\v').charCodeAt(0) */; will = 'read_save'; break;\n                    case 120 /* ('x').charCodeAt(0) */: c = readhexaesc(ls); will = 'read_save'; break;\n                    case 117 /* ('u').charCodeAt(0) */: utf8esc(ls); will = 'no_save'; break;\n                    case 10 /* ('\\n').charCodeAt(0) */:\n                    case 13 /* ('\\r').charCodeAt(0) */:\n                        inclinenumber(ls); c = 10 /* ('\\n').charCodeAt(0) */; will = 'only_save'; break;\n                    case 92 /* ('\\\\').charCodeAt(0) */:\n                    case 34 /* ('\"').charCodeAt(0) */:\n                    case 39 /* ('\\'').charCodeAt(0) */:\n                        c = ls.current; will = 'read_save'; break;\n                    case EOZ: will = 'no_save'; break;  /* will raise an error next loop */\n                    case 122 /* ('z').charCodeAt(0) */: {  /* zap following span of spaces */\n                        luaZ_buffremove(ls.buff, 1);  /* remove '\\\\' */\n                        next(ls);  /* skip the 'z' */\n                        while (lisspace(ls.current)) {\n                            if (currIsNewline(ls)) inclinenumber(ls);\n                            else next(ls);\n                        }\n                        will = 'no_save'; break;\n                    }\n                    default: {\n                        esccheck(ls, lisdigit(ls.current), to_luastring(\"invalid escape sequence\", true));\n                        c = readdecesc(ls);  /* digital escape '\\ddd' */\n                        will = 'only_save'; break;\n                    }\n                }\n\n                if (will === 'read_save')\n                    next(ls);\n\n                if (will === 'read_save' || will === 'only_save') {\n                    luaZ_buffremove(ls.buff, 1);  /* remove '\\\\' */\n                    save(ls, c);\n                }\n\n                break;\n            }\n            default:\n                save_and_next(ls);\n        }\n    }\n    save_and_next(ls);  /* skip delimiter */\n\n    seminfo.ts = luaX_newstring(ls, ls.buff.buffer.subarray(1, ls.buff.n-1));\n};\n\nconst token_to_index = Object.create(null); /* don't want to return true for e.g. 'hasOwnProperty' */\nluaX_tokens.forEach((e, i)=>token_to_index[luaS_hash(e)] = i);\n\nconst isreserved = function(w) {\n    let kidx = token_to_index[luaS_hashlongstr(w)];\n    return kidx !== void 0 && kidx <= 22;\n};\n\nconst llex = function(ls, seminfo) {\n    luaZ_resetbuffer(ls.buff);\n    for (;;) {\n        lua_assert(typeof ls.current == \"number\"); /* fengari addition */\n        switch (ls.current) {\n            case 10 /* ('\\n').charCodeAt(0) */:\n            case 13 /* ('\\r').charCodeAt(0) */: {  /* line breaks */\n                inclinenumber(ls);\n                break;\n            }\n            case 32 /* (' ').charCodeAt(0) */:\n            case 12 /* ('\\f').charCodeAt(0) */:\n            case 9 /* ('\\t').charCodeAt(0) */:\n            case 11 /* ('\\v').charCodeAt(0) */: {  /* spaces */\n                next(ls);\n                break;\n            }\n            case 45 /* ('-').charCodeAt(0) */: {  /* '-' or '--' (comment) */\n                next(ls);\n                if (ls.current !== 45 /* ('-').charCodeAt(0) */) return 45 /* ('-').charCodeAt(0) */;\n                /* else is a comment */\n                next(ls);\n                if (ls.current === 91 /* ('[').charCodeAt(0) */) {  /* long comment? */\n                    let sep = skip_sep(ls);\n                    luaZ_resetbuffer(ls.buff);  /* 'skip_sep' may dirty the buffer */\n                    if (sep >= 0) {\n                        read_long_string(ls, null, sep);  /* skip long comment */\n                        luaZ_resetbuffer(ls.buff);  /* previous call may dirty the buff. */\n                        break;\n                    }\n                }\n\n                /* else short comment */\n                while (!currIsNewline(ls) && ls.current !== EOZ)\n                    next(ls);  /* skip until end of line (or end of file) */\n                break;\n            }\n            case 91 /* ('[').charCodeAt(0) */: {  /* long string or simply '[' */\n                let sep = skip_sep(ls);\n                if (sep >= 0) {\n                    read_long_string(ls, seminfo, sep);\n                    return TK_STRING;\n                } else if (sep !== -1)  /* '[=...' missing second bracket */\n                    lexerror(ls, to_luastring(\"invalid long string delimiter\", true), TK_STRING);\n                return 91 /* ('[').charCodeAt(0) */;\n            }\n            case 61 /* ('=').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_EQ;\n                else return 61 /* ('=').charCodeAt(0) */;\n            }\n            case 60 /* ('<').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_LE;\n                else if (check_next1(ls, 60 /* ('<').charCodeAt(0) */)) return TK_SHL;\n                else return 60 /* ('<').charCodeAt(0) */;\n            }\n            case 62 /* ('>').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_GE;\n                else if (check_next1(ls, 62 /* ('>').charCodeAt(0) */)) return TK_SHR;\n                else return 62 /* ('>').charCodeAt(0) */;\n            }\n            case 47 /* ('/').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 47 /* ('/').charCodeAt(0) */)) return TK_IDIV;\n                else return 47 /* ('/').charCodeAt(0) */;\n            }\n            case 126 /* ('~').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_NE;\n                else return 126 /* ('~').charCodeAt(0) */;\n            }\n            case 58 /* (':').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 58 /* (':').charCodeAt(0) */)) return TK_DBCOLON;\n                else return 58 /* (':').charCodeAt(0) */;\n            }\n            case 34 /* ('\"').charCodeAt(0) */:\n            case 39 /* ('\\'').charCodeAt(0) */: {  /* short literal strings */\n                read_string(ls, ls.current, seminfo);\n                return TK_STRING;\n            }\n            case 46 /* ('.').charCodeAt(0) */: {  /* '.', '..', '...', or number */\n                save_and_next(ls);\n                if (check_next1(ls, 46 /* ('.').charCodeAt(0) */)) {\n                    if (check_next1(ls, 46 /* ('.').charCodeAt(0) */))\n                        return TK_DOTS;   /* '...' */\n                    else return TK_CONCAT;   /* '..' */\n                }\n                else if (!lisdigit(ls.current)) return 46 /* ('.').charCodeAt(0) */;\n                else return read_numeral(ls, seminfo);\n            }\n            case 48 /* ('0').charCodeAt(0) */: case 49 /* ('1').charCodeAt(0) */: case 50 /* ('2').charCodeAt(0) */: case 51 /* ('3').charCodeAt(0) */: case 52 /* ('4').charCodeAt(0) */:\n            case 53 /* ('5').charCodeAt(0) */: case 54 /* ('6').charCodeAt(0) */: case 55 /* ('7').charCodeAt(0) */: case 56 /* ('8').charCodeAt(0) */: case 57 /* ('9').charCodeAt(0) */: {\n                return read_numeral(ls, seminfo);\n            }\n            case EOZ: {\n                return TK_EOS;\n            }\n            default: {\n                if (lislalpha(ls.current)) {  /* identifier or reserved word? */\n                    do {\n                        save_and_next(ls);\n                    } while (lislalnum(ls.current));\n                    let ts = luaX_newstring(ls, luaZ_buffer(ls.buff));\n                    seminfo.ts = ts;\n                    let kidx = token_to_index[luaS_hashlongstr(ts)];\n                    if (kidx !== void 0 && kidx <= 22)  /* reserved word? */\n                        return kidx + FIRST_RESERVED;\n                    else\n                        return TK_NAME;\n                } else {  /* single-char tokens (+ - / ...) */\n                    let c = ls.current;\n                    next(ls);\n                    return c;\n                }\n            }\n        }\n    }\n};\n\nconst luaX_next = function(ls) {\n    ls.lastline = ls.linenumber;\n    if (ls.lookahead.token !== TK_EOS) {  /* is there a look-ahead token? */\n        ls.t.token = ls.lookahead.token;  /* use this one */\n        ls.t.seminfo.i = ls.lookahead.seminfo.i;\n        ls.t.seminfo.r = ls.lookahead.seminfo.r;\n        ls.t.seminfo.ts = ls.lookahead.seminfo.ts;\n        ls.lookahead.token = TK_EOS;  /* and discharge it */\n    } else\n        ls.t.token = llex(ls, ls.t.seminfo);  /* read next token */\n};\n\nconst luaX_lookahead = function(ls) {\n    lua_assert(ls.lookahead.token === TK_EOS);\n    ls.lookahead.token = llex(ls, ls.lookahead.seminfo);\n    return ls.lookahead.token;\n};\n\nmodule.exports.FIRST_RESERVED   = FIRST_RESERVED;\nmodule.exports.LUA_ENV          = LUA_ENV;\nmodule.exports.LexState         = LexState;\nmodule.exports.RESERVED         = RESERVED;\nmodule.exports.isreserved       = isreserved;\nmodule.exports.luaX_lookahead   = luaX_lookahead;\nmodule.exports.luaX_newstring   = luaX_newstring;\nmodule.exports.luaX_next        = luaX_next;\nmodule.exports.luaX_setinput    = luaX_setinput;\nmodule.exports.luaX_syntaxerror = luaX_syntaxerror;\nmodule.exports.luaX_token2str   = luaX_token2str;\nmodule.exports.luaX_tokens      = luaX_tokens;\n","\"use strict\";\n\nconst { luastring_of } = require('./defs.js');\n\nconst luai_ctype_ = luastring_of(\n    0x00,  /* EOZ */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 0. */\n    0x00,  0x08,  0x08,  0x08,  0x08,  0x08,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 1. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x0c,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,        /* 2. */\n    0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,\n    0x16,  0x16,  0x16,  0x16,  0x16,  0x16,  0x16,  0x16,        /* 3. */\n    0x16,  0x16,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,\n    0x04,  0x15,  0x15,  0x15,  0x15,  0x15,  0x15,  0x05,        /* 4. */\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,        /* 5. */\n    0x05,  0x05,  0x05,  0x04,  0x04,  0x04,  0x04,  0x05,\n    0x04,  0x15,  0x15,  0x15,  0x15,  0x15,  0x15,  0x05,        /* 6. */\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,        /* 7. */\n    0x05,  0x05,  0x05,  0x04,  0x04,  0x04,  0x04,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 8. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 9. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* a. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* b. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* c. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* d. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* e. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* f. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00\n);\n\nconst ALPHABIT = 0;\nconst DIGITBIT = 1;\nconst PRINTBIT = 2;\nconst SPACEBIT = 3;\nconst XDIGITBIT = 4;\n\nconst lisdigit = function(c) {\n    return (luai_ctype_[c+1] & (1<<DIGITBIT)) !== 0;\n};\n\nconst lisxdigit = function(c) {\n    return (luai_ctype_[c+1] & (1<<XDIGITBIT)) !== 0;\n};\n\nconst lisprint = function(c) {\n    return (luai_ctype_[c+1] & (1<<PRINTBIT)) !== 0;\n};\n\nconst lisspace = function(c) {\n    return (luai_ctype_[c+1] & (1<<SPACEBIT)) !== 0;\n};\n\nconst lislalpha = function(c) {\n    return (luai_ctype_[c+1] & (1<<ALPHABIT)) !== 0;\n};\n\nconst lislalnum = function(c) {\n    return (luai_ctype_[c+1] & ((1<<ALPHABIT)|(1<<DIGITBIT))) !== 0;\n};\n\nmodule.exports.lisdigit   = lisdigit;\nmodule.exports.lislalnum  = lislalnum;\nmodule.exports.lislalpha  = lislalpha;\nmodule.exports.lisprint   = lisprint;\nmodule.exports.lisspace   = lisspace;\nmodule.exports.lisxdigit  = lisxdigit;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    to_luastring\n} = require('./defs.js');\nconst {\n    BinOpr: {\n        OPR_ADD,\n        OPR_AND,\n        OPR_BAND,\n        OPR_BOR,\n        OPR_BXOR,\n        OPR_CONCAT,\n        OPR_DIV,\n        OPR_EQ,\n        OPR_GE,\n        OPR_GT,\n        OPR_IDIV,\n        OPR_LE,\n        OPR_LT,\n        OPR_MOD,\n        OPR_MUL,\n        OPR_NE,\n        OPR_NOBINOPR,\n        OPR_OR,\n        OPR_POW,\n        OPR_SHL,\n        OPR_SHR,\n        OPR_SUB\n    },\n    UnOpr: {\n        OPR_BNOT,\n        OPR_LEN,\n        OPR_MINUS,\n        OPR_NOT,\n        OPR_NOUNOPR\n    },\n    NO_JUMP,\n    getinstruction,\n    luaK_checkstack,\n    luaK_codeABC,\n    luaK_codeABx,\n    luaK_codeAsBx,\n    luaK_codek,\n    luaK_concat,\n    luaK_dischargevars,\n    luaK_exp2RK,\n    luaK_exp2anyreg,\n    luaK_exp2anyregup,\n    luaK_exp2nextreg,\n    luaK_exp2val,\n    luaK_fixline,\n    luaK_getlabel,\n    luaK_goiffalse,\n    luaK_goiftrue,\n    luaK_indexed,\n    luaK_infix,\n    luaK_intK,\n    luaK_jump,\n    luaK_jumpto,\n    luaK_nil,\n    luaK_patchclose,\n    luaK_patchlist,\n    luaK_patchtohere,\n    luaK_posfix,\n    luaK_prefix,\n    luaK_reserveregs,\n    luaK_ret,\n    luaK_self,\n    luaK_setlist,\n    luaK_setmultret,\n    luaK_setoneret,\n    luaK_setreturns,\n    luaK_storevar,\n    luaK_stringK\n} = require('./lcode.js');\nconst ldo      = require('./ldo.js');\nconst lfunc    = require('./lfunc.js');\nconst llex     = require('./llex.js');\nconst {\n    LUAI_MAXCCALLS,\n    MAX_INT,\n    lua_assert\n}  = require('./llimits.js');\nconst lobject  = require('./lobject.js');\nconst {\n    OpCodesI: {\n        OP_CALL,\n        OP_CLOSURE,\n        OP_FORLOOP,\n        OP_FORPREP,\n        OP_GETUPVAL,\n        OP_MOVE,\n        OP_NEWTABLE,\n        OP_SETTABLE,\n        OP_TAILCALL,\n        OP_TFORCALL,\n        OP_TFORLOOP,\n        OP_VARARG\n    },\n    LFIELDS_PER_FLUSH,\n    SETARG_B,\n    SETARG_C,\n    SET_OPCODE\n} = require('./lopcodes.js');\nconst {\n    luaS_eqlngstr,\n    luaS_new,\n    luaS_newliteral\n} = require('./lstring.js');\nconst ltable   = require('./ltable.js');\nconst Proto    = lfunc.Proto;\nconst R        = llex.RESERVED;\n\nconst MAXVARS = 200;\n\nconst hasmultret = function(k) {\n    return k === expkind.VCALL || k === expkind.VVARARG;\n};\n\nconst eqstr = function(a, b) {\n    /* TODO: use plain equality as strings are cached */\n    return luaS_eqlngstr(a, b);\n};\n\nclass BlockCnt {\n    constructor() {\n        this.previous = null;  /* chain */\n        this.firstlabel = NaN; /* index of first label in this block */\n        this.firstgoto = NaN;  /* index of first pending goto in this block */\n        this.nactvar = NaN;    /* # active locals outside the block */\n        this.upval = NaN;      /* true if some variable in the block is an upvalue */\n        this.isloop = NaN;     /* true if 'block' is a loop */\n    }\n}\n\nconst expkind = {\n    VVOID: 0,        /* when 'expdesc' describes the last expression a list,\n                        this kind means an empty list (so, no expression) */\n    VNIL: 1,         /* constant nil */\n    VTRUE: 2,        /* constant true */\n    VFALSE: 3,       /* constant false */\n    VK: 4,           /* constant in 'k'; info = index of constant in 'k' */\n    VKFLT: 5,        /* floating constant; nval = numerical float value */\n    VKINT: 6,        /* integer constant; nval = numerical integer value */\n    VNONRELOC: 7,    /* expression has its value in a fixed register;\n                        info = result register */\n    VLOCAL: 8,       /* local variable; info = local register */\n    VUPVAL: 9,       /* upvalue variable; info = index of upvalue in 'upvalues' */\n    VINDEXED: 10,    /* indexed variable;\n                        ind.vt = whether 't' is register or upvalue;\n                        ind.t = table register or upvalue;\n                        ind.idx = key's R/K index */\n    VJMP: 11,        /* expression is a test/comparison;\n                        info = pc of corresponding jump instruction */\n    VRELOCABLE: 12,  /* expression can put result in any register;\n                        info = instruction pc */\n    VCALL: 13,       /* expression is a function call; info = instruction pc */\n    VVARARG: 14      /* vararg expression; info = instruction pc */\n};\n\nconst vkisvar = function(k) {\n    return expkind.VLOCAL <= k && k <= expkind.VINDEXED;\n};\n\nconst vkisinreg = function(k) {\n    return k === expkind.VNONRELOC || k === expkind.VLOCAL;\n};\n\nclass expdesc {\n    constructor() {\n        this.k = NaN;\n        this.u = {\n            ival: NaN,    /* for VKINT */\n            nval: NaN,    /* for VKFLT */\n            info: NaN,    /* for generic use */\n            ind: {        /* for indexed variables (VINDEXED) */\n                idx: NaN, /* index (R/K) */\n                t: NaN,   /* table (register or upvalue) */\n                vt: NaN   /* whether 't' is register (VLOCAL) or upvalue (VUPVAL) */\n            }\n        };\n        this.t = NaN;     /* patch list of 'exit when true' */\n        this.f = NaN;     /* patch list of 'exit when false' */\n    }\n\n    to(e) { // Copy e content to this, cf. luaK_posfix\n        this.k = e.k;\n        this.u = e.u;\n        this.t = e.t;\n        this.f = e.f;\n    }\n}\n\nclass FuncState {\n    constructor() {\n        this.f = null;         /* current function header */\n        this.prev = null;      /* enclosing function */\n        this.ls = null;        /* lexical state */\n        this.bl = null;        /* chain of current blocks */\n        this.pc = NaN;         /* next position to code (equivalent to 'ncode') */\n        this.lasttarget = NaN; /* 'label' of last 'jump label' */\n        this.jpc = NaN;        /* list of pending jumps to 'pc' */\n        this.nk = NaN;         /* number of elements in 'k' */\n        this.np = NaN;         /* number of elements in 'p' */\n        this.firstlocal = NaN; /* index of first local var (in Dyndata array) */\n        this.nlocvars = NaN;   /* number of elements in 'f->locvars' */\n        this.nactvar = NaN;    /* number of active local variables */\n        this.nups = NaN;       /* number of upvalues */\n        this.freereg = NaN;    /* first free register */\n    }\n}\n\n/* description of active local variable */\nclass Vardesc {\n    constructor() {\n        this.idx = NaN;  /* variable index in stack */\n    }\n}\n\n\n/* description of pending goto statements and label statements */\nclass Labeldesc {\n    constructor() {\n        this.name = null;  /* label identifier */\n        this.pc = NaN;  /* position in code */\n        this.line = NaN;  /* line where it appeared */\n        this.nactvar = NaN;  /* local level where it appears in current block */\n    }\n}\n\n\n/* list of labels or gotos */\nclass Labellist {\n    constructor() {\n        this.arr = []; /* array */\n        this.n = NaN;  /* number of entries in use */\n        this.size = NaN;  /* array size */\n    }\n}\n\n/* dynamic structures used by the parser */\nclass Dyndata {\n    constructor() {\n        this.actvar = {  /* list of active local variables */\n            arr: [],\n            n: NaN,\n            size: NaN\n        };\n        this.gt = new Labellist();\n        this.label = new Labellist();\n    }\n}\n\nconst semerror = function(ls, msg) {\n    ls.t.token = 0;  /* remove \"near <token>\" from final message */\n    llex.luaX_syntaxerror(ls, msg);\n};\n\nconst error_expected = function(ls, token) {\n    llex.luaX_syntaxerror(ls, lobject.luaO_pushfstring(ls.L, to_luastring(\"%s expected\", true), llex.luaX_token2str(ls, token)));\n};\n\nconst errorlimit = function(fs, limit, what) {\n    let L = fs.ls.L;\n    let line = fs.f.linedefined;\n    let where = (line === 0)\n        ? to_luastring(\"main function\", true)\n        : lobject.luaO_pushfstring(L, to_luastring(\"function at line %d\", true), line);\n    let msg = lobject.luaO_pushfstring(L, to_luastring(\"too many %s (limit is %d) in %s\", true),\n        what, limit, where);\n    llex.luaX_syntaxerror(fs.ls, msg);\n};\n\nconst checklimit = function(fs, v, l, what) {\n    if (v > l) errorlimit(fs, l, what);\n};\n\nconst testnext = function(ls, c) {\n    if (ls.t.token === c) {\n        llex.luaX_next(ls);\n        return true;\n    }\n\n    return false;\n};\n\nconst check = function(ls, c) {\n    if (ls.t.token !== c)\n        error_expected(ls, c);\n};\n\nconst checknext = function(ls, c) {\n    check(ls, c);\n    llex.luaX_next(ls);\n};\n\nconst check_condition = function(ls, c, msg) {\n    if (!c)\n        llex.luaX_syntaxerror(ls, msg);\n};\n\nconst check_match = function(ls, what, who, where) {\n    if (!testnext(ls, what)) {\n        if (where === ls.linenumber)\n            error_expected(ls, what);\n        else\n            llex.luaX_syntaxerror(ls, lobject.luaO_pushfstring(ls.L,\n                to_luastring(\"%s expected (to close %s at line %d)\"),\n                llex.luaX_token2str(ls, what), llex.luaX_token2str(ls, who), where));\n    }\n};\n\nconst str_checkname = function(ls) {\n    check(ls, R.TK_NAME);\n    let ts = ls.t.seminfo.ts;\n    llex.luaX_next(ls);\n    return ts;\n};\n\nconst init_exp = function(e, k, i) {\n    e.f = e.t = NO_JUMP;\n    e.k = k;\n    e.u.info = i;\n};\n\nconst codestring = function(ls, e, s) {\n    init_exp(e, expkind.VK, luaK_stringK(ls.fs, s));\n};\n\nconst checkname = function(ls, e) {\n    codestring(ls, e, str_checkname(ls));\n};\n\nconst registerlocalvar = function(ls, varname) {\n    let fs = ls.fs;\n    let f = fs.f;\n    f.locvars[fs.nlocvars] = new lobject.LocVar();\n    f.locvars[fs.nlocvars].varname = varname;\n    return fs.nlocvars++;\n};\n\nconst new_localvar = function(ls, name) {\n    let fs = ls.fs;\n    let dyd = ls.dyd;\n    let reg = registerlocalvar(ls, name);\n    checklimit(fs, dyd.actvar.n + 1 - fs.firstlocal, MAXVARS, to_luastring(\"local variables\", true));\n    dyd.actvar.arr[dyd.actvar.n] = new Vardesc();\n    dyd.actvar.arr[dyd.actvar.n].idx = reg;\n    dyd.actvar.n++;\n};\n\nconst new_localvarliteral = function(ls, name) {\n    new_localvar(ls, llex.luaX_newstring(ls, to_luastring(name, true)));\n};\n\nconst getlocvar = function(fs, i) {\n    let idx = fs.ls.dyd.actvar.arr[fs.firstlocal + i].idx;\n    lua_assert(idx < fs.nlocvars);\n    return fs.f.locvars[idx];\n};\n\nconst adjustlocalvars = function(ls, nvars) {\n    let fs = ls.fs;\n    fs.nactvar = fs.nactvar + nvars;\n    for (; nvars; nvars--)\n        getlocvar(fs, fs.nactvar - nvars).startpc = fs.pc;\n};\n\nconst removevars = function(fs, tolevel) {\n    fs.ls.dyd.actvar.n -= fs.nactvar - tolevel;\n    while (fs.nactvar > tolevel)\n        getlocvar(fs, --fs.nactvar).endpc = fs.pc;\n};\n\nconst searchupvalue = function(fs, name) {\n    let up = fs.f.upvalues;\n    for (let i = 0; i < fs.nups; i++) {\n        if (eqstr(up[i].name, name))\n            return i;\n    }\n    return -1;  /* not found */\n};\n\nconst newupvalue = function(fs, name, v) {\n    let f = fs.f;\n    checklimit(fs, fs.nups + 1, lfunc.MAXUPVAL, to_luastring(\"upvalues\", true));\n    f.upvalues[fs.nups] = {\n        instack: v.k === expkind.VLOCAL,\n        idx: v.u.info,\n        name: name\n    };\n    return fs.nups++;\n};\n\nconst searchvar = function(fs, n) {\n    for (let i = fs.nactvar - 1; i >= 0; i--) {\n        if (eqstr(n, getlocvar(fs, i).varname))\n            return i;\n    }\n\n    return -1;\n};\n\n/*\n** Mark block where variable at given level was defined\n** (to emit close instructions later).\n*/\nconst markupval = function(fs, level) {\n    let bl = fs.bl;\n    while (bl.nactvar > level)\n        bl = bl.previous;\n    bl.upval = 1;\n};\n\n/*\n** Find variable with given name 'n'. If it is an upvalue, add this\n** upvalue into all intermediate functions.\n*/\nconst singlevaraux = function(fs, n, vr, base) {\n    if (fs === null)  /* no more levels? */\n        init_exp(vr, expkind.VVOID, 0);  /* default is global */\n    else {\n        let v = searchvar(fs, n);  /* look up locals at current level */\n        if (v >= 0) {  /* found? */\n            init_exp(vr, expkind.VLOCAL, v);  /* variable is local */\n            if (!base)\n                markupval(fs, v);  /* local will be used as an upval */\n        } else {  /* not found as local at current level; try upvalues */\n            let idx = searchupvalue(fs, n);  /* try existing upvalues */\n            if (idx < 0) {  /* not found? */\n                singlevaraux(fs.prev, n, vr, 0);  /* try upper levels */\n                if (vr.k === expkind.VVOID)  /* not found? */\n                    return;  /* it is a global */\n                /* else was LOCAL or UPVAL */\n                idx = newupvalue(fs, n, vr);  /* will be a new upvalue */\n            }\n            init_exp(vr, expkind.VUPVAL, idx);  /* new or old upvalue */\n        }\n    }\n};\n\nconst singlevar = function(ls, vr) {\n    let varname = str_checkname(ls);\n    let fs = ls.fs;\n    singlevaraux(fs, varname, vr, 1);\n    if (vr.k === expkind.VVOID) {  /* is global name? */\n        let key = new expdesc();\n        singlevaraux(fs, ls.envn, vr, 1);  /* get environment variable */\n        lua_assert(vr.k !== expkind.VVOID);  /* this one must exist */\n        codestring(ls, key, varname);  /* key is variable name */\n        luaK_indexed(fs, vr, key);  /* env[varname] */\n    }\n};\n\nconst adjust_assign = function(ls, nvars, nexps, e) {\n    let fs = ls.fs;\n    let extra = nvars - nexps;\n    if (hasmultret(e.k)) {\n        extra++;  /* includes call itself */\n        if (extra < 0) extra = 0;\n        luaK_setreturns(fs, e, extra);  /* last exp. provides the difference */\n        if (extra > 1) luaK_reserveregs(fs, extra - 1);\n    } else {\n        if (e.k !== expkind.VVOID) luaK_exp2nextreg(fs, e);  /* close last expression */\n        if (extra > 0) {\n            let reg = fs.freereg;\n            luaK_reserveregs(fs, extra);\n            luaK_nil(fs, reg, extra);\n        }\n    }\n    if (nexps > nvars)\n        ls.fs.freereg -= nexps - nvars;  /* remove extra values */\n};\n\nconst enterlevel = function(ls) {\n    let L = ls.L;\n    ++L.nCcalls;\n    checklimit(ls.fs, L.nCcalls, LUAI_MAXCCALLS, to_luastring(\"JS levels\", true));\n};\n\nconst leavelevel = function(ls) {\n    return ls.L.nCcalls--;\n};\n\nconst closegoto = function(ls, g, label) {\n    let fs = ls.fs;\n    let gl = ls.dyd.gt;\n    let gt = gl.arr[g];\n    lua_assert(eqstr(gt.name, label.name));\n    if (gt.nactvar < label.nactvar) {\n        let vname = getlocvar(fs, gt.nactvar).varname;\n        let msg = lobject.luaO_pushfstring(ls.L,\n            to_luastring(\"<goto %s> at line %d jumps into the scope of local '%s'\"),\n            gt.name.getstr(), gt.line, vname.getstr());\n        semerror(ls, msg);\n    }\n    luaK_patchlist(fs, gt.pc, label.pc);\n    /* remove goto from pending list */\n    for (let i = g; i < gl.n - 1; i++)\n        gl.arr[i] = gl.arr[i + 1];\n    gl.n--;\n};\n\n/*\n** try to close a goto with existing labels; this solves backward jumps\n*/\nconst findlabel = function(ls, g) {\n    let bl = ls.fs.bl;\n    let dyd = ls.dyd;\n    let gt = dyd.gt.arr[g];\n    /* check labels in current block for a match */\n    for (let i = bl.firstlabel; i < dyd.label.n; i++) {\n        let lb = dyd.label.arr[i];\n        if (eqstr(lb.name, gt.name)) {  /* correct label? */\n            if (gt.nactvar > lb.nactvar && (bl.upval || dyd.label.n > bl.firstlabel))\n                luaK_patchclose(ls.fs, gt.pc, lb.nactvar);\n            closegoto(ls, g, lb);  /* close it */\n            return true;\n        }\n    }\n    return false;  /* label not found; cannot close goto */\n};\n\nconst newlabelentry = function(ls, l, name, line, pc) {\n    let n = l.n;\n    l.arr[n] = new Labeldesc();\n    l.arr[n].name = name;\n    l.arr[n].line = line;\n    l.arr[n].nactvar = ls.fs.nactvar;\n    l.arr[n].pc = pc;\n    l.n = n + 1;\n    return n;\n};\n\n/*\n** check whether new label 'lb' matches any pending gotos in current\n** block; solves forward jumps\n*/\nconst findgotos = function(ls, lb) {\n    let gl = ls.dyd.gt;\n    let i = ls.fs.bl.firstgoto;\n    while (i < gl.n) {\n        if (eqstr(gl.arr[i].name, lb.name))\n            closegoto(ls, i, lb);\n        else\n            i++;\n    }\n};\n\n/*\n** export pending gotos to outer level, to check them against\n** outer labels; if the block being exited has upvalues, and\n** the goto exits the scope of any variable (which can be the\n** upvalue), close those variables being exited.\n*/\nconst movegotosout = function(fs, bl) {\n    let i = bl.firstgoto;\n    let gl = fs.ls.dyd.gt;\n    /* correct pending gotos to current block and try to close it\n       with visible labels */\n    while (i < gl.n) {\n        let gt = gl.arr[i];\n        if (gt.nactvar > bl.nactvar) {\n            if (bl.upval)\n                luaK_patchclose(fs, gt.pc, bl.nactvar);\n            gt.nactvar = bl.nactvar;\n        }\n        if (!findlabel(fs.ls, i))\n            i++;  /* move to next one */\n    }\n};\n\nconst enterblock = function(fs, bl, isloop) {\n    bl.isloop = isloop;\n    bl.nactvar = fs.nactvar;\n    bl.firstlabel = fs.ls.dyd.label.n;\n    bl.firstgoto = fs.ls.dyd.gt.n;\n    bl.upval = 0;\n    bl.previous = fs.bl;\n    fs.bl = bl;\n    lua_assert(fs.freereg === fs.nactvar);\n};\n\n/*\n** create a label named 'break' to resolve break statements\n*/\nconst breaklabel = function(ls) {\n    let n = luaS_newliteral(ls.L, \"break\");\n    let l = newlabelentry(ls, ls.dyd.label, n, 0, ls.fs.pc);\n    findgotos(ls, ls.dyd.label.arr[l]);\n};\n\n/*\n** generates an error for an undefined 'goto'; choose appropriate\n** message when label name is a reserved word (which can only be 'break')\n*/\nconst undefgoto = function(ls, gt) {\n    let msg = llex.isreserved(gt.name)\n        ? \"<%s> at line %d not inside a loop\"\n        : \"no visible label '%s' for <goto> at line %d\";\n    msg = lobject.luaO_pushfstring(ls.L, to_luastring(msg), gt.name.getstr(), gt.line);\n    semerror(ls, msg);\n};\n\n/*\n** adds a new prototype into list of prototypes\n*/\nconst addprototype = function(ls) {\n    let L = ls.L;\n    let clp = new Proto(L);\n    let fs = ls.fs;\n    let f = fs.f;  /* prototype of current function */\n    f.p[fs.np++] = clp;\n    return clp;\n};\n\n/*\n** codes instruction to create new closure in parent function.\n*/\nconst codeclosure = function(ls, v) {\n    let fs = ls.fs.prev;\n    init_exp(v, expkind.VRELOCABLE, luaK_codeABx(fs, OP_CLOSURE, 0, fs.np -1));\n    luaK_exp2nextreg(fs, v);  /* fix it at the last register */\n};\n\nconst open_func = function(ls, fs, bl) {\n    fs.prev = ls.fs;  /* linked list of funcstates */\n    fs.ls = ls;\n    ls.fs = fs;\n    fs.pc = 0;\n    fs.lasttarget = 0;\n    fs.jpc = NO_JUMP;\n    fs.freereg = 0;\n    fs.nk = 0;\n    fs.np = 0;\n    fs.nups = 0;\n    fs.nlocvars = 0;\n    fs.nactvar = 0;\n    fs.firstlocal = ls.dyd.actvar.n;\n    fs.bl = null;\n    let f = fs.f;\n    f.source = ls.source;\n    f.maxstacksize = 2;  /* registers 0/1 are always valid */\n    enterblock(fs, bl, false);\n};\n\nconst leaveblock = function(fs) {\n    let bl = fs.bl;\n    let ls = fs.ls;\n    if (bl.previous && bl.upval) {\n        /* create a 'jump to here' to close upvalues */\n        let j = luaK_jump(fs);\n        luaK_patchclose(fs, j , bl.nactvar);\n        luaK_patchtohere(fs, j);\n    }\n\n    if (bl.isloop)\n        breaklabel(ls);  /* close pending breaks */\n\n    fs.bl = bl.previous;\n    removevars(fs, bl.nactvar);\n    lua_assert(bl.nactvar === fs.nactvar);\n    fs.freereg = fs.nactvar;  /* free registers */\n    ls.dyd.label.n = bl.firstlabel;  /* remove local labels */\n    if (bl.previous)  /* inner block? */\n        movegotosout(fs, bl);  /* update pending gotos to outer block */\n    else if (bl.firstgoto < ls.dyd.gt.n)  /* pending gotos in outer block? */\n        undefgoto(ls, ls.dyd.gt.arr[bl.firstgoto]);  /* error */\n};\n\nconst close_func = function(ls) {\n    let fs = ls.fs;\n    luaK_ret(fs, 0, 0);  /* final return */\n    leaveblock(fs);\n    lua_assert(fs.bl === null);\n    ls.fs = fs.prev;\n};\n\n/*============================================================*/\n/* GRAMMAR RULES */\n/*============================================================*/\n\nconst block_follow = function(ls, withuntil) {\n    switch (ls.t.token) {\n        case R.TK_ELSE: case R.TK_ELSEIF:\n        case R.TK_END: case R.TK_EOS:\n            return true;\n        case R.TK_UNTIL: return withuntil;\n        default: return false;\n    }\n};\n\nconst statlist = function(ls) {\n    /* statlist -> { stat [';'] } */\n    while (!block_follow(ls, 1)) {\n        if (ls.t.token === R.TK_RETURN) {\n            statement(ls);\n            return;  /* 'return' must be last statement */\n        }\n        statement(ls);\n    }\n};\n\nconst fieldsel = function(ls, v) {\n    /* fieldsel -> ['.' | ':'] NAME */\n    let fs = ls.fs;\n    let key = new expdesc();\n    luaK_exp2anyregup(fs, v);\n    llex.luaX_next(ls);  /* skip the dot or colon */\n    checkname(ls, key);\n    luaK_indexed(fs, v, key);\n};\n\nconst yindex = function(ls, v) {\n    /* index -> '[' expr ']' */\n    llex.luaX_next(ls);  /* skip the '[' */\n    expr(ls, v);\n    luaK_exp2val(ls.fs, v);\n    checknext(ls, 93 /* (']').charCodeAt(0) */);\n};\n\n/*\n** {======================================================================\n** Rules for Constructors\n** =======================================================================\n*/\n\nclass ConsControl {\n    constructor() {\n        this.v = new expdesc(); /* last list item read */\n        this.t = new expdesc(); /* table descriptor */\n        this.nh = NaN;          /* total number of 'record' elements */\n        this.na = NaN;          /* total number of array elements */\n        this.tostore = NaN;     /* number of array elements pending to be stored */\n    }\n}\n\nconst recfield = function(ls, cc) {\n    /* recfield -> (NAME | '['exp1']') = exp1 */\n    let fs = ls.fs;\n    let reg = ls.fs.freereg;\n    let key = new expdesc();\n    let val = new expdesc();\n\n    if (ls.t.token === R.TK_NAME) {\n        checklimit(fs, cc.nh, MAX_INT, to_luastring(\"items in a constructor\", true));\n        checkname(ls, key);\n    } else  /* ls->t.token === '[' */\n        yindex(ls, key);\n    cc.nh++;\n    checknext(ls, 61 /* ('=').charCodeAt(0) */);\n    let rkkey = luaK_exp2RK(fs, key);\n    expr(ls, val);\n    luaK_codeABC(fs, OP_SETTABLE, cc.t.u.info, rkkey, luaK_exp2RK(fs, val));\n    fs.freereg = reg;  /* free registers */\n};\n\nconst closelistfield = function(fs, cc) {\n    if (cc.v.k === expkind.VVOID) return;  /* there is no list item */\n    luaK_exp2nextreg(fs, cc.v);\n    cc.v.k = expkind.VVOID;\n    if (cc.tostore === LFIELDS_PER_FLUSH) {\n        luaK_setlist(fs, cc.t.u.info, cc.na, cc.tostore);  /* flush */\n        cc.tostore = 0;  /* no more items pending */\n    }\n};\n\nconst lastlistfield = function(fs, cc) {\n    if (cc.tostore === 0) return;\n    if (hasmultret(cc.v.k)) {\n        luaK_setmultret(fs, cc.v);\n        luaK_setlist(fs, cc.t.u.info, cc.na, LUA_MULTRET);\n        cc.na--;  /* do not count last expression (unknown number of elements) */\n    } else {\n        if (cc.v.k !== expkind.VVOID)\n            luaK_exp2nextreg(fs, cc.v);\n        luaK_setlist(fs, cc.t.u.info, cc.na, cc.tostore);\n    }\n};\n\nconst listfield = function(ls, cc) {\n    /* listfield -> exp */\n    expr(ls, cc.v);\n    checklimit(ls.fs, cc.na, MAX_INT, to_luastring(\"items in a constructor\", true));\n    cc.na++;\n    cc.tostore++;\n};\n\nconst field = function(ls, cc) {\n    /* field -> listfield | recfield */\n    switch (ls.t.token) {\n        case R.TK_NAME: {  /* may be 'listfield' or 'recfield' */\n            if (llex.luaX_lookahead(ls) !== 61 /* ('=').charCodeAt(0) */)  /* expression? */\n                listfield(ls, cc);\n            else\n                recfield(ls, cc);\n            break;\n        }\n        case 91 /* ('[').charCodeAt(0) */: {\n            recfield(ls, cc);\n            break;\n        }\n        default: {\n            listfield(ls, cc);\n            break;\n        }\n    }\n};\n\nconst constructor = function(ls, t) {\n    /* constructor -> '{' [ field { sep field } [sep] ] '}'\n       sep -> ',' | ';' */\n    let fs = ls.fs;\n    let line = ls.linenumber;\n    let pc = luaK_codeABC(fs, OP_NEWTABLE, 0, 0, 0);\n    let cc = new ConsControl();\n    cc.na = cc.nh = cc.tostore = 0;\n    cc.t = t;\n    init_exp(t, expkind.VRELOCABLE, pc);\n    init_exp(cc.v, expkind.VVOID, 0);  /* no value (yet) */\n    luaK_exp2nextreg(ls.fs, t);  /* fix it at stack top */\n    checknext(ls, 123 /* ('{').charCodeAt(0) */);\n    do {\n        lua_assert(cc.v.k === expkind.VVOID || cc.tostore > 0);\n        if (ls.t.token === 125 /* ('}').charCodeAt(0) */) break;\n        closelistfield(fs, cc);\n        field(ls, cc);\n    } while (testnext(ls, 44 /* (',').charCodeAt(0) */) || testnext(ls, 59 /* (';').charCodeAt(0) */));\n    check_match(ls, 125 /* ('}').charCodeAt(0) */, 123 /* ('{').charCodeAt(0) */, line);\n    lastlistfield(fs, cc);\n    SETARG_B(fs.f.code[pc], lobject.luaO_int2fb(cc.na));  /* set initial array size */\n    SETARG_C(fs.f.code[pc], lobject.luaO_int2fb(cc.nh));  /* set initial table size */\n};\n\n/* }====================================================================== */\n\nconst parlist = function(ls) {\n    /* parlist -> [ param { ',' param } ] */\n    let fs = ls.fs;\n    let f = fs.f;\n    let nparams = 0;\n    f.is_vararg = false;\n    if (ls.t.token !== 41 /* (')').charCodeAt(0) */) {  /* is 'parlist' not empty? */\n        do {\n            switch (ls.t.token) {\n                case R.TK_NAME: {  /* param -> NAME */\n                    new_localvar(ls, str_checkname(ls));\n                    nparams++;\n                    break;\n                }\n                case R.TK_DOTS: {  /* param -> '...' */\n                    llex.luaX_next(ls);\n                    f.is_vararg = true;  /* declared vararg */\n                    break;\n                }\n                default: llex.luaX_syntaxerror(ls, to_luastring(\"<name> or '...' expected\", true));\n            }\n        } while(!f.is_vararg && testnext(ls, 44 /* (',').charCodeAt(0) */));\n    }\n    adjustlocalvars(ls, nparams);\n    f.numparams = fs.nactvar;\n    luaK_reserveregs(fs, fs.nactvar);  /* reserve register for parameters */\n};\n\nconst body = function(ls, e, ismethod, line) {\n    /* body ->  '(' parlist ')' block END */\n    let new_fs = new FuncState();\n    let bl = new BlockCnt();\n    new_fs.f = addprototype(ls);\n    new_fs.f.linedefined = line;\n    open_func(ls, new_fs, bl);\n    checknext(ls, 40 /* ('(').charCodeAt(0) */);\n    if (ismethod) {\n        new_localvarliteral(ls, \"self\");  /* create 'self' parameter */\n        adjustlocalvars(ls, 1);\n    }\n    parlist(ls);\n    checknext(ls, 41 /* (')').charCodeAt(0) */);\n    statlist(ls);\n    new_fs.f.lastlinedefined = ls.linenumber;\n    check_match(ls, R.TK_END, R.TK_FUNCTION, line);\n    codeclosure(ls, e);\n    close_func(ls);\n};\n\nconst explist = function(ls, v) {\n    /* explist -> expr { ',' expr } */\n    let n = 1;  /* at least one expression */\n    expr(ls, v);\n    while (testnext(ls, 44 /* (',').charCodeAt(0) */)) {\n        luaK_exp2nextreg(ls.fs, v);\n        expr(ls, v);\n        n++;\n    }\n    return n;\n};\n\nconst funcargs = function(ls, f, line) {\n    let fs = ls.fs;\n    let args = new expdesc();\n    switch (ls.t.token) {\n        case 40 /* ('(').charCodeAt(0) */: {  /* funcargs -> '(' [ explist ] ')' */\n            llex.luaX_next(ls);\n            if (ls.t.token === 41 /* (')').charCodeAt(0) */)  /* arg list is empty? */\n                args.k = expkind.VVOID;\n            else {\n                explist(ls, args);\n                luaK_setmultret(fs, args);\n            }\n            check_match(ls, 41 /* (')').charCodeAt(0) */, 40 /* ('(').charCodeAt(0) */, line);\n            break;\n        }\n        case 123 /* ('{').charCodeAt(0) */: {  /* funcargs -> constructor */\n            constructor(ls, args);\n            break;\n        }\n        case R.TK_STRING: {  /* funcargs -> STRING */\n            codestring(ls, args, ls.t.seminfo.ts);\n            llex.luaX_next(ls);  /* must use 'seminfo' before 'next' */\n            break;\n        }\n        default: {\n            llex.luaX_syntaxerror(ls, to_luastring(\"function arguments expected\", true));\n        }\n    }\n    lua_assert(f.k === expkind.VNONRELOC);\n    let nparams;\n    let base = f.u.info;  /* base register for call */\n    if (hasmultret(args.k))\n        nparams = LUA_MULTRET;  /* open call */\n    else {\n        if (args.k !== expkind.VVOID)\n            luaK_exp2nextreg(fs, args);  /* close last argument */\n        nparams = fs.freereg - (base+1);\n    }\n    init_exp(f, expkind.VCALL, luaK_codeABC(fs, OP_CALL, base, nparams+1, 2));\n    luaK_fixline(fs, line);\n    fs.freereg = base + 1; /* call remove function and arguments and leaves (unless changed) one result */\n};\n\n/*\n** {======================================================================\n** Expression parsing\n** =======================================================================\n*/\n\nconst primaryexp = function(ls, v) {\n    /* primaryexp -> NAME | '(' expr ')' */\n    switch (ls.t.token) {\n        case 40 /* ('(').charCodeAt(0) */: {\n            let line = ls.linenumber;\n            llex.luaX_next(ls);\n            expr(ls, v);\n            check_match(ls, 41 /* (')').charCodeAt(0) */, 40 /* ('(').charCodeAt(0) */, line);\n            luaK_dischargevars(ls.fs, v);\n            return;\n        }\n        case R.TK_NAME: {\n            singlevar(ls, v);\n            return;\n        }\n        default: {\n            llex.luaX_syntaxerror(ls, to_luastring(\"unexpected symbol\", true));\n        }\n    }\n};\n\nconst suffixedexp = function(ls, v) {\n    /* suffixedexp ->\n       primaryexp { '.' NAME | '[' exp ']' | ':' NAME funcargs | funcargs } */\n    let fs = ls.fs;\n    let line = ls.linenumber;\n    primaryexp(ls, v);\n    for (;;) {\n        switch (ls.t.token) {\n            case 46 /* ('.').charCodeAt(0) */: {  /* fieldsel */\n                fieldsel(ls, v);\n                break;\n            }\n            case 91 /* ('[').charCodeAt(0) */: {  /* '[' exp1 ']' */\n                let key = new expdesc();\n                luaK_exp2anyregup(fs, v);\n                yindex(ls, key);\n                luaK_indexed(fs, v, key);\n                break;\n            }\n            case 58 /* (':').charCodeAt(0) */: {  /* ':' NAME funcargs */\n                let key = new expdesc();\n                llex.luaX_next(ls);\n                checkname(ls, key);\n                luaK_self(fs, v, key);\n                funcargs(ls, v, line);\n                break;\n            }\n            case 40 /* ('(').charCodeAt(0) */: case R.TK_STRING: case 123 /* ('{').charCodeAt(0) */: {  /* funcargs */\n                luaK_exp2nextreg(fs, v);\n                funcargs(ls, v, line);\n                break;\n            }\n            default: return;\n        }\n    }\n};\n\nconst simpleexp = function(ls, v) {\n    /* simpleexp -> FLT | INT | STRING | NIL | TRUE | FALSE | ... |\n       constructor | FUNCTION body | suffixedexp */\n    switch (ls.t.token) {\n        case R.TK_FLT: {\n            init_exp(v, expkind.VKFLT, 0);\n            v.u.nval = ls.t.seminfo.r;\n            break;\n        }\n        case R.TK_INT: {\n            init_exp(v, expkind.VKINT, 0);\n            v.u.ival = ls.t.seminfo.i;\n            break;\n        }\n        case R.TK_STRING: {\n            codestring(ls, v, ls.t.seminfo.ts);\n            break;\n        }\n        case R.TK_NIL: {\n            init_exp(v, expkind.VNIL, 0);\n            break;\n        }\n        case R.TK_TRUE: {\n            init_exp(v, expkind.VTRUE, 0);\n            break;\n        }\n        case R.TK_FALSE: {\n            init_exp(v, expkind.VFALSE, 0);\n            break;\n        }\n        case R.TK_DOTS: {  /* vararg */\n            let fs = ls.fs;\n            check_condition(ls, fs.f.is_vararg, to_luastring(\"cannot use '...' outside a vararg function\", true));\n            init_exp(v, expkind.VVARARG, luaK_codeABC(fs, OP_VARARG, 0, 1, 0));\n            break;\n        }\n        case 123 /* ('{').charCodeAt(0) */: {  /* constructor */\n            constructor(ls, v);\n            return;\n        }\n        case R.TK_FUNCTION: {\n            llex.luaX_next(ls);\n            body(ls, v, 0, ls.linenumber);\n            return;\n        }\n        default: {\n            suffixedexp(ls, v);\n            return;\n        }\n    }\n    llex.luaX_next(ls);\n};\n\nconst getunopr = function(op) {\n    switch (op) {\n        case R.TK_NOT: return OPR_NOT;\n        case 45 /* ('-').charCodeAt(0) */: return OPR_MINUS;\n        case 126 /* ('~').charCodeAt(0) */: return OPR_BNOT;\n        case 35 /* ('#').charCodeAt(0) */: return OPR_LEN;\n        default: return OPR_NOUNOPR;\n    }\n};\n\nconst getbinopr = function(op) {\n    switch (op) {\n        case 43 /* ('+').charCodeAt(0) */: return OPR_ADD;\n        case 45 /* ('-').charCodeAt(0) */: return OPR_SUB;\n        case 42 /* ('*').charCodeAt(0) */: return OPR_MUL;\n        case 37 /* ('%').charCodeAt(0) */: return OPR_MOD;\n        case 94 /* ('^').charCodeAt(0) */: return OPR_POW;\n        case 47 /* ('/').charCodeAt(0) */: return OPR_DIV;\n        case R.TK_IDIV:   return OPR_IDIV;\n        case 38 /* ('&').charCodeAt(0) */: return OPR_BAND;\n        case 124 /* ('|').charCodeAt(0) */: return OPR_BOR;\n        case 126 /* ('~').charCodeAt(0) */: return OPR_BXOR;\n        case R.TK_SHL:    return OPR_SHL;\n        case R.TK_SHR:    return OPR_SHR;\n        case R.TK_CONCAT: return OPR_CONCAT;\n        case R.TK_NE:     return OPR_NE;\n        case R.TK_EQ:     return OPR_EQ;\n        case 60 /* ('<').charCodeAt(0) */: return OPR_LT;\n        case R.TK_LE:     return OPR_LE;\n        case 62 /* ('>').charCodeAt(0) */: return OPR_GT;\n        case R.TK_GE:     return OPR_GE;\n        case R.TK_AND:    return OPR_AND;\n        case R.TK_OR:     return OPR_OR;\n        default:          return OPR_NOBINOPR;\n    }\n};\n\nconst priority = [  /* ORDER OPR */\n    {left: 10, right: 10}, {left: 10, right: 10},     /* '+' '-' */\n    {left: 11, right: 11}, {left: 11, right: 11},     /* '*' '%' */\n    {left: 14, right: 13},               /* '^' (right associative) */\n    {left: 11, right: 11}, {left: 11, right: 11},     /* '/' '//' */\n    {left: 6, right: 6}, {left: 4, right: 4}, {left: 5, right: 5}, /* '&' '|' '~' */\n    {left: 7, right: 7}, {left: 7, right: 7},         /* '<<' '>>' */\n    {left: 9, right: 8},                 /* '..' (right associative) */\n    {left: 3, right: 3}, {left: 3, right: 3}, {left: 3, right: 3}, /* ==, <, <= */\n    {left: 3, right: 3}, {left: 3, right: 3}, {left: 3, right: 3}, /* ~=, >, >= */\n    {left: 2, right: 2}, {left: 1, right: 1}          /* and, or */\n];\n\nconst UNARY_PRIORITY = 12;\n\n/*\n** subexpr -> (simpleexp | unop subexpr) { binop subexpr }\n** where 'binop' is any binary operator with a priority higher than 'limit'\n*/\nconst subexpr = function(ls, v, limit) {\n    enterlevel(ls);\n    let uop = getunopr(ls.t.token);\n    if (uop !== OPR_NOUNOPR) {\n        let line = ls.linenumber;\n        llex.luaX_next(ls);\n        subexpr(ls, v, UNARY_PRIORITY);\n        luaK_prefix(ls.fs, uop, v, line);\n    } else\n        simpleexp(ls, v);\n    /* expand while operators have priorities higher than 'limit' */\n    let op = getbinopr(ls.t.token);\n    while (op !== OPR_NOBINOPR && priority[op].left > limit) {\n        let v2 = new expdesc();\n        let line = ls.linenumber;\n        llex.luaX_next(ls);\n        luaK_infix(ls.fs, op, v);\n        /* read sub-expression with higher priority */\n        let nextop = subexpr(ls, v2, priority[op].right);\n        luaK_posfix(ls.fs, op, v, v2, line);\n        op = nextop;\n    }\n    leavelevel(ls);\n    return op;  /* return first untreated operator */\n};\n\nconst expr = function(ls, v) {\n    subexpr(ls, v, 0);\n};\n\n/* }==================================================================== */\n\n\n\n/*\n** {======================================================================\n** Rules for Statements\n** =======================================================================\n*/\n\nconst block = function(ls) {\n    /* block -> statlist */\n    let fs = ls.fs;\n    let bl = new BlockCnt();\n    enterblock(fs, bl, 0);\n    statlist(ls);\n    leaveblock(fs);\n};\n\n/*\n** structure to chain all variables in the left-hand side of an\n** assignment\n*/\nclass LHS_assign {\n    constructor() {\n        this.prev = null;\n        this.v = new expdesc();  /* variable (global, local, upvalue, or indexed) */\n    }\n}\n\n/*\n** check whether, in an assignment to an upvalue/local variable, the\n** upvalue/local variable is begin used in a previous assignment to a\n** table. If so, save original upvalue/local value in a safe place and\n** use this safe copy in the previous assignment.\n*/\nconst check_conflict = function(ls, lh, v) {\n    let fs = ls.fs;\n    let extra = fs.freereg;  /* eventual position to save local variable */\n    let conflict = false;\n    for (; lh; lh = lh.prev) {  /* check all previous assignments */\n        if (lh.v.k === expkind.VINDEXED) {  /* assigning to a table? */\n            /* table is the upvalue/local being assigned now? */\n            if (lh.v.u.ind.vt === v.k && lh.v.u.ind.t === v.u.info) {\n                conflict = true;\n                lh.v.u.ind.vt = expkind.VLOCAL;\n                lh.v.u.ind.t = extra;  /* previous assignment will use safe copy */\n            }\n            /* index is the local being assigned? (index cannot be upvalue) */\n            if (v.k === expkind.VLOCAL && lh.v.u.ind.idx === v.u.info) {\n                conflict = true;\n                lh.v.u.ind.idx = extra;  /* previous assignment will use safe copy */\n            }\n        }\n    }\n    if (conflict) {\n        /* copy upvalue/local value to a temporary (in position 'extra') */\n        let op = v.k === expkind.VLOCAL ? OP_MOVE : OP_GETUPVAL;\n        luaK_codeABC(fs, op, extra, v.u.info, 0);\n        luaK_reserveregs(fs, 1);\n    }\n};\n\nconst assignment = function(ls, lh, nvars) {\n    let e = new expdesc();\n    check_condition(ls, vkisvar(lh.v.k), to_luastring(\"syntax error\", true));\n    if (testnext(ls, 44 /* (',').charCodeAt(0) */)) {  /* assignment -> ',' suffixedexp assignment */\n        let nv = new LHS_assign();\n        nv.prev = lh;\n        suffixedexp(ls, nv.v);\n        if (nv.v.k !== expkind.VINDEXED)\n            check_conflict(ls, lh, nv.v);\n        checklimit(ls.fs, nvars + ls.L.nCcalls, LUAI_MAXCCALLS, to_luastring(\"JS levels\", true));\n        assignment(ls, nv, nvars + 1);\n    } else {  /* assignment -> '=' explist */\n        checknext(ls, 61 /* ('=').charCodeAt(0) */);\n        let nexps = explist(ls, e);\n        if (nexps !== nvars)\n            adjust_assign(ls, nvars, nexps, e);\n        else {\n            luaK_setoneret(ls.fs, e);  /* close last expression */\n            luaK_storevar(ls.fs, lh.v, e);\n            return;  /* avoid default */\n        }\n    }\n    init_exp(e, expkind.VNONRELOC, ls.fs.freereg-1);  /* default assignment */\n    luaK_storevar(ls.fs, lh.v, e);\n};\n\nconst cond = function(ls) {\n    /* cond -> exp */\n    let v = new expdesc();\n    expr(ls, v);  /* read condition */\n    if (v.k === expkind.VNIL) v.k = expkind.VFALSE;  /* 'falses' are all equal here */\n    luaK_goiftrue(ls.fs, v);\n    return v.f;\n};\n\nconst gotostat = function(ls, pc) {\n    let line = ls.linenumber;\n    let label;\n    if (testnext(ls, R.TK_GOTO))\n        label = str_checkname(ls);\n    else {\n        llex.luaX_next(ls);  /* skip break */\n        label = luaS_newliteral(ls.L, \"break\");\n    }\n    let g = newlabelentry(ls, ls.dyd.gt, label, line, pc);\n    findlabel(ls, g);  /* close it if label already defined */\n};\n\n/* check for repeated labels on the same block */\nconst checkrepeated = function(fs, ll, label) {\n    for (let i = fs.bl.firstlabel; i < ll.n; i++) {\n        if (eqstr(label, ll.arr[i].name)) {\n            let msg = lobject.luaO_pushfstring(fs.ls.L,\n                to_luastring(\"label '%s' already defined on line %d\", true),\n                label.getstr(), ll.arr[i].line);\n            semerror(fs.ls, msg);\n        }\n    }\n};\n\n/* skip no-op statements */\nconst skipnoopstat = function(ls) {\n    while (ls.t.token === 59 /* (';').charCodeAt(0) */ || ls.t.token === R.TK_DBCOLON)\n        statement(ls);\n};\n\nconst labelstat = function(ls, label, line) {\n    /* label -> '::' NAME '::' */\n    let fs = ls.fs;\n    let ll = ls.dyd.label;\n    let l;  /* index of new label being created */\n    checkrepeated(fs, ll, label);  /* check for repeated labels */\n    checknext(ls, R.TK_DBCOLON);  /* skip double colon */\n    /* create new entry for this label */\n    l = newlabelentry(ls, ll, label, line, luaK_getlabel(fs));\n    skipnoopstat(ls);  /* skip other no-op statements */\n    if (block_follow(ls, 0)) {  /* label is last no-op statement in the block? */\n        /* assume that locals are already out of scope */\n        ll.arr[l].nactvar = fs.bl.nactvar;\n    }\n    findgotos(ls, ll.arr[l]);\n};\n\nconst whilestat = function(ls, line) {\n    /* whilestat -> WHILE cond DO block END */\n    let fs = ls.fs;\n    let bl = new BlockCnt();\n    llex.luaX_next(ls);  /* skip WHILE */\n    let whileinit = luaK_getlabel(fs);\n    let condexit = cond(ls);\n    enterblock(fs, bl, 1);\n    checknext(ls, R.TK_DO);\n    block(ls);\n    luaK_jumpto(fs, whileinit);\n    check_match(ls, R.TK_END, R.TK_WHILE, line);\n    leaveblock(fs);\n    luaK_patchtohere(fs, condexit);  /* false conditions finish the loop */\n};\n\nconst repeatstat = function(ls, line) {\n    /* repeatstat -> REPEAT block UNTIL cond */\n    let fs = ls.fs;\n    let repeat_init = luaK_getlabel(fs);\n    let bl1 = new BlockCnt();\n    let bl2 = new BlockCnt();\n    enterblock(fs, bl1, 1);  /* loop block */\n    enterblock(fs, bl2, 0);  /* scope block */\n    llex.luaX_next(ls);  /* skip REPEAT */\n    statlist(ls);\n    check_match(ls, R.TK_UNTIL, R.TK_REPEAT, line);\n    let condexit = cond(ls);  /* read condition (inside scope block) */\n    if (bl2.upval)  /* upvalues? */\n        luaK_patchclose(fs, condexit, bl2.nactvar);\n    leaveblock(fs);  /* finish scope */\n    luaK_patchlist(fs, condexit, repeat_init);  /* close the loop */\n    leaveblock(fs);  /* finish loop */\n};\n\nconst exp1 = function(ls) {\n    let e = new expdesc();\n    expr(ls, e);\n    luaK_exp2nextreg(ls.fs, e);\n    lua_assert(e.k === expkind.VNONRELOC);\n    let reg = e.u.info;\n    return reg;\n};\n\nconst forbody = function(ls, base, line, nvars, isnum) {\n    /* forbody -> DO block */\n    let bl = new BlockCnt();\n    let fs = ls.fs;\n    let endfor;\n    adjustlocalvars(ls, 3);  /* control variables */\n    checknext(ls, R.TK_DO);\n    let prep = isnum ? luaK_codeAsBx(fs, OP_FORPREP, base, NO_JUMP) : luaK_jump(fs);\n    enterblock(fs, bl, 0);  /* scope for declared variables */\n    adjustlocalvars(ls, nvars);\n    luaK_reserveregs(fs, nvars);\n    block(ls);\n    leaveblock(fs);  /* end of scope for declared variables */\n    luaK_patchtohere(fs, prep);\n    if (isnum)  /* end of scope for declared variables */\n        endfor = luaK_codeAsBx(fs, OP_FORLOOP, base, NO_JUMP);\n    else {  /* generic for */\n        luaK_codeABC(fs, OP_TFORCALL, base, 0, nvars);\n        luaK_fixline(fs, line);\n        endfor = luaK_codeAsBx(fs, OP_TFORLOOP, base + 2, NO_JUMP);\n    }\n    luaK_patchlist(fs, endfor, prep + 1);\n    luaK_fixline(fs, line);\n};\n\nconst fornum = function(ls, varname, line) {\n    /* fornum -> NAME = exp1,exp1[,exp1] forbody */\n    let fs = ls.fs;\n    let base = fs.freereg;\n    new_localvarliteral(ls, \"(for index)\");\n    new_localvarliteral(ls, \"(for limit)\");\n    new_localvarliteral(ls, \"(for step)\");\n    new_localvar(ls, varname);\n    checknext(ls, 61 /* ('=').charCodeAt(0) */);\n    exp1(ls);  /* initial value */\n    checknext(ls, 44 /* (',').charCodeAt(0) */);\n    exp1(ls);  /* limit */\n    if (testnext(ls, 44 /* (',').charCodeAt(0) */))\n        exp1(ls);  /* optional step */\n    else {  /* default step = 1 */\n        luaK_codek(fs, fs.freereg, luaK_intK(fs, 1));\n        luaK_reserveregs(fs, 1);\n    }\n    forbody(ls, base, line, 1, 1);\n};\n\nconst forlist = function(ls, indexname) {\n    /* forlist -> NAME {,NAME} IN explist forbody */\n    let fs = ls.fs;\n    let e = new expdesc();\n    let nvars = 4;  /* gen, state, control, plus at least one declared var */\n    let base = fs.freereg;\n    /* create control variables */\n    new_localvarliteral(ls, \"(for generator)\");\n    new_localvarliteral(ls, \"(for state)\");\n    new_localvarliteral(ls, \"(for control)\");\n    /* create declared variables */\n    new_localvar(ls, indexname);\n    while (testnext(ls, 44 /* (',').charCodeAt(0) */)) {\n        new_localvar(ls, str_checkname(ls));\n        nvars++;\n    }\n    checknext(ls, R.TK_IN);\n    let line = ls.linenumber;\n    adjust_assign(ls, 3, explist(ls, e), e);\n    luaK_checkstack(fs, 3);  /* extra space to call generator */\n    forbody(ls, base, line, nvars - 3, 0);\n};\n\nconst forstat = function(ls, line) {\n    /* forstat -> FOR (fornum | forlist) END */\n    let fs = ls.fs;\n    let bl = new BlockCnt();\n    enterblock(fs, bl, 1);  /* scope for loop and control variables */\n    llex.luaX_next(ls);  /* skip 'for' */\n    let varname = str_checkname(ls);  /* first variable name */\n    switch (ls.t.token) {\n        case 61 /* ('=').charCodeAt(0) */: fornum(ls, varname, line); break;\n        case 44 /* (',').charCodeAt(0) */: case R.TK_IN: forlist(ls, varname); break;\n        default: llex.luaX_syntaxerror(ls, to_luastring(\"'=' or 'in' expected\", true));\n    }\n    check_match(ls, R.TK_END, R.TK_FOR, line);\n    leaveblock(fs);  /* loop scope ('break' jumps to this point) */\n};\n\nconst test_then_block = function(ls, escapelist) {\n    /* test_then_block -> [IF | ELSEIF] cond THEN block */\n    let bl = new BlockCnt();\n    let fs = ls.fs;\n    let v = new expdesc();\n    let jf;  /* instruction to skip 'then' code (if condition is false) */\n\n    llex.luaX_next(ls);  /* skip IF or ELSEIF */\n    expr(ls, v);  /* read condition */\n    checknext(ls, R.TK_THEN);\n\n    if (ls.t.token === R.TK_GOTO || ls.t.token === R.TK_BREAK) {\n        luaK_goiffalse(ls.fs, v);  /* will jump to label if condition is true */\n        enterblock(fs, bl, false);  /* must enter block before 'goto' */\n        gotostat(ls, v.t);   /* handle goto/break */\n        while (testnext(ls, 59 /* (';').charCodeAt(0) */));  /* skip colons */\n        if (block_follow(ls, 0)) {  /* 'goto' is the entire block? */\n            leaveblock(fs);\n            return escapelist;  /* and that is it */\n        } else  /* must skip over 'then' part if condition is false */\n            jf = luaK_jump(fs);\n    } else {  /* regular case (not goto/break) */\n        luaK_goiftrue(ls.fs, v);  /* skip over block if condition is false */\n        enterblock(fs, bl, false);\n        jf = v.f;\n    }\n\n    statlist(ls);  /* 'then' part */\n    leaveblock(fs);\n    if (ls.t.token === R.TK_ELSE || ls.t.token === R.TK_ELSEIF)  /* followed by 'else'/'elseif'? */\n        escapelist = luaK_concat(fs, escapelist, luaK_jump(fs));  /* must jump over it */\n    luaK_patchtohere(fs, jf);\n\n    return escapelist;\n};\n\nconst ifstat = function(ls, line) {\n    /* ifstat -> IF cond THEN block {ELSEIF cond THEN block} [ELSE block] END */\n    let fs = ls.fs;\n    let escapelist = NO_JUMP;  /* exit list for finished parts */\n    escapelist = test_then_block(ls, escapelist);  /* IF cond THEN block */\n    while (ls.t.token === R.TK_ELSEIF)\n        escapelist = test_then_block(ls, escapelist);  /* ELSEIF cond THEN block */\n    if (testnext(ls, R.TK_ELSE))\n        block(ls);  /* 'else' part */\n    check_match(ls, R.TK_END, R.TK_IF, line);\n    luaK_patchtohere(fs, escapelist);  /* patch escape list to 'if' end */\n};\n\nconst localfunc = function(ls) {\n    let b = new expdesc();\n    let fs = ls.fs;\n    new_localvar(ls, str_checkname(ls));  /* new local variable */\n    adjustlocalvars(ls, 1);  /* enter its scope */\n    body(ls, b, 0, ls.linenumber);  /* function created in next register */\n    /* debug information will only see the variable after this point! */\n    getlocvar(fs, b.u.info).startpc = fs.pc;\n};\n\nconst localstat = function(ls) {\n    /* stat -> LOCAL NAME {',' NAME} ['=' explist] */\n    let nvars = 0;\n    let nexps;\n    let e = new expdesc();\n    do {\n        new_localvar(ls, str_checkname(ls));\n        nvars++;\n    } while (testnext(ls, 44 /* (',').charCodeAt(0) */));\n    if (testnext(ls, 61 /* ('=').charCodeAt(0) */))\n        nexps = explist(ls, e);\n    else {\n        e.k = expkind.VVOID;\n        nexps = 0;\n    }\n    adjust_assign(ls, nvars, nexps, e);\n    adjustlocalvars(ls, nvars);\n};\n\nconst funcname = function(ls, v) {\n    /* funcname -> NAME {fieldsel} [':' NAME] */\n    let ismethod = 0;\n    singlevar(ls, v);\n    while (ls.t.token === 46 /* ('.').charCodeAt(0) */)\n        fieldsel(ls, v);\n    if (ls.t.token === 58 /* (':').charCodeAt(0) */) {\n        ismethod = 1;\n        fieldsel(ls, v);\n    }\n    return ismethod;\n};\n\nconst funcstat = function(ls, line) {\n    /* funcstat -> FUNCTION funcname body */\n    let v = new expdesc();\n    let b = new expdesc();\n    llex.luaX_next(ls);  /* skip FUNCTION */\n    let ismethod = funcname(ls, v);\n    body(ls, b, ismethod, line);\n    luaK_storevar(ls.fs, v, b);\n    luaK_fixline(ls.fs, line);  /* definition \"happens\" in the first line */\n};\n\nconst exprstat= function(ls) {\n    /* stat -> func | assignment */\n    let fs = ls.fs;\n    let v = new LHS_assign();\n    suffixedexp(ls, v.v);\n    if (ls.t.token === 61 /* ('=').charCodeAt(0) */ || ls.t.token === 44 /* (',').charCodeAt(0) */) { /* stat . assignment ? */\n        v.prev = null;\n        assignment(ls, v, 1);\n    }\n    else {  /* stat -> func */\n        check_condition(ls, v.v.k === expkind.VCALL, to_luastring(\"syntax error\", true));\n        SETARG_C(getinstruction(fs, v.v), 1);  /* call statement uses no results */\n    }\n};\n\nconst retstat = function(ls) {\n    /* stat -> RETURN [explist] [';'] */\n    let fs = ls.fs;\n    let e = new expdesc();\n    let first, nret;  /* registers with returned values */\n    if (block_follow(ls, 1) || ls.t.token === 59 /* (';').charCodeAt(0) */)\n        first = nret = 0;  /* return no values */\n    else {\n        nret = explist(ls, e);  /* optional return values */\n        if (hasmultret(e.k)) {\n            luaK_setmultret(fs, e);\n            if (e.k === expkind.VCALL && nret === 1) {  /* tail call? */\n                SET_OPCODE(getinstruction(fs, e), OP_TAILCALL);\n                lua_assert(getinstruction(fs, e).A === fs.nactvar);\n            }\n            first = fs.nactvar;\n            nret = LUA_MULTRET;  /* return all values */\n        } else {\n            if (nret === 1)  /* only one single value? */\n                first = luaK_exp2anyreg(fs, e);\n            else {\n                luaK_exp2nextreg(fs, e);  /* values must go to the stack */\n                first = fs.nactvar;  /* return all active values */\n                lua_assert(nret === fs.freereg - first);\n            }\n        }\n    }\n    luaK_ret(fs, first, nret);\n    testnext(ls, 59 /* (';').charCodeAt(0) */);  /* skip optional semicolon */\n};\n\nconst statement = function(ls) {\n    let line = ls.linenumber;  /* may be needed for error messages */\n    enterlevel(ls);\n    switch(ls.t.token) {\n        case 59 /* (';').charCodeAt(0) */: {  /* stat -> ';' (empty statement) */\n            llex.luaX_next(ls);  /* skip ';' */\n            break;\n        }\n        case R.TK_IF: {  /* stat -> ifstat */\n            ifstat(ls, line);\n            break;\n        }\n        case R.TK_WHILE: {  /* stat -> whilestat */\n            whilestat(ls, line);\n            break;\n        }\n        case R.TK_DO: {  /* stat -> DO block END */\n            llex.luaX_next(ls);  /* skip DO */\n            block(ls);\n            check_match(ls, R.TK_END, R.TK_DO, line);\n            break;\n        }\n        case R.TK_FOR: {  /* stat -> forstat */\n            forstat(ls, line);\n            break;\n        }\n        case R.TK_REPEAT: {  /* stat -> repeatstat */\n            repeatstat(ls, line);\n            break;\n        }\n        case R.TK_FUNCTION: {  /* stat -> funcstat */\n            funcstat(ls, line);\n            break;\n        }\n        case R.TK_LOCAL: {  /* stat -> localstat */\n            llex.luaX_next(ls);  /* skip LOCAL */\n            if (testnext(ls, R.TK_FUNCTION))  /* local function? */\n                localfunc(ls);\n            else\n                localstat(ls);\n            break;\n        }\n        case R.TK_DBCOLON: {  /* stat -> label */\n            llex.luaX_next(ls);  /* skip double colon */\n            labelstat(ls, str_checkname(ls), line);\n            break;\n        }\n        case R.TK_RETURN: {  /* skip double colon */\n            llex.luaX_next(ls);  /* skip RETURN */\n            retstat(ls);\n            break;\n        }\n        case R.TK_BREAK:   /* stat -> breakstat */\n        case R.TK_GOTO: {  /* stat -> 'goto' NAME */\n            gotostat(ls, luaK_jump(ls.fs));\n            break;\n        }\n        default: {  /* stat -> func | assignment */\n            exprstat(ls);\n            break;\n        }\n    }\n    lua_assert(ls.fs.f.maxstacksize >= ls.fs.freereg && ls.fs.freereg >= ls.fs.nactvar);\n    ls.fs.freereg = ls.fs.nactvar;  /* free registers */\n    leavelevel(ls);\n};\n\n/*\n** compiles the main function, which is a regular vararg function with an\n** upvalue named LUA_ENV\n*/\nconst mainfunc = function(ls, fs) {\n    let bl = new BlockCnt();\n    let v = new expdesc();\n    open_func(ls, fs, bl);\n    fs.f.is_vararg = true;  /* main function is always declared vararg */\n    init_exp(v, expkind.VLOCAL, 0);  /* create and... */\n    newupvalue(fs, ls.envn, v);  /* ...set environment upvalue */\n    llex.luaX_next(ls);  /* read first token */\n    statlist(ls);  /* parse main body */\n    check(ls, R.TK_EOS);\n    close_func(ls);\n};\n\nconst luaY_parser = function(L, z, buff, dyd, name, firstchar) {\n    let lexstate = new llex.LexState();\n    let funcstate = new FuncState();\n    let cl = lfunc.luaF_newLclosure(L, 1);  /* create main closure */\n    ldo.luaD_inctop(L);\n    L.stack[L.top-1].setclLvalue(cl);\n    lexstate.h = ltable.luaH_new(L);  /* create table for scanner */\n    ldo.luaD_inctop(L);\n    L.stack[L.top-1].sethvalue(lexstate.h);\n    funcstate.f = cl.p = new Proto(L);\n    funcstate.f.source = luaS_new(L, name);\n    lexstate.buff = buff;\n    lexstate.dyd = dyd;\n    dyd.actvar.n = dyd.gt.n = dyd.label.n = 0;\n    llex.luaX_setinput(L, lexstate, z, funcstate.f.source, firstchar);\n    mainfunc(lexstate, funcstate);\n    lua_assert(!funcstate.prev && funcstate.nups === 1 && !lexstate.fs);\n    /* all scopes should be correctly finished */\n    lua_assert(dyd.actvar.n === 0 && dyd.gt.n === 0 && dyd.label.n === 0);\n    delete L.stack[--L.top];  /* remove scanner's table */\n    return cl;  /* closure is on the stack, too */\n};\n\n\nmodule.exports.Dyndata     = Dyndata;\nmodule.exports.expkind     = expkind;\nmodule.exports.expdesc     = expdesc;\nmodule.exports.luaY_parser = luaY_parser;\nmodule.exports.vkisinreg   = vkisinreg;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    LUA_OK,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TNONE,\n    LUA_TNUMBER,\n    LUA_TSTRING,\n    LUA_TTABLE,\n    LUA_VERSION,\n    LUA_YIELD,\n    lua_call,\n    lua_callk,\n    lua_concat,\n    lua_error,\n    lua_getglobal,\n    lua_geti,\n    lua_getmetatable,\n    lua_gettop,\n    lua_insert,\n    lua_isnil,\n    lua_isnone,\n    lua_isstring,\n    lua_load,\n    lua_next,\n    lua_pcallk,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcfunction,\n    lua_pushglobaltable,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawequal,\n    lua_rawget,\n    lua_rawlen,\n    lua_rawset,\n    lua_remove,\n    lua_replace,\n    lua_rotate,\n    lua_setfield,\n    lua_setmetatable,\n    lua_settop,\n    lua_setupvalue,\n    lua_stringtonumber,\n    lua_toboolean,\n    lua_tolstring,\n    lua_tostring,\n    lua_type,\n    lua_typename\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_checkany,\n    luaL_checkinteger,\n    luaL_checkoption,\n    luaL_checkstack,\n    luaL_checktype,\n    luaL_error,\n    luaL_getmetafield,\n    luaL_loadbufferx,\n    luaL_loadfile,\n    luaL_loadfilex,\n    luaL_optinteger,\n    luaL_optstring,\n    luaL_setfuncs,\n    luaL_tolstring,\n    luaL_where\n} = require('./lauxlib.js');\nconst {\n    to_jsstring,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nlet lua_writestring;\nlet lua_writeline;\nif (typeof process === \"undefined\") {\n    if (typeof TextDecoder === \"function\") { /* Older browsers don't have TextDecoder */\n        let buff = \"\";\n        let decoder = new TextDecoder(\"utf-8\");\n        lua_writestring = function(s) {\n            buff += decoder.decode(s, {stream: true});\n        };\n        let empty = new Uint8Array(0);\n        lua_writeline = function() {\n            buff += decoder.decode(empty);\n            console.log(buff);\n            buff = \"\";\n        };\n    } else {\n        let buff = [];\n        lua_writestring = function(s) {\n            try {\n                /* If the string is valid utf8, then we can use to_jsstring */\n                s = to_jsstring(s);\n            } catch(e) {\n                /* otherwise push copy of raw array */\n                let copy = new Uint8Array(s.length);\n                copy.set(s);\n                s = copy;\n            }\n            buff.push(s);\n        };\n        lua_writeline = function() {\n            console.log.apply(console.log, buff);\n            buff = [];\n        };\n    }\n} else {\n    lua_writestring = function(s) {\n        process.stdout.write(Buffer.from(s));\n    };\n    lua_writeline = function() {\n        process.stdout.write(\"\\n\");\n    };\n}\nconst luaB_print = function(L) {\n    let n = lua_gettop(L); /* number of arguments */\n    lua_getglobal(L, to_luastring(\"tostring\", true));\n    for (let i = 1; i <= n; i++) {\n        lua_pushvalue(L, -1);  /* function to be called */\n        lua_pushvalue(L, i);  /* value to print */\n        lua_call(L, 1, 1);\n        let s = lua_tolstring(L, -1);\n        if (s === null)\n            return luaL_error(L, to_luastring(\"'tostring' must return a string to 'print'\"));\n        if (i > 1) lua_writestring(to_luastring(\"\\t\"));\n        lua_writestring(s);\n        lua_pop(L, 1);\n    }\n    lua_writeline();\n    return 0;\n};\n\nconst luaB_tostring = function(L) {\n    luaL_checkany(L, 1);\n    luaL_tolstring(L, 1);\n\n    return 1;\n};\n\nconst luaB_getmetatable = function(L) {\n    luaL_checkany(L, 1);\n    if (!lua_getmetatable(L, 1)) {\n        lua_pushnil(L);\n        return 1;  /* no metatable */\n    }\n    luaL_getmetafield(L, 1, to_luastring(\"__metatable\", true));\n    return 1;  /* returns either __metatable field (if present) or metatable */\n};\n\nconst luaB_setmetatable = function(L) {\n    let t = lua_type(L, 2);\n    luaL_checktype(L, 1, LUA_TTABLE);\n    luaL_argcheck(L, t === LUA_TNIL || t === LUA_TTABLE, 2, \"nil or table expected\");\n    if (luaL_getmetafield(L, 1, to_luastring(\"__metatable\", true)) !== LUA_TNIL)\n        return luaL_error(L, to_luastring(\"cannot change a protected metatable\"));\n    lua_settop(L, 2);\n    lua_setmetatable(L, 1);\n    return 1;\n};\n\nconst luaB_rawequal = function(L) {\n    luaL_checkany(L, 1);\n    luaL_checkany(L, 2);\n    lua_pushboolean(L, lua_rawequal(L, 1, 2));\n    return 1;\n};\n\nconst luaB_rawlen = function(L) {\n    let t = lua_type(L, 1);\n    luaL_argcheck(L, t === LUA_TTABLE || t === LUA_TSTRING, 1, \"table or string expected\");\n    lua_pushinteger(L, lua_rawlen(L, 1));\n    return 1;\n};\n\nconst luaB_rawget = function(L) {\n    luaL_checktype(L, 1, LUA_TTABLE);\n    luaL_checkany(L, 2);\n    lua_settop(L, 2);\n    lua_rawget(L, 1);\n    return 1;\n};\n\nconst luaB_rawset = function(L) {\n    luaL_checktype(L, 1, LUA_TTABLE);\n    luaL_checkany(L, 2);\n    luaL_checkany(L, 3);\n    lua_settop(L, 3);\n    lua_rawset(L, 1);\n    return 1;\n};\n\nconst opts = [\n    \"stop\", \"restart\", \"collect\",\n    \"count\", \"step\", \"setpause\", \"setstepmul\",\n    \"isrunning\"\n].map((e) => to_luastring(e));\nconst luaB_collectgarbage = function(L) {\n    luaL_checkoption(L, 1, \"collect\", opts);\n    luaL_optinteger(L, 2, 0);\n    luaL_error(L, to_luastring(\"lua_gc not implemented\"));\n};\n\nconst luaB_type = function(L) {\n    let t = lua_type(L, 1);\n    luaL_argcheck(L, t !== LUA_TNONE, 1, \"value expected\");\n    lua_pushstring(L, lua_typename(L, t));\n    return 1;\n};\n\nconst pairsmeta = function(L, method, iszero, iter) {\n    luaL_checkany(L, 1);\n    if (luaL_getmetafield(L, 1, method) === LUA_TNIL) {  /* no metamethod? */\n        lua_pushcfunction(L, iter);  /* will return generator, */\n        lua_pushvalue(L, 1);  /* state, */\n        if (iszero) lua_pushinteger(L, 0);  /* and initial value */\n        else lua_pushnil(L);\n    } else {\n        lua_pushvalue(L, 1);  /* argument 'self' to metamethod */\n        lua_call(L, 1, 3);  /* get 3 values from metamethod */\n    }\n    return 3;\n};\n\nconst luaB_next = function(L) {\n    luaL_checktype(L, 1, LUA_TTABLE);\n    lua_settop(L, 2);  /* create a 2nd argument if there isn't one */\n    if (lua_next(L, 1))\n        return 2;\n    else {\n        lua_pushnil(L);\n        return 1;\n    }\n};\n\nconst luaB_pairs = function(L) {\n    return pairsmeta(L, to_luastring(\"__pairs\", true), 0, luaB_next);\n};\n\n/*\n** Traversal function for 'ipairs'\n*/\nconst ipairsaux = function(L) {\n    let i = luaL_checkinteger(L, 2) + 1;\n    lua_pushinteger(L, i);\n    return lua_geti(L, 1, i) === LUA_TNIL ? 1 : 2;\n};\n\n/*\n** 'ipairs' function. Returns 'ipairsaux', given \"table\", 0.\n** (The given \"table\" may not be a table.)\n*/\nconst luaB_ipairs = function(L) {\n    // Lua 5.2\n    // return pairsmeta(L, \"__ipairs\", 1, ipairsaux);\n\n    luaL_checkany(L, 1);\n    lua_pushcfunction(L, ipairsaux);  /* iteration function */\n    lua_pushvalue(L, 1);  /* state */\n    lua_pushinteger(L, 0);  /* initial value */\n    return 3;\n};\n\nconst b_str2int = function(s, base) {\n    try {\n        s = to_jsstring(s);\n    } catch (e) {\n        return null;\n    }\n    let r = /^[\\t\\v\\f \\n\\r]*([+-]?)0*([0-9A-Za-z]+)[\\t\\v\\f \\n\\r]*$/.exec(s);\n    if (!r) return null;\n    let v = parseInt(r[1]+r[2], base);\n    if (isNaN(v)) return null;\n    return v|0;\n};\n\nconst luaB_tonumber = function(L) {\n    if (lua_type(L, 2) <= 0) {  /* standard conversion? */\n        luaL_checkany(L, 1);\n        if (lua_type(L, 1) === LUA_TNUMBER) {  /* already a number? */\n            lua_settop(L, 1);\n            return 1;\n        } else {\n            let s = lua_tostring(L, 1);\n            if (s !== null && lua_stringtonumber(L, s) === s.length+1)\n                return 1;  /* successful conversion to number */\n        }\n    } else {\n        let base = luaL_checkinteger(L, 2);\n        luaL_checktype(L, 1, LUA_TSTRING);  /* no numbers as strings */\n        let s = lua_tostring(L, 1);\n        luaL_argcheck(L, 2 <= base && base <= 36, 2, \"base out of range\");\n        let n = b_str2int(s, base);\n        if (n !== null) {\n            lua_pushinteger(L, n);\n            return 1;\n        }\n    }\n\n    lua_pushnil(L);\n    return 1;\n};\n\nconst luaB_error = function(L) {\n    let level = luaL_optinteger(L, 2, 1);\n    lua_settop(L, 1);\n    if (lua_type(L, 1) === LUA_TSTRING && level > 0) {\n        luaL_where(L, level);  /* add extra information */\n        lua_pushvalue(L, 1);\n        lua_concat(L, 2);\n    }\n    return lua_error(L);\n};\n\nconst luaB_assert = function(L) {\n    if (lua_toboolean(L, 1))  /* condition is true? */\n        return lua_gettop(L);  /* return all arguments */\n    else {\n        luaL_checkany(L, 1);  /* there must be a condition */\n        lua_remove(L, 1);  /* remove it */\n        lua_pushliteral(L, \"assertion failed!\");  /* default message */\n        lua_settop(L, 1);  /* leave only message (default if no other one) */\n        return luaB_error(L);  /* call 'error' */\n    }\n};\n\nconst luaB_select = function(L) {\n    let n = lua_gettop(L);\n    if (lua_type(L, 1) === LUA_TSTRING && lua_tostring(L, 1)[0] === 35 /* '#'.charCodeAt(0) */) {\n        lua_pushinteger(L, n - 1);\n        return 1;\n    } else {\n        let i = luaL_checkinteger(L, 1);\n        if (i < 0) i = n + i;\n        else if (i > n) i = n;\n        luaL_argcheck(L, 1 <= i, 1, \"index out of range\");\n        return n - i;\n    }\n};\n\n/*\n** Continuation function for 'pcall' and 'xpcall'. Both functions\n** already pushed a 'true' before doing the call, so in case of success\n** 'finishpcall' only has to return everything in the stack minus\n** 'extra' values (where 'extra' is exactly the number of items to be\n** ignored).\n*/\nconst finishpcall = function(L, status, extra) {\n    if (status !== LUA_OK && status !== LUA_YIELD) {  /* error? */\n        lua_pushboolean(L, 0);  /* first result (false) */\n        lua_pushvalue(L, -2);  /* error message */\n        return 2;  /* return false, msg */\n    } else\n        return lua_gettop(L) - extra;\n};\n\nconst luaB_pcall = function(L) {\n    luaL_checkany(L, 1);\n    lua_pushboolean(L, 1);  /* first result if no errors */\n    lua_insert(L, 1);  /* put it in place */\n    let status = lua_pcallk(L, lua_gettop(L) - 2, LUA_MULTRET, 0, 0, finishpcall);\n    return finishpcall(L, status, 0);\n};\n\n/*\n** Do a protected call with error handling. After 'lua_rotate', the\n** stack will have <f, err, true, f, [args...]>; so, the function passes\n** 2 to 'finishpcall' to skip the 2 first values when returning results.\n*/\nconst luaB_xpcall = function(L) {\n    let n = lua_gettop(L);\n    luaL_checktype(L, 2, LUA_TFUNCTION);  /* check error function */\n    lua_pushboolean(L, 1);  /* first result */\n    lua_pushvalue(L, 1);  /* function */\n    lua_rotate(L, 3, 2);  /* move them below function's arguments */\n    let status = lua_pcallk(L, n - 2, LUA_MULTRET, 2, 2, finishpcall);\n    return finishpcall(L, status, 2);\n};\n\nconst load_aux = function(L, status, envidx) {\n    if (status === LUA_OK) {\n        if (envidx !== 0) {  /* 'env' parameter? */\n            lua_pushvalue(L, envidx);  /* environment for loaded function */\n            if (!lua_setupvalue(L, -2, 1))  /* set it as 1st upvalue */\n                lua_pop(L, 1);  /* remove 'env' if not used by previous call */\n        }\n        return 1;\n    } else {  /* error (message is on top of the stack) */\n        lua_pushnil(L);\n        lua_insert(L, -2);  /* put before error message */\n        return 2;  /* return nil plus error message */\n    }\n};\n\n/*\n** reserved slot, above all arguments, to hold a copy of the returned\n** string to avoid it being collected while parsed. 'load' has four\n** optional arguments (chunk, source name, mode, and environment).\n*/\nconst RESERVEDSLOT = 5;\n\n/*\n** Reader for generic 'load' function: 'lua_load' uses the\n** stack for internal stuff, so the reader cannot change the\n** stack top. Instead, it keeps its resulting string in a\n** reserved slot inside the stack.\n*/\nconst generic_reader = function(L, ud) {\n    luaL_checkstack(L, 2, \"too many nested functions\");\n    lua_pushvalue(L, 1);  /* get function */\n    lua_call(L, 0, 1);  /* call it */\n    if (lua_isnil(L, -1)) {\n        lua_pop(L, 1);  /* pop result */\n        return null;\n    } else if (!lua_isstring(L, -1))\n        luaL_error(L, to_luastring(\"reader function must return a string\"));\n    lua_replace(L, RESERVEDSLOT);  /* save string in reserved slot */\n    return lua_tostring(L, RESERVEDSLOT);\n};\n\nconst luaB_load = function(L) {\n    let s = lua_tostring(L, 1);\n    let mode = luaL_optstring(L, 3, \"bt\");\n    let env = !lua_isnone(L, 4) ? 4 : 0;  /* 'env' index or 0 if no 'env' */\n    let status;\n    if (s !== null) {  /* loading a string? */\n        let chunkname = luaL_optstring(L, 2, s);\n        status = luaL_loadbufferx(L, s, s.length, chunkname, mode);\n    } else {  /* loading from a reader function */\n        let chunkname = luaL_optstring(L, 2, \"=(load)\");\n        luaL_checktype(L, 1, LUA_TFUNCTION);\n        lua_settop(L, RESERVEDSLOT);  /* create reserved slot */\n        status = lua_load(L, generic_reader, null, chunkname, mode);\n    }\n    return load_aux(L, status, env);\n};\n\nconst luaB_loadfile = function(L) {\n    let fname = luaL_optstring(L, 1, null);\n    let mode = luaL_optstring(L, 2, null);\n    let env = !lua_isnone(L, 3) ? 3 : 0;  /* 'env' index or 0 if no 'env' */\n    let status = luaL_loadfilex(L, fname, mode);\n    return load_aux(L, status, env);\n};\n\nconst dofilecont = function(L, d1, d2) {\n    return lua_gettop(L) - 1;\n};\n\nconst luaB_dofile = function(L) {\n    let fname = luaL_optstring(L, 1, null);\n    lua_settop(L, 1);\n    if (luaL_loadfile(L, fname) !== LUA_OK)\n        return lua_error(L);\n    lua_callk(L, 0, LUA_MULTRET, 0, dofilecont);\n    return dofilecont(L, 0, 0);\n};\n\nconst base_funcs = {\n    \"assert\":         luaB_assert,\n    \"collectgarbage\": luaB_collectgarbage,\n    \"dofile\":         luaB_dofile,\n    \"error\":          luaB_error,\n    \"getmetatable\":   luaB_getmetatable,\n    \"ipairs\":         luaB_ipairs,\n    \"load\":           luaB_load,\n    \"loadfile\":       luaB_loadfile,\n    \"next\":           luaB_next,\n    \"pairs\":          luaB_pairs,\n    \"pcall\":          luaB_pcall,\n    \"print\":          luaB_print,\n    \"rawequal\":       luaB_rawequal,\n    \"rawget\":         luaB_rawget,\n    \"rawlen\":         luaB_rawlen,\n    \"rawset\":         luaB_rawset,\n    \"select\":         luaB_select,\n    \"setmetatable\":   luaB_setmetatable,\n    \"tonumber\":       luaB_tonumber,\n    \"tostring\":       luaB_tostring,\n    \"type\":           luaB_type,\n    \"xpcall\":         luaB_xpcall\n};\n\nconst luaopen_base = function(L) {\n    /* open lib into global table */\n    lua_pushglobaltable(L);\n    luaL_setfuncs(L, base_funcs, 0);\n    /* set global _G */\n    lua_pushvalue(L, -1);\n    lua_setfield(L, -2, to_luastring(\"_G\"));\n    /* set global _VERSION */\n    lua_pushliteral(L, LUA_VERSION);\n    lua_setfield(L, -2, to_luastring(\"_VERSION\"));\n    return 1;\n};\n\nmodule.exports.luaopen_base = luaopen_base;\n","\"use strict\";\n\nconst {\n    LUA_OK,\n    LUA_TFUNCTION,\n    LUA_TSTRING,\n    LUA_YIELD,\n    lua_Debug,\n    lua_checkstack,\n    lua_concat,\n    lua_error,\n    lua_getstack,\n    lua_gettop,\n    lua_insert,\n    lua_isyieldable,\n    lua_newthread,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcclosure,\n    lua_pushliteral,\n    lua_pushthread,\n    lua_pushvalue,\n    lua_resume,\n    lua_status,\n    lua_tothread,\n    lua_type,\n    lua_upvalueindex,\n    lua_xmove,\n    lua_yield\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_checktype,\n    luaL_newlib,\n    luaL_where\n} = require('./lauxlib.js');\n\nconst getco = function(L) {\n    let co = lua_tothread(L, 1);\n    luaL_argcheck(L, co, 1, \"thread expected\");\n    return co;\n};\n\nconst auxresume = function(L, co, narg) {\n    if (!lua_checkstack(co, narg)) {\n        lua_pushliteral(L, \"too many arguments to resume\");\n        return -1;  /* error flag */\n    }\n\n    if (lua_status(co) === LUA_OK && lua_gettop(co) === 0) {\n        lua_pushliteral(L, \"cannot resume dead coroutine\");\n        return -1;  /* error flag */\n    }\n\n    lua_xmove(L, co, narg);\n    let status = lua_resume(co, L, narg);\n    if (status === LUA_OK || status === LUA_YIELD) {\n        let nres = lua_gettop(co);\n        if (!lua_checkstack(L, nres + 1)) {\n            lua_pop(co, nres);  /* remove results anyway */\n            lua_pushliteral(L, \"too many results to resume\");\n            return -1;  /* error flag */\n        }\n\n        lua_xmove(co,  L, nres);  /* move yielded values */\n        return nres;\n    } else {\n        lua_xmove(co, L, 1);  /* move error message */\n        return -1;  /* error flag */\n    }\n};\n\nconst luaB_coresume = function(L) {\n    let co = getco(L);\n    let r = auxresume(L, co, lua_gettop(L) - 1);\n    if (r < 0) {\n        lua_pushboolean(L, 0);\n        lua_insert(L, -2);\n        return 2;  /* return false + error message */\n    } else {\n        lua_pushboolean(L, 1);\n        lua_insert(L, -(r + 1));\n        return r + 1;  /* return true + 'resume' returns */\n    }\n};\n\nconst luaB_auxwrap = function(L) {\n    let co = lua_tothread(L, lua_upvalueindex(1));\n    let r = auxresume(L, co, lua_gettop(L));\n    if (r < 0) {\n        if (lua_type(L, -1) === LUA_TSTRING) {  /* error object is a string? */\n            luaL_where(L, 1);  /* add extra info */\n            lua_insert(L, -2);\n            lua_concat(L, 2);\n        }\n\n        return lua_error(L);  /* propagate error */\n    }\n\n    return r;\n};\n\nconst luaB_cocreate = function(L) {\n    luaL_checktype(L, 1, LUA_TFUNCTION);\n    let NL = lua_newthread(L);\n    lua_pushvalue(L, 1);  /* move function to top */\n    lua_xmove(L, NL, 1);  /* move function from L to NL */\n    return 1;\n};\n\nconst luaB_cowrap = function(L) {\n    luaB_cocreate(L);\n    lua_pushcclosure(L, luaB_auxwrap, 1);\n    return 1;\n};\n\nconst luaB_yield = function(L) {\n    return lua_yield(L, lua_gettop(L));\n};\n\nconst luaB_costatus = function(L) {\n    let co = getco(L);\n    if (L === co) lua_pushliteral(L, \"running\");\n    else {\n        switch (lua_status(co)) {\n            case LUA_YIELD:\n                lua_pushliteral(L, \"suspended\");\n                break;\n            case LUA_OK: {\n                let ar = new lua_Debug();\n                if (lua_getstack(co, 0, ar) > 0)  /* does it have frames? */\n                    lua_pushliteral(L, \"normal\");  /* it is running */\n                else if (lua_gettop(co) === 0)\n                    lua_pushliteral(L, \"dead\");\n                else\n                    lua_pushliteral(L, \"suspended\");  /* initial state */\n                break;\n            }\n            default:  /* some error occurred */\n                lua_pushliteral(L, \"dead\");\n                break;\n        }\n    }\n\n    return 1;\n};\n\nconst luaB_yieldable = function(L) {\n    lua_pushboolean(L, lua_isyieldable(L));\n    return 1;\n};\n\nconst luaB_corunning = function(L) {\n    lua_pushboolean(L, lua_pushthread(L));\n    return 2;\n};\n\nconst co_funcs = {\n    \"create\":      luaB_cocreate,\n    \"isyieldable\": luaB_yieldable,\n    \"resume\":      luaB_coresume,\n    \"running\":     luaB_corunning,\n    \"status\":      luaB_costatus,\n    \"wrap\":        luaB_cowrap,\n    \"yield\":       luaB_yield\n};\n\nconst luaopen_coroutine = function(L) {\n    luaL_newlib(L, co_funcs);\n    return 1;\n};\n\nmodule.exports.luaopen_coroutine = luaopen_coroutine;\n","\"use strict\";\n\nconst { LUA_MAXINTEGER } = require('./luaconf.js');\nconst {\n    LUA_OPEQ,\n    LUA_OPLT,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TTABLE,\n    lua_call,\n    lua_checkstack,\n    lua_compare,\n    lua_createtable,\n    lua_geti,\n    lua_getmetatable,\n    lua_gettop,\n    lua_insert,\n    lua_isnil,\n    lua_isnoneornil,\n    lua_isstring,\n    lua_pop,\n    lua_pushinteger,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawget,\n    lua_setfield,\n    lua_seti,\n    lua_settop,\n    lua_toboolean,\n    lua_type\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addlstring,\n    luaL_addvalue,\n    luaL_argcheck,\n    luaL_buffinit,\n    luaL_checkinteger,\n    luaL_checktype,\n    luaL_error,\n    luaL_len,\n    luaL_newlib,\n    luaL_opt,\n    luaL_optinteger,\n    luaL_optlstring,\n    luaL_pushresult,\n    luaL_typename\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst { to_luastring } = require(\"./fengaricore.js\");\n\n/*\n** Operations that an object must define to mimic a table\n** (some functions only need some of them)\n*/\nconst TAB_R  = 1;               /* read */\nconst TAB_W  = 2;               /* write */\nconst TAB_L  = 4;               /* length */\nconst TAB_RW = (TAB_R | TAB_W); /* read/write */\n\nconst checkfield = function(L, key, n) {\n    lua_pushstring(L, key);\n    return lua_rawget(L, -n) !== LUA_TNIL;\n};\n\n/*\n** Check that 'arg' either is a table or can behave like one (that is,\n** has a metatable with the required metamethods)\n*/\nconst checktab = function(L, arg, what) {\n    if (lua_type(L, arg) !== LUA_TTABLE) {  /* is it not a table? */\n        let n = 1;\n        if (lua_getmetatable(L, arg) &&  /* must have metatable */\n            (!(what & TAB_R) || checkfield(L, to_luastring(\"__index\", true), ++n)) &&\n            (!(what & TAB_W) || checkfield(L, to_luastring(\"__newindex\", true), ++n)) &&\n            (!(what & TAB_L) || checkfield(L, to_luastring(\"__len\", true), ++n))) {\n            lua_pop(L, n);  /* pop metatable and tested metamethods */\n        }\n        else\n            luaL_checktype(L, arg, LUA_TTABLE);  /* force an error */\n    }\n};\n\nconst aux_getn = function(L, n, w) {\n    checktab(L, n, w | TAB_L);\n    return luaL_len(L, n);\n};\n\nconst addfield = function(L, b, i) {\n    lua_geti(L, 1, i);\n    if (!lua_isstring(L, -1))\n        luaL_error(L, to_luastring(\"invalid value (%s) at index %d in table for 'concat'\"),\n            luaL_typename(L, -1), i);\n\n    luaL_addvalue(b);\n};\n\nconst tinsert = function(L) {\n    let e = aux_getn(L, 1, TAB_RW) + 1;  /* first empty element */\n    let pos;\n    switch (lua_gettop(L)) {\n        case 2:\n            pos = e;\n            break;\n        case 3: {\n            pos = luaL_checkinteger(L, 2);  /* 2nd argument is the position */\n            luaL_argcheck(L, 1 <= pos && pos <= e, 2, \"position out of bounds\");\n            for (let i = e; i > pos; i--) {  /* move up elements */\n                lua_geti(L, 1, i - 1);\n                lua_seti(L, 1, i);  /* t[i] = t[i - 1] */\n            }\n            break;\n        }\n        default: {\n            return luaL_error(L, \"wrong number of arguments to 'insert'\");\n        }\n    }\n\n    lua_seti(L, 1, pos);  /* t[pos] = v */\n    return 0;\n};\n\nconst tremove = function(L) {\n    let size = aux_getn(L, 1, TAB_RW);\n    let pos = luaL_optinteger(L, 2, size);\n    if (pos !== size)  /* validate 'pos' if given */\n        luaL_argcheck(L, 1 <= pos && pos <= size + 1, 1, \"position out of bounds\");\n    lua_geti(L, 1, pos);  /* result = t[pos] */\n    for (; pos < size; pos++) {\n        lua_geti(L, 1, pos + 1);\n        lua_seti(L, 1, pos);  /* t[pos] = t[pos + 1] */\n    }\n    lua_pushnil(L);\n    lua_seti(L, 1, pos);  /* t[pos] = nil */\n    return 1;\n};\n\n/*\n** Copy elements (1[f], ..., 1[e]) into (tt[t], tt[t+1], ...). Whenever\n** possible, copy in increasing order, which is better for rehashing.\n** \"possible\" means destination after original range, or smaller\n** than origin, or copying to another table.\n*/\nconst tmove = function(L) {\n    let f = luaL_checkinteger(L, 2);\n    let e = luaL_checkinteger(L, 3);\n    let t = luaL_checkinteger(L, 4);\n    let tt = !lua_isnoneornil(L, 5) ? 5 : 1;  /* destination table */\n    checktab(L, 1, TAB_R);\n    checktab(L, tt, TAB_W);\n    if (e >= f) {  /* otherwise, nothing to move */\n        luaL_argcheck(L, f > 0 || e < LUA_MAXINTEGER + f, 3, \"too many elements to move\");\n        let n = e - f + 1;  /* number of elements to move */\n        luaL_argcheck(L, t <= LUA_MAXINTEGER - n + 1, 4, \"destination wrap around\");\n\n        if (t > e || t <= f || (tt !== 1 && lua_compare(L, 1, tt, LUA_OPEQ) !== 1)) {\n            for (let i = 0; i < n; i++) {\n                lua_geti(L, 1, f + i);\n                lua_seti(L, tt, t + i);\n            }\n        } else {\n            for (let i = n - 1; i >= 0; i--) {\n                lua_geti(L, 1, f + i);\n                lua_seti(L, tt, t + i);\n            }\n        }\n    }\n\n    lua_pushvalue(L, tt);  /* return destination table */\n    return 1;\n};\n\nconst tconcat = function(L) {\n    let last = aux_getn(L, 1, TAB_R);\n    let sep = luaL_optlstring(L, 2, \"\");\n    let lsep = sep.length;\n    let i = luaL_optinteger(L, 3, 1);\n    last = luaL_optinteger(L, 4, last);\n\n    let b = new luaL_Buffer();\n    luaL_buffinit(L, b);\n\n    for (; i < last; i++) {\n        addfield(L, b, i);\n        luaL_addlstring(b, sep, lsep);\n    }\n\n    if (i === last)\n        addfield(L, b, i);\n\n    luaL_pushresult(b);\n\n    return 1;\n};\n\nconst pack = function(L) {\n    let n = lua_gettop(L);  /* number of elements to pack */\n    lua_createtable(L, n, 1);  /* create result table */\n    lua_insert(L, 1);  /* put it at index 1 */\n    for (let i = n; i >= 1; i--)  /* assign elements */\n        lua_seti(L, 1, i);\n    lua_pushinteger(L, n);\n    lua_setfield(L, 1, to_luastring(\"n\"));  /* t.n = number of elements */\n    return 1;  /* return table */\n};\n\nconst unpack = function(L) {\n    let i = luaL_optinteger(L, 2, 1);\n    let e = luaL_opt(L, luaL_checkinteger, 3, luaL_len(L, 1));\n    if (i > e) return 0;  /* empty range */\n    let n = e - i;  /* number of elements minus 1 (avoid overflows) */\n    if (n >= Number.MAX_SAFE_INTEGER || !lua_checkstack(L, ++n))\n        return luaL_error(L, to_luastring(\"too many results to unpack\"));\n    for (; i < e; i++)  /* push arg[i..e - 1] (to avoid overflows) */\n        lua_geti(L, 1, i);\n    lua_geti(L, 1, e);  /* push last element */\n    return n;\n};\n\nconst l_randomizePivot = function() {\n    return Math.floor(Math.random()*0x100000000);\n};\n\nconst RANLIMIT = 100;\n\nconst set2 = function(L, i, j) {\n    lua_seti(L, 1, i);\n    lua_seti(L, 1, j);\n};\n\nconst sort_comp = function(L, a, b) {\n    if (lua_isnil(L, 2))  /* no function? */\n        return lua_compare(L, a, b, LUA_OPLT);  /* a < b */\n    else {  /* function */\n        lua_pushvalue(L, 2);    /* push function */\n        lua_pushvalue(L, a-1);  /* -1 to compensate function */\n        lua_pushvalue(L, b-2);  /* -2 to compensate function and 'a' */\n        lua_call(L, 2, 1);      /* call function */\n        let res = lua_toboolean(L, -1);  /* get result */\n        lua_pop(L, 1);          /* pop result */\n        return res;\n    }\n};\n\nconst partition = function(L, lo, up) {\n    let i = lo;  /* will be incremented before first use */\n    let j = up - 1;  /* will be decremented before first use */\n    /* loop invariant: a[lo .. i] <= P <= a[j .. up] */\n    for (;;) {\n        /* next loop: repeat ++i while a[i] < P */\n        while (lua_geti(L, 1, ++i), sort_comp(L, -1, -2)) {\n            if (i == up - 1)  /* a[i] < P  but a[up - 1] == P  ?? */\n                luaL_error(L, to_luastring(\"invalid order function for sorting\"));\n            lua_pop(L, 1);  /* remove a[i] */\n        }\n        /* after the loop, a[i] >= P and a[lo .. i - 1] < P */\n        /* next loop: repeat --j while P < a[j] */\n        while (lua_geti(L, 1, --j), sort_comp(L, -3, -1)) {\n            if (j < i)  /* j < i  but  a[j] > P ?? */\n                luaL_error(L, to_luastring(\"invalid order function for sorting\"));\n            lua_pop(L, 1);  /* remove a[j] */\n        }\n        /* after the loop, a[j] <= P and a[j + 1 .. up] >= P */\n        if (j < i) {  /* no elements out of place? */\n            /* a[lo .. i - 1] <= P <= a[j + 1 .. i .. up] */\n            lua_pop(L, 1);  /* pop a[j] */\n            /* swap pivot (a[up - 1]) with a[i] to satisfy pos-condition */\n            set2(L, up - 1, i);\n            return i;\n        }\n        /* otherwise, swap a[i] - a[j] to restore invariant and repeat */\n        set2(L, i, j);\n    }\n};\n\nconst choosePivot = function(lo, up, rnd) {\n    let r4 = Math.floor((up - lo) / 4);  /* range/4 */\n    let p = rnd % (r4 * 2) + (lo + r4);\n    lualib.lua_assert(lo + r4 <= p && p <= up - r4);\n    return p;\n};\n\nconst auxsort = function(L, lo, up, rnd) {\n    while (lo < up) {  /* loop for tail recursion */\n        /* sort elements 'lo', 'p', and 'up' */\n        lua_geti(L, 1, lo);\n        lua_geti(L, 1, up);\n        if (sort_comp(L, -1, -2))  /* a[up] < a[lo]? */\n            set2(L, lo, up);  /* swap a[lo] - a[up] */\n        else\n            lua_pop(L, 2);  /* remove both values */\n        if (up - lo == 1)  /* only 2 elements? */\n            return;  /* already sorted */\n        let p;  /* Pivot index */\n        if (up - lo < RANLIMIT || rnd === 0)  /* small interval or no randomize? */\n            p = Math.floor((lo + up)/2);  /* middle element is a good pivot */\n        else  /* for larger intervals, it is worth a random pivot */\n            p = choosePivot(lo, up, rnd);\n        lua_geti(L, 1, p);\n        lua_geti(L, 1, lo);\n        if (sort_comp(L, -2, -1))  /* a[p] < a[lo]? */\n            set2(L, p, lo);  /* swap a[p] - a[lo] */\n        else {\n            lua_pop(L, 1);  /* remove a[lo] */\n            lua_geti(L, 1, up);\n            if (sort_comp(L, -1, -2))  /* a[up] < a[p]? */\n                set2(L, p, up);  /* swap a[up] - a[p] */\n            else\n                lua_pop(L, 2);\n        }\n        if (up - lo == 2)  /* only 3 elements? */\n            return;  /* already sorted */\n        lua_geti(L, 1, p);  /* get middle element (Pivot) */\n        lua_pushvalue(L, -1);  /* push Pivot */\n        lua_geti(L, 1, up - 1);  /* push a[up - 1] */\n        set2(L, p, up - 1);  /* swap Pivot (a[p]) with a[up - 1] */\n        p = partition(L, lo, up);\n        let n;\n        /* a[lo .. p - 1] <= a[p] == P <= a[p + 1 .. up] */\n        if (p - lo < up - p) {  /* lower interval is smaller? */\n            auxsort(L, lo, p - 1, rnd);  /* call recursively for lower interval */\n            n = p - lo;  /* size of smaller interval */\n            lo = p + 1;  /* tail call for [p + 1 .. up] (upper interval) */\n        } else {\n            auxsort(L, p + 1, up, rnd);  /* call recursively for upper interval */\n            n = up - p;  /* size of smaller interval */\n            up = p - 1;  /* tail call for [lo .. p - 1]  (lower interval) */\n        }\n        if ((up - lo) / 128 > n) /* partition too imbalanced? */\n            rnd = l_randomizePivot();  /* try a new randomization */\n    }  /* tail call auxsort(L, lo, up, rnd) */\n};\n\nconst sort = function(L) {\n    let n = aux_getn(L, 1, TAB_RW);\n    if (n > 1) {  /* non-trivial interval? */\n        luaL_argcheck(L, n < LUA_MAXINTEGER, 1, \"array too big\");\n        if (!lua_isnoneornil(L, 2))  /* is there a 2nd argument? */\n            luaL_checktype(L, 2, LUA_TFUNCTION);  /* must be a function */\n        lua_settop(L, 2);  /* make sure there are two arguments */\n        auxsort(L, 1, n, 0);\n    }\n    return 0;\n};\n\nconst tab_funcs = {\n    \"concat\": tconcat,\n    \"insert\": tinsert,\n    \"move\":   tmove,\n    \"pack\":   pack,\n    \"remove\": tremove,\n    \"sort\":   sort,\n    \"unpack\": unpack\n};\n\nconst luaopen_table = function(L) {\n    luaL_newlib(L, tab_funcs);\n    return 1;\n};\n\nmodule.exports.luaopen_table = luaopen_table;\n","\"use strict\";\n\nconst {\n    LUA_TNIL,\n    LUA_TTABLE,\n    lua_close,\n    lua_createtable,\n    lua_getfield,\n    lua_isboolean,\n    lua_isnoneornil,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushnumber,\n    lua_pushstring,\n    lua_setfield,\n    lua_settop,\n    lua_toboolean,\n    lua_tointegerx\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addchar,\n    luaL_addstring,\n    // luaL_argcheck,\n    luaL_argerror,\n    luaL_buffinit,\n    luaL_checkinteger,\n    luaL_checkstring,\n    luaL_checktype,\n    luaL_error,\n    luaL_execresult,\n    luaL_fileresult,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_optlstring,\n    luaL_optstring,\n    luaL_pushresult\n} = require('./lauxlib.js');\nconst {\n    luastring_eq,\n    to_jsstring,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\n/* options for ANSI C 89 (only 1-char options) */\n// const L_STRFTIMEC89 = to_luastring(\"aAbBcdHIjmMpSUwWxXyYZ%\");\n// const LUA_STRFTIMEOPTIONS = L_STRFTIMEC89;\n\n/* options for ISO C 99 and POSIX */\n// const L_STRFTIMEC99 = to_luastring(\"aAbBcCdDeFgGhHIjmMnprRStTuUVwWxXyYzZ%||EcECExEXEyEYOdOeOHOIOmOMOSOuOUOVOwOWOy\");  /* two-char options */\n// const LUA_STRFTIMEOPTIONS = L_STRFTIMEC99;\n\n/* options for Windows */\n// const L_STRFTIMEWIN = to_luastring(\"aAbBcdHIjmMpSUwWxXyYzZ%||#c#x#d#H#I#j#m#M#S#U#w#W#y#Y\");  /* two-char options */\n// const LUA_STRFTIMEOPTIONS = L_STRFTIMEWIN;\n\n/* options for our own strftime implementation\n  - should be superset of C89 options for compat\n  - missing from C99:\n      - ISO 8601 week specifiers: gGV\n      - > single char specifiers\n  - beyond C99:\n      - %k: TZ extension: space-padded 24-hour\n      - %l: TZ extension: space-padded 12-hour\n      - %P: GNU extension: lower-case am/pm\n*/\nconst LUA_STRFTIMEOPTIONS = to_luastring(\"aAbBcCdDeFhHIjklmMnpPrRStTuUwWxXyYzZ%\");\n\n\nconst setfield = function(L, key, value) {\n    lua_pushinteger(L, value);\n    lua_setfield(L, -2, to_luastring(key, true));\n};\n\nconst setallfields = function(L, time, utc) {\n    setfield(L, \"sec\",   utc ? time.getUTCSeconds()  : time.getSeconds());\n    setfield(L, \"min\",   utc ? time.getUTCMinutes()  : time.getMinutes());\n    setfield(L, \"hour\",  utc ? time.getUTCHours()    : time.getHours());\n    setfield(L, \"day\",   utc ? time.getUTCDate()     : time.getDate());\n    setfield(L, \"month\", (utc ? time.getUTCMonth()   : time.getMonth()) + 1);\n    setfield(L, \"year\",  utc ? time.getUTCFullYear() : time.getFullYear());\n    setfield(L, \"wday\",  (utc ? time.getUTCDay()     : time.getDay()) + 1);\n    setfield(L, \"yday\", Math.floor((time - (new Date(time.getFullYear(), 0, 0 /* shortcut to correct day by one */))) / 86400000));\n    // setboolfield(L, \"isdst\", time.get);\n};\n\nconst L_MAXDATEFIELD = (Number.MAX_SAFE_INTEGER / 2);\n\nconst getfield = function(L, key, d, delta) {\n    let t = lua_getfield(L, -1, to_luastring(key, true));  /* get field and its type */\n    let res = lua_tointegerx(L, -1);\n    if (res === false) {  /* field is not an integer? */\n        if (t !== LUA_TNIL)  /* some other value? */\n            return luaL_error(L, to_luastring(\"field '%s' is not an integer\"), key);\n        else if (d < 0)  /* absent field; no default? */\n            return luaL_error(L, to_luastring(\"field '%s' missing in date table\"), key);\n        res = d;\n    }\n    else {\n        if (!(-L_MAXDATEFIELD <= res && res <= L_MAXDATEFIELD))\n            return luaL_error(L, to_luastring(\"field '%s' is out-of-bound\"), key);\n        res -= delta;\n    }\n    lua_pop(L, 1);\n    return res;\n};\n\n\nconst locale = {\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ].map((s) => to_luastring(s)),\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"].map((s) => to_luastring(s)),\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].map((s) => to_luastring(s)),\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"].map((s) => to_luastring(s)),\n    AM: to_luastring(\"AM\"),\n    PM: to_luastring(\"PM\"),\n    am: to_luastring(\"am\"),\n    pm: to_luastring(\"pm\"),\n    formats: {\n        c: to_luastring(\"%a %b %e %H:%M:%S %Y\"),\n        D: to_luastring(\"%m/%d/%y\"),\n        F: to_luastring(\"%Y-%m-%d\"),\n        R: to_luastring(\"%H:%M\"),\n        r: to_luastring(\"%I:%M:%S %p\"),\n        T: to_luastring(\"%H:%M:%S\"),\n        X: to_luastring(\"%T\"),\n        x: to_luastring(\"%D\")\n    }\n};\n\nconst week_number = function(date, start_of_week) {\n    // This works by shifting the weekday back by one day if we\n    // are treating Monday as the first day of the week.\n    let weekday = date.getDay();\n    if (start_of_week === 'monday') {\n        if (weekday === 0) // Sunday\n            weekday = 6;\n        else\n            weekday--;\n    }\n    let yday = (date - new Date(date.getFullYear(), 0, 1)) / 86400000;\n    return Math.floor((yday + 7 - weekday) / 7);\n};\n\nconst push_pad_2 = function(b, n, pad) {\n    if (n < 10)\n        luaL_addchar(b, pad);\n    luaL_addstring(b, to_luastring(String(n)));\n};\n\nconst strftime = function(L, b, s, date) {\n    let i = 0;\n    while (i < s.length) {\n        if (s[i] !== 37 /* % */) {  /* not a conversion specifier? */\n            luaL_addchar(b, s[i++]);\n        } else {\n            i++;  /* skip '%' */\n            let len = checkoption(L, s, i);\n            /* each `case` has an example output above it for the UTC epoch */\n            switch(s[i]) {\n                // '%'\n                case 37 /* % */:\n                    luaL_addchar(b, 37);\n                    break;\n\n                // 'Thursday'\n                case 65 /* A */:\n                    luaL_addstring(b, locale.days[date.getDay()]);\n                    break;\n\n                // 'January'\n                case 66 /* B */:\n                    luaL_addstring(b, locale.months[date.getMonth()]);\n                    break;\n\n                // '19'\n                case 67 /* C */:\n                    push_pad_2(b, Math.floor(date.getFullYear() / 100), 48 /* 0 */);\n                    break;\n\n                // '01/01/70'\n                case 68 /* D */:\n                    strftime(L, b, locale.formats.D, date);\n                    break;\n\n                // '1970-01-01'\n                case 70 /* F */:\n                    strftime(L, b, locale.formats.F, date);\n                    break;\n\n                // '00'\n                case 72 /* H */:\n                    push_pad_2(b, date.getHours(), 48 /* 0 */);\n                    break;\n\n                // '12'\n                case 73 /* I */:\n                    push_pad_2(b, (date.getHours() + 11) % 12 + 1, 48 /* 0 */);\n                    break;\n\n                // '00'\n                case 77 /* M */:\n                    push_pad_2(b, date.getMinutes(), 48 /* 0 */);\n                    break;\n\n                // 'am'\n                case 80 /* P */:\n                    luaL_addstring(b, date.getHours() < 12 ? locale.am : locale.pm);\n                    break;\n\n                // '00:00'\n                case 82 /* R */:\n                    strftime(L, b, locale.formats.R, date);\n                    break;\n\n                // '00'\n                case 83 /* S */:\n                    push_pad_2(b, date.getSeconds(), 48 /* 0 */);\n                    break;\n\n                // '00:00:00'\n                case 84 /* T */:\n                    strftime(L, b, locale.formats.T, date);\n                    break;\n\n                // '00'\n                case 85 /* U */:\n                    push_pad_2(b, week_number(date, \"sunday\"), 48 /* 0 */);\n                    break;\n\n                // '00'\n                case 87 /* W */:\n                    push_pad_2(b, week_number(date, \"monday\"), 48 /* 0 */);\n                    break;\n\n                // '16:00:00'\n                case 88 /* X */:\n                    strftime(L, b, locale.formats.X, date);\n                    break;\n\n                // '1970'\n                case 89 /* Y */:\n                    luaL_addstring(b, to_luastring(String(date.getFullYear())));\n                    break;\n\n                // 'GMT'\n                case 90 /* Z */: {\n                    let tzString = date.toString().match(/\\(([\\w\\s]+)\\)/);\n                    if (tzString)\n                        luaL_addstring(b, to_luastring(tzString[1]));\n                    break;\n                }\n\n                // 'Thu'\n                case 97 /* a */:\n                    luaL_addstring(b, locale.shortDays[date.getDay()]);\n                    break;\n\n                // 'Jan'\n                case 98 /* b */:\n                case 104 /* h */:\n                    luaL_addstring(b, locale.shortMonths[date.getMonth()]);\n                    break;\n\n                // ''\n                case 99 /* c */:\n                    strftime(L, b, locale.formats.c, date);\n                    break;\n\n                // '01'\n                case 100 /* d */:\n                    push_pad_2(b, date.getDate(), 48 /* 0 */);\n                    break;\n\n                // ' 1'\n                case 101 /* e */:\n                    push_pad_2(b, date.getDate(), 32 /* space */);\n                    break;\n\n                // '000'\n                case 106 /* j */: {\n                    let yday = Math.floor((date - new Date(date.getFullYear(), 0, 1)) / 86400000);\n                    if (yday < 100) {\n                        if (yday < 10)\n                            luaL_addchar(b, 48 /* 0 */);\n                        luaL_addchar(b, 48 /* 0 */);\n                    }\n                    luaL_addstring(b, to_luastring(String(yday)));\n                    break;\n                }\n\n                // ' 0'\n                case 107 /* k */:\n                    push_pad_2(b, date.getHours(), 32 /* space */);\n                    break;\n\n                // '12'\n                case 108 /* l */:\n                    push_pad_2(b, (date.getHours() + 11) % 12 + 1, 32 /* space */);\n                    break;\n\n                // '01'\n                case 109 /* m */:\n                    push_pad_2(b, date.getMonth() + 1, 48 /* 0 */);\n                    break;\n\n                // '\\n'\n                case 110 /* n */:\n                    luaL_addchar(b, 10);\n                    break;\n\n                // 'AM'\n                case 112 /* p */:\n                    luaL_addstring(b, date.getHours() < 12 ? locale.AM : locale.PM);\n                    break;\n\n                // '12:00:00 AM'\n                case 114 /* r */:\n                    strftime(L, b, locale.formats.r, date);\n                    break;\n\n                // '0'\n                case 115 /* s */:\n                    luaL_addstring(b, to_luastring(String(Math.floor(date / 1000))));\n                    break;\n\n                // '\\t'\n                case 116 /* t */:\n                    luaL_addchar(b, 8);\n                    break;\n\n                // '4'\n                case 117 /* u */: {\n                    let day = date.getDay();\n                    luaL_addstring(b, to_luastring(String(day === 0 ? 7 : day)));\n                    break;\n                }\n\n                // '4'\n                case 119 /* w */:\n                    luaL_addstring(b, to_luastring(String(date.getDay())));\n                    break;\n\n                // '12/31/69'\n                case 120 /* x */:\n                    strftime(L, b, locale.formats.x, date);\n                    break;\n\n                // '70'\n                case 121 /* y */:\n                    push_pad_2(b, date.getFullYear() % 100, 48 /* 0 */);\n                    break;\n\n                // '+0000'\n                case 122 /* z */: {\n                    let off = date.getTimezoneOffset();\n                    if (off > 0) {\n                        luaL_addchar(b, 45 /* - */);\n                    } else {\n                        off = -off;\n                        luaL_addchar(b, 43 /* + */);\n                    }\n                    push_pad_2(b, Math.floor(off/60), 48 /* 0 */);\n                    push_pad_2(b, off % 60, 48 /* 0 */);\n                    break;\n                }\n            }\n            i += len;\n        }\n    }\n};\n\n\nconst checkoption = function(L, conv, i) {\n    let option = LUA_STRFTIMEOPTIONS;\n    let o = 0;\n    let oplen = 1;  /* length of options being checked */\n    for (; o < option.length && oplen <= (conv.length - i); o += oplen) {\n        if (option[o] === '|'.charCodeAt(0))  /* next block? */\n            oplen++;  /* will check options with next length (+1) */\n        else if (luastring_eq(conv.subarray(i, i+oplen), option.subarray(o, o+oplen))) {  /* match? */\n            return oplen;  /* return length */\n        }\n    }\n    luaL_argerror(L, 1,\n        lua_pushfstring(L, to_luastring(\"invalid conversion specifier '%%%s'\"), conv));\n};\n\n/* maximum size for an individual 'strftime' item */\n// const SIZETIMEFMT = 250;\n\n\nconst os_date = function(L) {\n    let s = luaL_optlstring(L, 1, \"%c\");\n    let stm = lua_isnoneornil(L, 2) ? new Date() : new Date(l_checktime(L, 2) * 1000);\n    let utc = false;\n    let i = 0;\n    if (s[i] === '!'.charCodeAt(0)) {  /* UTC? */\n        utc = true;\n        i++;  /* skip '!' */\n    }\n    if (s[i] === \"*\".charCodeAt(0) && s[i+1] === \"t\".charCodeAt(0)) {\n        lua_createtable(L, 0, 9);  /* 9 = number of fields */\n        setallfields(L, stm, utc);\n    } else {\n        let cc = new Uint8Array(4);\n        cc[0] = \"%\".charCodeAt(0);\n        let b = new luaL_Buffer();\n        luaL_buffinit(L, b);\n        strftime(L, b, s, stm);\n        luaL_pushresult(b);\n    }\n    return 1;\n};\n\nconst os_time = function(L) {\n    let t;\n    if (lua_isnoneornil(L, 1))  /* called without args? */\n        t = new Date();  /* get current time */\n    else {\n        luaL_checktype(L, 1, LUA_TTABLE);\n        lua_settop(L, 1);  /* make sure table is at the top */\n        t = new Date(\n            getfield(L, \"year\", -1, 0),\n            getfield(L, \"month\", -1, 1),\n            getfield(L, \"day\", -1, 0),\n            getfield(L, \"hour\", 12, 0),\n            getfield(L, \"min\", 0, 0),\n            getfield(L, \"sec\", 0, 0)\n        );\n        setallfields(L, t);\n    }\n\n    lua_pushinteger(L, Math.floor(t / 1000));\n    return 1;\n};\n\nconst l_checktime = function(L, arg) {\n    let t = luaL_checkinteger(L, arg);\n    // luaL_argcheck(L, t, arg, \"time out-of-bounds\");\n    return t;\n};\n\nconst os_difftime = function(L) {\n    let t1 = l_checktime(L, 1);\n    let t2 = l_checktime(L, 2);\n    lua_pushnumber(L, t1 - t2);\n    return 1;\n};\n\nconst syslib = {\n    \"date\": os_date,\n    \"difftime\": os_difftime,\n    \"time\": os_time\n};\n\nif (typeof process === \"undefined\") {\n    syslib.clock = function(L) {\n        lua_pushnumber(L, performance.now()/1000);\n        return 1;\n    };\n} else {\n    /* Only with Node */\n    const fs = require('fs');\n    const tmp = require('tmp');\n    const child_process = require('child_process');\n\n    syslib.exit = function(L) {\n        let status;\n        if (lua_isboolean(L, 1))\n            status = (lua_toboolean(L, 1) ? 0 : 1);\n        else\n            status = luaL_optinteger(L, 1, 0);\n        if (lua_toboolean(L, 2))\n            lua_close(L);\n        if (L) process.exit(status);  /* 'if' to avoid warnings for unreachable 'return' */\n        return 0;\n    };\n\n    syslib.getenv = function(L) {\n        let key = luaL_checkstring(L, 1);\n        key = to_jsstring(key); /* https://github.com/nodejs/node/issues/16961 */\n        if (Object.prototype.hasOwnProperty.call(process.env, key)) {\n            lua_pushliteral(L, process.env[key]);\n        } else {\n            lua_pushnil(L);\n        }\n        return 1;\n    };\n\n    syslib.clock = function(L) {\n        lua_pushnumber(L, process.uptime());\n        return 1;\n    };\n\n    const lua_tmpname = function() {\n        return tmp.tmpNameSync();\n    };\n\n    syslib.remove = function(L) {\n        let filename = luaL_checkstring(L, 1);\n        try {\n            fs.unlinkSync(filename);\n        } catch (e) {\n            if (e.code === 'EISDIR') {\n                try {\n                    fs.rmdirSync(filename);\n                } catch (e) {\n                    return luaL_fileresult(L, false, filename, e);\n                }\n            } else {\n                return luaL_fileresult(L, false, filename, e);\n            }\n        }\n        return luaL_fileresult(L, true);\n    };\n\n    syslib.rename = function(L) {\n        let fromname = luaL_checkstring(L, 1);\n        let toname = luaL_checkstring(L, 2);\n        try {\n            fs.renameSync(fromname, toname);\n        } catch (e) {\n            return luaL_fileresult(L, false, false, e);\n        }\n        return luaL_fileresult(L, true);\n    };\n\n    syslib.tmpname = function(L) {\n        let name = lua_tmpname();\n        if (!name)\n            return luaL_error(L, to_luastring(\"unable to generate a unique filename\"));\n        lua_pushstring(L, to_luastring(name));\n        return 1;\n    };\n\n    syslib.execute = function(L) {\n        let cmd = luaL_optstring(L, 1, null);\n        if (cmd !== null) {\n            try {\n                child_process.execSync(\n                    cmd,\n                    {\n                        stdio: [process.stdin, process.stdout, process.stderr]\n                    }\n                );\n            } catch (e) {\n                return luaL_execresult(L, e);\n            }\n\n            return luaL_execresult(L, null);\n        } else {\n            /* Assume a shell is available.\n               If it's good enough for musl it's good enough for us.\n               http://git.musl-libc.org/cgit/musl/tree/src/process/system.c?id=ac45692a53a1b8d2ede329d91652d43c1fb5dc8d#n22\n            */\n            lua_pushboolean(L, 1);\n            return 1;\n        }\n    };\n}\n\nconst luaopen_os = function(L) {\n    luaL_newlib(L, syslib);\n    return 1;\n};\n\nmodule.exports.luaopen_os = luaopen_os;\n","\"use strict\";\n\nconst { sprintf } = require('sprintf-js');\n\nconst {\n    LUA_INTEGER_FMT,\n    LUA_INTEGER_FRMLEN,\n    LUA_MININTEGER,\n    LUA_NUMBER_FMT,\n    LUA_NUMBER_FRMLEN,\n    frexp,\n    lua_getlocaledecpoint\n} = require('./luaconf.js');\nconst {\n    LUA_TBOOLEAN,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TNUMBER,\n    LUA_TSTRING,\n    LUA_TTABLE,\n    lua_call,\n    lua_createtable,\n    lua_dump,\n    lua_gettable,\n    lua_gettop,\n    lua_isinteger,\n    lua_isstring,\n    lua_pop,\n    lua_pushcclosure,\n    lua_pushinteger,\n    lua_pushlightuserdata,\n    lua_pushliteral,\n    lua_pushlstring,\n    lua_pushnil,\n    lua_pushnumber,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_remove,\n    lua_setfield,\n    lua_setmetatable,\n    lua_settop,\n    lua_toboolean,\n    lua_tointeger,\n    lua_tonumber,\n    lua_tostring,\n    lua_touserdata,\n    lua_type,\n    lua_upvalueindex\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addchar,\n    luaL_addlstring,\n    luaL_addsize,\n    luaL_addstring,\n    luaL_addvalue,\n    luaL_argcheck,\n    luaL_argerror,\n    luaL_buffinit,\n    luaL_buffinitsize,\n    luaL_checkinteger,\n    luaL_checknumber,\n    luaL_checkstack,\n    luaL_checkstring,\n    luaL_checktype,\n    luaL_error,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_optstring,\n    luaL_prepbuffsize,\n    luaL_pushresult,\n    luaL_pushresultsize,\n    luaL_tolstring,\n    luaL_typename\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst {\n    luastring_eq,\n    luastring_indexOf,\n    to_jsstring,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nconst sL_ESC  = '%';\nconst L_ESC   = sL_ESC.charCodeAt(0);\n\n/*\n** maximum number of captures that a pattern can do during\n** pattern-matching. This limit is arbitrary, but must fit in\n** an unsigned char.\n*/\nconst LUA_MAXCAPTURES = 32;\n\n// (sizeof(size_t) < sizeof(int) ? MAX_SIZET : (size_t)(INT_MAX))\nconst MAXSIZE = 2147483647;\n\n/* Give natural (i.e. strings end at the first \\0) length of a string represented by an array of bytes */\nconst strlen = function(s) {\n    let len = luastring_indexOf(s, 0);\n    return len > -1 ? len : s.length;\n};\n\n/* translate a relative string position: negative means back from end */\nconst posrelat = function(pos, len) {\n    if (pos >= 0) return pos;\n    else if (0 - pos > len) return 0;\n    else return len + pos + 1;\n};\n\nconst str_sub = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let start = posrelat(luaL_checkinteger(L, 2), l);\n    let end = posrelat(luaL_optinteger(L, 3, -1), l);\n    if (start < 1) start = 1;\n    if (end > l) end = l;\n    if (start <= end)\n        lua_pushstring(L, s.subarray(start - 1, (start - 1) + (end - start + 1)));\n    else lua_pushliteral(L, \"\");\n    return 1;\n};\n\nconst str_len = function(L) {\n    lua_pushinteger(L, luaL_checkstring(L, 1).length);\n    return 1;\n};\n\nconst str_char = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    let b = new luaL_Buffer();\n    let p = luaL_buffinitsize(L, b, n);\n    for (let i = 1; i <= n; i++) {\n        let c = luaL_checkinteger(L, i);\n        luaL_argcheck(L, c >= 0 && c <= 255, \"value out of range\"); // Strings are 8-bit clean\n        p[i-1] = c;\n    }\n    luaL_pushresultsize(b, n);\n    return 1;\n};\n\nconst writer = function(L, b, size, B) {\n    luaL_addlstring(B, b, size);\n    return 0;\n};\n\nconst str_dump = function(L) {\n    let b = new luaL_Buffer();\n    let strip = lua_toboolean(L, 2);\n    luaL_checktype(L, 1, LUA_TFUNCTION);\n    lua_settop(L, 1);\n    luaL_buffinit(L, b);\n    if (lua_dump(L, writer, b, strip) !== 0)\n        return luaL_error(L, to_luastring(\"unable to dump given function\"));\n    luaL_pushresult(b);\n    return 1;\n};\n\nconst SIZELENMOD = LUA_NUMBER_FRMLEN.length + 1;\n\nconst L_NBFD = 1;\n\nconst num2straux = function(x) {\n    /* if 'inf' or 'NaN', format it like '%g' */\n    if (Object.is(x, Infinity))\n        return to_luastring('inf');\n    else if (Object.is(x, -Infinity))\n        return to_luastring('-inf');\n    else if (Number.isNaN(x))\n        return to_luastring('nan');\n    else if (x === 0) {  /* can be -0... */\n        /* create \"0\" or \"-0\" followed by exponent */\n        let zero = sprintf(LUA_NUMBER_FMT + \"x0p+0\", x);\n        if (Object.is(x, -0))\n            zero = \"-\" + zero;\n        return to_luastring(zero);\n    } else {\n        let buff = \"\";\n        let fe = frexp(x);  /* 'x' fraction and exponent */\n        let m = fe[0];\n        let e = fe[1];\n        if (m < 0) {  /* is number negative? */\n            buff += '-';  /* add signal */\n            m = -m;  /* make it positive */\n        }\n        buff += \"0x\";  /* add \"0x\" */\n        buff += (m * (1<<L_NBFD)).toString(16);\n        e -= L_NBFD;  /* this digit goes before the radix point */\n        buff += sprintf(\"p%+d\", e);  /* add exponent */\n        return to_luastring(buff);\n    }\n};\n\nconst lua_number2strx = function(L, fmt, x) {\n    let buff = num2straux(x);\n    if (fmt[SIZELENMOD] === 65 /* 'A'.charCodeAt(0) */) {\n        for (let i = 0; i < buff.length; i++) {\n            let c = buff[i];\n            if (c >= 97) /* toupper */\n                buff[i] = c & 0xdf;\n        }\n    } else if (fmt[SIZELENMOD] !== 97 /* 'a'.charCodeAt(0) */)\n        luaL_error(L, to_luastring(\"modifiers for format '%%a'/'%%A' not implemented\"));\n    return buff;\n};\n\n/*\n** Maximum size of each formatted item. This maximum size is produced\n** by format('%.99f', -maxfloat), and is equal to 99 + 3 ('-', '.',\n** and '\\0') + number of decimal digits to represent maxfloat (which\n** is maximum exponent + 1). (99+3+1 then rounded to 120 for \"extra\n** expenses\", such as locale-dependent stuff)\n*/\n// const MAX_ITEM   = 120;// TODO: + l_mathlim(MAX_10_EXP);\n\n\n/* valid flags in a format specification */\nconst FLAGS = to_luastring(\"-+ #0\");\n\n/*\n** maximum size of each format specification (such as \"%-099.99d\")\n*/\n// const MAX_FORMAT = 32;\n\nconst isalpha = e => (97 <= e && e <= 122) || (65 <= e && e <= 90);\nconst isdigit = e => 48 <= e && e <= 57;\nconst iscntrl = e => (0x00 <= e && e <= 0x1f) || e === 0x7f;\nconst isgraph = e => 33 <= e && e <= 126;\nconst islower = e => 97 <= e && e <= 122;\nconst isupper = e => 65 <= e && e <= 90;\nconst isalnum = e => (97 <= e && e <= 122) || (65 <= e && e <= 90) || (48 <= e && e <= 57);\nconst ispunct = e => isgraph(e) && !isalnum(e);\nconst isspace = e => e === 32 || (e >= 9 && e <= 13);\nconst isxdigit = e => (48 <= e && e <= 57) || (65 <= e && e <= 70) || (97 <= e && e <= 102);\n\nconst addquoted = function(b, s, len) {\n    luaL_addchar(b, 34 /* '\"'.charCodeAt(0) */);\n    let i = 0;\n    while (len--) {\n        if (s[i] === 34 /* '\"'.charCodeAt(0) */ ||\n            s[i] === 92 /* '\\\\'.charCodeAt(0) */ ||\n            s[i] === 10 /* '\\n'.charCodeAt(0) */) {\n            luaL_addchar(b, 92 /* '\\\\'.charCodeAt(0) */);\n            luaL_addchar(b, s[i]);\n        } else if (iscntrl(s[i])) {\n            let buff = ''+s[i];\n            if (isdigit(s[i+1]))\n                buff = '0'.repeat(3-buff.length) + buff; /* pad to 3 '0's */\n            luaL_addstring(b, to_luastring(\"\\\\\" + buff));\n        } else\n            luaL_addchar(b, s[i]);\n        i++;\n    }\n    luaL_addchar(b, 34 /* '\"'.charCodeAt(0) */);\n};\n\n/*\n** Ensures the 'buff' string uses a dot as the radix character.\n*/\nconst checkdp = function(buff) {\n    if (luastring_indexOf(buff, 46 /* ('.').charCodeAt(0) */) < 0) {  /* no dot? */\n        let point = lua_getlocaledecpoint();  /* try locale point */\n        let ppoint = luastring_indexOf(buff, point);\n        if (ppoint) buff[ppoint] = 46 /* ('.').charCodeAt(0) */;  /* change it to a dot */\n    }\n};\n\nconst addliteral = function(L, b, arg) {\n    switch(lua_type(L, arg)) {\n        case LUA_TSTRING: {\n            let s = lua_tostring(L, arg);\n            addquoted(b, s, s.length);\n            break;\n        }\n        case LUA_TNUMBER: {\n            let buff;\n            if (!lua_isinteger(L, arg)) {  /* float? */\n                let n = lua_tonumber(L, arg);  /* write as hexa ('%a') */\n                buff = lua_number2strx(L, to_luastring(`%${LUA_INTEGER_FRMLEN}a`), n);\n                checkdp(buff);  /* ensure it uses a dot */\n            } else {  /* integers */\n                let n = lua_tointeger(L, arg);\n                let format = (n === LUA_MININTEGER)  /* corner case? */\n                    ? \"0x%\" + LUA_INTEGER_FRMLEN + \"x\"  /* use hexa */\n                    : LUA_INTEGER_FMT;  /* else use default format */\n                buff = to_luastring(sprintf(format, n));\n            }\n            luaL_addstring(b, buff);\n            break;\n        }\n        case LUA_TNIL: case LUA_TBOOLEAN: {\n            luaL_tolstring(L, arg);\n            luaL_addvalue(b);\n            break;\n        }\n        default: {\n            luaL_argerror(L, arg, to_luastring(\"value has no literal form\"));\n        }\n    }\n};\n\nconst scanformat = function(L, strfrmt, i, form) {\n    let p = i;\n    while (strfrmt[p] !== 0 && luastring_indexOf(FLAGS, strfrmt[p]) >= 0) p++;  /* skip flags */\n    if (p - i >= FLAGS.length)\n        luaL_error(L, to_luastring(\"invalid format (repeated flags)\"));\n    if (isdigit(strfrmt[p])) p++;  /* skip width */\n    if (isdigit(strfrmt[p])) p++;  /* (2 digits at most) */\n    if (strfrmt[p] === 46 /* '.'.charCodeAt(0) */) {\n        p++;\n        if (isdigit(strfrmt[p])) p++;  /* skip precision */\n        if (isdigit(strfrmt[p])) p++;  /* (2 digits at most) */\n    }\n    if (isdigit(strfrmt[p]))\n        luaL_error(L, to_luastring(\"invalid format (width or precision too long)\"));\n    form[0] = 37 /* \"%\".charCodeAt(0) */;\n    for (let j = 0; j < p - i + 1; j++)\n        form[j+1] = strfrmt[i+j];\n    return p;\n};\n\n/*\n** add length modifier into formats\n*/\nconst addlenmod = function(form, lenmod) {\n    let l = form.length;\n    let lm = lenmod.length;\n    let spec = form[l - 1];\n    for (let i = 0; i < lm; i++)\n        form[i + l - 1] = lenmod[i];\n    form[l + lm - 1] = spec;\n    // form[l + lm] = 0;\n};\n\nconst str_format = function(L) {\n    let top = lua_gettop(L);\n    let arg = 1;\n    let strfrmt = luaL_checkstring(L, arg);\n    let i = 0;\n    let b = new luaL_Buffer();\n    luaL_buffinit(L, b);\n    while (i < strfrmt.length) {\n        if (strfrmt[i] !== L_ESC) {\n            luaL_addchar(b, strfrmt[i++]);\n        } else if (strfrmt[++i] === L_ESC) {\n            luaL_addchar(b, strfrmt[i++]); /* %% */\n        } else { /* format item */\n            let form = [];  /* to store the format ('%...') */\n            if (++arg > top)\n                luaL_argerror(L, arg, to_luastring(\"no value\"));\n            i = scanformat(L, strfrmt, i, form);\n            switch (String.fromCharCode(strfrmt[i++])) {\n                case 'c': {\n                    // sprintf(String.fromCharCode(...form), luaL_checkinteger(L, arg));\n                    luaL_addchar(b, luaL_checkinteger(L, arg));\n                    break;\n                }\n                case 'd': case 'i':\n                case 'o': case 'u': case 'x': case 'X': {\n                    let n = luaL_checkinteger(L, arg);\n                    addlenmod(form, to_luastring(LUA_INTEGER_FRMLEN, true));\n                    luaL_addstring(b, to_luastring(sprintf(String.fromCharCode(...form), n)));\n                    break;\n                }\n                case 'a': case 'A': {\n                    addlenmod(form, to_luastring(LUA_INTEGER_FRMLEN, true));\n                    luaL_addstring(b, lua_number2strx(L, form, luaL_checknumber(L, arg)));\n                    break;\n                }\n                case 'e': case 'E': case 'f':\n                case 'g': case 'G': {\n                    let n = luaL_checknumber(L, arg);\n                    addlenmod(form, to_luastring(LUA_INTEGER_FRMLEN, true));\n                    luaL_addstring(b, to_luastring(sprintf(String.fromCharCode(...form), n)));\n                    break;\n                }\n                case 'q': {\n                    addliteral(L, b, arg);\n                    break;\n                }\n                case 's': {\n                    let s = luaL_tolstring(L, arg);\n                    if (form.length <= 2 || form[2] === 0) {  /* no modifiers? */\n                        luaL_addvalue(b);  /* keep entire string */\n                    } else {\n                        luaL_argcheck(L, s.length === strlen(s), arg, \"string contains zeros\");\n                        if (luastring_indexOf(form, 46 /* '.'.charCodeAt(0) */) < 0 && s.length >= 100) {\n                            /* no precision and string is too long to be formatted */\n                            luaL_addvalue(b);  /* keep entire string */\n                        } else {  /* format the string into 'buff' */\n                            // TODO: will fail if s is not valid UTF-8\n                            luaL_addstring(b, to_luastring(sprintf(String.fromCharCode(...form), to_jsstring(s))));\n                            lua_pop(L, 1);  /* remove result from 'luaL_tolstring' */\n                        }\n                    }\n                    break;\n                }\n                default: {  /* also treat cases 'pnLlh' */\n                    return luaL_error(L, to_luastring(\"invalid option '%%%c' to 'format'\"), strfrmt[i-1]);\n                }\n            }\n        }\n    }\n    luaL_pushresult(b);\n    return 1;\n};\n\n/* value used for padding */\nconst LUAL_PACKPADBYTE = 0x00;\n\n/* maximum size for the binary representation of an integer */\nconst MAXINTSIZE = 16;\n\nconst SZINT = 4; // Size of lua_Integer\n\n/* number of bits in a character */\nconst NB = 8;\n\n/* mask for one character (NB 1's) */\nconst MC = ((1 << NB) - 1);\n\nconst MAXALIGN = 8;\n\n/*\n** information to pack/unpack stuff\n*/\nclass Header {\n    constructor(L) {\n        this.L = L;\n        this.islittle = true;\n        this.maxalign = 1;\n    }\n}\n\n/*\n** options for pack/unpack\n*/\nconst Kint       = 0; /* signed integers */\nconst Kuint      = 1; /* unsigned integers */\nconst Kfloat     = 2; /* floating-point numbers */\nconst Kchar      = 3; /* fixed-length strings */\nconst Kstring    = 4; /* strings with prefixed length */\nconst Kzstr      = 5; /* zero-terminated strings */\nconst Kpadding   = 6; /* padding */\nconst Kpaddalign = 7; /* padding for alignment */\nconst Knop       = 8; /* no-op (configuration or spaces) */\n\nconst digit = isdigit;\n\nconst getnum = function(fmt, df) {\n    if (fmt.off >= fmt.s.length || !digit(fmt.s[fmt.off]))  /* no number? */\n        return df;  /* return default value */\n    else {\n        let a = 0;\n        do {\n            a = a * 10 + (fmt.s[fmt.off++] - 48 /* '0'.charCodeAt(0) */);\n        } while (fmt.off < fmt.s.length && digit(fmt.s[fmt.off]) && a <= (MAXSIZE - 9)/10);\n        return a;\n    }\n};\n\n/*\n** Read an integer numeral and raises an error if it is larger\n** than the maximum size for integers.\n*/\nconst getnumlimit = function(h, fmt, df) {\n    let sz = getnum(fmt, df);\n    if (sz > MAXINTSIZE || sz <= 0)\n        luaL_error(h.L, to_luastring(\"integral size (%d) out of limits [1,%d]\"), sz, MAXINTSIZE);\n    return sz;\n};\n\n/*\n** Read and classify next option. 'size' is filled with option's size.\n*/\nconst getoption = function(h, fmt) {\n    let r = {\n        opt: fmt.s[fmt.off++],\n        size: 0  /* default */\n    };\n    switch (r.opt) {\n        case 98  /*'b'*/: r.size = 1; r.opt = Kint;   return r; // sizeof(char): 1\n        case 66  /*'B'*/: r.size = 1; r.opt = Kuint;  return r;\n        case 104 /*'h'*/: r.size = 2; r.opt = Kint;   return r; // sizeof(short): 2\n        case 72  /*'H'*/: r.size = 2; r.opt = Kuint;  return r;\n        case 108 /*'l'*/: r.size = 4; r.opt = Kint;   return r; // sizeof(long): 4\n        case 76  /*'L'*/: r.size = 4; r.opt = Kuint;  return r;\n        case 106 /*'j'*/: r.size = 4; r.opt = Kint;   return r; // sizeof(lua_Integer): 4\n        case 74  /*'J'*/: r.size = 4; r.opt = Kuint;  return r;\n        case 84  /*'T'*/: r.size = 4; r.opt = Kuint;  return r; // sizeof(size_t): 4\n        case 102 /*'f'*/: r.size = 4; r.opt = Kfloat; return r; // sizeof(float): 4\n        case 100 /*'d'*/: r.size = 8; r.opt = Kfloat; return r; // sizeof(double): 8\n        case 110 /*'n'*/: r.size = 8; r.opt = Kfloat; return r; // sizeof(lua_Number): 8\n        case 105 /*'i'*/: r.size = getnumlimit(h, fmt, 4); r.opt = Kint;    return r; // sizeof(int): 4\n        case 73  /*'I'*/: r.size = getnumlimit(h, fmt, 4); r.opt = Kuint;   return r;\n        case 115 /*'s'*/: r.size = getnumlimit(h, fmt, 4); r.opt = Kstring; return r;\n        case 99  /*'c'*/: {\n            r.size = getnum(fmt, -1);\n            if (r.size === -1)\n                luaL_error(h.L, to_luastring(\"missing size for format option 'c'\"));\n            r.opt = Kchar;\n            return r;\n        }\n        case 122 /*'z'*/:             r.opt = Kzstr;      return r;\n        case 120 /*'x'*/: r.size = 1; r.opt = Kpadding;   return r;\n        case 88  /*'X'*/:             r.opt = Kpaddalign; return r;\n        case 32  /*' '*/: break;\n        case 60  /*'<'*/: h.islittle = true; break;\n        case 62  /*'>'*/: h.islittle = false; break;\n        case 61  /*'='*/: h.islittle = true; break;\n        case 33  /*'!'*/: h.maxalign = getnumlimit(h, fmt, MAXALIGN); break;\n        default: luaL_error(h.L, to_luastring(\"invalid format option '%c'\"), r.opt);\n    }\n    r.opt = Knop;\n    return r;\n};\n\n/*\n** Read, classify, and fill other details about the next option.\n** 'psize' is filled with option's size, 'notoalign' with its\n** alignment requirements.\n** Local variable 'size' gets the size to be aligned. (Kpadal option\n** always gets its full alignment, other options are limited by\n** the maximum alignment ('maxalign'). Kchar option needs no alignment\n** despite its size.\n*/\nconst getdetails = function(h, totalsize, fmt) {\n    let r = {\n        opt: NaN,\n        size: NaN,\n        ntoalign: NaN\n    };\n\n    let opt = getoption(h, fmt);\n    r.size = opt.size;\n    r.opt = opt.opt;\n    let align = r.size;  /* usually, alignment follows size */\n    if (r.opt === Kpaddalign) {  /* 'X' gets alignment from following option */\n        if (fmt.off >= fmt.s.length || fmt.s[fmt.off] === 0)\n            luaL_argerror(h.L, 1, to_luastring(\"invalid next option for option 'X'\"));\n        else {\n            let o = getoption(h, fmt);\n            align = o.size;\n            o = o.opt;\n            if (o === Kchar || align === 0)\n                luaL_argerror(h.L, 1, to_luastring(\"invalid next option for option 'X'\"));\n        }\n    }\n    if (align <= 1 || r.opt === Kchar)  /* need no alignment? */\n        r.ntoalign = 0;\n    else {\n        if (align > h.maxalign)  /* enforce maximum alignment */\n            align = h.maxalign;\n        if ((align & (align -1)) !== 0)  /* is 'align' not a power of 2? */\n            luaL_argerror(h.L, 1, to_luastring(\"format asks for alignment not power of 2\"));\n        r.ntoalign = (align - (totalsize & (align - 1))) & (align - 1);\n    }\n    return r;\n};\n\n/*\n** Pack integer 'n' with 'size' bytes and 'islittle' endianness.\n** The final 'if' handles the case when 'size' is larger than\n** the size of a Lua integer, correcting the extra sign-extension\n** bytes if necessary (by default they would be zeros).\n*/\nconst packint = function(b, n, islittle, size, neg) {\n    let buff = luaL_prepbuffsize(b, size);\n    buff[islittle ? 0 : size - 1] = n & MC;  /* first byte */\n    for (let i = 1; i < size; i++) {\n        n >>= NB;\n        buff[islittle ? i : size - 1 - i] = n & MC;\n    }\n    if (neg && size > SZINT) {  /* negative number need sign extension? */\n        for (let i = SZINT; i < size; i++)  /* correct extra bytes */\n            buff[islittle ? i : size - 1 - i] = MC;\n    }\n    luaL_addsize(b, size);  /* add result to buffer */\n};\n\nconst str_pack = function(L) {\n    let b = new luaL_Buffer();\n    let h = new Header(L);\n    let fmt = {\n        s: luaL_checkstring(L, 1),  /* format string */\n        off: 0\n    };\n    let arg = 1;  /* current argument to pack */\n    let totalsize = 0;  /* accumulate total size of result */\n    lua_pushnil(L);  /* mark to separate arguments from string buffer */\n    luaL_buffinit(L, b);\n    while (fmt.off < fmt.s.length) {\n        let details = getdetails(h, totalsize, fmt);\n        let opt = details.opt;\n        let size = details.size;\n        let ntoalign = details.ntoalign;\n        totalsize += ntoalign + size;\n        while (ntoalign-- > 0)\n            luaL_addchar(b, LUAL_PACKPADBYTE);  /* fill alignment */\n        arg++;\n        switch (opt) {\n            case Kint: {  /* signed integers */\n                let n = luaL_checkinteger(L, arg);\n                if (size < SZINT) {  /* need overflow check? */\n                    let lim = 1 << (size * 8) - 1;\n                    luaL_argcheck(L, -lim <= n && n < lim, arg, \"integer overflow\");\n                }\n                packint(b, n, h.islittle, size, n < 0);\n                break;\n            }\n            case Kuint: {  /* unsigned integers */\n                let n = luaL_checkinteger(L, arg);\n                if (size < SZINT)\n                    luaL_argcheck(L, (n>>>0) < (1 << (size * NB)), arg, \"unsigned overflow\");\n                packint(b, n>>>0, h.islittle, size, false);\n                break;\n            }\n            case Kfloat: {  /* floating-point options */\n                let buff = luaL_prepbuffsize(b, size);\n                let n = luaL_checknumber(L, arg);  /* get argument */\n                let dv = new DataView(buff.buffer, buff.byteOffset, buff.byteLength);\n                if (size === 4) dv.setFloat32(0, n, h.islittle);\n                else dv.setFloat64(0, n, h.islittle);\n                luaL_addsize(b, size);\n                break;\n            }\n            case Kchar: {  /* fixed-size string */\n                let s = luaL_checkstring(L, arg);\n                let len = s.length;\n                luaL_argcheck(L, len <= size, arg, \"string longer than given size\");\n                luaL_addlstring(b, s, len);  /* add string */\n                while (len++ < size)  /* pad extra space */\n                    luaL_addchar(b, LUAL_PACKPADBYTE);\n                break;\n            }\n            case Kstring: {  /* strings with length count */\n                let s = luaL_checkstring(L, arg);\n                let len = s.length;\n                luaL_argcheck(L,\n                    size >= 4 /* sizeof(size_t) */ || len < (1 << (size * NB)),\n                    arg, \"string length does not fit in given size\");\n                packint(b, len, h.islittle, size, 0);  /* pack length */\n                luaL_addlstring(b, s, len);\n                totalsize += len;\n                break;\n            }\n            case Kzstr: {  /* zero-terminated string */\n                let s = luaL_checkstring(L, arg);\n                let len = s.length;\n                luaL_argcheck(L, luastring_indexOf(s, 0) < 0, arg, \"strings contains zeros\");\n                luaL_addlstring(b, s, len);\n                luaL_addchar(b, 0);  /* add zero at the end */\n                totalsize += len + 1;\n                break;\n            }\n            case Kpadding: luaL_addchar(b, LUAL_PACKPADBYTE); /* fall through */\n            case Kpaddalign: case Knop:\n                arg--;  /* undo increment */\n                break;\n        }\n    }\n    luaL_pushresult(b);\n    return 1;\n};\n\nconst str_reverse = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let r = new Uint8Array(l);\n    for (let i=0; i<l; i++)\n        r[i] = s[l-1-i];\n    lua_pushstring(L, r);\n    return 1;\n};\n\nconst str_lower = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let r = new Uint8Array(l);\n    for (let i=0; i<l; i++) {\n        let c = s[i];\n        if (isupper(c))\n            c = c | 0x20;\n        r[i] = c;\n    }\n    lua_pushstring(L, r);\n    return 1;\n};\n\nconst str_upper = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let r = new Uint8Array(l);\n    for (let i=0; i<l; i++) {\n        let c = s[i];\n        if (islower(c))\n            c = c & 0xdf;\n        r[i] = c;\n    }\n    lua_pushstring(L, r);\n    return 1;\n};\n\nconst str_rep = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let n = luaL_checkinteger(L, 2);\n    let sep = luaL_optstring(L, 3, \"\");\n    let lsep = sep.length;\n    if (n <= 0) lua_pushliteral(L, \"\");\n    else if (l + lsep < l || l + lsep > MAXSIZE / n)  /* may overflow? */\n        return luaL_error(L, to_luastring(\"resulting string too large\"));\n    else {\n        let totallen = n * l + (n - 1) * lsep;\n        let b = new luaL_Buffer();\n        let p = luaL_buffinitsize(L, b, totallen);\n        let pi = 0;\n        while (n-- > 1) {  /* first n-1 copies (followed by separator) */\n            p.set(s, pi);\n            pi += l;\n            if (lsep > 0) {  /* empty 'memcpy' is not that cheap */\n                p.set(sep, pi);\n                pi += lsep;\n            }\n        }\n        p.set(s, pi);  /* last copy (not followed by separator) */\n        luaL_pushresultsize(b, totallen);\n    }\n    return 1;\n};\n\nconst str_byte = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let posi = posrelat(luaL_optinteger(L, 2, 1), l);\n    let pose = posrelat(luaL_optinteger(L, 3, posi), l);\n\n    if (posi < 1) posi = 1;\n    if (pose > l) pose = l;\n    if (posi > pose) return 0;  /* empty interval; return no values */\n    if (pose - posi >= Number.MAX_SAFE_INTEGER)  /* arithmetic overflow? */\n        return luaL_error(L, \"string slice too long\");\n\n    let n = (pose - posi) + 1;\n    luaL_checkstack(L, n, \"string slice too long\");\n    for (let i = 0; i < n; i++)\n        lua_pushinteger(L, s[posi + i - 1]);\n    return n;\n};\n\nconst str_packsize = function(L) {\n    let h = new Header(L);\n    let fmt = {\n        s: luaL_checkstring(L, 1),\n        off: 0\n    };\n    let totalsize = 0;  /* accumulate total size of result */\n    while (fmt.off < fmt.s.length) {\n        let details = getdetails(h, totalsize, fmt);\n        let opt = details.opt;\n        let size = details.size;\n        let ntoalign = details.ntoalign;\n        size += ntoalign;  /* total space used by option */\n        luaL_argcheck(L, totalsize <= MAXSIZE - size, 1, \"format result too large\");\n        totalsize += size;\n        switch (opt) {\n            case Kstring:  /* strings with length count */\n            case Kzstr:    /* zero-terminated string */\n                luaL_argerror(L, 1, \"variable-length format\");\n                /* call never return, but to avoid warnings: *//* fall through */\n            default:  break;\n        }\n    }\n    lua_pushinteger(L, totalsize);\n    return 1;\n};\n\n/*\n** Unpack an integer with 'size' bytes and 'islittle' endianness.\n** If size is smaller than the size of a Lua integer and integer\n** is signed, must do sign extension (propagating the sign to the\n** higher bits); if size is larger than the size of a Lua integer,\n** it must check the unread bytes to see whether they do not cause an\n** overflow.\n*/\nconst unpackint = function(L, str, islittle, size, issigned) {\n    let res = 0;\n    let limit = size <= SZINT ? size : SZINT;\n    for (let i = limit - 1; i >= 0; i--) {\n        res <<= NB;\n        res |= str[islittle ? i : size - 1 - i];\n    }\n    if (size < SZINT) {  /* real size smaller than lua_Integer? */\n        if (issigned) {  /* needs sign extension? */\n            let mask = 1 << (size * NB - 1);\n            res = ((res ^ mask) - mask);  /* do sign extension */\n        }\n    } else if (size > SZINT) {  /* must check unread bytes */\n        let mask = !issigned || res >= 0 ? 0 : MC;\n        for (let i = limit; i < size; i++) {\n            if (str[islittle ? i : size - 1 - i] !== mask)\n                luaL_error(L, to_luastring(\"%d-byte integer does not fit into Lua Integer\"), size);\n        }\n    }\n    return res;\n};\n\nconst unpacknum = function(L, b, islittle, size) {\n    lualib.lua_assert(b.length >= size);\n\n    let dv = new DataView(new ArrayBuffer(size));\n    for (let i = 0; i < size; i++)\n        dv.setUint8(i, b[i], islittle);\n\n    if (size == 4) return dv.getFloat32(0, islittle);\n    else return dv.getFloat64(0, islittle);\n};\n\nconst str_unpack = function(L) {\n    let h = new Header(L);\n    let fmt = {\n        s: luaL_checkstring(L, 1),\n        off: 0\n    };\n    let data = luaL_checkstring(L, 2);\n    let ld = data.length;\n    let pos = posrelat(luaL_optinteger(L, 3, 1), ld) - 1;\n    let n = 0;  /* number of results */\n    luaL_argcheck(L, pos <= ld && pos >= 0, 3, \"initial position out of string\");\n    while (fmt.off < fmt.s.length) {\n        let details = getdetails(h, pos, fmt);\n        let opt = details.opt;\n        let size = details.size;\n        let ntoalign = details.ntoalign;\n        if (/*ntoalign + size > ~pos ||*/ pos + ntoalign + size > ld)\n            luaL_argerror(L, 2, to_luastring(\"data string too short\"));\n        pos += ntoalign;  /* skip alignment */\n        /* stack space for item + next position */\n        luaL_checkstack(L, 2, \"too many results\");\n        n++;\n        switch (opt) {\n            case Kint:\n            case Kuint: {\n                let res = unpackint(L, data.subarray(pos), h.islittle, size, opt === Kint);\n                lua_pushinteger(L, res);\n                break;\n            }\n            case Kfloat: {\n                let res = unpacknum(L, data.subarray(pos), h.islittle, size);\n                lua_pushnumber(L, res);\n                break;\n            }\n            case Kchar: {\n                lua_pushstring(L, data.subarray(pos, pos + size));\n                break;\n            }\n            case Kstring: {\n                let len = unpackint(L, data.subarray(pos), h.islittle, size, 0);\n                luaL_argcheck(L, pos + len + size <= ld, 2, \"data string too short\");\n                lua_pushstring(L, data.subarray(pos + size, pos + size + len));\n                pos += len;  /* skip string */\n                break;\n            }\n            case Kzstr: {\n                let e = luastring_indexOf(data, 0, pos);\n                if (e === -1) e = data.length - pos;\n                lua_pushstring(L, data.subarray(pos, e));\n                pos = e + 1;  /* skip string plus final '\\0' */\n                break;\n            }\n            case Kpaddalign: case Kpadding: case Knop:\n                n--;  /* undo increment */\n                break;\n        }\n        pos += size;\n    }\n    lua_pushinteger(L, pos + 1);  /* next position */\n    return n + 1;\n};\n\nconst CAP_UNFINISHED = -1;\nconst CAP_POSITION   = -2;\nconst MAXCCALLS      = 200;\nconst SPECIALS       = to_luastring(\"^$*+?.([%-\");\n\nclass MatchState {\n    constructor(L) {\n        this.src = null;  /* unmodified source string */\n        this.src_init = null;  /* init of source string */\n        this.src_end = null;  /* end ('\\0') of source string */\n        this.p = null;  /* unmodified pattern string */\n        this.p_end = null;  /* end ('\\0') of pattern */\n        this.L = L;\n        this.matchdepth = NaN;  /* control for recursive depth */\n        this.level = NaN;  /* total number of captures (finished or unfinished) */\n        this.capture = [];\n    }\n}\n\nconst check_capture = function(ms, l) {\n    l = l - 49 /* '1'.charCodeAt(0) */;\n    if (l < 0 || l >= ms.level || ms.capture[l].len === CAP_UNFINISHED)\n        return luaL_error(ms.L, to_luastring(\"invalid capture index %%%d\"), l + 1);\n    return l;\n};\n\nconst capture_to_close = function(ms) {\n    let level = ms.level;\n    for (level--; level >= 0; level--)\n        if (ms.capture[level].len === CAP_UNFINISHED) return level;\n    return luaL_error(ms.L, to_luastring(\"invalid pattern capture\"));\n};\n\nconst classend = function(ms, p) {\n    switch(ms.p[p++]) {\n        case L_ESC: {\n            if (p === ms.p_end)\n                luaL_error(ms.L, to_luastring(\"malformed pattern (ends with '%%')\"));\n            return p + 1;\n        }\n        case 91 /* '['.charCodeAt(0) */: {\n            if (ms.p[p] === 94 /* '^'.charCodeAt(0) */) p++;\n            do {  /* look for a ']' */\n                if (p === ms.p_end)\n                    luaL_error(ms.L, to_luastring(\"malformed pattern (missing ']')\"));\n                if (ms.p[p++] === L_ESC && p < ms.p_end)\n                    p++;  /* skip escapes (e.g. '%]') */\n            } while (ms.p[p] !== 93 /* ']'.charCodeAt(0) */);\n            return p + 1;\n        }\n        default: {\n            return p;\n        }\n    }\n};\n\nconst match_class = function(c, cl) {\n    switch (cl) {\n        case 97  /* 'a'.charCodeAt(0) */: return  isalpha(c);\n        case 65  /* 'A'.charCodeAt(0) */: return !isalpha(c);\n        case 99  /* 'c'.charCodeAt(0) */: return  iscntrl(c);\n        case 67  /* 'C'.charCodeAt(0) */: return !iscntrl(c);\n        case 100 /* 'd'.charCodeAt(0) */: return  isdigit(c);\n        case 68  /* 'D'.charCodeAt(0) */: return !isdigit(c);\n        case 103 /* 'g'.charCodeAt(0) */: return  isgraph(c);\n        case 71  /* 'G'.charCodeAt(0) */: return !isgraph(c);\n        case 108 /* 'l'.charCodeAt(0) */: return  islower(c);\n        case 76  /* 'L'.charCodeAt(0) */: return !islower(c);\n        case 112 /* 'p'.charCodeAt(0) */: return  ispunct(c);\n        case 80  /* 'P'.charCodeAt(0) */: return !ispunct(c);\n        case 115 /* 's'.charCodeAt(0) */: return  isspace(c);\n        case 83  /* 'S'.charCodeAt(0) */: return !isspace(c);\n        case 117 /* 'u'.charCodeAt(0) */: return  isupper(c);\n        case 85  /* 'U'.charCodeAt(0) */: return !isupper(c);\n        case 119 /* 'w'.charCodeAt(0) */: return  isalnum(c);\n        case 87  /* 'W'.charCodeAt(0) */: return !isalnum(c);\n        case 120 /* 'x'.charCodeAt(0) */: return  isxdigit(c);\n        case 88  /* 'X'.charCodeAt(0) */: return !isxdigit(c);\n        case 122 /* 'z'.charCodeAt(0) */: return (c === 0);  /* deprecated option */\n        case 90  /* 'z'.charCodeAt(0) */: return (c !== 0);  /* deprecated option */\n        default: return (cl === c);\n    }\n};\n\nconst matchbracketclass = function(ms, c, p, ec) {\n    let sig = true;\n    if (ms.p[p + 1] === 94 /* '^'.charCodeAt(0) */) {\n        sig = false;\n        p++;  /* skip the '^' */\n    }\n    while (++p < ec) {\n        if (ms.p[p] === L_ESC) {\n            p++;\n            if (match_class(c, ms.p[p]))\n                return sig;\n        } else if (ms.p[p + 1] === 45 /* '-'.charCodeAt(0) */ && p + 2 < ec) {\n            p += 2;\n            if (ms.p[p - 2] <= c && c <= ms.p[p])\n                return sig;\n        } else if (ms.p[p] === c) return sig;\n    }\n    return !sig;\n};\n\nconst singlematch = function(ms, s, p, ep) {\n    if (s >= ms.src_end)\n        return false;\n    else {\n        let c = ms.src[s];\n        switch (ms.p[p]) {\n            case 46 /* '.'.charCodeAt(0) */: return true;  /* matches any char */\n            case L_ESC: return match_class(c, ms.p[p + 1]);\n            case 91 /* '['.charCodeAt(0) */: return matchbracketclass(ms, c, p, ep - 1);\n            default: return ms.p[p] === c;\n        }\n    }\n};\n\nconst matchbalance = function(ms, s, p) {\n    if (p >= ms.p_end - 1)\n        luaL_error(ms.L, to_luastring(\"malformed pattern (missing arguments to '%%b'\"));\n    if (ms.src[s] !== ms.p[p])\n        return null;\n    else {\n        let b = ms.p[p];\n        let e = ms.p[p + 1];\n        let cont = 1;\n        while (++s < ms.src_end) {\n            if (ms.src[s] === e) {\n                if (--cont === 0) return s + 1;\n            }\n            else if (ms.src[s] === b) cont++;\n        }\n    }\n    return null;  /* string ends out of balance */\n};\n\nconst max_expand = function(ms, s, p, ep) {\n    let i = 0;  /* counts maximum expand for item */\n    while (singlematch(ms, s + i, p, ep))\n        i++;\n    /* keeps trying to match with the maximum repetitions */\n    while (i >= 0) {\n        let res = match(ms, s + i, ep + 1);\n        if (res) return res;\n        i--;  /* else didn't match; reduce 1 repetition to try again */\n    }\n    return null;\n};\n\nconst min_expand = function(ms, s, p, ep) {\n    for (;;) {\n        let res = match(ms, s, ep + 1);\n        if (res !== null)\n            return res;\n        else if (singlematch(ms, s, p, ep))\n            s++;  /* try with one more repetition */\n        else return null;\n    }\n};\n\nconst start_capture = function(ms, s, p, what) {\n    let level = ms.level;\n    if (level >= LUA_MAXCAPTURES) luaL_error(ms.L, to_luastring(\"too many captures\"));\n    ms.capture[level] = ms.capture[level] ? ms.capture[level] : {};\n    ms.capture[level].init = s;\n    ms.capture[level].len = what;\n    ms.level = level + 1;\n    let res;\n    if ((res = match(ms, s, p)) === null)  /* match failed? */\n        ms.level--;  /* undo capture */\n    return res;\n};\n\nconst end_capture = function(ms, s, p) {\n    let l = capture_to_close(ms);\n    ms.capture[l].len = s - ms.capture[l].init;  /* close capture */\n    let res;\n    if ((res = match(ms, s, p)) === null)  /* match failed? */\n        ms.capture[l].len = CAP_UNFINISHED;  /* undo capture */\n    return res;\n};\n\n/* Compare the elements of arrays 'a' and 'b' to see if they contain the same elements */\nconst array_cmp = function(a, ai, b, bi, len) {\n    return luastring_eq(a.subarray(ai, ai+len), b.subarray(bi, bi+len));\n};\n\nconst match_capture = function(ms, s, l) {\n    l = check_capture(ms, l);\n    let len = ms.capture[l].len;\n    if ((ms.src_end-s) >= len && array_cmp(ms.src, ms.capture[l].init, ms.src, s, len))\n        return s+len;\n    else return null;\n};\n\nconst match = function(ms, s, p) {\n    let gotodefault = false;\n    let gotoinit = true;\n\n    if (ms.matchdepth-- === 0)\n        luaL_error(ms.L, to_luastring(\"pattern too complex\"));\n\n    while (gotoinit || gotodefault) {\n        gotoinit = false;\n        if (p !== ms.p_end) {  /* end of pattern? */\n            switch (gotodefault ? void 0 : ms.p[p]) {\n                case 40 /* '('.charCodeAt(0) */: {  /* start capture */\n                    if (ms.p[p + 1] === 41 /* ')'.charCodeAt(0) */)  /* position capture? */\n                        s = start_capture(ms, s, p + 2, CAP_POSITION);\n                    else\n                        s = start_capture(ms, s, p + 1, CAP_UNFINISHED);\n                    break;\n                }\n                case 41 /* ')'.charCodeAt(0) */: {  /* end capture */\n                    s = end_capture(ms, s, p + 1);\n                    break;\n                }\n                case 36 /* '$'.charCodeAt(0) */: {\n                    if (p + 1 !== ms.p_end) {  /* is the '$' the last char in pattern? */\n                        gotodefault = true;  /* no; go to default */\n                        break;\n                    }\n                    s = (ms.src.length - s) === 0 ? s : null;  /* check end of string */\n                    break;\n                }\n                case L_ESC: {  /* escaped sequences not in the format class[*+?-]? */\n                    switch (ms.p[p + 1]) {\n                        case 98 /* 'b'.charCodeAt(0) */: {  /* balanced string? */\n                            s = matchbalance(ms, s, p + 2);\n                            if (s !== null) {\n                                p += 4;\n                                gotoinit = true;\n                            }\n                            break;\n                        }\n                        case 102 /* 'f'.charCodeAt(0) */: {  /* frontier? */\n                            p += 2;\n                            if (ms.p[p] !== 91 /* '['.charCodeAt(0) */)\n                                luaL_error(ms.L, to_luastring(\"missing '[' after '%%f' in pattern\"));\n                            let ep = classend(ms, p);  /* points to what is next */\n                            let previous = s === ms.src_init ? 0 : ms.src[s-1];\n                            if (!matchbracketclass(ms, previous, p, ep - 1) && matchbracketclass(ms, (s===ms.src_end)?0:ms.src[s], p, ep - 1)) {\n                                p = ep; gotoinit = true; break;\n                            }\n                            s = null;  /* match failed */\n                            break;\n                        }\n                        case 48: case 49: case 50: case 51: case 52:\n                        case 53: case 54: case 55: case 56: case 57: {  /* capture results (%0-%9)? */\n                            s = match_capture(ms, s, ms.p[p + 1]);\n                            if (s !== null) {\n                                p += 2; gotoinit = true;\n                            }\n                            break;\n                        }\n                        default: gotodefault = true;\n                    }\n                    break;\n                }\n                default: {  /* pattern class plus optional suffix */\n                    gotodefault = false;\n                    let ep = classend(ms, p);  /* points to optional suffix */\n                    /* does not match at least once? */\n                    if (!singlematch(ms, s, p, ep)) {\n                        if (ms.p[ep] === 42 /* '*'.charCodeAt(0) */ ||\n                            ms.p[ep] === 63 /* '?'.charCodeAt(0) */ ||\n                            ms.p[ep] === 45 /* '-'.charCodeAt(0) */\n                        ) {  /* accept empty? */\n                            p = ep + 1; gotoinit = true; break;\n                        } else  /* '+' or no suffix */\n                            s = null;  /* fail */\n                    } else {  /* matched once */\n                        switch (ms.p[ep]) {  /* handle optional suffix */\n                            case 63 /* '?'.charCodeAt(0) */: {  /* optional */\n                                let res;\n                                if ((res = match(ms, s + 1, ep + 1)) !== null)\n                                    s = res;\n                                else {\n                                    p = ep + 1; gotoinit = true;\n                                }\n                                break;\n                            }\n                            case 43 /* '+'.charCodeAt(0) */:  /* 1 or more repetitions */\n                                s++;  /* 1 match already done */\n                                /* fall through */\n                            case 42 /* '*'.charCodeAt(0) */:  /* 0 or more repetitions */\n                                s = max_expand(ms, s, p, ep);\n                                break;\n                            case 45 /* '-'.charCodeAt(0) */:  /* 0 or more repetitions (minimum) */\n                                s = min_expand(ms, s, p, ep);\n                                break;\n                            default:  /* no suffix */\n                                s++; p = ep; gotoinit = true;\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n    }\n    ms.matchdepth++;\n    return s;\n};\n\nconst push_onecapture = function(ms, i, s, e) {\n    if (i >= ms.level) {\n        if (i === 0)\n            lua_pushlstring(ms.L, ms.src.subarray(s, e), e - s);  /* add whole match */\n        else\n            luaL_error(ms.L, to_luastring(\"invalid capture index %%%d\"), i + 1);\n    } else {\n        let l = ms.capture[i].len;\n        if (l === CAP_UNFINISHED) luaL_error(ms.L, to_luastring(\"unfinished capture\"));\n        if (l === CAP_POSITION)\n            lua_pushinteger(ms.L, ms.capture[i].init - ms.src_init + 1);\n        else\n            lua_pushlstring(ms.L, ms.src.subarray(ms.capture[i].init), l);\n    }\n};\n\nconst push_captures = function(ms, s, e) {\n    let nlevels = ms.level === 0 && ms.src.subarray(s) ? 1 : ms.level;\n    luaL_checkstack(ms.L, nlevels, \"too many captures\");\n    for (let i = 0; i < nlevels; i++)\n        push_onecapture(ms, i, s, e);\n    return nlevels;  /* number of strings pushed */\n};\n\nconst nospecials = function(p, l) {\n    for (let i=0; i<l; i++) {\n        if (luastring_indexOf(SPECIALS, p[i]) !== -1)\n            return false;\n    }\n    return true;\n};\n\nconst prepstate = function(ms, L, s, ls, p, lp) {\n    ms.L = L;\n    ms.matchdepth = MAXCCALLS;\n    ms.src = s;\n    ms.src_init = 0;\n    ms.src_end = ls;\n    ms.p = p;\n    ms.p_end = lp;\n};\n\nconst reprepstate = function(ms) {\n    ms.level = 0;\n    lualib.lua_assert(ms.matchdepth === MAXCCALLS);\n};\n\nconst find_subarray = function(arr, subarr, from_index) {\n    var i = from_index >>> 0,\n        sl = subarr.length;\n\n    if (sl === 0)\n        return i;\n\n    for (; (i = arr.indexOf(subarr[0], i)) !== -1; i++) {\n        if (luastring_eq(arr.subarray(i, i+sl), subarr))\n            return i;\n    }\n\n    return -1;\n};\n\nconst str_find_aux = function(L, find) {\n    let s = luaL_checkstring(L, 1);\n    let p = luaL_checkstring(L, 2);\n    let ls = s.length;\n    let lp = p.length;\n    let init = posrelat(luaL_optinteger(L, 3, 1), ls);\n    if (init < 1) init = 1;\n    else if (init > ls + 1) {  /* start after string's end? */\n        lua_pushnil(L);  /* cannot find anything */\n        return 1;\n    }\n    /* explicit request or no special characters? */\n    if (find && (lua_toboolean(L, 4) || nospecials(p, lp))) {\n        /* do a plain search */\n        let f = find_subarray(s.subarray(init - 1), p, 0);\n        if (f > -1) {\n            lua_pushinteger(L, init + f);\n            lua_pushinteger(L, init + f + lp - 1);\n            return 2;\n        }\n    } else {\n        let ms = new MatchState(L);\n        let s1 = init - 1;\n        let anchor = p[0] === 94 /* '^'.charCodeAt(0) */;\n        if (anchor) {\n            p = p.subarray(1); lp--;  /* skip anchor character */\n        }\n        prepstate(ms, L, s, ls, p, lp);\n        do {\n            let res;\n            reprepstate(ms);\n            if ((res = match(ms, s1, 0)) !== null) {\n                if (find) {\n                    lua_pushinteger(L, s1 + 1);  /* start */\n                    lua_pushinteger(L, res);   /* end */\n                    return push_captures(ms, null, 0) + 2;\n                } else\n                    return push_captures(ms, s1, res);\n            }\n        } while (s1++ < ms.src_end && !anchor);\n    }\n    lua_pushnil(L);  /* not found */\n    return 1;\n};\n\nconst str_find = function(L) {\n    return str_find_aux(L, 1);\n};\n\nconst str_match = function(L) {\n    return str_find_aux(L, 0);\n};\n\n/* state for 'gmatch' */\nclass GMatchState {\n    constructor() {\n        this.src = NaN;  /* current position */\n        this.p = NaN;  /* pattern */\n        this.lastmatch = NaN;  /* end of last match */\n        this.ms = new MatchState();  /* match state */\n    }\n}\n\nconst gmatch_aux = function(L) {\n    let gm = lua_touserdata(L, lua_upvalueindex(3));\n    gm.ms.L = L;\n    for (let src = gm.src; src <= gm.ms.src_end; src++) {\n        reprepstate(gm.ms);\n        let e;\n        if ((e = match(gm.ms, src, gm.p)) !== null && e !== gm.lastmatch) {\n            gm.src = gm.lastmatch = e;\n            return push_captures(gm.ms, src, e);\n        }\n    }\n    return 0;  /* not found */\n};\n\nconst str_gmatch = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let p = luaL_checkstring(L, 2);\n    let ls = s.length;\n    let lp = p.length;\n    lua_settop(L, 2);  /* keep them on closure to avoid being collected */\n    let gm = new GMatchState();\n    lua_pushlightuserdata(L, gm);\n    prepstate(gm.ms, L, s, ls, p, lp);\n    gm.src = 0;\n    gm.p = 0;\n    gm.lastmatch = null;\n    lua_pushcclosure(L, gmatch_aux, 3);\n    return 1;\n};\n\nconst add_s = function(ms, b, s, e) {\n    let L = ms.L;\n    let news = lua_tostring(L, 3);\n    let l = news.length;\n    for (let i = 0; i < l; i++) {\n        if (news[i] !== L_ESC)\n            luaL_addchar(b, news[i]);\n        else {\n            i++;  /* skip ESC */\n            if (!isdigit(news[i])) {\n                if (news[i] !== L_ESC)\n                    luaL_error(L, to_luastring(\"invalid use of '%c' in replacement string\"), L_ESC);\n                luaL_addchar(b, news[i]);\n            } else if (news[i] === 48 /* '0'.charCodeAt(0) */)\n                luaL_addlstring(b, ms.src.subarray(s, e), e - s);\n            else {\n                push_onecapture(ms, news[i] - 49 /* '1'.charCodeAt(0) */, s, e);\n                luaL_tolstring(L, -1);\n                lua_remove(L, -2);  /* remove original value */\n                luaL_addvalue(b);  /* add capture to accumulated result */\n            }\n        }\n    }\n};\n\nconst add_value = function(ms, b, s, e, tr) {\n    let L = ms.L;\n    switch (tr) {\n        case LUA_TFUNCTION: {\n            lua_pushvalue(L, 3);\n            let n = push_captures(ms, s, e);\n            lua_call(L, n, 1);\n            break;\n        }\n        case LUA_TTABLE: {\n            push_onecapture(ms, 0, s, e);\n            lua_gettable(L, 3);\n            break;\n        }\n        default: {  /* LUA_TNUMBER or LUA_TSTRING */\n            add_s(ms, b, s, e);\n            return;\n        }\n    }\n    if (!lua_toboolean(L, -1)) {  /* nil or false? */\n        lua_pop(L, 1);\n        lua_pushlstring(L, ms.src.subarray(s, e), e - s);  /* keep original text */\n    } else if (!lua_isstring(L, -1))\n        luaL_error(L, to_luastring(\"invalid replacement value (a %s)\"), luaL_typename(L, -1));\n    luaL_addvalue(b);  /* add result to accumulator */\n};\n\nconst str_gsub = function(L) {\n    let src = luaL_checkstring(L, 1);  /* subject */\n    let srcl = src.length;\n    let p = luaL_checkstring(L, 2);  /* pattern */\n    let lp = p.length;\n    let lastmatch = null;  /* end of last match */\n    let tr = lua_type(L, 3);  /* replacement type */\n    let max_s = luaL_optinteger(L, 4, srcl + 1);  /* max replacements */\n    let anchor = p[0] === 94 /* '^'.charCodeAt(0) */;\n    let n = 0;  /* replacement count */\n    let ms = new MatchState(L);\n    let b = new luaL_Buffer();\n    luaL_argcheck(L, tr === LUA_TNUMBER || tr === LUA_TSTRING || tr === LUA_TFUNCTION || tr === LUA_TTABLE, 3,\n        \"string/function/table expected\");\n    luaL_buffinit(L, b);\n    if (anchor) {\n        p = p.subarray(1); lp--;  /* skip anchor character */\n    }\n    prepstate(ms, L, src, srcl, p, lp);\n    src = 0; p = 0;\n    while (n < max_s) {\n        let e;\n        reprepstate(ms);\n        if ((e = match(ms, src, p)) !== null && e !== lastmatch) {  /* match? */\n            n++;\n            add_value(ms, b, src, e, tr);  /* add replacement to buffer */\n            src = lastmatch = e;\n        } else if (src < ms.src_end)  /* otherwise, skip one character */\n            luaL_addchar(b, ms.src[src++]);\n        else break;  /* end of subject */\n        if (anchor) break;\n    }\n    luaL_addlstring(b, ms.src.subarray(src, ms.src_end), ms.src_end - src);\n    luaL_pushresult(b);\n    lua_pushinteger(L, n);  /* number of substitutions */\n    return 2;\n};\n\nconst strlib = {\n    \"byte\":     str_byte,\n    \"char\":     str_char,\n    \"dump\":     str_dump,\n    \"find\":     str_find,\n    \"format\":   str_format,\n    \"gmatch\":   str_gmatch,\n    \"gsub\":     str_gsub,\n    \"len\":      str_len,\n    \"lower\":    str_lower,\n    \"match\":    str_match,\n    \"pack\":     str_pack,\n    \"packsize\": str_packsize,\n    \"rep\":      str_rep,\n    \"reverse\":  str_reverse,\n    \"sub\":      str_sub,\n    \"unpack\":   str_unpack,\n    \"upper\":    str_upper\n};\n\nconst createmetatable = function(L) {\n    lua_createtable(L, 0, 1);  /* table to be metatable for strings */\n    lua_pushliteral(L, \"\");  /* dummy string */\n    lua_pushvalue(L, -2);  /* copy table */\n    lua_setmetatable(L, -2);  /* set table as metatable for strings */\n    lua_pop(L, 1);  /* pop dummy string */\n    lua_pushvalue(L, -2);  /* get string library */\n    lua_setfield(L, -2, to_luastring(\"__index\", true));  /* metatable.__index = string */\n    lua_pop(L, 1);  /* pop metatable */\n};\n\nconst luaopen_string = function(L) {\n    luaL_newlib(L, strlib);\n    createmetatable(L);\n    return 1;\n};\n\nmodule.exports.luaopen_string = luaopen_string;\n","\"use strict\";\n\nconst {\n    lua_gettop,\n    lua_pushcfunction,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_setfield,\n    lua_tointeger\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addvalue,\n    luaL_argcheck,\n    luaL_buffinit,\n    luaL_checkinteger,\n    luaL_checkstack,\n    luaL_checkstring,\n    luaL_error,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_pushresult\n} = require('./lauxlib.js');\nconst {\n    luastring_of,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nconst MAXUNICODE = 0x10FFFF;\n\nconst iscont = function(p) {\n    let c = p & 0xC0;\n    return c === 0x80;\n};\n\n/* translate a relative string position: negative means back from end */\nconst u_posrelat = function(pos, len) {\n    if (pos >= 0) return pos;\n    else if (0 - pos > len) return 0;\n    else return len + pos + 1;\n};\n\n/*\n** Decode one UTF-8 sequence, returning NULL if byte sequence is invalid.\n*/\nconst limits = [0xFF, 0x7F, 0x7FF, 0xFFFF];\nconst utf8_decode = function(s, pos) {\n    let c = s[pos];\n    let res = 0;  /* final result */\n    if (c < 0x80)  /* ascii? */\n        res = c;\n    else {\n        let count = 0;  /* to count number of continuation bytes */\n        while (c & 0x40) {  /* still have continuation bytes? */\n            let cc = s[pos + (++count)];  /* read next byte */\n            if ((cc & 0xC0) !== 0x80)  /* not a continuation byte? */\n                return null;  /* invalid byte sequence */\n            res = (res << 6) | (cc & 0x3F);  /* add lower 6 bits from cont. byte */\n            c <<= 1;  /* to test next bit */\n        }\n        res |= ((c & 0x7F) << (count * 5));  /* add first byte */\n        if (count > 3 || res > MAXUNICODE || res <= limits[count])\n            return null;  /* invalid byte sequence */\n        pos += count;  /* skip continuation bytes read */\n    }\n\n    return {\n        code: res,\n        pos: pos + 1\n    };\n};\n\n/*\n** utf8len(s [, i [, j]]) --> number of characters that start in the\n** range [i,j], or nil + current position if 's' is not well formed in\n** that interval\n*/\nconst utflen = function(L) {\n    let n = 0;\n    let s = luaL_checkstring(L, 1);\n    let len = s.length;\n    let posi = u_posrelat(luaL_optinteger(L, 2, 1), len);\n    let posj = u_posrelat(luaL_optinteger(L, 3, -1), len);\n\n    luaL_argcheck(L, 1 <= posi && --posi <= len, 2, \"initial position out of string\");\n    luaL_argcheck(L, --posj < len, 3, \"final position out of string\");\n\n    while (posi <= posj) {\n        let dec = utf8_decode(s, posi);\n        if (dec === null) { /* conversion error? */\n            lua_pushnil(L);  /* return nil ... */\n            lua_pushinteger(L, posi + 1);  /* ... and current position */\n            return 2;\n        }\n        posi = dec.pos;\n        n++;\n    }\n    lua_pushinteger(L, n);\n    return 1;\n};\n\nconst p_U = to_luastring(\"%U\");\nconst pushutfchar = function(L, arg) {\n    let code = luaL_checkinteger(L, arg);\n    luaL_argcheck(L, 0 <= code && code <= MAXUNICODE, arg, \"value out of range\");\n    lua_pushfstring(L, p_U, code);\n};\n\n/*\n** utfchar(n1, n2, ...)  -> char(n1)..char(n2)...\n*/\nconst utfchar = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    if (n === 1)  /* optimize common case of single char */\n        pushutfchar(L, 1);\n    else {\n        let b = new luaL_Buffer();\n        luaL_buffinit(L, b);\n        for (let i = 1; i <= n; i++) {\n            pushutfchar(L, i);\n            luaL_addvalue(b);\n        }\n        luaL_pushresult(b);\n    }\n    return 1;\n};\n\n/*\n** offset(s, n, [i])  -> index where n-th character counting from\n**   position 'i' starts; 0 means character at 'i'.\n*/\nconst byteoffset = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let n = luaL_checkinteger(L, 2);\n    let posi = n >= 0 ? 1 : s.length + 1;\n    posi = u_posrelat(luaL_optinteger(L, 3, posi), s.length);\n\n    luaL_argcheck(L, 1 <= posi && --posi <= s.length, 3, \"position out of range\");\n\n    if (n === 0) {\n        /* find beginning of current byte sequence */\n        while (posi > 0 && iscont(s[posi])) posi--;\n    } else {\n        if (iscont(s[posi]))\n            luaL_error(L, \"initial position is a continuation byte\");\n\n        if (n < 0) {\n            while (n < 0 && posi > 0) {  /* move back */\n                do {  /* find beginning of previous character */\n                    posi--;\n                } while (posi > 0 && iscont(s[posi]));\n                n++;\n            }\n        } else {\n            n--;  /* do not move for 1st character */\n            while (n > 0 && posi < s.length) {\n                do {  /* find beginning of next character */\n                    posi++;\n                } while (iscont(s[posi]));  /* (cannot pass final '\\0') */\n                n--;\n            }\n        }\n    }\n\n    if (n === 0)  /* did it find given character? */\n        lua_pushinteger(L, posi + 1);\n    else  /* no such character */\n        lua_pushnil(L);\n\n    return 1;\n};\n\n/*\n** codepoint(s, [i, [j]])  -> returns codepoints for all characters\n** that start in the range [i,j]\n*/\nconst codepoint = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let posi = u_posrelat(luaL_optinteger(L, 2, 1), s.length);\n    let pose = u_posrelat(luaL_optinteger(L, 3, posi), s.length);\n\n    luaL_argcheck(L, posi >= 1, 2, \"out of range\");\n    luaL_argcheck(L, pose <= s.length, 3, \"out of range\");\n\n    if (posi > pose) return 0;  /* empty interval; return no values */\n    if (pose - posi >= Number.MAX_SAFE_INTEGER)\n        return luaL_error(L, \"string slice too long\");\n    let n = (pose - posi) + 1;\n    luaL_checkstack(L, n, \"string slice too long\");\n    n = 0;\n    for (posi -= 1; posi < pose;) {\n        let dec = utf8_decode(s, posi);\n        if (dec === null)\n            return luaL_error(L, \"invalid UTF-8 code\");\n        lua_pushinteger(L, dec.code);\n        posi = dec.pos;\n        n++;\n    }\n    return n;\n};\n\nconst iter_aux = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let len = s.length;\n    let n = lua_tointeger(L, 2) - 1;\n\n    if (n < 0)  /* first iteration? */\n        n = 0;  /* start from here */\n    else if (n < len) {\n        n++;  /* skip current byte */\n        while (iscont(s[n])) n++;  /* and its continuations */\n    }\n\n    if (n >= len)\n        return 0;  /* no more codepoints */\n    else {\n        let dec = utf8_decode(s, n);\n        if (dec === null || iscont(s[dec.pos]))\n            return luaL_error(L, to_luastring(\"invalid UTF-8 code\"));\n        lua_pushinteger(L, n + 1);\n        lua_pushinteger(L, dec.code);\n        return 2;\n    }\n};\n\nconst iter_codes = function(L) {\n    luaL_checkstring(L, 1);\n    lua_pushcfunction(L, iter_aux);\n    lua_pushvalue(L, 1);\n    lua_pushinteger(L, 0);\n    return 3;\n};\n\nconst funcs = {\n    \"char\":      utfchar,\n    \"codepoint\": codepoint,\n    \"codes\":     iter_codes,\n    \"len\":       utflen,\n    \"offset\":    byteoffset\n};\n\n/* pattern to match a single UTF-8 character */\nconst UTF8PATT = luastring_of(91, 0, 45, 127, 194, 45, 244, 93, 91, 128, 45, 191, 93, 42);\n\nconst luaopen_utf8 = function(L) {\n    luaL_newlib(L, funcs);\n    lua_pushstring(L, UTF8PATT);\n    lua_setfield(L, -2, to_luastring(\"charpattern\", true));\n    return 1;\n};\n\nmodule.exports.luaopen_utf8 = luaopen_utf8;\n","\"use strict\";\n\nconst {\n    LUA_OPLT,\n    LUA_TNUMBER,\n    lua_compare,\n    lua_gettop,\n    lua_isinteger,\n    lua_isnoneornil,\n    lua_pushboolean,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushnumber,\n    lua_pushvalue,\n    lua_setfield,\n    lua_settop,\n    lua_tointeger,\n    lua_tointegerx,\n    lua_type\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_argerror,\n    luaL_checkany,\n    luaL_checkinteger,\n    luaL_checknumber,\n    luaL_error,\n    luaL_newlib,\n    luaL_optnumber\n} = require('./lauxlib.js');\nconst {\n    LUA_MAXINTEGER,\n    LUA_MININTEGER,\n    lua_numbertointeger\n} = require('./luaconf.js');\nconst { to_luastring } = require(\"./fengaricore.js\");\n\nlet rand_state;\n/* use same parameters as glibc LCG */\nconst l_rand = function() {\n    rand_state = (1103515245 * rand_state + 12345) & 0x7fffffff;\n    return rand_state;\n};\nconst l_srand = function(x) {\n    rand_state = x|0;\n    if (rand_state === 0)\n        rand_state = 1;\n};\n\nconst math_random = function(L) {\n    let low, up;\n    /* use Math.random until randomseed is called */\n    let r = (rand_state === void 0)?Math.random():(l_rand() / 0x80000000);\n    switch (lua_gettop(L)) {  /* check number of arguments */\n        case 0:\n            lua_pushnumber(L, r);  /* Number between 0 and 1 */\n            return 1;\n        case 1: {\n            low = 1;\n            up = luaL_checkinteger(L, 1);\n            break;\n        }\n        case 2: {\n            low = luaL_checkinteger(L, 1);\n            up = luaL_checkinteger(L, 2);\n            break;\n        }\n        default: return luaL_error(L, \"wrong number of arguments\");\n    }\n\n    /* random integer in the interval [low, up] */\n    luaL_argcheck(L, low <= up, 1, \"interval is empty\");\n    luaL_argcheck(L, low >= 0 || up <= LUA_MAXINTEGER + low, 1,\n        \"interval too large\");\n\n    r *= (up - low) + 1;\n    lua_pushinteger(L, Math.floor(r) + low);\n    return 1;\n};\n\nconst math_randomseed = function(L) {\n    l_srand(luaL_checknumber(L, 1));\n    l_rand(); /* discard first value to avoid undesirable correlations */\n    return 0;\n};\n\nconst math_abs = function(L) {\n    if (lua_isinteger(L, 1)) {\n        let n = lua_tointeger(L, 1);\n        if (n < 0) n = (-n)|0;\n        lua_pushinteger(L, n);\n    }\n    else\n        lua_pushnumber(L, Math.abs(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_sin = function(L) {\n    lua_pushnumber(L, Math.sin(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_cos = function(L) {\n    lua_pushnumber(L, Math.cos(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_tan = function(L) {\n    lua_pushnumber(L, Math.tan(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_asin = function(L) {\n    lua_pushnumber(L, Math.asin(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_acos = function(L) {\n    lua_pushnumber(L, Math.acos(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_atan = function(L) {\n    let y = luaL_checknumber(L, 1);\n    let x = luaL_optnumber(L, 2, 1);\n    lua_pushnumber(L, Math.atan2(y, x));\n    return 1;\n};\n\nconst math_toint = function(L) {\n    let n = lua_tointegerx(L, 1);\n    if (n !== false)\n        lua_pushinteger(L, n);\n    else {\n        luaL_checkany(L, 1);\n        lua_pushnil(L);  /* value is not convertible to integer */\n    }\n    return 1;\n};\n\nconst pushnumint = function(L, d) {\n    let n = lua_numbertointeger(d);\n    if (n !== false)  /* does 'd' fit in an integer? */\n        lua_pushinteger(L, n);  /* result is integer */\n    else\n        lua_pushnumber(L, d);  /* result is float */\n};\n\nconst math_floor = function(L) {\n    if (lua_isinteger(L, 1))\n        lua_settop(L, 1);\n    else\n        pushnumint(L, Math.floor(luaL_checknumber(L, 1)));\n\n    return 1;\n};\n\nconst math_ceil = function(L) {\n    if (lua_isinteger(L, 1))\n        lua_settop(L, 1);\n    else\n        pushnumint(L, Math.ceil(luaL_checknumber(L, 1)));\n\n    return 1;\n};\n\nconst math_sqrt = function(L) {\n    lua_pushnumber(L, Math.sqrt(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_ult = function(L) {\n    let a = luaL_checkinteger(L, 1);\n    let b = luaL_checkinteger(L, 2);\n    lua_pushboolean(L, (a >= 0)?(b<0 || a<b):(b<0 && a<b));\n    return 1;\n};\n\nconst math_log = function(L) {\n    let x = luaL_checknumber(L, 1);\n    let res;\n    if (lua_isnoneornil(L, 2))\n        res = Math.log(x);\n    else {\n        let base = luaL_checknumber(L, 2);\n        if (base === 2)\n            res = Math.log2(x);\n        else if (base === 10)\n            res = Math.log10(x);\n        else\n            res = Math.log(x)/Math.log(base);\n    }\n    lua_pushnumber(L, res);\n    return 1;\n};\n\nconst math_exp = function(L) {\n    lua_pushnumber(L, Math.exp(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_deg = function(L) {\n    lua_pushnumber(L, luaL_checknumber(L, 1) * (180 / Math.PI));\n    return 1;\n};\n\nconst math_rad = function(L) {\n    lua_pushnumber(L, luaL_checknumber(L, 1) * (Math.PI / 180));\n    return 1;\n};\n\nconst math_min = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    let imin = 1;  /* index of current minimum value */\n    luaL_argcheck(L, n >= 1, 1, \"value expected\");\n    for (let i = 2; i <= n; i++){\n        if (lua_compare(L, i, imin, LUA_OPLT))\n            imin = i;\n    }\n    lua_pushvalue(L, imin);\n    return 1;\n};\n\nconst math_max = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    let imax = 1;  /* index of current minimum value */\n    luaL_argcheck(L, n >= 1, 1, \"value expected\");\n    for (let i = 2; i <= n; i++){\n        if (lua_compare(L, imax, i, LUA_OPLT))\n            imax = i;\n    }\n    lua_pushvalue(L, imax);\n    return 1;\n};\n\nconst math_type = function(L) {\n    if (lua_type(L, 1) === LUA_TNUMBER) {\n        if (lua_isinteger(L, 1))\n            lua_pushliteral(L, \"integer\");\n        else\n            lua_pushliteral(L, \"float\");\n    } else {\n        luaL_checkany(L, 1);\n        lua_pushnil(L);\n    }\n    return 1;\n};\n\nconst math_fmod = function(L) {\n    if (lua_isinteger(L, 1) && lua_isinteger(L, 2)) {\n        let d = lua_tointeger(L, 2);\n        /* no special case needed for -1 in javascript */\n        if (d === 0) {\n            luaL_argerror(L, 2, \"zero\");\n        } else\n            lua_pushinteger(L, (lua_tointeger(L, 1) % d)|0);\n    } else {\n        let a = luaL_checknumber(L, 1);\n        let b = luaL_checknumber(L, 2);\n        lua_pushnumber(L, a%b);\n    }\n    return 1;\n};\n\nconst math_modf = function(L) {\n    if (lua_isinteger(L, 1)) {\n        lua_settop(L, 1);  /* number is its own integer part */\n        lua_pushnumber(L, 0);  /* no fractional part */\n    } else {\n        let n = luaL_checknumber(L, 1);\n        let ip = n < 0 ? Math.ceil(n) : Math.floor(n);\n        pushnumint(L, ip);\n        lua_pushnumber(L, n === ip ? 0 : n - ip);\n    }\n    return 2;\n};\n\nconst mathlib = {\n    \"abs\":        math_abs,\n    \"acos\":       math_acos,\n    \"asin\":       math_asin,\n    \"atan\":       math_atan,\n    \"ceil\":       math_ceil,\n    \"cos\":        math_cos,\n    \"deg\":        math_deg,\n    \"exp\":        math_exp,\n    \"floor\":      math_floor,\n    \"fmod\":       math_fmod,\n    \"log\":        math_log,\n    \"max\":        math_max,\n    \"min\":        math_min,\n    \"modf\":       math_modf,\n    \"rad\":        math_rad,\n    \"random\":     math_random,\n    \"randomseed\": math_randomseed,\n    \"sin\":        math_sin,\n    \"sqrt\":       math_sqrt,\n    \"tan\":        math_tan,\n    \"tointeger\":  math_toint,\n    \"type\":       math_type,\n    \"ult\":        math_ult\n};\n\nconst luaopen_math = function(L) {\n    luaL_newlib(L, mathlib);\n    lua_pushnumber(L, Math.PI);\n    lua_setfield(L, -2, to_luastring(\"pi\", true));\n    lua_pushnumber(L, Infinity);\n    lua_setfield(L, -2, to_luastring(\"huge\", true));\n    lua_pushinteger(L, LUA_MAXINTEGER);\n    lua_setfield(L, -2, to_luastring(\"maxinteger\", true));\n    lua_pushinteger(L, LUA_MININTEGER);\n    lua_setfield(L, -2, to_luastring(\"mininteger\", true));\n    return 1;\n};\n\nmodule.exports.luaopen_math = luaopen_math;\n","\"use strict\";\n\nconst {\n    LUA_MASKCALL,\n    LUA_MASKCOUNT,\n    LUA_MASKLINE,\n    LUA_MASKRET,\n    LUA_REGISTRYINDEX,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TTABLE,\n    LUA_TUSERDATA,\n    lua_Debug,\n    lua_call,\n    lua_checkstack,\n    lua_gethook,\n    lua_gethookcount,\n    lua_gethookmask,\n    lua_getinfo,\n    lua_getlocal,\n    lua_getmetatable,\n    lua_getstack,\n    lua_getupvalue,\n    lua_getuservalue,\n    lua_insert,\n    lua_iscfunction,\n    lua_isfunction,\n    lua_isnoneornil,\n    lua_isthread,\n    lua_newtable,\n    lua_pcall,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushlightuserdata,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawgetp,\n    lua_rawsetp,\n    lua_rotate,\n    lua_setfield,\n    lua_sethook,\n    lua_setlocal,\n    lua_setmetatable,\n    lua_settop,\n    lua_setupvalue,\n    lua_setuservalue,\n    lua_tojsstring,\n    lua_toproxy,\n    lua_tostring,\n    lua_tothread,\n    lua_touserdata,\n    lua_type,\n    lua_upvalueid,\n    lua_upvaluejoin,\n    lua_xmove\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_argerror,\n    luaL_checkany,\n    luaL_checkinteger,\n    luaL_checkstring,\n    luaL_checktype,\n    luaL_error,\n    luaL_loadbuffer,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_optstring,\n    luaL_traceback,\n    lua_writestringerror\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst {\n    luastring_indexOf,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\n/*\n** If L1 != L, L1 can be in any state, and therefore there are no\n** guarantees about its stack space; any push in L1 must be\n** checked.\n*/\nconst checkstack = function(L, L1, n) {\n    if (L !== L1 && !lua_checkstack(L1, n))\n        luaL_error(L, to_luastring(\"stack overflow\", true));\n};\n\nconst db_getregistry = function(L) {\n    lua_pushvalue(L, LUA_REGISTRYINDEX);\n    return 1;\n};\n\nconst db_getmetatable = function(L) {\n    luaL_checkany(L, 1);\n    if (!lua_getmetatable(L, 1)) {\n        lua_pushnil(L);  /* no metatable */\n    }\n    return 1;\n};\n\nconst db_setmetatable = function(L) {\n    const t = lua_type(L, 2);\n    luaL_argcheck(L, t == LUA_TNIL || t == LUA_TTABLE, 2, \"nil or table expected\");\n    lua_settop(L, 2);\n    lua_setmetatable(L, 1);\n    return 1;  /* return 1st argument */\n};\n\nconst db_getuservalue = function(L) {\n    if (lua_type(L, 1) !== LUA_TUSERDATA)\n        lua_pushnil(L);\n    else\n        lua_getuservalue(L, 1);\n    return 1;\n};\n\n\nconst db_setuservalue = function(L) {\n    luaL_checktype(L, 1, LUA_TUSERDATA);\n    luaL_checkany(L, 2);\n    lua_settop(L, 2);\n    lua_setuservalue(L, 1);\n    return 1;\n};\n\n/*\n** Auxiliary function used by several library functions: check for\n** an optional thread as function's first argument and set 'arg' with\n** 1 if this argument is present (so that functions can skip it to\n** access their other arguments)\n*/\nconst getthread = function(L) {\n    if (lua_isthread(L, 1)) {\n        return {\n            arg: 1,\n            thread: lua_tothread(L, 1)\n        };\n    } else {\n        return {\n            arg: 0,\n            thread: L\n        };  /* function will operate over current thread */\n    }\n};\n\n/*\n** Variations of 'lua_settable', used by 'db_getinfo' to put results\n** from 'lua_getinfo' into result table. Key is always a string;\n** value can be a string, an int, or a boolean.\n*/\nconst settabss = function(L, k, v) {\n    lua_pushstring(L, v);\n    lua_setfield(L, -2, k);\n};\n\nconst settabsi = function(L, k, v) {\n    lua_pushinteger(L, v);\n    lua_setfield(L, -2, k);\n};\n\nconst settabsb = function(L, k, v) {\n    lua_pushboolean(L, v);\n    lua_setfield(L, -2, k);\n};\n\n\n/*\n** In function 'db_getinfo', the call to 'lua_getinfo' may push\n** results on the stack; later it creates the result table to put\n** these objects. Function 'treatstackoption' puts the result from\n** 'lua_getinfo' on top of the result table so that it can call\n** 'lua_setfield'.\n*/\nconst treatstackoption = function(L, L1, fname) {\n    if (L == L1)\n        lua_rotate(L, -2, 1);  /* exchange object and table */\n    else\n        lua_xmove(L1, L, 1);  /* move object to the \"main\" stack */\n    lua_setfield(L, -2, fname);  /* put object into table */\n};\n\n/*\n** Calls 'lua_getinfo' and collects all results in a new table.\n** L1 needs stack space for an optional input (function) plus\n** two optional outputs (function and line table) from function\n** 'lua_getinfo'.\n*/\nconst db_getinfo = function(L) {\n    let ar = new lua_Debug();\n    let thread = getthread(L);\n    let arg = thread.arg;\n    let L1 = thread.thread;\n    let options = luaL_optstring(L, arg + 2, \"flnStu\");\n    checkstack(L, L1, 3);\n    if (lua_isfunction(L, arg + 1)) {  /* info about a function? */\n        options = lua_pushfstring(L, to_luastring(\">%s\"), options);  /* add '>' to 'options' */\n        lua_pushvalue(L, arg + 1);  /* move function to 'L1' stack */\n        lua_xmove(L, L1, 1);\n    } else {  /* stack level */\n        if (!lua_getstack(L1, luaL_checkinteger(L, arg + 1), ar)) {\n            lua_pushnil(L);  /* level out of range */\n            return 1;\n        }\n    }\n\n    if (!lua_getinfo(L1, options, ar))\n        luaL_argerror(L, arg + 2, \"invalid option\");\n    lua_newtable(L);  /* table to collect results */\n    if (luastring_indexOf(options, 83 /* 'S'.charCodeAt(0) */) > -1) {\n        settabss(L, to_luastring(\"source\", true), ar.source);\n        settabss(L, to_luastring(\"short_src\", true), ar.short_src);\n        settabsi(L, to_luastring(\"linedefined\", true), ar.linedefined);\n        settabsi(L, to_luastring(\"lastlinedefined\", true), ar.lastlinedefined);\n        settabss(L, to_luastring(\"what\", true), ar.what);\n    }\n    if (luastring_indexOf(options, 108 /* 'l'.charCodeAt(0) */) > -1)\n        settabsi(L, to_luastring(\"currentline\", true), ar.currentline);\n    if (luastring_indexOf(options, 117 /* 'u'.charCodeAt(0) */) > -1) {\n        settabsi(L, to_luastring(\"nups\", true), ar.nups);\n        settabsi(L, to_luastring(\"nparams\", true), ar.nparams);\n        settabsb(L, to_luastring(\"isvararg\", true), ar.isvararg);\n    }\n    if (luastring_indexOf(options, 110 /* 'n'.charCodeAt(0) */) > -1) {\n        settabss(L, to_luastring(\"name\", true), ar.name);\n        settabss(L, to_luastring(\"namewhat\", true), ar.namewhat);\n    }\n    if (luastring_indexOf(options, 116 /* 't'.charCodeAt(0) */) > -1)\n        settabsb(L, to_luastring(\"istailcall\", true), ar.istailcall);\n    if (luastring_indexOf(options, 76 /* 'L'.charCodeAt(0) */) > -1)\n        treatstackoption(L, L1, to_luastring(\"activelines\", true));\n    if (luastring_indexOf(options, 102 /* 'f'.charCodeAt(0) */) > -1)\n        treatstackoption(L, L1, to_luastring(\"func\", true));\n    return 1;  /* return table */\n};\n\nconst db_getlocal = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    let ar = new lua_Debug();\n    let nvar = luaL_checkinteger(L, arg + 2);  /* local-variable index */\n    if (lua_isfunction(L, arg + 1)) {\n        lua_pushvalue(L, arg + 1);  /* push function */\n        lua_pushstring(L, lua_getlocal(L, null, nvar));  /* push local name */\n        return 1;  /* return only name (there is no value) */\n    } else {  /* stack-level argument */\n        let level = luaL_checkinteger(L, arg + 1);\n        if (!lua_getstack(L1, level, ar))  /* out of range? */\n            return luaL_argerror(L, arg+1, \"level out of range\");\n        checkstack(L, L1, 1);\n        let name = lua_getlocal(L1, ar, nvar);\n        if (name) {\n            lua_xmove(L1, L, 1);  /* move local value */\n            lua_pushstring(L, name);  /* push name */\n            lua_rotate(L, -2, 1);  /* re-order */\n            return 2;\n        }\n        else {\n            lua_pushnil(L);  /* no name (nor value) */\n            return 1;\n        }\n    }\n};\n\nconst db_setlocal = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    let ar = new lua_Debug();\n    let level = luaL_checkinteger(L, arg + 1);\n    let nvar = luaL_checkinteger(L, arg + 2);\n    if (!lua_getstack(L1, level, ar))  /* out of range? */\n        return luaL_argerror(L, arg + 1, \"level out of range\");\n    luaL_checkany(L, arg + 3);\n    lua_settop(L, arg + 3);\n    checkstack(L, L1, 1);\n    lua_xmove(L, L1, 1);\n    let name = lua_setlocal(L1, ar, nvar);\n    if (name === null)\n        lua_pop(L1, 1);  /* pop value (if not popped by 'lua_setlocal') */\n    lua_pushstring(L, name);\n    return 1;\n};\n\n/*\n** get (if 'get' is true) or set an upvalue from a closure\n*/\nconst auxupvalue = function(L, get) {\n    let n = luaL_checkinteger(L, 2);  /* upvalue index */\n    luaL_checktype(L, 1, LUA_TFUNCTION);  /* closure */\n    let name = get ? lua_getupvalue(L, 1, n) : lua_setupvalue(L, 1, n);\n    if (name === null) return 0;\n    lua_pushstring(L, name);\n    lua_insert(L, -(get+1));  /* no-op if get is false */\n    return get + 1;\n};\n\n\nconst db_getupvalue = function(L) {\n    return auxupvalue(L, 1);\n};\n\nconst db_setupvalue = function(L) {\n    luaL_checkany(L, 3);\n    return auxupvalue(L, 0);\n};\n\n/*\n** Check whether a given upvalue from a given closure exists and\n** returns its index\n*/\nconst checkupval = function(L, argf, argnup) {\n    let nup = luaL_checkinteger(L, argnup);  /* upvalue index */\n    luaL_checktype(L, argf, LUA_TFUNCTION);  /* closure */\n    luaL_argcheck(L, (lua_getupvalue(L, argf, nup) !== null), argnup, \"invalid upvalue index\");\n    return nup;\n};\n\nconst db_upvalueid = function(L) {\n    let n = checkupval(L, 1, 2);\n    lua_pushlightuserdata(L, lua_upvalueid(L, 1, n));\n    return 1;\n};\n\nconst db_upvaluejoin = function(L) {\n    let n1 = checkupval(L, 1, 2);\n    let n2 = checkupval(L, 3, 4);\n    luaL_argcheck(L, !lua_iscfunction(L, 1), 1, \"Lua function expected\");\n    luaL_argcheck(L, !lua_iscfunction(L, 3), 3, \"Lua function expected\");\n    lua_upvaluejoin(L, 1, n1, 3, n2);\n    return 0;\n};\n\n/*\n** The hook table at registry[HOOKKEY] maps threads to their current\n** hook function. (We only need the unique address of 'HOOKKEY'.)\n*/\nconst HOOKKEY = to_luastring(\"__hooks__\", true);\n\nconst hooknames = [\"call\", \"return\", \"line\", \"count\", \"tail call\"].map(e => to_luastring(e));\n\n/*\n** Call hook function registered at hook table for the current\n** thread (if there is one)\n*/\nconst hookf = function(L, ar) {\n    lua_rawgetp(L, LUA_REGISTRYINDEX, HOOKKEY);\n    let hooktable = lua_touserdata(L, -1);\n    let proxy = hooktable.get(L);\n    if (proxy) {  /* is there a hook function? */\n        proxy(L);\n        lua_pushstring(L, hooknames[ar.event]);  /* push event name */\n        if (ar.currentline >= 0)\n            lua_pushinteger(L, ar.currentline);  /* push current line */\n        else lua_pushnil(L);\n        lualib.lua_assert(lua_getinfo(L, to_luastring(\"lS\"), ar));\n        lua_call(L, 2, 0);  /* call hook function */\n    }\n};\n\n/*\n** Convert a string mask (for 'sethook') into a bit mask\n*/\nconst makemask = function(smask, count) {\n    let mask = 0;\n    if (luastring_indexOf(smask, 99 /* 'c'.charCodeAt(0) */) > -1) mask |= LUA_MASKCALL;\n    if (luastring_indexOf(smask, 114 /* 'r'.charCodeAt(0) */) > -1) mask |= LUA_MASKRET;\n    if (luastring_indexOf(smask, 108 /* 'l'.charCodeAt(0) */) > -1) mask |= LUA_MASKLINE;\n    if (count > 0) mask |= LUA_MASKCOUNT;\n    return mask;\n};\n\n/*\n** Convert a bit mask (for 'gethook') into a string mask\n*/\nconst unmakemask = function(mask, smask) {\n    let i = 0;\n    if (mask & LUA_MASKCALL) smask[i++] = 99 /* 'c'.charCodeAt(0) */;\n    if (mask & LUA_MASKRET) smask[i++] = 114 /* 'r'.charCodeAt(0) */;\n    if (mask & LUA_MASKLINE) smask[i++] = 108 /* 'l'.charCodeAt(0) */;\n    return smask.subarray(0, i);\n};\n\nconst db_sethook = function(L) {\n    let mask, count, func;\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    if (lua_isnoneornil(L, arg+1)) {  /* no hook? */\n        lua_settop(L, arg+1);\n        func = null; mask = 0; count = 0;  /* turn off hooks */\n    }\n    else {\n        const smask = luaL_checkstring(L, arg + 2);\n        luaL_checktype(L, arg+1, LUA_TFUNCTION);\n        count = luaL_optinteger(L, arg + 3, 0);\n        func = hookf; mask = makemask(smask, count);\n    }\n    /* as weak tables are not supported; use a JS weak-map */\n    let hooktable;\n    if (lua_rawgetp(L, LUA_REGISTRYINDEX, HOOKKEY) === LUA_TNIL) {\n        hooktable = new WeakMap();\n        lua_pushlightuserdata(L, hooktable);\n        lua_rawsetp(L, LUA_REGISTRYINDEX, HOOKKEY);  /* set it in position */\n    } else {\n        hooktable = lua_touserdata(L, -1);\n    }\n    let proxy = lua_toproxy(L, arg + 1);  /* value (hook function) */\n    hooktable.set(L1, proxy);\n    lua_sethook(L1, func, mask, count);\n    return 0;\n};\n\nconst db_gethook = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let buff = new Uint8Array(5);\n    let mask = lua_gethookmask(L1);\n    let hook = lua_gethook(L1);\n    if (hook === null)  /* no hook? */\n        lua_pushnil(L);\n    else if (hook !== hookf)  /* external hook? */\n        lua_pushliteral(L, \"external hook\");\n    else {  /* hook table must exist */\n        lua_rawgetp(L, LUA_REGISTRYINDEX, HOOKKEY);\n        let hooktable = lua_touserdata(L, -1);\n        let proxy = hooktable.get(L1);\n        proxy(L);\n    }\n    lua_pushstring(L, unmakemask(mask, buff));  /* 2nd result = mask */\n    lua_pushinteger(L, lua_gethookcount(L1));  /* 3rd result = count */\n    return 3;\n};\n\nconst db_traceback = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    let msg = lua_tostring(L, arg + 1);\n    if (msg === null && !lua_isnoneornil(L, arg + 1))  /* non-string 'msg'? */\n        lua_pushvalue(L, arg + 1);  /* return it untouched */\n    else {\n        let level = luaL_optinteger(L, arg + 2, L === L1 ? 1 : 0);\n        luaL_traceback(L, L1, msg, level);\n    }\n    return 1;\n};\n\nconst dblib = {\n    \"gethook\":      db_gethook,\n    \"getinfo\":      db_getinfo,\n    \"getlocal\":     db_getlocal,\n    \"getmetatable\": db_getmetatable,\n    \"getregistry\":  db_getregistry,\n    \"getupvalue\":   db_getupvalue,\n    \"getuservalue\": db_getuservalue,\n    \"sethook\":      db_sethook,\n    \"setlocal\":     db_setlocal,\n    \"setmetatable\": db_setmetatable,\n    \"setupvalue\":   db_setupvalue,\n    \"setuservalue\": db_setuservalue,\n    \"traceback\":    db_traceback,\n    \"upvalueid\":    db_upvalueid,\n    \"upvaluejoin\":  db_upvaluejoin\n};\n\nlet getinput;\nif (typeof process !== \"undefined\") { // Only with Node\n    const readlineSync = require('readline-sync');\n    readlineSync.setDefaultOptions({\n        prompt: 'lua_debug> '\n    });\n    getinput = function() {\n        return readlineSync.prompt();\n    };\n} else if (typeof window !== \"undefined\") {\n    /* if in browser use window.prompt. Doesn't work from web workers.\n       See https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt\n    */\n    getinput = function() {\n        let input = prompt(\"lua_debug>\", \"\");\n        return (input !== null) ? input : \"\";\n    };\n}\nif (getinput) {\n    dblib.debug = function(L) {\n        for (;;) {\n            let input = getinput();\n\n            if (input === \"cont\")\n                return 0;\n\n            if (input.length === 0)\n                continue;\n\n            let buffer = to_luastring(input);\n            if (luaL_loadbuffer(L, buffer, buffer.length, to_luastring(\"=(debug command)\", true))\n                || lua_pcall(L, 0, 0, 0)) {\n                lua_writestringerror(lua_tojsstring(L, -1), \"\\n\");\n            }\n            lua_settop(L, 0);  /* remove eventual returns */\n        }\n    };\n}\n\nconst luaopen_debug = function(L) {\n    luaL_newlib(L, dblib);\n    return 1;\n};\n\nmodule.exports.luaopen_debug = luaopen_debug;\n","\"use strict\";\n\nconst {\n    LUA_DIRSEP,\n    LUA_EXEC_DIR,\n    LUA_JSPATH_DEFAULT,\n    LUA_PATH_DEFAULT,\n    LUA_PATH_MARK,\n    LUA_PATH_SEP\n} = require('./luaconf.js');\nconst {\n    LUA_OK,\n    LUA_REGISTRYINDEX,\n    LUA_TNIL,\n    LUA_TTABLE,\n    lua_callk,\n    lua_createtable,\n    lua_getfield,\n    lua_insert,\n    lua_isfunction,\n    lua_isnil,\n    lua_isstring,\n    lua_newtable,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcclosure,\n    lua_pushcfunction,\n    lua_pushfstring,\n    lua_pushglobaltable,\n    lua_pushlightuserdata,\n    lua_pushliteral,\n    lua_pushlstring,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawgeti,\n    lua_rawgetp,\n    lua_rawseti,\n    lua_rawsetp,\n    lua_remove,\n    lua_setfield,\n    lua_setmetatable,\n    lua_settop,\n    lua_toboolean,\n    lua_tostring,\n    lua_touserdata,\n    lua_upvalueindex\n} = require('./lua.js');\nconst {\n    LUA_LOADED_TABLE,\n    LUA_PRELOAD_TABLE,\n    luaL_Buffer,\n    luaL_addvalue,\n    luaL_buffinit,\n    luaL_checkstring,\n    luaL_error,\n    luaL_getsubtable,\n    luaL_gsub,\n    luaL_len,\n    luaL_loadfile,\n    luaL_newlib,\n    luaL_optstring,\n    luaL_pushresult,\n    luaL_setfuncs\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst {\n    luastring_indexOf,\n    to_jsstring,\n    to_luastring,\n    to_uristring\n} = require(\"./fengaricore.js\");\nconst fengari  = require('./fengari.js');\n\nconst global_env = (function() {\n    if (typeof process !== \"undefined\") {\n        /* node */\n        return global;\n    } else if (typeof window !== \"undefined\") {\n        /* browser window */\n        return window;\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n        /* web worker */\n        return self;\n    } else {\n        /* unknown global env */\n        return (0, eval)('this'); /* use non-strict mode to get global env */\n    }\n})();\n\nconst JSLIBS = to_luastring(\"__JSLIBS__\");\nconst LUA_PATH_VAR = \"LUA_PATH\";\nconst LUA_JSPATH_VAR = \"LUA_JSPATH\";\n\nconst LUA_IGMARK = \"-\";\n\n/*\n** LUA_CSUBSEP is the character that replaces dots in submodule names\n** when searching for a JS loader.\n** LUA_LSUBSEP is the character that replaces dots in submodule names\n** when searching for a Lua loader.\n*/\nconst LUA_CSUBSEP = LUA_DIRSEP;\nconst LUA_LSUBSEP = LUA_DIRSEP;\n\n/* prefix for open functions in JS libraries */\nconst LUA_POF = to_luastring(\"luaopen_\");\n\n/* separator for open functions in JS libraries */\nconst LUA_OFSEP = to_luastring(\"_\");\nconst LIB_FAIL = \"open\";\n\nconst AUXMARK = to_luastring(\"\\x01\");\n\n\n/*\n** load JS library in file 'path'. If 'seeglb', load with all names in\n** the library global.\n** Returns the library; in case of error, returns NULL plus an\n** error string in the stack.\n*/\nlet lsys_load;\nif (typeof process === \"undefined\") {\n    lsys_load = function(L, path, seeglb) {\n        path = to_uristring(path);\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", path, false);\n        xhr.send();\n\n        if (xhr.status < 200 || xhr.status >= 300) {\n            lua_pushstring(L, to_luastring(`${xhr.status}: ${xhr.statusText}`));\n            return null;\n        }\n\n        let code = xhr.response;\n        /* Add sourceURL comment to get path in debugger+tracebacks */\n        if (!/\\/\\/[#@] sourceURL=/.test(code))\n            code += \" //# sourceURL=\" + path;\n        let func;\n        try {\n            func = Function(\"fengari\", code);\n        } catch (e) {\n            lua_pushstring(L, to_luastring(`${e.name}: ${e.message}`));\n            return null;\n        }\n        let res = func(fengari);\n        if (typeof res === \"function\" || (typeof res === \"object\" && res !== null)) {\n            return res;\n        } else if (res === void 0) { /* assume library added symbols to global environment */\n            return global_env;\n        } else {\n            lua_pushstring(L, to_luastring(`library returned unexpected type (${typeof res})`));\n            return null;\n        }\n    };\n} else {\n    const pathlib = require('path');\n    lsys_load = function(L, path, seeglb) {\n        path = to_jsstring(path);\n        /* relative paths should be relative to cwd, not this js file */\n        path = pathlib.resolve(process.cwd(), path);\n        try {\n            return require(path);\n        } catch (e) {\n            lua_pushstring(L, to_luastring(e.message));\n            return null;\n        }\n    };\n}\n\n/*\n** Try to find a function named 'sym' in library 'lib'.\n** Returns the function; in case of error, returns NULL plus an\n** error string in the stack.\n*/\nconst lsys_sym = function(L, lib, sym) {\n    let f = lib[to_jsstring(sym)];\n\n    if (f && typeof f === 'function')\n        return f;\n    else {\n        lua_pushfstring(L, to_luastring(\"undefined symbol: %s\"), sym);\n        return null;\n    }\n};\n\n/*\n** return registry.LUA_NOENV as a boolean\n*/\nconst noenv = function(L) {\n    lua_getfield(L, LUA_REGISTRYINDEX, to_luastring(\"LUA_NOENV\"));\n    let b = lua_toboolean(L, -1);\n    lua_pop(L, 1);  /* remove value */\n    return b;\n};\n\nlet readable;\nif (typeof process !== \"undefined\") { // Only with Node\n    const fs = require('fs');\n\n    readable = function(filename) {\n        try {\n            let fd = fs.openSync(filename, 'r');\n            fs.closeSync(fd);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    };\n} else {\n    readable = function(path) {\n        path = to_uristring(path);\n        let xhr = new XMLHttpRequest();\n        /* Following GET request done by searcher_Web will be cached */\n        xhr.open(\"GET\", path, false);\n        xhr.send();\n\n        return xhr.status >= 200 && xhr.status <= 299;\n    };\n}\n\n\n/* error codes for 'lookforfunc' */\nconst ERRLIB  = 1;\nconst ERRFUNC = 2;\n\n/*\n** Look for a C function named 'sym' in a dynamically loaded library\n** 'path'.\n** First, check whether the library is already loaded; if not, try\n** to load it.\n** Then, if 'sym' is '*', return true (as library has been loaded).\n** Otherwise, look for symbol 'sym' in the library and push a\n** C function with that symbol.\n** Return 0 and 'true' or a function in the stack; in case of\n** errors, return an error code and an error message in the stack.\n*/\nconst lookforfunc = function(L, path, sym) {\n    let reg = checkjslib(L, path);  /* check loaded JS libraries */\n    if (reg === null) {  /* must load library? */\n        reg = lsys_load(L, path, sym[0] === '*'.charCodeAt(0));  /* a global symbols if 'sym'=='*' */\n        if (reg === null) return ERRLIB;  /* unable to load library */\n        addtojslib(L, path, reg);\n    }\n    if (sym[0] === '*'.charCodeAt(0)) {  /* loading only library (no function)? */\n        lua_pushboolean(L, 1);  /* return 'true' */\n        return 0;  /* no errors */\n    }\n    else {\n        let f = lsys_sym(L, reg, sym);\n        if (f === null)\n            return ERRFUNC;  /* unable to find function */\n        lua_pushcfunction(L, f);  /* else create new function */\n        return 0;  /* no errors */\n    }\n};\n\nconst ll_loadlib = function(L) {\n    let path = luaL_checkstring(L, 1);\n    let init = luaL_checkstring(L, 2);\n    let stat = lookforfunc(L, path, init);\n    if (stat === 0)  /* no errors? */\n        return 1;  /* return the loaded function */\n    else {  /* error; error message is on stack top */\n        lua_pushnil(L);\n        lua_insert(L, -2);\n        lua_pushliteral(L, (stat === ERRLIB) ? LIB_FAIL : \"init\");\n        return 3;  /* return nil, error message, and where */\n    }\n};\n\nconst env = (function() {\n    if (typeof process !== \"undefined\") {\n        /* node */\n        return process.env;\n    } else {\n        return global_env;\n    }\n})();\n\n/*\n** Set a path\n*/\nconst setpath = function(L, fieldname, envname, dft) {\n    let nver = `${envname}${lualib.LUA_VERSUFFIX}`;\n    lua_pushstring(L, to_luastring(nver));\n    let path = env[nver];  /* use versioned name */\n    if (path === undefined)  /* no environment variable? */\n        path = env[envname];  /* try unversioned name */\n    if (path === undefined || noenv(L))  /* no environment variable? */\n        lua_pushstring(L, dft);  /* use default */\n    else {\n        /* replace \";;\" by \";AUXMARK;\" and then AUXMARK by default path */\n        path = luaL_gsub(\n            L,\n            to_luastring(path),\n            to_luastring(LUA_PATH_SEP + LUA_PATH_SEP, true),\n            to_luastring(LUA_PATH_SEP + to_jsstring(AUXMARK) + LUA_PATH_SEP, true)\n        );\n        luaL_gsub(L, path, AUXMARK, dft);\n        lua_remove(L, -2); /* remove result from 1st 'gsub' */\n    }\n    lua_setfield(L, -3, fieldname);  /* package[fieldname] = path value */\n    lua_pop(L, 1);  /* pop versioned variable name */\n};\n\n/*\n** return registry.JSLIBS[path]\n*/\nconst checkjslib = function(L, path) {\n    lua_rawgetp(L, LUA_REGISTRYINDEX, JSLIBS);\n    lua_getfield(L, -1, path);\n    let plib = lua_touserdata(L, -1);  /* plib = JSLIBS[path] */\n    lua_pop(L, 2);  /* pop JSLIBS table and 'plib' */\n    return plib;\n};\n\n/*\n** registry.JSLIBS[path] = plib        -- for queries\n** registry.JSLIBS[#JSLIBS + 1] = plib  -- also keep a list of all libraries\n*/\nconst addtojslib = function(L, path, plib) {\n    lua_rawgetp(L, LUA_REGISTRYINDEX, JSLIBS);\n    lua_pushlightuserdata(L, plib);\n    lua_pushvalue(L, -1);\n    lua_setfield(L, -3, path);  /* JSLIBS[path] = plib */\n    lua_rawseti(L, -2, luaL_len(L, -2) + 1);  /* JSLIBS[#JSLIBS + 1] = plib */\n    lua_pop(L, 1);  /* pop JSLIBS table */\n};\n\nconst pushnexttemplate = function(L, path) {\n    while (path[0] === LUA_PATH_SEP.charCodeAt(0)) path = path.subarray(1);  /* skip separators */\n    if (path.length === 0) return null;  /* no more templates */\n    let l = luastring_indexOf(path, LUA_PATH_SEP.charCodeAt(0));  /* find next separator */\n    if (l < 0) l = path.length;\n    lua_pushlstring(L, path, l);  /* template */\n    return path.subarray(l);\n};\n\nconst searchpath = function(L, name, path, sep, dirsep) {\n    let msg = new luaL_Buffer();  /* to build error message */\n    luaL_buffinit(L, msg);\n    if (sep[0] !== 0)  /* non-empty separator? */\n        name = luaL_gsub(L, name, sep, dirsep);  /* replace it by 'dirsep' */\n    while ((path = pushnexttemplate(L, path)) !== null) {\n        let filename = luaL_gsub(L, lua_tostring(L, -1), to_luastring(LUA_PATH_MARK, true), name);\n        lua_remove(L, -2);  /* remove path template */\n        if (readable(filename))  /* does file exist and is readable? */\n            return filename;  /* return that file name */\n        lua_pushfstring(L, to_luastring(\"\\n\\tno file '%s'\"), filename);\n        lua_remove(L, -2);  /* remove file name */\n        luaL_addvalue(msg);\n    }\n    luaL_pushresult(msg);  /* create error message */\n    return null;  /* not found */\n};\n\nconst ll_searchpath = function(L) {\n    let f = searchpath(\n        L,\n        luaL_checkstring(L, 1),\n        luaL_checkstring(L, 2),\n        luaL_optstring(L, 3, \".\"),\n        luaL_optstring(L, 4, LUA_DIRSEP)\n    );\n    if (f !== null) return 1;\n    else {  /* error message is on top of the stack */\n        lua_pushnil(L);\n        lua_insert(L, -2);\n        return 2;  /* return nil + error message */\n    }\n};\n\nconst findfile = function(L, name, pname, dirsep) {\n    lua_getfield(L, lua_upvalueindex(1), pname);\n    let path = lua_tostring(L, -1);\n    if (path === null)\n        luaL_error(L, to_luastring(\"'package.%s' must be a string\"), pname);\n    return searchpath(L, name, path, to_luastring(\".\"), dirsep);\n};\n\nconst checkload = function(L, stat, filename) {\n    if (stat) {  /* module loaded successfully? */\n        lua_pushstring(L, filename);  /* will be 2nd argument to module */\n        return 2;  /* return open function and file name */\n    } else\n        return luaL_error(L, to_luastring(\"error loading module '%s' from file '%s':\\n\\t%s\"),\n            lua_tostring(L, 1), filename, lua_tostring(L, -1));\n};\n\nconst searcher_Lua = function(L) {\n    let name = luaL_checkstring(L, 1);\n    let filename = findfile(L, name, to_luastring(\"path\", true), to_luastring(LUA_LSUBSEP, true));\n    if (filename === null) return 1;  /* module not found in this path */\n    return checkload(L, luaL_loadfile(L, filename) === LUA_OK, filename);\n};\n\n/*\n** Try to find a load function for module 'modname' at file 'filename'.\n** First, change '.' to '_' in 'modname'; then, if 'modname' has\n** the form X-Y (that is, it has an \"ignore mark\"), build a function\n** name \"luaopen_X\" and look for it. (For compatibility, if that\n** fails, it also tries \"luaopen_Y\".) If there is no ignore mark,\n** look for a function named \"luaopen_modname\".\n*/\nconst loadfunc = function(L, filename, modname) {\n    let openfunc;\n    modname = luaL_gsub(L, modname, to_luastring(\".\"), LUA_OFSEP);\n    let mark = luastring_indexOf(modname, LUA_IGMARK.charCodeAt(0));\n    if (mark >= 0) {\n        openfunc = lua_pushlstring(L, modname, mark);\n        openfunc = lua_pushfstring(L, to_luastring(\"%s%s\"), LUA_POF, openfunc);\n        let stat = lookforfunc(L, filename, openfunc);\n        if (stat !== ERRFUNC) return stat;\n        modname = mark + 1;  /* else go ahead and try old-style name */\n    }\n    openfunc = lua_pushfstring(L, to_luastring(\"%s%s\"), LUA_POF, modname);\n    return lookforfunc(L, filename, openfunc);\n};\n\nconst searcher_C = function(L) {\n    let name = luaL_checkstring(L, 1);\n    let filename = findfile(L, name, to_luastring(\"jspath\", true), to_luastring(LUA_CSUBSEP, true));\n    if (filename === null) return 1;  /* module not found in this path */\n    return checkload(L, (loadfunc(L, filename, name) === 0), filename);\n};\n\nconst searcher_Croot = function(L) {\n    let name = luaL_checkstring(L, 1);\n    let p = luastring_indexOf(name, '.'.charCodeAt(0));\n    let stat;\n    if (p < 0) return 0;  /* is root */\n    lua_pushlstring(L, name, p);\n    let filename = findfile(L, lua_tostring(L, -1), to_luastring(\"jspath\", true), to_luastring(LUA_CSUBSEP, true));\n    if (filename === null) return 1;  /* root not found */\n    if ((stat = loadfunc(L, filename, name)) !== 0) {\n        if (stat != ERRFUNC)\n            return checkload(L, 0, filename);  /* real error */\n        else {  /* open function not found */\n            lua_pushstring(L, to_luastring(\"\\n\\tno module '%s' in file '%s'\"), name, filename);\n            return 1;\n        }\n    }\n    lua_pushstring(L, filename);  /* will be 2nd argument to module */\n    return 2;\n};\n\nconst searcher_preload = function(L) {\n    let name = luaL_checkstring(L, 1);\n    lua_getfield(L, LUA_REGISTRYINDEX, LUA_PRELOAD_TABLE);\n    if (lua_getfield(L, -1, name) === LUA_TNIL)  /* not found? */\n        lua_pushfstring(L, to_luastring(\"\\n\\tno field package.preload['%s']\"), name);\n    return 1;\n};\n\nconst findloader = function(L, name, ctx, k) {\n    let msg = new luaL_Buffer();  /* to build error message */\n    luaL_buffinit(L, msg);\n    /* push 'package.searchers' to index 3 in the stack */\n    if (lua_getfield(L, lua_upvalueindex(1), to_luastring(\"searchers\", true)) !== LUA_TTABLE)\n        luaL_error(L, to_luastring(\"'package.searchers' must be a table\"));\n    let ctx2 = {name: name, i: 1, msg: msg, ctx: ctx, k: k};\n    return findloader_cont(L, LUA_OK, ctx2);\n};\n\nconst findloader_cont = function(L, status, ctx) {\n    /*  iterate over available searchers to find a loader */\n    for (; ; ctx.i++) {\n        if (status === LUA_OK) {\n            if (lua_rawgeti(L, 3, ctx.i) === LUA_TNIL) {  /* no more searchers? */\n                lua_pop(L, 1);  /* remove nil */\n                luaL_pushresult(ctx.msg);  /* create error message */\n                luaL_error(L, to_luastring(\"module '%s' not found:%s\"), ctx.name, lua_tostring(L, -1));\n            }\n            lua_pushstring(L, ctx.name);\n            lua_callk(L, 1, 2, ctx, findloader_cont);  /* call it */\n        } else {\n            status = LUA_OK;\n        }\n        if (lua_isfunction(L, -2))  /* did it find a loader? */\n            break;  /* module loader found */\n        else if (lua_isstring(L, -2)) {  /* searcher returned error message? */\n            lua_pop(L, 1);  /* remove extra return */\n            luaL_addvalue(ctx.msg);  /* concatenate error message */\n        }\n        else\n            lua_pop(L, 2);  /* remove both returns */\n    }\n    return ctx.k(L, LUA_OK, ctx.ctx);\n};\n\nconst ll_require = function(L) {\n    let name = luaL_checkstring(L, 1);\n    lua_settop(L, 1);  /* LOADED table will be at index 2 */\n    lua_getfield(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    lua_getfield(L, 2, name);  /* LOADED[name] */\n    if (lua_toboolean(L, -1))  /* is it there? */\n        return 1;  /* package is already loaded */\n    /* else must load package */\n    lua_pop(L, 1);  /* remove 'getfield' result */\n    let ctx = name;\n    return findloader(L, name, ctx, ll_require_cont);\n};\n\nconst ll_require_cont = function(L, status, ctx) {\n    let name = ctx;\n    lua_pushstring(L, name);  /* pass name as argument to module loader */\n    lua_insert(L, -2);  /* name is 1st argument (before search data) */\n    lua_callk(L, 2, 1, ctx, ll_require_cont2);\n    return ll_require_cont2(L, LUA_OK, ctx);  /* run loader to load module */\n};\n\nconst ll_require_cont2 = function(L, status, ctx) {\n    let name = ctx;\n    if (!lua_isnil(L, -1))  /* non-nil return? */\n        lua_setfield(L, 2, name);  /* LOADED[name] = returned value */\n    if (lua_getfield(L, 2, name) == LUA_TNIL) {   /* module set no value? */\n        lua_pushboolean(L, 1);  /* use true as result */\n        lua_pushvalue(L, -1);  /* extra copy to be returned */\n        lua_setfield(L, 2, name);  /* LOADED[name] = true */\n    }\n    return 1;\n};\n\nconst pk_funcs = {\n    \"loadlib\": ll_loadlib,\n    \"searchpath\": ll_searchpath\n};\n\nconst ll_funcs = {\n    \"require\": ll_require\n};\n\nconst createsearcherstable = function(L) {\n    let searchers = [searcher_preload, searcher_Lua, searcher_C, searcher_Croot, null];\n    /* create 'searchers' table */\n    lua_createtable(L);\n    /* fill it with predefined searchers */\n    for (let i = 0; searchers[i]; i++) {\n        lua_pushvalue(L, -2);  /* set 'package' as upvalue for all searchers */\n        lua_pushcclosure(L, searchers[i], 1);\n        lua_rawseti(L, -2, i+1);\n    }\n    lua_setfield(L, -2, to_luastring(\"searchers\", true));  /* put it in field 'searchers' */\n};\n\n/*\n** create table JSLIBS to keep track of loaded JS libraries,\n** setting a finalizer to close all libraries when closing state.\n*/\nconst createjslibstable = function(L) {\n    lua_newtable(L);  /* create JSLIBS table */\n    lua_createtable(L, 0, 1);  /* create metatable for JSLIBS */\n    lua_setmetatable(L, -2);\n    lua_rawsetp(L, LUA_REGISTRYINDEX, JSLIBS);  /* set JSLIBS table in registry */\n};\n\nconst luaopen_package = function(L) {\n    createjslibstable(L);\n    luaL_newlib(L, pk_funcs);  /* create 'package' table */\n    createsearcherstable(L);\n    /* set paths */\n    setpath(L, to_luastring(\"path\", true), LUA_PATH_VAR, LUA_PATH_DEFAULT);\n    setpath(L, to_luastring(\"jspath\", true), LUA_JSPATH_VAR, LUA_JSPATH_DEFAULT);\n    /* store config information */\n    lua_pushliteral(L, LUA_DIRSEP + \"\\n\" + LUA_PATH_SEP + \"\\n\" + LUA_PATH_MARK + \"\\n\" +\n                        LUA_EXEC_DIR + \"\\n\" + LUA_IGMARK + \"\\n\");\n    lua_setfield(L, -2, to_luastring(\"config\", true));\n    /* set field 'loaded' */\n    luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    lua_setfield(L, -2, to_luastring(\"loaded\", true));\n    /* set field 'preload' */\n    luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_PRELOAD_TABLE);\n    lua_setfield(L, -2, to_luastring(\"preload\", true));\n    lua_pushglobaltable(L);\n    lua_pushvalue(L, -2);  /* set 'package' as upvalue for next lib */\n    luaL_setfuncs(L, ll_funcs, 1);  /* open lib into global table */\n    lua_pop(L, 1);  /* pop global table */\n    return 1;  /* return 'package' table */\n};\n\nmodule.exports.luaopen_package = luaopen_package;\n","const {\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_setfield\n} = require('./lua.js');\nconst {\n    luaL_newlib\n} = require('./lauxlib.js');\nconst {\n    FENGARI_AUTHORS,\n    FENGARI_COPYRIGHT,\n    FENGARI_RELEASE,\n    FENGARI_VERSION,\n    FENGARI_VERSION_MAJOR,\n    FENGARI_VERSION_MINOR,\n    FENGARI_VERSION_NUM,\n    FENGARI_VERSION_RELEASE,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nconst luaopen_fengari = function(L) {\n    luaL_newlib(L, {});\n    lua_pushliteral(L, FENGARI_AUTHORS);\n    lua_setfield(L, -2, to_luastring(\"AUTHORS\"));\n    lua_pushliteral(L, FENGARI_COPYRIGHT);\n    lua_setfield(L, -2, to_luastring(\"COPYRIGHT\"));\n    lua_pushliteral(L, FENGARI_RELEASE);\n    lua_setfield(L, -2, to_luastring(\"RELEASE\"));\n    lua_pushliteral(L, FENGARI_VERSION);\n    lua_setfield(L, -2, to_luastring(\"VERSION\"));\n    lua_pushliteral(L, FENGARI_VERSION_MAJOR);\n    lua_setfield(L, -2, to_luastring(\"VERSION_MAJOR\"));\n    lua_pushliteral(L, FENGARI_VERSION_MINOR);\n    lua_setfield(L, -2, to_luastring(\"VERSION_MINOR\"));\n    lua_pushinteger(L, FENGARI_VERSION_NUM);\n    lua_setfield(L, -2, to_luastring(\"VERSION_NUM\"));\n    lua_pushliteral(L, FENGARI_VERSION_RELEASE);\n    lua_setfield(L, -2, to_luastring(\"VERSION_RELEASE\"));\n    return 1;\n};\n\nmodule.exports.luaopen_fengari = luaopen_fengari;\n","\"use strict\";\r\n\r\nimport {\r\n\tFENGARI_AUTHORS,\r\n\tFENGARI_COPYRIGHT,\r\n\tFENGARI_RELEASE,\r\n\tFENGARI_VERSION,\r\n\tFENGARI_VERSION_MAJOR,\r\n\tFENGARI_VERSION_MINOR,\r\n\tFENGARI_VERSION_NUM,\r\n\tFENGARI_VERSION_RELEASE,\r\n\r\n\tluastring_eq,\r\n\tluastring_indexOf,\r\n\tluastring_of,\r\n\tto_jsstring,\r\n\tto_luastring,\r\n\tto_uristring,\r\n\r\n\tlua,\r\n\tlauxlib,\r\n\tlualib\r\n} from 'fengari';\r\nimport * as interop from 'fengari-interop';\r\n\r\nconst {\r\n\tLUA_ERRRUN,\r\n\tLUA_ERRSYNTAX,\r\n\tLUA_OK,\r\n\tLUA_VERSION_MAJOR,\r\n\tLUA_VERSION_MINOR,\r\n\tlua_Debug,\r\n\tlua_getinfo,\r\n\tlua_getstack,\r\n\tlua_gettop,\r\n\tlua_insert,\r\n\tlua_pcall,\r\n\tlua_pop,\r\n\tlua_pushcfunction,\r\n\tlua_pushstring,\r\n\tlua_remove,\r\n\tlua_setglobal,\r\n\tlua_tojsstring\r\n} = lua;\r\nconst {\r\n\tluaL_loadbuffer,\r\n\tluaL_newstate,\r\n\tluaL_requiref\r\n} = lauxlib;\r\nconst {\r\n\tcheckjs,\r\n\tluaopen_js,\r\n\tpush,\r\n\ttojs\r\n} = interop;\r\n\r\nexport {\r\n\tFENGARI_AUTHORS,\r\n\tFENGARI_COPYRIGHT,\r\n\tFENGARI_RELEASE,\r\n\tFENGARI_VERSION,\r\n\tFENGARI_VERSION_MAJOR,\r\n\tFENGARI_VERSION_MINOR,\r\n\tFENGARI_VERSION_NUM,\r\n\tFENGARI_VERSION_RELEASE,\r\n\r\n\tluastring_eq,\r\n\tluastring_indexOf,\r\n\tluastring_of,\r\n\tto_jsstring,\r\n\tto_luastring,\r\n\tto_uristring,\r\n\r\n\tlua,\r\n\tlauxlib,\r\n\tlualib,\r\n\tinterop\r\n};\r\n\r\nexport const L = luaL_newstate();\r\n\r\n/* open standard libraries */\r\nlualib.luaL_openlibs(L);\r\nluaL_requiref(L, to_luastring(\"js\"), luaopen_js, 1);\r\nlua_pop(L, 1); /* remove lib */\r\n\r\nlua_pushstring(L, to_luastring(FENGARI_COPYRIGHT));\r\nlua_setglobal(L, to_luastring(\"_COPYRIGHT\"));\r\n\r\n/* Helper function to load a JS string of Lua source */\r\nexport function load(source, chunkname) {\r\n\tif (typeof source == \"string\")\r\n\t\tsource = to_luastring(source);\r\n\telse if (!(source instanceof Uint8Array))\r\n\t\tthrow new TypeError(\"expects an array of bytes or javascript string\");\r\n\r\n\tchunkname = chunkname?to_luastring(chunkname):null;\r\n\tlet ok = luaL_loadbuffer(L, source, null, chunkname);\r\n\tlet res;\r\n\tif (ok === LUA_ERRSYNTAX) {\r\n\t\tres = new SyntaxError(lua_tojsstring(L, -1));\r\n\t} else {\r\n\t\tres = tojs(L, -1);\r\n\t}\r\n\tlua_pop(L, 1);\r\n\tif (ok !== LUA_OK) {\r\n\t\tthrow res;\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nif (typeof document !== 'undefined' && document instanceof HTMLDocument) {\r\n\t/* Have a document, e.g. we are in main browser window */\r\n\r\n\tconst crossorigin_to_credentials = function(crossorigin) {\r\n\t\tswitch(crossorigin) {\r\n\t\t\tcase \"anonymous\": return \"omit\";\r\n\t\t\tcase \"use-credentials\": return \"include\";\r\n\t\t\tdefault: return \"same-origin\";\r\n\t\t}\r\n\t};\r\n\r\n\tconst msghandler = function(L) {\r\n\t\tlet ar = new lua_Debug();\r\n\t\tif (lua_getstack(L, 2, ar))\r\n\t\t\tlua_getinfo(L, to_luastring(\"Sl\"), ar);\r\n\t\tpush(L, new ErrorEvent(\"error\", {\r\n\t\t\tbubbles: true,\r\n\t\t\tcancelable: true,\r\n\t\t\tmessage: lua_tojsstring(L, 1),\r\n\t\t\terror: tojs(L, 1),\r\n\t\t\tfilename: ar.short_src ? to_jsstring(ar.short_src) : void 0,\r\n\t\t\tlineno: ar.currentline > 0 ? ar.currentline : void 0\r\n\t\t}));\r\n\t\treturn 1;\r\n\t};\r\n\r\n\tconst run_lua_script = function(tag, code, chunkname) {\r\n\t\tlet ok = luaL_loadbuffer(L, code, null, chunkname);\r\n\t\tlet e;\r\n\t\tif (ok === LUA_ERRSYNTAX) {\r\n\t\t\tlet msg = lua_tojsstring(L, -1);\r\n\t\t\tlet filename = tag.src?tag.src:document.location;\r\n\t\t\tlet lineno = void 0; /* TODO: extract out of msg */\r\n\t\t\tlet syntaxerror = new SyntaxError(msg, filename, lineno);\r\n\t\t\te = new ErrorEvent(\"error\", {\r\n\t\t\t\tmessage: msg,\r\n\t\t\t\terror: syntaxerror,\r\n\t\t\t\tfilename: filename,\r\n\t\t\t\tlineno: lineno\r\n\t\t\t});\r\n\t\t} else if (ok === LUA_OK) {\r\n\t\t\t/* insert message handler below function */\r\n\t\t\tlet base = lua_gettop(L);\r\n\t\t\tlua_pushcfunction(L, msghandler);\r\n\t\t\tlua_insert(L, base);\r\n\t\t\t/* set document.currentScript.\r\n\t\t\t   We can't set it normally; but we can create a getter for it, then remove the getter */\r\n\t\t\tObject.defineProperty(document, 'currentScript', {\r\n\t\t\t\tvalue: tag,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t});\r\n\t\t\tok = lua_pcall(L, 0, 0, base);\r\n\t\t\t/* Remove the currentScript getter installed above; this restores normal behaviour */\r\n\t\t\tdelete document.currentScript;\r\n\t\t\t/* Remove message handler */\r\n\t\t\tlua_remove(L, base);\r\n\t\t\t/* Check if normal error that msghandler would have handled */\r\n\t\t\tif (ok === LUA_ERRRUN) {\r\n\t\t\t\te = checkjs(L, -1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (ok !== LUA_OK) {\r\n\t\t\tif (e === void 0) {\r\n\t\t\t\te = new ErrorEvent(\"error\", {\r\n\t\t\t\t\tmessage: lua_tojsstring(L, -1),\r\n\t\t\t\t\terror: tojs(L, -1)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tlua_pop(L, 1);\r\n\t\t\tif (window.dispatchEvent(e)) {\r\n\t\t\t\tconsole.error(\"uncaught exception\", e.error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst process_xhr_response = function(xhr, tag, chunkname) {\r\n\t\tif (xhr.status >= 200 && xhr.status < 300) {\r\n\t\t\tlet code = xhr.response;\r\n\t\t\tif (typeof code === \"string\") {\r\n\t\t\t\tcode = to_luastring(xhr.response);\r\n\t\t\t} else { /* is an array buffer */\r\n\t\t\t\tcode = new Uint8Array(code);\r\n\t\t\t}\r\n\t\t\t/* TODO: subresource integrity check? */\r\n\t\t\trun_lua_script(tag, code, chunkname);\r\n\t\t} else {\r\n\t\t\ttag.dispatchEvent(new Event(\"error\"));\r\n\t\t}\r\n\t};\r\n\r\n\tconst run_lua_script_tag = function(tag) {\r\n\t\tif (tag.src) {\r\n\t\t\tlet chunkname = to_luastring(\"@\"+tag.src);\r\n\t\t\t/* JS script tags are async after document has loaded */\r\n\t\t\tif (document.readyState === \"complete\" || tag.async) {\r\n\t\t\t\tif (typeof fetch === \"function\") {\r\n\t\t\t\t\tfetch(tag.src, {\r\n\t\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t\t\tcredentials: crossorigin_to_credentials(tag.crossorigin),\r\n\t\t\t\t\t\tredirect: \"follow\",\r\n\t\t\t\t\t\tintegrity: tag.integrity\r\n\t\t\t\t\t}).then(function(resp) {\r\n\t\t\t\t\t\tif (resp.ok) {\r\n\t\t\t\t\t\t\treturn resp.arrayBuffer();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthrow new Error(\"unable to fetch\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).then(function(buffer) {\r\n\t\t\t\t\t\tlet code = new Uint8Array(buffer);\r\n\t\t\t\t\t\trun_lua_script(tag, code, chunkname);\r\n\t\t\t\t\t}).catch(function(reason) {\r\n\t\t\t\t\t\ttag.dispatchEvent(new Event(\"error\"));\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet xhr = new XMLHttpRequest();\r\n\t\t\t\t\txhr.open(\"GET\", tag.src, true);\r\n\t\t\t\t\txhr.responseType = \"arraybuffer\";\r\n\t\t\t\t\txhr.onreadystatechange = function() {\r\n\t\t\t\t\t\tif (xhr.readyState === 4)\r\n\t\t\t\t\t\t\tprocess_xhr_response(xhr, tag, chunkname);\r\n\t\t\t\t\t};\r\n\t\t\t\t\txhr.send();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t/* Needs to be synchronous: use an XHR */\r\n\t\t\t\tlet xhr = new XMLHttpRequest();\r\n\t\t\t\txhr.open(\"GET\", tag.src, false);\r\n\t\t\t\txhr.send();\r\n\t\t\t\tprocess_xhr_response(xhr, tag, chunkname);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet code = to_luastring(tag.innerHTML);\r\n\t\t\tlet chunkname = tag.id ? to_luastring(\"=\"+tag.id) : code;\r\n\t\t\trun_lua_script(tag, code, chunkname);\r\n\t\t}\r\n\t};\r\n\r\n\tconst contentTypeRegexp = /^(.*?\\/.*?)([\\t ]*;.*)?$/;\r\n\tconst luaVersionRegex = /^(\\d+)\\.(\\d+)$/;\r\n\tconst try_tag = function(tag) {\r\n\t\tif (tag.tagName !== \"SCRIPT\")\r\n\t\t\treturn;\r\n\r\n\t\t/* strip off mime type parameters */\r\n\t\tlet contentTypeMatch = contentTypeRegexp.exec(tag.type);\r\n\t\tif (!contentTypeMatch)\r\n\t\t\treturn;\r\n\t\tlet mimetype = contentTypeMatch[1];\r\n\t\tif (mimetype !== \"application/lua\" && mimetype !== \"text/lua\")\r\n\t\t\treturn;\r\n\r\n\t\tif (tag.hasAttribute(\"lua-version\")) {\r\n\t\t\tlet lua_version = luaVersionRegex.exec(tag.getAttribute(\"lua-version\"));\r\n\t\t\tif (!lua_version || lua_version[1] !== LUA_VERSION_MAJOR || lua_version[2] !== LUA_VERSION_MINOR)\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\trun_lua_script_tag(tag);\r\n\t};\r\n\r\n\tif (typeof MutationObserver !== 'undefined') {\r\n\t\t/* watch for new script tags added to document */\r\n\t\t(new MutationObserver(function(records, observer) {\r\n\t\t\tfor (let i=0; i<records.length; i++) {\r\n\t\t\t\tlet record = records[i];\r\n\t\t\t\tfor (let j=0; j<record.addedNodes.length; j++) {\r\n\t\t\t\t\ttry_tag(record.addedNodes[j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})).observe(document, {\r\n\t\t\tchildList: true,\r\n\t\t\tsubtree: true\r\n\t\t});\r\n\t} else if (console.warn) {\r\n\t\tconsole.warn(\"fengari-web: MutationObserver not found; lua script tags will not be run when inserted\");\r\n\t}\r\n\r\n\t/* the query selector here is slightly liberal,\r\n\t   more checks occur in try_tag */\r\n\tconst selector = 'script[type^=\"application/lua\"], script[type^=\"text/lua\"]';\r\n\r\n\t/* try to run existing script tags */\r\n\tArray.prototype.forEach.call(document.querySelectorAll(selector), try_tag);\r\n}\r\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    LUA_OPADD,\n    LUA_OPBAND,\n    LUA_OPBNOT,\n    LUA_OPBOR,\n    LUA_OPBXOR,\n    LUA_OPDIV,\n    LUA_OPIDIV,\n    LUA_OPMOD,\n    LUA_OPSHL,\n    LUA_OPSHR,\n    LUA_OPUNM,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TTABLE\n    },\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require(\"./llimits.js\");\nconst llex     = require('./llex.js');\nconst lobject  = require('./lobject.js');\nconst lopcodes = require('./lopcodes.js');\nconst lparser  = require('./lparser.js');\nconst ltable   = require('./ltable.js');\nconst lvm      = require('./lvm.js');\n\nconst OpCodesI = lopcodes.OpCodesI;\nconst TValue   = lobject.TValue;\n\n/* Maximum number of registers in a Lua function (must fit in 8 bits) */\nconst MAXREGS = 255;\n\n/*\n** Marks the end of a patch list. It is an invalid value both as an absolute\n** address, and as a list link (would link an element to itself).\n*/\nconst NO_JUMP = -1;\n\nconst BinOpr = {\n    OPR_ADD:      0,\n    OPR_SUB:      1,\n    OPR_MUL:      2,\n    OPR_MOD:      3,\n    OPR_POW:      4,\n    OPR_DIV:      5,\n    OPR_IDIV:     6,\n    OPR_BAND:     7,\n    OPR_BOR:      8,\n    OPR_BXOR:     9,\n    OPR_SHL:      10,\n    OPR_SHR:      11,\n    OPR_CONCAT:   12,\n    OPR_EQ:       13,\n    OPR_LT:       14,\n    OPR_LE:       15,\n    OPR_NE:       16,\n    OPR_GT:       17,\n    OPR_GE:       18,\n    OPR_AND:      19,\n    OPR_OR:       20,\n    OPR_NOBINOPR: 21\n};\n\nconst UnOpr = {\n    OPR_MINUS:    0,\n    OPR_BNOT:     1,\n    OPR_NOT:      2,\n    OPR_LEN:      3,\n    OPR_NOUNOPR:  4\n};\n\nconst hasjumps = function(e) {\n    return e.t !== e.f;\n};\n\n/*\n** If expression is a numeric constant returns either true or a new TValue\n** (depending on 'make_tvalue'). Otherwise, returns false.\n*/\nconst tonumeral = function(e, make_tvalue) {\n    let ek = lparser.expkind;\n    if (hasjumps(e))\n        return false;  /* not a numeral */\n    switch (e.k) {\n        case ek.VKINT:\n            if (make_tvalue) {\n                return new TValue(LUA_TNUMINT, e.u.ival);\n            }\n            return true;\n        case ek.VKFLT:\n            if (make_tvalue) {\n                return new TValue(LUA_TNUMFLT, e.u.nval);\n            }\n            return true;\n        default: return false;\n    }\n};\n\n/*\n** Create a OP_LOADNIL instruction, but try to optimize: if the previous\n** instruction is also OP_LOADNIL and ranges are compatible, adjust\n** range of previous instruction instead of emitting a new one. (For\n** instance, 'local a; local b' will generate a single opcode.)\n*/\nconst luaK_nil = function(fs, from, n) {\n    let previous;\n    let l = from + n - 1;  /* last register to set nil */\n    if (fs.pc > fs.lasttarget) {  /* no jumps to current position? */\n        previous = fs.f.code[fs.pc-1];\n        if (previous.opcode === OpCodesI.OP_LOADNIL) {  /* previous is LOADNIL? */\n            let pfrom = previous.A;  /* get previous range */\n            let pl = pfrom + previous.B;\n            if ((pfrom <= from && from <= pl + 1) ||\n                    (from <= pfrom && pfrom <= l + 1)) {  /* can connect both? */\n                if (pfrom < from) from = pfrom;  /* from = min(from, pfrom) */\n                if (pl > l) l = pl;  /* l = max(l, pl) */\n                lopcodes.SETARG_A(previous, from);\n                lopcodes.SETARG_B(previous, l - from);\n                return;\n            }\n        }  /* else go through */\n    }\n    luaK_codeABC(fs, OpCodesI.OP_LOADNIL, from, n - 1, 0);  /* else no optimization */\n};\n\nconst getinstruction = function(fs, e) {\n    return fs.f.code[e.u.info];\n};\n\n/*\n** Gets the destination address of a jump instruction. Used to traverse\n** a list of jumps.\n*/\nconst getjump = function(fs, pc) {\n    let offset = fs.f.code[pc].sBx;\n    if (offset === NO_JUMP)  /* point to itself represents end of list */\n        return NO_JUMP;  /* end of list */\n    else\n        return pc + 1 + offset;  /* turn offset into absolute position */\n};\n\n/*\n** Fix jump instruction at position 'pc' to jump to 'dest'.\n** (Jump addresses are relative in Lua)\n*/\nconst fixjump = function(fs, pc, dest) {\n    let jmp = fs.f.code[pc];\n    let offset = dest - (pc + 1);\n    lua_assert(dest !== NO_JUMP);\n    if (Math.abs(offset) > lopcodes.MAXARG_sBx)\n        llex.luaX_syntaxerror(fs.ls, to_luastring(\"control structure too long\", true));\n    lopcodes.SETARG_sBx(jmp, offset);\n};\n\n/*\n** Concatenate jump-list 'l2' into jump-list 'l1'\n*/\nconst luaK_concat = function(fs, l1, l2) {\n    if (l2 === NO_JUMP) return l1;  /* nothing to concatenate? */\n    else if (l1 === NO_JUMP)  /* no original list? */\n        l1 = l2;\n    else {\n        let list = l1;\n        let next = getjump(fs, list);\n        while (next !== NO_JUMP) {  /* find last element */\n            list = next;\n            next = getjump(fs, list);\n        }\n        fixjump(fs, list, l2);\n    }\n\n    return l1;\n};\n\n/*\n** Create a jump instruction and return its position, so its destination\n** can be fixed later (with 'fixjump'). If there are jumps to\n** this position (kept in 'jpc'), link them all together so that\n** 'patchlistaux' will fix all them directly to the final destination.\n*/\nconst luaK_jump = function (fs) {\n    let jpc = fs.jpc;  /* save list of jumps to here */\n    fs.jpc = NO_JUMP;  /* no more jumps to here */\n    let j = luaK_codeAsBx(fs, OpCodesI.OP_JMP, 0, NO_JUMP);\n    j = luaK_concat(fs, j, jpc);  /* keep them on hold */\n    return j;\n};\n\nconst luaK_jumpto = function(fs, t) {\n    return luaK_patchlist(fs, luaK_jump(fs), t);\n};\n\n/*\n** Code a 'return' instruction\n*/\nconst luaK_ret = function(fs, first, nret) {\n    luaK_codeABC(fs, OpCodesI.OP_RETURN, first, nret + 1, 0);\n};\n\n/*\n** Code a \"conditional jump\", that is, a test or comparison opcode\n** followed by a jump. Return jump position.\n*/\nconst condjump = function(fs, op, A, B, C) {\n    luaK_codeABC(fs, op, A, B, C);\n    return luaK_jump(fs);\n};\n\n/*\n** returns current 'pc' and marks it as a jump target (to avoid wrong\n** optimizations with consecutive instructions not in the same basic block).\n*/\nconst luaK_getlabel = function(fs) {\n    fs.lasttarget = fs.pc;\n    return fs.pc;\n};\n\n/*\n** Returns the position of the instruction \"controlling\" a given\n** jump (that is, its condition), or the jump itself if it is\n** unconditional.\n*/\nconst getjumpcontroloffset = function(fs, pc) {\n    if (pc >= 1 && lopcodes.testTMode(fs.f.code[pc - 1].opcode))\n        return pc - 1;\n    else\n        return pc;\n};\nconst getjumpcontrol = function(fs, pc) {\n    return fs.f.code[getjumpcontroloffset(fs, pc)];\n};\n\n/*\n** Patch destination register for a TESTSET instruction.\n** If instruction in position 'node' is not a TESTSET, return 0 (\"fails\").\n** Otherwise, if 'reg' is not 'NO_REG', set it as the destination\n** register. Otherwise, change instruction to a simple 'TEST' (produces\n** no register value)\n*/\nconst patchtestreg = function(fs, node, reg) {\n    let pc = getjumpcontroloffset(fs, node);\n    let i = fs.f.code[pc];\n    if (i.opcode !== OpCodesI.OP_TESTSET)\n        return false;  /* cannot patch other instructions */\n    if (reg !== lopcodes.NO_REG && reg !== i.B)\n        lopcodes.SETARG_A(i, reg);\n    else {\n        /* no register to put value or register already has the value;\n           change instruction to simple test */\n        fs.f.code[pc] = lopcodes.CREATE_ABC(OpCodesI.OP_TEST, i.B, 0, i.C);\n    }\n    return true;\n};\n\n/*\n** Traverse a list of tests ensuring no one produces a value\n*/\nconst removevalues = function(fs, list) {\n    for (; list !== NO_JUMP; list = getjump(fs, list))\n        patchtestreg(fs, list, lopcodes.NO_REG);\n};\n\n/*\n** Traverse a list of tests, patching their destination address and\n** registers: tests producing values jump to 'vtarget' (and put their\n** values in 'reg'), other tests jump to 'dtarget'.\n*/\nconst patchlistaux = function(fs, list, vtarget, reg, dtarget) {\n    while (list !== NO_JUMP) {\n        let next = getjump(fs, list);\n        if (patchtestreg(fs, list, reg))\n            fixjump(fs, list, vtarget);\n        else\n            fixjump(fs, list, dtarget);  /* jump to default target */\n        list = next;\n    }\n};\n\n/*\n** Ensure all pending jumps to current position are fixed (jumping\n** to current position with no values) and reset list of pending\n** jumps\n*/\nconst dischargejpc = function(fs) {\n    patchlistaux(fs, fs.jpc, fs.pc, lopcodes.NO_REG, fs.pc);\n    fs.jpc = NO_JUMP;\n};\n\n/*\n** Add elements in 'list' to list of pending jumps to \"here\"\n** (current position)\n*/\nconst luaK_patchtohere = function(fs, list) {\n    luaK_getlabel(fs);  /* mark \"here\" as a jump target */\n    fs.jpc = luaK_concat(fs, fs.jpc, list);\n};\n\n/*\n** Path all jumps in 'list' to jump to 'target'.\n** (The assert means that we cannot fix a jump to a forward address\n** because we only know addresses once code is generated.)\n*/\nconst luaK_patchlist = function(fs, list, target) {\n    if (target === fs.pc)  /* 'target' is current position? */\n        luaK_patchtohere(fs, list);  /* add list to pending jumps */\n    else {\n        lua_assert(target < fs.pc);\n        patchlistaux(fs, list, target, lopcodes.NO_REG, target);\n    }\n};\n\n/*\n** Path all jumps in 'list' to close upvalues up to given 'level'\n** (The assertion checks that jumps either were closing nothing\n** or were closing higher levels, from inner blocks.)\n*/\nconst luaK_patchclose = function(fs, list, level) {\n    level++;  /* argument is +1 to reserve 0 as non-op */\n    for (; list !== NO_JUMP; list = getjump(fs, list)) {\n        let ins = fs.f.code[list];\n        lua_assert(ins.opcode === OpCodesI.OP_JMP && (ins.A === 0 || ins.A >= level));\n        lopcodes.SETARG_A(ins, level);\n    }\n};\n\n/*\n** Emit instruction 'i', checking for array sizes and saving also its\n** line information. Return 'i' position.\n*/\nconst luaK_code = function(fs, i) {\n    let f = fs.f;\n    dischargejpc(fs);  /* 'pc' will change */\n    /* put new instruction in code array */\n    f.code[fs.pc] = i;\n    f.lineinfo[fs.pc] = fs.ls.lastline;\n    return fs.pc++;\n};\n\n/*\n** Format and emit an 'iABC' instruction. (Assertions check consistency\n** of parameters versus opcode.)\n*/\nconst luaK_codeABC = function(fs, o, a, b, c) {\n    lua_assert(lopcodes.getOpMode(o) === lopcodes.iABC);\n    lua_assert(lopcodes.getBMode(o) !== lopcodes.OpArgN || b === 0);\n    lua_assert(lopcodes.getCMode(o) !== lopcodes.OpArgN || c === 0);\n    lua_assert(a <= lopcodes.MAXARG_A && b <= lopcodes.MAXARG_B && c <= lopcodes.MAXARG_C);\n    return luaK_code(fs, lopcodes.CREATE_ABC(o, a, b, c));\n};\n\n/*\n** Format and emit an 'iABx' instruction.\n*/\nconst luaK_codeABx = function(fs, o, a, bc) {\n    lua_assert(lopcodes.getOpMode(o) === lopcodes.iABx || lopcodes.getOpMode(o) === lopcodes.iAsBx);\n    lua_assert(lopcodes.getCMode(o) === lopcodes.OpArgN);\n    lua_assert(a <= lopcodes.MAXARG_A && bc <= lopcodes.MAXARG_Bx);\n    return luaK_code(fs, lopcodes.CREATE_ABx(o, a, bc));\n};\n\nconst luaK_codeAsBx = function(fs,o,A,sBx) {\n    return luaK_codeABx(fs, o, A, (sBx) + lopcodes.MAXARG_sBx);\n};\n\n/*\n** Emit an \"extra argument\" instruction (format 'iAx')\n*/\nconst codeextraarg = function(fs, a) {\n    lua_assert(a <= lopcodes.MAXARG_Ax);\n    return luaK_code(fs, lopcodes.CREATE_Ax(OpCodesI.OP_EXTRAARG, a));\n};\n\n/*\n** Emit a \"load constant\" instruction, using either 'OP_LOADK'\n** (if constant index 'k' fits in 18 bits) or an 'OP_LOADKX'\n** instruction with \"extra argument\".\n*/\nconst luaK_codek = function(fs, reg, k) {\n    if (k <= lopcodes.MAXARG_Bx)\n        return luaK_codeABx(fs, OpCodesI.OP_LOADK, reg, k);\n    else {\n        let p = luaK_codeABx(fs, OpCodesI.OP_LOADKX, reg, 0);\n        codeextraarg(fs, k);\n        return p;\n    }\n};\n\n/*\n** Check register-stack level, keeping track of its maximum size\n** in field 'maxstacksize'\n*/\nconst luaK_checkstack = function(fs, n) {\n    let newstack = fs.freereg + n;\n    if (newstack > fs.f.maxstacksize) {\n        if (newstack >= MAXREGS)\n            llex.luaX_syntaxerror(fs.ls, to_luastring(\"function or expression needs too many registers\", true));\n        fs.f.maxstacksize = newstack;\n    }\n};\n\n/*\n** Reserve 'n' registers in register stack\n*/\nconst luaK_reserveregs = function(fs, n) {\n    luaK_checkstack(fs, n);\n    fs.freereg += n;\n};\n\n/*\n** Free register 'reg', if it is neither a constant index nor\n** a local variable.\n*/\nconst freereg = function(fs, reg) {\n    if (!lopcodes.ISK(reg) && reg >= fs.nactvar) {\n        fs.freereg--;\n        lua_assert(reg === fs.freereg);\n    }\n};\n\n/*\n** Free register used by expression 'e' (if any)\n*/\nconst freeexp = function(fs, e) {\n    if (e.k === lparser.expkind.VNONRELOC)\n        freereg(fs, e.u.info);\n};\n\n/*\n** Free registers used by expressions 'e1' and 'e2' (if any) in proper\n** order.\n*/\nconst freeexps = function(fs, e1, e2) {\n    let r1 = (e1.k === lparser.expkind.VNONRELOC) ? e1.u.info : -1;\n    let r2 = (e2.k === lparser.expkind.VNONRELOC) ? e2.u.info : -1;\n    if (r1 > r2) {\n        freereg(fs, r1);\n        freereg(fs, r2);\n    }\n    else {\n        freereg(fs, r2);\n        freereg(fs, r1);\n    }\n};\n\n\n/*\n** Add constant 'v' to prototype's list of constants (field 'k').\n** Use scanner's table to cache position of constants in constant list\n** and try to reuse constants. Because some values should not be used\n** as keys (nil cannot be a key, integer keys can collapse with float\n** keys), the caller must provide a useful 'key' for indexing the cache.\n*/\nconst addk = function(fs, key, v) {\n    let f = fs.f;\n    let idx = ltable.luaH_get(fs.L, fs.ls.h, key);  /* index scanner table */\n    if (idx.ttisinteger()) {  /* is there an index there? */\n        let k = idx.value;\n        /* correct value? (warning: must distinguish floats from integers!) */\n        if (k < fs.nk && f.k[k].ttype() === v.ttype() && f.k[k].value === v.value)\n            return k;  /* reuse index */\n    }\n    /* constant not found; create a new entry */\n    let k = fs.nk;\n    ltable.luaH_setfrom(fs.L, fs.ls.h, key, new lobject.TValue(LUA_TNUMINT, k));\n    f.k[k] = v;\n    fs.nk++;\n    return k;\n};\n\n/*\n** Add a string to list of constants and return its index.\n*/\nconst luaK_stringK = function(fs, s) {\n    let o = new TValue(LUA_TLNGSTR, s);\n    return addk(fs, o, o);  /* use string itself as key */\n};\n\n\n/*\n** Add an integer to list of constants and return its index.\n** Integers use userdata as keys to avoid collision with floats with\n** same value.\n*/\nconst luaK_intK = function(fs, n) {\n    let k = new TValue(LUA_TLIGHTUSERDATA, n);\n    let o = new TValue(LUA_TNUMINT, n);\n    return addk(fs, k, o);\n};\n\n/*\n** Add a float to list of constants and return its index.\n*/\nconst luaK_numberK = function(fs, r) {\n    let o = new TValue(LUA_TNUMFLT, r);\n    return addk(fs, o, o);  /* use number itself as key */\n};\n\n\n/*\n** Add a boolean to list of constants and return its index.\n*/\nconst boolK = function(fs, b) {\n    let o = new TValue(LUA_TBOOLEAN, b);\n    return addk(fs, o, o);  /* use boolean itself as key */\n};\n\n\n/*\n** Add nil to list of constants and return its index.\n*/\nconst nilK = function(fs) {\n    let v = new TValue(LUA_TNIL, null);\n    let k = new TValue(LUA_TTABLE, fs.ls.h);\n    /* cannot use nil as key; instead use table itself to represent nil */\n    return addk(fs, k, v);\n};\n\n/*\n** Fix an expression to return the number of results 'nresults'.\n** Either 'e' is a multi-ret expression (function call or vararg)\n** or 'nresults' is LUA_MULTRET (as any expression can satisfy that).\n*/\nconst luaK_setreturns = function(fs, e, nresults) {\n    let ek = lparser.expkind;\n    if (e.k === ek.VCALL) {  /* expression is an open function call? */\n        lopcodes.SETARG_C(getinstruction(fs, e), nresults + 1);\n    }\n    else if (e.k === ek.VVARARG) {\n        let pc = getinstruction(fs, e);\n        lopcodes.SETARG_B(pc, nresults + 1);\n        lopcodes.SETARG_A(pc, fs.freereg);\n        luaK_reserveregs(fs, 1);\n    }\n    else lua_assert(nresults === LUA_MULTRET);\n};\n\nconst luaK_setmultret = function(fs, e) {\n    luaK_setreturns(fs, e, LUA_MULTRET);\n};\n\n/*\n** Fix an expression to return one result.\n** If expression is not a multi-ret expression (function call or\n** vararg), it already returns one result, so nothing needs to be done.\n** Function calls become VNONRELOC expressions (as its result comes\n** fixed in the base register of the call), while vararg expressions\n** become VRELOCABLE (as OP_VARARG puts its results where it wants).\n** (Calls are created returning one result, so that does not need\n** to be fixed.)\n*/\nconst luaK_setoneret = function(fs, e) {\n    let ek = lparser.expkind;\n    if (e.k === ek.VCALL) {  /* expression is an open function call? */\n        /* already returns 1 value */\n        lua_assert(getinstruction(fs, e).C === 2);\n        e.k = ek.VNONRELOC;  /* result has fixed position */\n        e.u.info = getinstruction(fs, e).A;\n    } else if (e.k === ek.VVARARG) {\n        lopcodes.SETARG_B(getinstruction(fs, e), 2);\n        e.k = ek.VRELOCABLE;  /* can relocate its simple result */\n    }\n};\n\n/*\n** Ensure that expression 'e' is not a variable.\n*/\nconst luaK_dischargevars = function(fs, e) {\n    let ek = lparser.expkind;\n\n    switch (e.k) {\n        case ek.VLOCAL: {  /* already in a register */\n            e.k =  ek.VNONRELOC;  /* becomes a non-relocatable value */\n            break;\n        }\n        case ek.VUPVAL: {  /* move value to some (pending) register */\n            e.u.info = luaK_codeABC(fs, OpCodesI.OP_GETUPVAL, 0, e.u.info, 0);\n            e.k = ek.VRELOCABLE;\n            break;\n        }\n        case ek.VINDEXED: {\n            let op;\n            freereg(fs, e.u.ind.idx);\n            if (e.u.ind.vt === ek.VLOCAL) {  /* is 't' in a register? */\n                freereg(fs, e.u.ind.t);\n                op = OpCodesI.OP_GETTABLE;\n            } else {\n                lua_assert(e.u.ind.vt === ek.VUPVAL);\n                op = OpCodesI.OP_GETTABUP;  /* 't' is in an upvalue */\n            }\n            e.u.info = luaK_codeABC(fs, op, 0, e.u.ind.t, e.u.ind.idx);\n            e.k = ek.VRELOCABLE;\n            break;\n        }\n        case ek.VVARARG: case ek.VCALL: {\n            luaK_setoneret(fs, e);\n            break;\n        }\n        default: break;  /* there is one value available (somewhere) */\n    }\n};\n\nconst code_loadbool = function(fs, A, b, jump) {\n    luaK_getlabel(fs);  /* those instructions may be jump targets */\n    return luaK_codeABC(fs, OpCodesI.OP_LOADBOOL, A, b, jump);\n};\n\n/*\n** Ensures expression value is in register 'reg' (and therefore\n** 'e' will become a non-relocatable expression).\n*/\nconst discharge2reg = function(fs, e, reg) {\n    let ek = lparser.expkind;\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VNIL: {\n            luaK_nil(fs, reg, 1);\n            break;\n        }\n        case ek.VFALSE: case ek.VTRUE: {\n            luaK_codeABC(fs, OpCodesI.OP_LOADBOOL, reg, e.k === ek.VTRUE, 0);\n            break;\n        }\n        case ek.VK: {\n            luaK_codek(fs, reg, e.u.info);\n            break;\n        }\n        case ek.VKFLT: {\n            luaK_codek(fs, reg, luaK_numberK(fs, e.u.nval));\n            break;\n        }\n        case ek.VKINT: {\n            luaK_codek(fs, reg, luaK_intK(fs, e.u.ival));\n            break;\n        }\n        case ek.VRELOCABLE: {\n            let pc = getinstruction(fs, e);\n            lopcodes.SETARG_A(pc, reg);  /* instruction will put result in 'reg' */\n            break;\n        }\n        case ek.VNONRELOC: {\n            if (reg !== e.u.info)\n                luaK_codeABC(fs, OpCodesI.OP_MOVE, reg, e.u.info, 0);\n            break;\n        }\n        default: {\n            lua_assert(e.k === ek.VJMP);\n            return;  /* nothing to do... */\n        }\n    }\n    e.u.info = reg;\n    e.k = ek.VNONRELOC;\n};\n\n/*\n** Ensures expression value is in any register.\n*/\nconst discharge2anyreg = function(fs, e) {\n    if (e.k !== lparser.expkind.VNONRELOC) {  /* no fixed register yet? */\n        luaK_reserveregs(fs, 1);  /* get a register */\n        discharge2reg(fs, e, fs.freereg-1);  /* put value there */\n    }\n};\n\n/*\n** check whether list has any jump that do not produce a value\n** or produce an inverted value\n*/\nconst need_value = function(fs, list) {\n    for (; list !== NO_JUMP; list = getjump(fs, list)) {\n        let i = getjumpcontrol(fs, list);\n        if (i.opcode !== OpCodesI.OP_TESTSET) return true;\n    }\n    return false;  /* not found */\n};\n\n/*\n** Ensures final expression result (including results from its jump\n** lists) is in register 'reg'.\n** If expression has jumps, need to patch these jumps either to\n** its final position or to \"load\" instructions (for those tests\n** that do not produce values).\n*/\nconst exp2reg = function(fs, e, reg) {\n    let ek = lparser.expkind;\n    discharge2reg(fs, e, reg);\n    if (e.k === ek.VJMP)  /* expression itself is a test? */\n        e.t = luaK_concat(fs, e.t, e.u.info);  /* put this jump in 't' list */\n    if (hasjumps(e)) {\n        let final;  /* position after whole expression */\n        let p_f = NO_JUMP;  /* position of an eventual LOAD false */\n        let p_t = NO_JUMP;  /* position of an eventual LOAD true */\n        if (need_value(fs, e.t) || need_value(fs, e.f)) {\n            let fj = (e.k === ek.VJMP) ? NO_JUMP : luaK_jump(fs);\n            p_f = code_loadbool(fs, reg, 0, 1);\n            p_t = code_loadbool(fs, reg, 1, 0);\n            luaK_patchtohere(fs, fj);\n        }\n        final = luaK_getlabel(fs);\n        patchlistaux(fs, e.f, final, reg, p_f);\n        patchlistaux(fs, e.t, final, reg, p_t);\n    }\n    e.f = e.t = NO_JUMP;\n    e.u.info = reg;\n    e.k = ek.VNONRELOC;\n};\n\n/*\n** Ensures final expression result (including results from its jump\n** lists) is in next available register.\n*/\nconst luaK_exp2nextreg = function(fs, e) {\n    luaK_dischargevars(fs, e);\n    freeexp(fs, e);\n    luaK_reserveregs(fs, 1);\n    exp2reg(fs, e, fs.freereg - 1);\n};\n\n\n/*\n** Ensures final expression result (including results from its jump\n** lists) is in some (any) register and return that register.\n*/\nconst luaK_exp2anyreg = function(fs, e) {\n    luaK_dischargevars(fs, e);\n    if (e.k === lparser.expkind.VNONRELOC) {  /* expression already has a register? */\n        if (!hasjumps(e))  /* no jumps? */\n            return e.u.info;  /* result is already in a register */\n        if (e.u.info >= fs.nactvar) {  /* reg. is not a local? */\n            exp2reg(fs, e, e.u.info);  /* put final result in it */\n            return e.u.info;\n        }\n    }\n    luaK_exp2nextreg(fs, e);  /* otherwise, use next available register */\n    return e.u.info;\n};\n\n/*\n** Ensures final expression result is either in a register or in an\n** upvalue.\n*/\nconst luaK_exp2anyregup = function(fs, e) {\n    if (e.k !== lparser.expkind.VUPVAL || hasjumps(e))\n        luaK_exp2anyreg(fs, e);\n};\n\n/*\n** Ensures final expression result is either in a register or it is\n** a constant.\n*/\nconst luaK_exp2val = function(fs, e) {\n    if (hasjumps(e))\n        luaK_exp2anyreg(fs, e);\n    else\n        luaK_dischargevars(fs, e);\n};\n\n/*\n** Ensures final expression result is in a valid R/K index\n** (that is, it is either in a register or in 'k' with an index\n** in the range of R/K indices).\n** Returns R/K index.\n*/\nconst luaK_exp2RK = function(fs, e) {\n    let ek = lparser.expkind;\n    let vk = false;\n    luaK_exp2val(fs, e);\n    switch (e.k) {  /* move constants to 'k' */\n        case ek.VTRUE: e.u.info = boolK(fs, true); vk = true; break;\n        case ek.VFALSE: e.u.info = boolK(fs, false); vk = true; break;\n        case ek.VNIL: e.u.info = nilK(fs); vk = true; break;\n        case ek.VKINT: e.u.info = luaK_intK(fs, e.u.ival); vk = true; break;\n        case ek.VKFLT: e.u.info = luaK_numberK(fs, e.u.nval); vk = true; break;\n        case ek.VK: vk = true; break;\n        default: break;\n    }\n\n    if (vk) {\n        e.k = ek.VK;\n        if (e.u.info <= lopcodes.MAXINDEXRK)  /* constant fits in 'argC'? */\n            return lopcodes.RKASK(e.u.info);\n    }\n\n    /* not a constant in the right range: put it in a register */\n    return luaK_exp2anyreg(fs, e);\n};\n\n/*\n** Generate code to store result of expression 'ex' into variable 'var'.\n*/\nconst luaK_storevar = function(fs, vr, ex) {\n    let ek = lparser.expkind;\n    switch (vr.k) {\n        case ek.VLOCAL: {\n            freeexp(fs, ex);\n            exp2reg(fs, ex, vr.u.info);  /* compute 'ex' into proper place */\n            return;\n        }\n        case ek.VUPVAL: {\n            let e = luaK_exp2anyreg(fs, ex);\n            luaK_codeABC(fs, OpCodesI.OP_SETUPVAL, e, vr.u.info, 0);\n            break;\n        }\n        case ek.VINDEXED: {\n            let op = (vr.u.ind.vt === ek.VLOCAL) ? OpCodesI.OP_SETTABLE : OpCodesI.OP_SETTABUP;\n            let e = luaK_exp2RK(fs, ex);\n            luaK_codeABC(fs, op, vr.u.ind.t, vr.u.ind.idx, e);\n            break;\n        }\n    }\n    freeexp(fs, ex);\n};\n\n\n/*\n** Emit SELF instruction (convert expression 'e' into 'e:key(e,').\n*/\nconst luaK_self = function(fs, e, key) {\n    luaK_exp2anyreg(fs, e);\n    let ereg = e.u.info;  /* register where 'e' was placed */\n    freeexp(fs, e);\n    e.u.info = fs.freereg;  /* base register for op_self */\n    e.k = lparser.expkind.VNONRELOC;  /* self expression has a fixed register */\n    luaK_reserveregs(fs, 2);  /* function and 'self' produced by op_self */\n    luaK_codeABC(fs, OpCodesI.OP_SELF, e.u.info, ereg, luaK_exp2RK(fs, key));\n    freeexp(fs, key);\n};\n\n/*\n** Negate condition 'e' (where 'e' is a comparison).\n*/\nconst negatecondition = function(fs, e) {\n    let pc = getjumpcontrol(fs, e.u.info);\n    lua_assert(lopcodes.testTMode(pc.opcode) && pc.opcode !== OpCodesI.OP_TESTSET && pc.opcode !== OpCodesI.OP_TEST);\n    lopcodes.SETARG_A(pc, !(pc.A));\n};\n\n/*\n** Emit instruction to jump if 'e' is 'cond' (that is, if 'cond'\n** is true, code will jump if 'e' is true.) Return jump position.\n** Optimize when 'e' is 'not' something, inverting the condition\n** and removing the 'not'.\n*/\nconst jumponcond = function(fs, e, cond) {\n    if (e.k === lparser.expkind.VRELOCABLE) {\n        let ie = getinstruction(fs, e);\n        if (ie.opcode === OpCodesI.OP_NOT) {\n            fs.pc--;  /* remove previous OP_NOT */\n            return condjump(fs, OpCodesI.OP_TEST, ie.B, 0, !cond);\n        }\n        /* else go through */\n    }\n    discharge2anyreg(fs, e);\n    freeexp(fs, e);\n    return condjump(fs, OpCodesI.OP_TESTSET, lopcodes.NO_REG, e.u.info, cond);\n};\n\n/*\n** Emit code to go through if 'e' is true, jump otherwise.\n*/\nconst luaK_goiftrue = function(fs, e) {\n    let ek = lparser.expkind;\n    let pc;  /* pc of new jump */\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VJMP: {  /* condition? */\n            negatecondition(fs, e);  /* jump when it is false */\n            pc = e.u.info;  /* save jump position */\n            break;\n        }\n        case ek.VK: case ek.VKFLT: case ek.VKINT: case ek.VTRUE: {\n            pc = NO_JUMP;  /* always true; do nothing */\n            break;\n        }\n        default: {\n            pc = jumponcond(fs, e, 0);  /* jump when false */\n            break;\n        }\n    }\n    e.f = luaK_concat(fs, e.f, pc);  /* insert new jump in false list */\n    luaK_patchtohere(fs, e.t);  /* true list jumps to here (to go through) */\n    e.t = NO_JUMP;\n};\n\n/*\n** Emit code to go through if 'e' is false, jump otherwise.\n*/\nconst luaK_goiffalse = function(fs, e) {\n    let ek = lparser.expkind;\n    let pc;  /* pc of new jump */\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VJMP: {\n            pc = e.u.info;  /* already jump if true */\n            break;\n        }\n        case ek.VNIL: case ek.VFALSE: {\n            pc = NO_JUMP;  /* always false; do nothing */\n            break;\n        }\n        default: {\n            pc = jumponcond(fs, e, 1);  /* jump if true */\n            break;\n        }\n    }\n    e.t = luaK_concat(fs, e.t, pc);  /* insert new jump in 't' list */\n    luaK_patchtohere(fs, e.f);  /* false list jumps to here (to go through) */\n    e.f = NO_JUMP;\n};\n\n/*\n** Code 'not e', doing constant folding.\n*/\nconst codenot = function(fs, e) {\n    let ek = lparser.expkind;\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VNIL: case ek.VFALSE: {\n            e.k = ek.VTRUE;  /* true === not nil === not false */\n            break;\n        }\n        case ek.VK: case ek.VKFLT: case ek.VKINT: case ek.VTRUE: {\n            e.k = ek.VFALSE;  /* false === not \"x\" === not 0.5 === not 1 === not true */\n            break;\n        }\n        case ek.VJMP: {\n            negatecondition(fs, e);\n            break;\n        }\n        case ek.VRELOCABLE:\n        case ek.VNONRELOC: {\n            discharge2anyreg(fs, e);\n            freeexp(fs, e);\n            e.u.info = luaK_codeABC(fs, OpCodesI.OP_NOT, 0, e.u.info, 0);\n            e.k = ek.VRELOCABLE;\n            break;\n        }\n    }\n    /* interchange true and false lists */\n    { let temp = e.f; e.f = e.t; e.t = temp; }\n    removevalues(fs, e.f);  /* values are useless when negated */\n    removevalues(fs, e.t);\n};\n\n/*\n** Create expression 't[k]'. 't' must have its final result already in a\n** register or upvalue.\n*/\nconst luaK_indexed = function(fs, t, k) {\n    let ek = lparser.expkind;\n    lua_assert(!hasjumps(t) && (lparser.vkisinreg(t.k) || t.k === ek.VUPVAL));\n    t.u.ind.t = t.u.info;  /* register or upvalue index */\n    t.u.ind.idx = luaK_exp2RK(fs, k);  /* R/K index for key */\n    t.u.ind.vt = (t.k === ek.VUPVAL) ? ek.VUPVAL : ek.VLOCAL;\n    t.k = ek.VINDEXED;\n};\n\n/*\n** Return false if folding can raise an error.\n** Bitwise operations need operands convertible to integers; division\n** operations cannot have 0 as divisor.\n*/\nconst validop = function(op, v1, v2) {\n    switch (op) {\n        case LUA_OPBAND: case LUA_OPBOR: case LUA_OPBXOR:\n        case LUA_OPSHL: case LUA_OPSHR: case LUA_OPBNOT: {  /* conversion errors */\n            return (lvm.tointeger(v1) !== false && lvm.tointeger(v2) !== false);\n        }\n        case LUA_OPDIV: case LUA_OPIDIV: case LUA_OPMOD:  /* division by 0 */\n            return (v2.value !== 0);\n        default: return 1;  /* everything else is valid */\n    }\n};\n\n/*\n** Try to \"constant-fold\" an operation; return 1 iff successful.\n** (In this case, 'e1' has the final result.)\n*/\nconst constfolding = function(op, e1, e2) {\n    let ek = lparser.expkind;\n    let v1, v2;\n    if (!(v1 = tonumeral(e1, true)) || !(v2 = tonumeral(e2, true)) || !validop(op, v1, v2))\n        return 0;  /* non-numeric operands or not safe to fold */\n    let res = new TValue(); /* FIXME */\n    lobject.luaO_arith(null, op, v1, v2, res);  /* does operation */\n    if (res.ttisinteger()) {\n        e1.k = ek.VKINT;\n        e1.u.ival = res.value;\n    }\n    else {  /* folds neither NaN nor 0.0 (to avoid problems with -0.0) */\n        let n = res.value;\n        if (isNaN(n) || n === 0)\n            return false;\n        e1.k = ek.VKFLT;\n        e1.u.nval = n;\n    }\n    return true;\n};\n\n/*\n** Emit code for unary expressions that \"produce values\"\n** (everything but 'not').\n** Expression to produce final result will be encoded in 'e'.\n*/\nconst codeunexpval = function(fs, op, e, line) {\n    let r = luaK_exp2anyreg(fs, e);  /* opcodes operate only on registers */\n    freeexp(fs, e);\n    e.u.info = luaK_codeABC(fs, op, 0, r, 0);  /* generate opcode */\n    e.k = lparser.expkind.VRELOCABLE;  /* all those operations are relocatable */\n    luaK_fixline(fs, line);\n};\n\n/*\n** Emit code for binary expressions that \"produce values\"\n** (everything but logical operators 'and'/'or' and comparison\n** operators).\n** Expression to produce final result will be encoded in 'e1'.\n** Because 'luaK_exp2RK' can free registers, its calls must be\n** in \"stack order\" (that is, first on 'e2', which may have more\n** recent registers to be released).\n*/\nconst codebinexpval = function(fs, op, e1, e2, line) {\n    let rk2 = luaK_exp2RK(fs, e2);  /* both operands are \"RK\" */\n    let rk1 = luaK_exp2RK(fs, e1);\n    freeexps(fs, e1, e2);\n    e1.u.info = luaK_codeABC(fs, op, 0, rk1, rk2);  /* generate opcode */\n    e1.k = lparser.expkind.VRELOCABLE;  /* all those operations are relocatable */\n    luaK_fixline(fs, line);\n};\n\n\n/*\n** Emit code for comparisons.\n** 'e1' was already put in R/K form by 'luaK_infix'.\n*/\nconst codecomp = function(fs, opr, e1, e2) {\n    let ek = lparser.expkind;\n\n    let rk1;\n    if (e1.k === ek.VK)\n        rk1 = lopcodes.RKASK(e1.u.info);\n    else {\n        lua_assert(e1.k === ek.VNONRELOC);\n        rk1 = e1.u.info;\n    }\n\n    let rk2 = luaK_exp2RK(fs, e2);\n    freeexps(fs, e1, e2);\n    switch (opr) {\n        case BinOpr.OPR_NE: {  /* '(a ~= b)' ==> 'not (a === b)' */\n            e1.u.info = condjump(fs, OpCodesI.OP_EQ, 0, rk1, rk2);\n            break;\n        }\n        case BinOpr.OPR_GT: case BinOpr.OPR_GE: {\n            /* '(a > b)' ==> '(b < a)';  '(a >= b)' ==> '(b <= a)' */\n            let op = (opr - BinOpr.OPR_NE) + OpCodesI.OP_EQ;\n            e1.u.info = condjump(fs, op, 1, rk2, rk1);  /* invert operands */\n            break;\n        }\n        default: {  /* '==', '<', '<=' use their own opcodes */\n            let op = (opr - BinOpr.OPR_EQ) + OpCodesI.OP_EQ;\n            e1.u.info = condjump(fs, op, 1, rk1, rk2);\n            break;\n        }\n    }\n    e1.k = ek.VJMP;\n};\n\n/*\n** Apply prefix operation 'op' to expression 'e'.\n*/\nconst luaK_prefix = function(fs, op, e, line) {\n    let ef = new lparser.expdesc();\n    ef.k = lparser.expkind.VKINT;\n    ef.u.ival = ef.u.nval = ef.u.info = 0;\n    ef.t = NO_JUMP;\n    ef.f = NO_JUMP;\n    switch (op) {\n        case UnOpr.OPR_MINUS: case UnOpr.OPR_BNOT:  /* use 'ef' as fake 2nd operand */\n            if (constfolding(op + LUA_OPUNM, e, ef))\n                break;\n            /* FALLTHROUGH */\n        case UnOpr.OPR_LEN:\n            codeunexpval(fs, op + OpCodesI.OP_UNM, e, line);\n            break;\n        case UnOpr.OPR_NOT: codenot(fs, e); break;\n    }\n};\n\n/*\n** Process 1st operand 'v' of binary operation 'op' before reading\n** 2nd operand.\n*/\nconst luaK_infix = function(fs, op, v) {\n    switch (op) {\n        case BinOpr.OPR_AND: {\n            luaK_goiftrue(fs, v);  /* go ahead only if 'v' is true */\n            break;\n        }\n        case BinOpr.OPR_OR: {\n            luaK_goiffalse(fs, v);  /* go ahead only if 'v' is false */\n            break;\n        }\n        case BinOpr.OPR_CONCAT: {\n            luaK_exp2nextreg(fs, v);  /* operand must be on the 'stack' */\n            break;\n        }\n        case BinOpr.OPR_ADD: case BinOpr.OPR_SUB:\n        case BinOpr.OPR_MUL: case BinOpr.OPR_DIV: case BinOpr.OPR_IDIV:\n        case BinOpr.OPR_MOD: case BinOpr.OPR_POW:\n        case BinOpr.OPR_BAND: case BinOpr.OPR_BOR: case BinOpr.OPR_BXOR:\n        case BinOpr.OPR_SHL: case BinOpr.OPR_SHR: {\n            if (!tonumeral(v, false))\n                luaK_exp2RK(fs, v);\n            /* else keep numeral, which may be folded with 2nd operand */\n            break;\n        }\n        default: {\n            luaK_exp2RK(fs, v);\n            break;\n        }\n    }\n};\n\n/*\n** Finalize code for binary operation, after reading 2nd operand.\n** For '(a .. b .. c)' (which is '(a .. (b .. c))', because\n** concatenation is right associative), merge second CONCAT into first\n** one.\n*/\nconst luaK_posfix = function(fs, op, e1, e2, line) {\n    let ek = lparser.expkind;\n    switch (op) {\n        case BinOpr.OPR_AND: {\n            lua_assert(e1.t === NO_JUMP);  /* list closed by 'luK_infix' */\n            luaK_dischargevars(fs, e2);\n            e2.f = luaK_concat(fs, e2.f, e1.f);\n            e1.to(e2);\n            break;\n        }\n        case BinOpr.OPR_OR: {\n            lua_assert(e1.f === NO_JUMP);  /* list closed by 'luK_infix' */\n            luaK_dischargevars(fs, e2);\n            e2.t = luaK_concat(fs, e2.t, e1.t);\n            e1.to(e2);\n            break;\n        }\n        case BinOpr.OPR_CONCAT: {\n            luaK_exp2val(fs, e2);\n            let ins = getinstruction(fs, e2);\n            if (e2.k === ek.VRELOCABLE && ins.opcode === OpCodesI.OP_CONCAT) {\n                lua_assert(e1.u.info === ins.B - 1);\n                freeexp(fs, e1);\n                lopcodes.SETARG_B(ins, e1.u.info);\n                e1.k = ek.VRELOCABLE; e1.u.info = e2.u.info;\n            }\n            else {\n                luaK_exp2nextreg(fs, e2);  /* operand must be on the 'stack' */\n                codebinexpval(fs, OpCodesI.OP_CONCAT, e1, e2, line);\n            }\n            break;\n        }\n        case BinOpr.OPR_ADD: case BinOpr.OPR_SUB: case BinOpr.OPR_MUL: case BinOpr.OPR_DIV:\n        case BinOpr.OPR_IDIV: case BinOpr.OPR_MOD: case BinOpr.OPR_POW:\n        case BinOpr.OPR_BAND: case BinOpr.OPR_BOR: case BinOpr.OPR_BXOR:\n        case BinOpr.OPR_SHL: case BinOpr.OPR_SHR: {\n            if (!constfolding(op + LUA_OPADD, e1, e2))\n                codebinexpval(fs, op + OpCodesI.OP_ADD, e1, e2, line);\n            break;\n        }\n        case BinOpr.OPR_EQ: case BinOpr.OPR_LT: case BinOpr.OPR_LE:\n        case BinOpr.OPR_NE: case BinOpr.OPR_GT: case BinOpr.OPR_GE: {\n            codecomp(fs, op, e1, e2);\n            break;\n        }\n    }\n\n    return e1;\n};\n\n/*\n** Change line information associated with current position.\n*/\nconst luaK_fixline = function(fs, line) {\n    fs.f.lineinfo[fs.pc - 1] = line;\n};\n\n/*\n** Emit a SETLIST instruction.\n** 'base' is register that keeps table;\n** 'nelems' is #table plus those to be stored now;\n** 'tostore' is number of values (in registers 'base + 1',...) to add to\n** table (or LUA_MULTRET to add up to stack top).\n*/\nconst luaK_setlist = function(fs, base, nelems, tostore) {\n    let c =  (nelems - 1)/lopcodes.LFIELDS_PER_FLUSH + 1;\n    let b = (tostore === LUA_MULTRET) ? 0 : tostore;\n    lua_assert(tostore !== 0 && tostore <= lopcodes.LFIELDS_PER_FLUSH);\n    if (c <= lopcodes.MAXARG_C)\n        luaK_codeABC(fs, OpCodesI.OP_SETLIST, base, b, c);\n    else if (c <= lopcodes.MAXARG_Ax) {\n        luaK_codeABC(fs, OpCodesI.OP_SETLIST, base, b, 0);\n        codeextraarg(fs, c);\n    }\n    else\n        llex.luaX_syntaxerror(fs.ls, to_luastring(\"constructor too long\", true));\n    fs.freereg = base + 1;  /* free registers with list values */\n};\n\n\nmodule.exports.BinOpr             = BinOpr;\nmodule.exports.NO_JUMP            = NO_JUMP;\nmodule.exports.UnOpr              = UnOpr;\nmodule.exports.getinstruction     = getinstruction;\nmodule.exports.luaK_checkstack    = luaK_checkstack;\nmodule.exports.luaK_code          = luaK_code;\nmodule.exports.luaK_codeABC       = luaK_codeABC;\nmodule.exports.luaK_codeABx       = luaK_codeABx;\nmodule.exports.luaK_codeAsBx      = luaK_codeAsBx;\nmodule.exports.luaK_codek         = luaK_codek;\nmodule.exports.luaK_concat        = luaK_concat;\nmodule.exports.luaK_dischargevars = luaK_dischargevars;\nmodule.exports.luaK_exp2RK        = luaK_exp2RK;\nmodule.exports.luaK_exp2anyreg    = luaK_exp2anyreg;\nmodule.exports.luaK_exp2anyregup  = luaK_exp2anyregup;\nmodule.exports.luaK_exp2nextreg   = luaK_exp2nextreg;\nmodule.exports.luaK_exp2val       = luaK_exp2val;\nmodule.exports.luaK_fixline       = luaK_fixline;\nmodule.exports.luaK_getlabel      = luaK_getlabel;\nmodule.exports.luaK_goiffalse     = luaK_goiffalse;\nmodule.exports.luaK_goiftrue      = luaK_goiftrue;\nmodule.exports.luaK_indexed       = luaK_indexed;\nmodule.exports.luaK_infix         = luaK_infix;\nmodule.exports.luaK_intK          = luaK_intK;\nmodule.exports.luaK_jump          = luaK_jump;\nmodule.exports.luaK_jumpto        = luaK_jumpto;\nmodule.exports.luaK_nil           = luaK_nil;\nmodule.exports.luaK_numberK       = luaK_numberK;\nmodule.exports.luaK_patchclose    = luaK_patchclose;\nmodule.exports.luaK_patchlist     = luaK_patchlist;\nmodule.exports.luaK_patchtohere   = luaK_patchtohere;\nmodule.exports.luaK_posfix        = luaK_posfix;\nmodule.exports.luaK_prefix        = luaK_prefix;\nmodule.exports.luaK_reserveregs   = luaK_reserveregs;\nmodule.exports.luaK_ret           = luaK_ret;\nmodule.exports.luaK_self          = luaK_self;\nmodule.exports.luaK_setlist       = luaK_setlist;\nmodule.exports.luaK_setmultret    = luaK_setmultret;\nmodule.exports.luaK_setoneret     = luaK_setoneret;\nmodule.exports.luaK_setreturns    = luaK_setreturns;\nmodule.exports.luaK_storevar      = luaK_storevar;\nmodule.exports.luaK_stringK       = luaK_stringK;\n","\"use strict\";\n\nconst {\n    LUA_SIGNATURE,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR\n    },\n    thread_status: { LUA_ERRSYNTAX },\n    is_luastring,\n    luastring_eq,\n    to_luastring\n} = require('./defs.js');\nconst ldo      = require('./ldo.js');\nconst lfunc    = require('./lfunc.js');\nconst lobject  = require('./lobject.js');\nconst {\n    MAXARG_sBx,\n    POS_A,\n    POS_Ax,\n    POS_B,\n    POS_Bx,\n    POS_C,\n    POS_OP,\n    SIZE_A,\n    SIZE_Ax,\n    SIZE_B,\n    SIZE_Bx,\n    SIZE_C,\n    SIZE_OP\n} = require('./lopcodes.js');\nconst { lua_assert } = require(\"./llimits.js\");\nconst { luaS_bless } = require('./lstring.js');\nconst {\n    luaZ_read,\n    ZIO\n} = require('./lzio.js');\n\nlet LUAC_DATA = [0x19, 0x93, 13, 10, 0x1a, 10];\n\nclass BytecodeParser {\n\n    constructor(L, Z, name) {\n        this.intSize = 4;\n        this.size_tSize = 4;\n        this.instructionSize = 4;\n        this.integerSize = 4;\n        this.numberSize = 8;\n\n        lua_assert(Z instanceof ZIO, \"BytecodeParser only operates on a ZIO\");\n        lua_assert(is_luastring(name));\n\n        if (name[0] === 64 /* ('@').charCodeAt(0) */ || name[0] === 61 /* ('=').charCodeAt(0) */)\n            this.name = name.subarray(1);\n        else if (name[0] == LUA_SIGNATURE[0])\n            this.name = to_luastring(\"binary string\", true);\n        else\n            this.name = name;\n\n        this.L = L;\n        this.Z = Z;\n\n        // Used to do buffer to number conversions\n        this.arraybuffer = new ArrayBuffer(\n            Math.max(this.intSize, this.size_tSize, this.instructionSize, this.integerSize, this.numberSize)\n        );\n        this.dv = new DataView(this.arraybuffer);\n        this.u8 = new Uint8Array(this.arraybuffer);\n    }\n\n    read(size) {\n        let u8 = new Uint8Array(size);\n        if(luaZ_read(this.Z, u8, 0, size) !== 0)\n            this.error(\"truncated\");\n        return u8;\n    }\n\n    LoadByte() {\n        if (luaZ_read(this.Z, this.u8, 0, 1) !== 0)\n            this.error(\"truncated\");\n        return this.u8[0];\n    }\n\n    LoadInt() {\n        if (luaZ_read(this.Z, this.u8, 0, this.intSize) !== 0)\n            this.error(\"truncated\");\n        return this.dv.getInt32(0, true);\n    }\n\n    LoadNumber() {\n        if (luaZ_read(this.Z, this.u8, 0, this.numberSize) !== 0)\n            this.error(\"truncated\");\n        return this.dv.getFloat64(0, true);\n    }\n\n    LoadInteger() {\n        if (luaZ_read(this.Z, this.u8, 0, this.integerSize) !== 0)\n            this.error(\"truncated\");\n        return this.dv.getInt32(0, true);\n    }\n\n    LoadSize_t() {\n        return this.LoadInteger();\n    }\n\n    LoadString() {\n        let size = this.LoadByte();\n        if (size === 0xFF)\n            size = this.LoadSize_t();\n        if (size === 0)\n            return null;\n        return luaS_bless(this.L, this.read(size-1));\n    }\n\n    /* creates a mask with 'n' 1 bits at position 'p' */\n    static MASK1(n, p) {\n        return ((~((~0)<<(n)))<<(p));\n    }\n\n    LoadCode(f) {\n        let n = this.LoadInt();\n        let p = BytecodeParser;\n\n        for (let i = 0; i < n; i++) {\n            if (luaZ_read(this.Z, this.u8, 0, this.instructionSize) !== 0)\n                this.error(\"truncated\");\n            let ins = this.dv.getUint32(0, true);\n            f.code[i] = {\n                code:   ins,\n                opcode: (ins >> POS_OP) & p.MASK1(SIZE_OP, 0),\n                A:      (ins >> POS_A)  & p.MASK1(SIZE_A,  0),\n                B:      (ins >> POS_B)  & p.MASK1(SIZE_B,  0),\n                C:      (ins >> POS_C)  & p.MASK1(SIZE_C,  0),\n                Bx:     (ins >> POS_Bx) & p.MASK1(SIZE_Bx, 0),\n                Ax:     (ins >> POS_Ax) & p.MASK1(SIZE_Ax, 0),\n                sBx:    ((ins >> POS_Bx) & p.MASK1(SIZE_Bx, 0)) - MAXARG_sBx\n            };\n        }\n    }\n\n    LoadConstants(f) {\n        let n = this.LoadInt();\n\n        for (let i = 0; i < n; i++) {\n            let t = this.LoadByte();\n\n            switch (t) {\n                case LUA_TNIL:\n                    f.k.push(new lobject.TValue(LUA_TNIL, null));\n                    break;\n                case LUA_TBOOLEAN:\n                    f.k.push(new lobject.TValue(LUA_TBOOLEAN, this.LoadByte() !== 0));\n                    break;\n                case LUA_TNUMFLT:\n                    f.k.push(new lobject.TValue(LUA_TNUMFLT, this.LoadNumber()));\n                    break;\n                case LUA_TNUMINT:\n                    f.k.push(new lobject.TValue(LUA_TNUMINT, this.LoadInteger()));\n                    break;\n                case LUA_TSHRSTR:\n                case LUA_TLNGSTR:\n                    f.k.push(new lobject.TValue(LUA_TLNGSTR, this.LoadString()));\n                    break;\n                default:\n                    this.error(`unrecognized constant '${t}'`);\n            }\n        }\n    }\n\n    LoadProtos(f) {\n        let n = this.LoadInt();\n\n        for (let i = 0; i < n; i++) {\n            f.p[i] = new lfunc.Proto(this.L);\n            this.LoadFunction(f.p[i], f.source);\n        }\n    }\n\n    LoadUpvalues(f) {\n        let n = this.LoadInt();\n\n        for (let i = 0; i < n; i++) {\n            f.upvalues[i] = {\n                name:    null,\n                instack: this.LoadByte(),\n                idx:     this.LoadByte()\n            };\n        }\n    }\n\n    LoadDebug(f) {\n        let n = this.LoadInt();\n        for (let i = 0; i < n; i++)\n            f.lineinfo[i] = this.LoadInt();\n\n        n = this.LoadInt();\n        for (let i = 0; i < n; i++) {\n            f.locvars[i] = {\n                varname: this.LoadString(),\n                startpc: this.LoadInt(),\n                endpc:   this.LoadInt()\n            };\n        }\n\n        n = this.LoadInt();\n        for (let i = 0; i < n; i++) {\n            f.upvalues[i].name = this.LoadString();\n        }\n    }\n\n    LoadFunction(f, psource) {\n        f.source = this.LoadString();\n        if (f.source === null)  /* no source in dump? */\n            f.source = psource;  /* reuse parent's source */\n        f.linedefined = this.LoadInt();\n        f.lastlinedefined = this.LoadInt();\n        f.numparams = this.LoadByte();\n        f.is_vararg = this.LoadByte() !== 0;\n        f.maxstacksize = this.LoadByte();\n        this.LoadCode(f);\n        this.LoadConstants(f);\n        this.LoadUpvalues(f);\n        this.LoadProtos(f);\n        this.LoadDebug(f);\n    }\n\n    checkliteral(s, msg) {\n        let buff = this.read(s.length);\n        if (!luastring_eq(buff, s))\n            this.error(msg);\n    }\n\n    checkHeader() {\n        this.checkliteral(LUA_SIGNATURE.subarray(1), \"not a\"); /* 1st char already checked */\n\n        if (this.LoadByte() !== 0x53)\n            this.error(\"version mismatch in\");\n\n        if (this.LoadByte() !== 0)\n            this.error(\"format mismatch in\");\n\n        this.checkliteral(LUAC_DATA, \"corrupted\");\n\n        this.intSize         = this.LoadByte();\n        this.size_tSize      = this.LoadByte();\n        this.instructionSize = this.LoadByte();\n        this.integerSize     = this.LoadByte();\n        this.numberSize      = this.LoadByte();\n\n        this.checksize(this.intSize, 4, \"int\");\n        this.checksize(this.size_tSize, 4, \"size_t\");\n        this.checksize(this.instructionSize, 4, \"instruction\");\n        this.checksize(this.integerSize, 4, \"integer\");\n        this.checksize(this.numberSize, 8, \"number\");\n\n        if (this.LoadInteger() !== 0x5678)\n            this.error(\"endianness mismatch in\");\n\n        if (this.LoadNumber() !== 370.5)\n            this.error(\"float format mismatch in\");\n\n    }\n\n    error(why) {\n        lobject.luaO_pushfstring(this.L, to_luastring(\"%s: %s precompiled chunk\"), this.name, to_luastring(why));\n        ldo.luaD_throw(this.L, LUA_ERRSYNTAX);\n    }\n\n    checksize(byte, size, tname) {\n        if (byte !== size)\n            this.error(`${tname} size mismatch in`);\n    }\n}\n\nconst luaU_undump = function(L, Z, name) {\n    let S = new BytecodeParser(L, Z, name);\n    S.checkHeader();\n    let cl = lfunc.luaF_newLclosure(L, S.LoadByte());\n    ldo.luaD_inctop(L);\n    L.stack[L.top-1].setclLvalue(cl);\n    cl.p = new lfunc.Proto(L);\n    S.LoadFunction(cl.p, null);\n    lua_assert(cl.nupvalues === cl.p.upvalues.length);\n    /* luai_verifycode */\n    return cl;\n};\n\nmodule.exports.luaU_undump = luaU_undump;\n","\"use strict\";\n\nconst {\n    LUA_SIGNATURE,\n    LUA_VERSION_MAJOR,\n    LUA_VERSION_MINOR,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR\n    },\n    luastring_of\n} = require('./defs.js');\n\nconst LUAC_DATA    = luastring_of(25, 147, 13, 10, 26, 10);\nconst LUAC_INT     = 0x5678;\nconst LUAC_NUM     = 370.5;\nconst LUAC_VERSION = Number(LUA_VERSION_MAJOR) * 16 + Number(LUA_VERSION_MINOR);\nconst LUAC_FORMAT  = 0;   /* this is the official format */\n\nclass DumpState {\n    constructor() {\n        this.L = null;\n        this.write = null;\n        this.data = null;\n        this.strip = NaN;\n        this.status = NaN;\n    }\n}\n\nconst DumpBlock = function(b, size, D) {\n    if (D.status === 0 && size > 0)\n        D.status = D.writer(D.L, b, size, D.data);\n};\n\nconst DumpByte = function(y, D) {\n    DumpBlock(luastring_of(y), 1, D);\n};\n\nconst DumpInt = function(x, D) {\n    let ab = new ArrayBuffer(4);\n    let dv = new DataView(ab);\n    dv.setInt32(0, x, true);\n    let t = new Uint8Array(ab);\n    DumpBlock(t, 4, D);\n};\n\nconst DumpInteger = function(x, D) {\n    let ab = new ArrayBuffer(4);\n    let dv = new DataView(ab);\n    dv.setInt32(0, x, true);\n    let t = new Uint8Array(ab);\n    DumpBlock(t, 4, D);\n};\n\nconst DumpNumber = function(x, D) {\n    let ab = new ArrayBuffer(8);\n    let dv = new DataView(ab);\n    dv.setFloat64(0, x, true);\n    let t = new Uint8Array(ab);\n    DumpBlock(t, 8, D);\n};\n\nconst DumpString = function(s, D) {\n    if (s === null)\n        DumpByte(0, D);\n    else {\n        let size = s.tsslen() + 1;\n        let str = s.getstr();\n        if (size < 0xFF)\n            DumpByte(size, D);\n        else {\n            DumpByte(0xFF, D);\n            DumpInteger(size, D);\n        }\n        DumpBlock(str, size - 1, D);  /* no need to save '\\0' */\n    }\n};\n\nconst DumpCode = function(f, D) {\n    let s = f.code.map(e => e.code);\n    DumpInt(s.length, D);\n\n    for (let i = 0; i < s.length; i++)\n        DumpInt(s[i], D);\n};\n\nconst DumpConstants = function(f, D) {\n    let n = f.k.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++) {\n        let o = f.k[i];\n        DumpByte(o.ttype(), D);\n        switch (o.ttype()) {\n            case LUA_TNIL:\n                break;\n            case LUA_TBOOLEAN:\n                DumpByte(o.value ? 1 : 0, D);\n                break;\n            case LUA_TNUMFLT:\n                DumpNumber(o.value, D);\n                break;\n            case LUA_TNUMINT:\n                DumpInteger(o.value, D);\n                break;\n            case LUA_TSHRSTR:\n            case LUA_TLNGSTR:\n                DumpString(o.tsvalue(), D);\n                break;\n        }\n    }\n};\n\nconst DumpProtos = function(f, D) {\n    let n = f.p.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++)\n        DumpFunction(f.p[i], f.source, D);\n};\n\nconst DumpUpvalues = function(f, D) {\n    let n = f.upvalues.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++) {\n        DumpByte(f.upvalues[i].instack ? 1 : 0, D);\n        DumpByte(f.upvalues[i].idx, D);\n    }\n};\n\nconst DumpDebug = function(f, D) {\n    let n = D.strip ? 0 : f.lineinfo.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++)\n        DumpInt(f.lineinfo[i], D);\n    n = D.strip ? 0 : f.locvars.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++) {\n        DumpString(f.locvars[i].varname, D);\n        DumpInt(f.locvars[i].startpc, D);\n        DumpInt(f.locvars[i].endpc, D);\n    }\n    n = D.strip ? 0 : f.upvalues.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++)\n        DumpString(f.upvalues[i].name, D);\n};\n\nconst DumpFunction = function(f, psource, D) {\n    if (D.strip || f.source === psource)\n        DumpString(null, D);  /* no debug info or same source as its parent */\n    else\n        DumpString(f.source, D);\n    DumpInt(f.linedefined, D);\n    DumpInt(f.lastlinedefined, D);\n    DumpByte(f.numparams, D);\n    DumpByte(f.is_vararg?1:0, D);\n    DumpByte(f.maxstacksize, D);\n    DumpCode(f, D);\n    DumpConstants(f, D);\n    DumpUpvalues(f, D);\n    DumpProtos(f, D);\n    DumpDebug(f, D);\n};\n\nconst DumpHeader = function(D) {\n    DumpBlock(LUA_SIGNATURE, LUA_SIGNATURE.length, D);\n    DumpByte(LUAC_VERSION, D);\n    DumpByte(LUAC_FORMAT, D);\n    DumpBlock(LUAC_DATA, LUAC_DATA.length, D);\n    DumpByte(4, D); // intSize\n    DumpByte(4, D); // size_tSize\n    DumpByte(4, D); // instructionSize\n    DumpByte(4, D); // integerSize\n    DumpByte(8, D); // numberSize\n    DumpInteger(LUAC_INT, D);\n    DumpNumber(LUAC_NUM, D);\n};\n\n/*\n** dump Lua function as precompiled chunk\n*/\nconst luaU_dump = function(L, f, w, data, strip) {\n    let D = new DumpState();\n    D.L = L;\n    D.writer = w;\n    D.data = data;\n    D.strip = strip;\n    D.status = 0;\n    DumpHeader(D);\n    DumpByte(f.upvalues.length, D);\n    DumpFunction(f, null, D);\n    return D.status;\n};\n\nmodule.exports.luaU_dump = luaU_dump;\n","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","\"use strict\";\n\nconst { lua_pop } = require('./lua.js');\nconst { luaL_requiref } = require('./lauxlib.js');\nconst { to_luastring } = require(\"./fengaricore.js\");\n\nconst loadedlibs = {};\n\n/* export before requiring lualib.js */\nconst luaL_openlibs = function(L) {\n    /* \"require\" functions from 'loadedlibs' and set results to global table */\n    for (let lib in loadedlibs) {\n        luaL_requiref(L, to_luastring(lib), loadedlibs[lib], 1);\n        lua_pop(L, 1); /* remove lib */\n    }\n};\nmodule.exports.luaL_openlibs = luaL_openlibs;\n\nconst lualib = require('./lualib.js');\nconst { luaopen_base }      = require('./lbaselib.js');\nconst { luaopen_coroutine } = require('./lcorolib.js');\nconst { luaopen_debug }     = require('./ldblib.js');\nconst { luaopen_math }      = require('./lmathlib.js');\nconst { luaopen_package }   = require('./loadlib.js');\nconst { luaopen_os }        = require('./loslib.js');\nconst { luaopen_string }    = require('./lstrlib.js');\nconst { luaopen_table }     = require('./ltablib.js');\nconst { luaopen_utf8 }      = require('./lutf8lib.js');\n\nloadedlibs[\"_G\"] = luaopen_base,\nloadedlibs[lualib.LUA_LOADLIBNAME] = luaopen_package;\nloadedlibs[lualib.LUA_COLIBNAME] = luaopen_coroutine;\nloadedlibs[lualib.LUA_TABLIBNAME] = luaopen_table;\nloadedlibs[lualib.LUA_OSLIBNAME] = luaopen_os;\nloadedlibs[lualib.LUA_STRLIBNAME] = luaopen_string;\nloadedlibs[lualib.LUA_MATHLIBNAME] = luaopen_math;\nloadedlibs[lualib.LUA_UTF8LIBNAME] = luaopen_utf8;\nloadedlibs[lualib.LUA_DBLIBNAME] = luaopen_debug;\nif (typeof process !== \"undefined\")\n    loadedlibs[lualib.LUA_IOLIBNAME] = require('./liolib.js').luaopen_io;\n\n/* Extension: fengari library */\nconst { luaopen_fengari } = require('./fengarilib.js');\nloadedlibs[lualib.LUA_FENGARILIBNAME] = luaopen_fengari;\n"],"sourceRoot":""}